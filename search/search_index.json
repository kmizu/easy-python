{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u306f\u3058\u3081\u306b","text":""},{"location":"#python","title":"\u306a\u305c\u3001\u3082\u3046\u4e00\u518a\u306ePython\u5165\u9580\u66f8\u304c\u5fc5\u8981\u306a\u306e\u304b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u307c\u3046\u3068\u3057\u3066\u632b\u6298\u3057\u305f\u7d4c\u9a13\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f</p> <p>\u300c\u5909\u6570\u306f\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u300d\u300cif\u6587\u306f\u6761\u4ef6\u5206\u5c90\u300d\u3068\u3044\u3046\u8aac\u660e\u3092\u805e\u3044\u3066\u3001\u306a\u3093\u3068\u306a\u304f\u308f\u304b\u3063\u305f\u6c17\u306b\u306a\u3063\u305f\u3051\u308c\u3069\u3001\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u3059\u308b\u3068\u624b\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3046\u3002\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u308b\u3068\u3001\u4f55\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u306e\u304b\u3055\u3063\u3071\u308a\u308f\u304b\u3089\u306a\u3044\u3002</p> <p>\u305d\u3093\u306a\u7d4c\u9a13\u3092\u3057\u305f\u65b9\u306e\u305f\u3081\u306b\u3001\u3053\u306e\u672c\u306f\u66f8\u304b\u308c\u307e\u3057\u305f\u3002</p>"},{"location":"#3","title":"\u672c\u66f8\u306e3\u3064\u306e\u7d04\u675f","text":""},{"location":"#1","title":"1. \u300c\u306a\u305c\u300d\u304b\u3089\u59cb\u3081\u308b","text":"<p>\u5f93\u6765\u306e\u5165\u9580\u66f8\u306e\u591a\u304f\u306f\u300cPython\u3067\u306f\u3053\u3046\u66f8\u304d\u307e\u3059\u300d\u3068\u3044\u3046\u6587\u6cd5\u306e\u8aac\u660e\u304b\u3089\u59cb\u307e\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u672c\u66f8\u306f\u9055\u3044\u307e\u3059\u3002</p> <ul> <li>\u306a\u305c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\u306a\u306e\u304b</li> <li>\u306a\u305c\u5909\u6570\u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u751f\u307e\u308c\u305f\u306e\u304b</li> <li>\u306a\u305c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u91cd\u8981\u306a\u306e\u304b</li> </ul> <p>\u3059\u3079\u3066\u306e\u6982\u5ff5\u306b\u3064\u3044\u3066\u300c\u306a\u305c\u305d\u308c\u304c\u5fc5\u8981\u306a\u306e\u304b\u300d\u304b\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\u5fc5\u8981\u6027\u3092\u7406\u89e3\u3059\u308c\u3070\u3001\u6587\u6cd5\u306f\u81ea\u7136\u306b\u982d\u306b\u5165\u3063\u3066\u304d\u307e\u3059\u3002</p>"},{"location":"#2","title":"2. \u3042\u306a\u305f\u306e\u751f\u6d3b\u304b\u3089\u59cb\u3081\u308b","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u4f8b\u984c\u3068\u3044\u3046\u3068\u3001\u300cHello World\u300d\u3084\u300c\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u300d\u306a\u3069\u3001\u65e5\u5e38\u751f\u6d3b\u3068\u304b\u3051\u96e2\u308c\u305f\u3082\u306e\u304c\u591a\u3044\u306e\u304c\u73fe\u5b9f\u3067\u3059\u3002</p> <p>\u672c\u66f8\u3067\u306f\u9055\u3044\u307e\u3059\uff1a - \u30b9\u30de\u30db\u306e\u5bb9\u91cf\u8a08\u7b97\u3067\u5358\u4f4d\uff08GB\u3001MB\u3001KB\uff09\u3092\u7406\u89e3\u3059\u308b - \u5bb6\u8a08\u7c3f\u306e\u8a08\u7b97\u3067\u5909\u6570\u306e\u5fc5\u8981\u6027\u3092\u5b66\u3076 - \u6620\u753b\u9928\u306e\u6599\u91d1\u30b7\u30b9\u30c6\u30e0\u3067\u6761\u4ef6\u5206\u5c90\u3092\u7406\u89e3\u3059\u308b - \u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u3067\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b66\u3076</p> <p>\u3042\u306a\u305f\u304c\u6bce\u65e5\u89e6\u308c\u3066\u3044\u308b\u3082\u306e\u3092\u984c\u6750\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6982\u5ff5\u3092\u7406\u89e3\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"#3_1","title":"3. \u6700\u7d42\u7684\u306b\u306f\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u30ec\u30d9\u30eb\u3078","text":"<p>\u672c\u66f8\u306f\u521d\u5fc3\u8005\u5411\u3051\u3067\u3059\u304c\u3001\u6c7a\u3057\u3066\u300c\u521d\u5fc3\u8005\u30ec\u30d9\u30eb\u3067\u7d42\u308f\u308b\u300d\u672c\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p>\u6700\u7d42\u7684\u306b\u306f\uff1a - Python\u8a00\u8a9e\u306e\u5b8c\u5168\u306a\u6587\u6cd5\u4ed5\u69d8\uff08BNF\u8a18\u6cd5\uff09\u3092\u8aad\u3081\u308b\u3088\u3046\u306b\u306a\u308b - \u975e\u540c\u671f\u51e6\u7406\u3084\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u3068\u3044\u3063\u305f\u5b9f\u52d9\u3067\u5fc5\u9808\u306e\u6280\u8853\u3092\u7fd2\u5f97\u3059\u308b - \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u3093\u3067\u81ea\u529b\u3067\u554f\u984c\u3092\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b - \u5b9f\u969b\u306e\u958b\u767a\u73fe\u5834\u3067\u901a\u7528\u3059\u308b\u30b3\u30fc\u30c9\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b</p>"},{"location":"#-6","title":"\u672c\u66f8\u306e\u69cb\u6210 - 6\u3064\u306e\u30b9\u30c6\u30c3\u30d7","text":""},{"location":"#112","title":"\u7b2c1\u6bb5\u968e\uff1a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e16\u754c\u3092\u77e5\u308b\uff08\u7b2c1\u301c2\u7ae0\uff09","text":"<p>\u307e\u305a\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3069\u306e\u3088\u3046\u306b\u52d5\u3044\u3066\u3044\u308b\u306e\u304b\u3092\u7406\u89e3\u3057\u307e\u3059\u30020\u30681\u306e\u4e16\u754c\u304b\u3089\u59cb\u3081\u3066\u3001\u30c7\u30fc\u30bf\u304c\u3069\u306e\u3088\u3046\u306b\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"#2python34","title":"\u7b2c2\u6bb5\u968e\uff1aPython\u3067\u8a08\u7b97\u3057\u3066\u307f\u3088\u3046\uff08\u7b2c3\u301c4\u7ae0\uff09","text":"<p>Python\u3068\u306e\u6700\u521d\u306e\u5bfe\u8a71\u3002\u7c21\u5358\u306a\u8a08\u7b97\u304b\u3089\u59cb\u3081\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u697d\u3057\u3055\u3092\u4f53\u9a13\u3057\u307e\u3059\u3002</p>"},{"location":"#3510","title":"\u7b2c3\u6bb5\u968e\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3089\u3057\u304f\u3057\u3088\u3046\uff08\u7b2c5\u301c10\u7ae0\uff09","text":"<p>\u5909\u6570\u3001\u6761\u4ef6\u5206\u5c90\u3001\u7e70\u308a\u8fd4\u3057\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3002\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u8981\u7d20\u3092\u3001\u5b9f\u7528\u7684\u306a\u4f8b\u984c\u3092\u901a\u3057\u3066\u5b66\u3073\u307e\u3059\u3002</p>"},{"location":"#41113","title":"\u7b2c4\u6bb5\u968e\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u69cb\u9020\u5316\u3057\u3088\u3046\uff08\u7b2c11\u301c13\u7ae0\uff09","text":"<p>\u95a2\u6570\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u30a8\u30e9\u30fc\u51e6\u7406\u3002\u3088\u308a\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u305f\u3081\u306e\u6280\u8853\u3092\u8eab\u306b\u3064\u3051\u307e\u3059\u3002</p>"},{"location":"#51416","title":"\u7b2c5\u6bb5\u968e\uff1a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3044\u3046\u8003\u3048\u65b9\uff08\u7b2c14\u301c16\u7ae0\uff09","text":"<p>\u73fe\u4ee3\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u6b20\u304b\u305b\u306a\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u8003\u3048\u65b9\u3092\u3001\u9280\u884c\u53e3\u5ea7\u3084\u56f3\u66f8\u9928\u30b7\u30b9\u30c6\u30e0\u306a\u3069\u8eab\u8fd1\u306a\u4f8b\u3067\u7406\u89e3\u3057\u307e\u3059\u3002</p>"},{"location":"#6python1720","title":"\u7b2c6\u6bb5\u968e\uff1aPython\u3092\u3082\u3063\u3068\u6df1\u304f\u77e5\u308d\u3046\uff08\u7b2c17\u301c20\u7ae0\uff09","text":"<p>Python\u306e\u5185\u90e8\u69cb\u9020\u3001\u6587\u6cd5\u306e\u6b63\u4f53\uff08BNF\u8a18\u6cd5\uff09\u3001\u9ad8\u5ea6\u306a\u6a5f\u80fd\u3002\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u3078\u306e\u6249\u3092\u958b\u304d\u307e\u3059\u3002</p>"},{"location":"#_2","title":"\u3053\u306e\u672c\u306e\u4f7f\u3044\u65b9","text":""},{"location":"#_3","title":"\u3010\u5b9f\u884c\u3011\u30de\u30fc\u30af\u306b\u6ce8\u76ee","text":"<p>\u5404\u7ae0\u306b\u306f\u5fc5\u305a\u3010\u5b9f\u884c\u3011\u3068\u3044\u3046\u30de\u30fc\u30af\u306e\u3064\u3044\u305f\u30bb\u30af\u30b7\u30e7\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u52d5\u304b\u3057\u307e\u3059\u3002\u8aad\u3080\u3060\u3051\u3067\u306a\u304f\u3001\u5fc5\u305a\u624b\u3092\u52d5\u304b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u3001\u81ea\u8ee2\u8eca\u306e\u4e57\u308a\u65b9\u3068\u540c\u3058\u3067\u3001\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308b\u3053\u3068\u3067\u3057\u304b\u8eab\u306b\u3064\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"#_4","title":"\u30a8\u30e9\u30fc\u3092\u6050\u308c\u306a\u3044","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3076\u4e0a\u3067\u3001\u30a8\u30e9\u30fc\u306f\u907f\u3051\u3066\u901a\u308c\u307e\u305b\u3093\u3002\u3080\u3057\u308d\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300c\u89aa\u5207\u306a\u5148\u751f\u300d\u3060\u3068\u601d\u3063\u3066\u304f\u3060\u3055\u3044\u3002\u4f55\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u306e\u304b\u3001\u3069\u3046\u76f4\u305b\u3070\u3044\u3044\u306e\u304b\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6559\u3048\u3066\u304f\u308c\u307e\u3059\u3002\u672c\u66f8\u3067\u306f\u3001\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u3068\u305d\u306e\u5bfe\u51e6\u6cd5\u3082\u4e01\u5be7\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"#_5","title":"\u6bb5\u968e\u7684\u306b\u9032\u3080","text":"<p>\u5404\u7ae0\u306f\u524d\u306e\u7ae0\u306e\u77e5\u8b58\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\u98db\u3070\u3057\u8aad\u307f\u305b\u305a\u3001\u9806\u756a\u306b\u8aad\u307f\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002\u308f\u304b\u3089\u306a\u3044\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u3001\u524d\u306e\u7ae0\u306b\u623b\u3063\u3066\u5fa9\u7fd2\u3057\u307e\u3057\u3087\u3046\u3002\u57fa\u790e\u3092\u3057\u3063\u304b\u308a\u56fa\u3081\u308b\u3053\u3068\u304c\u3001\u5f8c\u306e\u5b66\u7fd2\u3092\u30b9\u30e0\u30fc\u30ba\u306b\u3057\u307e\u3059\u3002</p>"},{"location":"#-","title":"\u6700\u5f8c\u306b - \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u7279\u5225\u306a\u624d\u80fd\u3067\u306f\u306a\u3044","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u3001\u7279\u5225\u306a\u624d\u80fd\u3092\u6301\u3063\u305f\u4eba\u3060\u3051\u306e\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u9069\u5207\u306a\u9806\u5e8f\u3067\u3001\u9069\u5207\u306a\u8aac\u660e\u3092\u53d7\u3051\u308c\u3070\u3001\u8ab0\u3067\u3082\u7fd2\u5f97\u3067\u304d\u308b\u6280\u8853\u3067\u3059\u3002</p> <p>\u672c\u66f8\u306f\u3001\u3042\u306a\u305f\u304c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u4e16\u754c\u306b\u4e00\u6b69\u3092\u8e0f\u307f\u51fa\u3059\u305f\u3081\u306e\u3001\u4fe1\u983c\u3067\u304d\u308b\u30ac\u30a4\u30c9\u3068\u306a\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u3066\u3044\u307e\u3059\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u57fa\u672c\u7684\u306a\u4ed5\u7d44\u307f\u304b\u3089\u59cb\u3081\u3066\u3001\u6700\u7d42\u7684\u306b\u306fPython\u306e\u6587\u6cd5\u3092\u5b8c\u5168\u306b\u7406\u89e3\u3057\u3001\u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u305d\u3093\u306a\u65c5\u306b\u3001\u4e00\u7dd2\u306b\u51fa\u304b\u3051\u307e\u3057\u3087\u3046\u3002</p> <p>\u3055\u3042\u3001\u7b2c1\u7ae0\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\u3002\u3042\u306a\u305f\u306e\u8eab\u306e\u56de\u308a\u306b\u3042\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u63a2\u3059\u3068\u3053\u308d\u304b\u3089\u3001\u3059\u3079\u3066\u306f\u59cb\u307e\u308a\u307e\u3059\u3002</p> <p>\u672c\u66f8\u3067\u5b66\u3079\u308b\u3053\u3068 - \u2705 \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u57fa\u672c\u7684\u306a\u4ed5\u7d44\u307f - \u2705 Python\u306e\u6587\u6cd5\uff08\u57fa\u790e\u304b\u3089\u5fdc\u7528\u307e\u3067\uff09 - \u2705 \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9 - \u2705 \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 - \u2705 \u30a8\u30e9\u30fc\u3078\u306e\u5bfe\u51e6\u6cd5\u3068\u30c7\u30d0\u30c3\u30b0\u6280\u8853 - \u2705 \u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u958b\u767a\u624b\u6cd5 - \u2705 Python\u8a00\u8a9e\u4ed5\u69d8\u306e\u8aad\u307f\u65b9\uff08BNF\u8a18\u6cd5\uff09</p> <p>\u3053\u3093\u306a\u65b9\u306b\u304a\u3059\u3059\u3081 - \ud83c\udfaf \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u521d\u3081\u3066\u5b66\u3076\u65b9 - \ud83c\udfaf \u4ed6\u306e\u5165\u9580\u66f8\u3067\u632b\u6298\u3057\u305f\u7d4c\u9a13\u306e\u3042\u308b\u65b9 - \ud83c\udfaf Python\u306e\u4ed5\u7d44\u307f\u3092\u6df1\u304f\u7406\u89e3\u3057\u305f\u3044\u65b9 - \ud83c\udfaf \u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u30b9\u30ad\u30eb\u3092\u8eab\u306b\u3064\u3051\u305f\u3044\u65b9 - \ud83c\udfaf \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u300c\u306a\u305c\u300d\u3092\u77e5\u308a\u305f\u3044\u65b9</p> <p>\u305d\u308c\u3067\u306f\u3001Python\u306e\u4e16\u754c\u3078\u306e\u6249\u3092\u958b\u304d\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter01/","title":"\u7b2c1\u7ae0\uff1a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3063\u3066\u306a\u306b\uff1f","text":"<p>\u3053\u306e\u7ae0\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3076\u524d\u306b\u3001\u307e\u305a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3069\u3093\u306a\u3082\u306e\u306a\u306e\u304b\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u96e3\u3057\u305d\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u5b9f\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u4ed5\u7d44\u307f\u3067\u52d5\u3044\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter01/#_1","title":"\u8eab\u306e\u56de\u308a\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u63a2\u3057\u3066\u307f\u3088\u3046","text":"<p>\u300c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u300d\u3068\u805e\u304f\u3068\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u30d1\u30bd\u30b3\u30f3\u3084\u30ce\u30fc\u30c8\u30d1\u30bd\u30b3\u30f3\u3092\u601d\u3044\u6d6e\u304b\u3079\u308b\u4eba\u304c\u591a\u3044\u3067\u3057\u3087\u3046\u3002\u3067\u3082\u5b9f\u306f\u3001\u79c1\u305f\u3061\u306e\u8eab\u306e\u56de\u308a\u306b\u306f\u3001\u305f\u304f\u3055\u3093\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u96a0\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter01/#_2","title":"\u3042\u306a\u305f\u306e\u8fd1\u304f\u306b\u3042\u308b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u305f\u3061","text":"<ul> <li>\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\uff1a\u5b9f\u306f\u5c0f\u3055\u306a\u9ad8\u6027\u80fd\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u3059</li> <li>\u708a\u98ef\u5668\uff1a\u304a\u7c73\u306e\u7a2e\u985e\u3084\u91cf\u306b\u5fdc\u3058\u3066\u706b\u52a0\u6e1b\u3092\u81ea\u52d5\u8abf\u6574</li> <li>\u30a8\u30a2\u30b3\u30f3\uff1a\u5ba4\u6e29\u3092\u611f\u77e5\u3057\u3066\u81ea\u52d5\u3067\u6e29\u5ea6\u8abf\u6574</li> <li>\u6d17\u6fef\u6a5f\uff1a\u6d17\u6fef\u7269\u306e\u91cf\u3084\u6c5a\u308c\u5177\u5408\u3092\u5224\u65ad\u3057\u3066\u6c34\u91cf\u3068\u6642\u9593\u3092\u6c7a\u5b9a</li> <li>\u81ea\u52d5\u8eca\uff1a\u30a8\u30f3\u30b8\u30f3\u5236\u5fa1\u3001\u30ab\u30fc\u30ca\u30d3\u3001\u81ea\u52d5\u30d6\u30ec\u30fc\u30ad\u30b7\u30b9\u30c6\u30e0</li> <li>ATM\uff1a\u9280\u884c\u306e\u304a\u91d1\u306e\u51fa\u3057\u5165\u308c\u3092\u7ba1\u7406</li> <li>\u96fb\u5b50\u30ec\u30f3\u30b8\uff1a\u6642\u9593\u3068\u6e29\u5ea6\u3092\u81ea\u52d5\u5236\u5fa1</li> <li>\u30b2\u30fc\u30e0\u6a5f\uff1aNintendo Switch\u3084PlayStation</li> </ul> <p>\u3053\u308c\u3089\u3059\u3079\u3066\u306b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u79c1\u305f\u3061\u306f\u6bce\u65e5\u4f55\u5341\u500b\u3082\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3068\u63a5\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u3002</p>"},{"location":"chapter01/#_3","title":"\u306a\u305c\u3053\u3093\u306a\u306b\u305f\u304f\u3055\u3093\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3042\u308b\u306e\uff1f","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6700\u5927\u306e\u7279\u5fb4\u306f\u3001\u540c\u3058\u4f5c\u696d\u3092\u6b63\u78ba\u306b\u4f55\u5ea6\u3067\u3082\u7e70\u308a\u8fd4\u305b\u308b\u3053\u3068\u3067\u3059\u3002</p> <ul> <li>\u4eba\u9593\u3060\u3068\u300c\u4eca\u65e5\u306f\u75b2\u308c\u3066\u3044\u308b\u304b\u3089\u3001\u3061\u3087\u3063\u3068\u9069\u5f53\u306b...\u300d\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u75b2\u308c\u307e\u305b\u3093</li> <li>\u4eba\u9593\u3060\u3068\u300c\u6628\u65e5\u3068\u540c\u3058\u8a2d\u5b9a\u306b\u3057\u305f\u3064\u3082\u308a\u3060\u3051\u3069\u3001\u5fae\u5999\u306b\u9055\u3046\u300d\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u5b8c\u5168\u306b\u540c\u3058\u8a2d\u5b9a\u3092\u518d\u73fe\u3067\u304d\u307e\u3059</li> <li>\u4eba\u9593\u3060\u3068\u4e00\u5ea6\u306b\u4e00\u3064\u306e\u3053\u3068\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u8907\u6570\u306e\u4f5c\u696d\u3092\u540c\u6642\u306b\u51e6\u7406\u3067\u304d\u307e\u3059</li> </ul>"},{"location":"chapter01/#01","title":"\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u7406\u89e3\u3067\u304d\u308b\u8a00\u8449\uff080\u30681\u306e\u4e16\u754c\uff09","text":"<p>\u3053\u3053\u304b\u3089\u304c\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u5b9f\u306f\u3001\u305f\u3063\u305f2\u3064\u306e\u72b6\u614b\u3057\u304b\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"chapter01/#_4","title":"\u96fb\u6c17\u306e\u300c\u3042\u308b\u300d\u3068\u300c\u306a\u3044\u300d","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u8997\u3044\u3066\u307f\u308b\u3068\u3001\u7121\u6570\u306e\u5c0f\u3055\u306a\u30b9\u30a4\u30c3\u30c1\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30b9\u30a4\u30c3\u30c1\u306f\u96fb\u6c17\u7684\u306a\u3082\u306e\u3067\u3001\u6b21\u306e2\u3064\u306e\u72b6\u614b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\uff1a</p> <ul> <li>\u96fb\u6c17\u304c\u6d41\u308c\u3066\u3044\u308b\u72b6\u614b\uff1a\u300c1\u300d\u307e\u305f\u306f\u300cON\u300d</li> <li>\u96fb\u6c17\u304c\u6d41\u308c\u3066\u3044\u306a\u3044\u72b6\u614b\uff1a\u300c0\u300d\u307e\u305f\u306f\u300cOFF\u300d</li> </ul> <p>\u3053\u308c\u304c\u30d3\u30c3\u30c8\uff08bit\uff09\u306e\u6b63\u4f53\u3067\u3059\u3002\u30d3\u30c3\u30c8\u306f\u300cBinary digit\uff082\u9032\u6570\u5b57\uff09\u300d\u306e\u7565\u3067\u30010\u304b1\u306e\u5024\u3057\u304b\u6301\u3066\u307e\u305b\u3093\u3002</p>"},{"location":"chapter01/#_5","title":"\u8eab\u8fd1\u306a\u4f8b\u3067\u7406\u89e3\u3057\u3066\u307f\u3088\u3046","text":"<p>\u3053\u308c\u306f\u79c1\u305f\u3061\u306e\u8eab\u306e\u56de\u308a\u306b\u3082\u3042\u308a\u307e\u3059\uff1a</p> <ul> <li>\u96fb\u706f\u306e\u30b9\u30a4\u30c3\u30c1\uff1aON\uff08\u70b9\u3044\u3066\u3044\u308b\uff09\u304bOFF\uff08\u6d88\u3048\u3066\u3044\u308b\uff09</li> <li>\u30c9\u30a2\u306e\u72b6\u614b\uff1a\u958b\u3044\u3066\u3044\u308b\u304b\u9589\u307e\u3063\u3066\u3044\u308b\u304b</li> <li>\u8cea\u554f\u3078\u306e\u7b54\u3048\uff1a\u300c\u306f\u3044\u300d\u304b\u300c\u3044\u3044\u3048\u300d</li> </ul> <p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u3001\u3053\u306e\u5358\u7d14\u306a2\u629e\u306e\u7d44\u307f\u5408\u308f\u305b\u3060\u3051\u3067\u3001\u6587\u5b57\u3082\u3001\u5199\u771f\u3082\u3001\u97f3\u697d\u3082\u3001\u52d5\u753b\u3082\u3001\u3059\u3079\u3066\u3092\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter01/#_6","title":"\u3069\u3046\u3084\u3063\u3066\u6570\u5b57\u3092\u8868\u73fe\u3059\u308b\u306e\uff1f","text":"<p>\u79c1\u305f\u3061\u306f\u666e\u6bb5\u300110\u9032\u6570\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\uff080, 1, 2, 3, 4, 5, 6, 7, 8, 9\uff09\u3002 \u3067\u3082\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f2\u9032\u6570\u3092\u4f7f\u3044\u307e\u3059\uff080, 1\u3060\u3051\uff09\u3002</p> <p>10\u9032\u6570\u30682\u9032\u6570\u306e\u5bfe\u5fdc\u8868\uff1a</p> 10\u9032\u6570 2\u9032\u6570 \u8aac\u660e 0 0 \u30bc\u30ed 1 1 \u30a4\u30c1 2 10 \u30a4\u30c1\u30bc\u30ed\uff081\u00d72\u00b9 + 0\u00d72\u2070\uff09 3 11 \u30a4\u30c1\u30a4\u30c1\uff081\u00d72\u00b9 + 1\u00d72\u2070\uff09 4 100 \u30a4\u30c1\u30bc\u30ed\u30bc\u30ed\uff081\u00d72\u00b2 + 0\u00d72\u00b9 + 0\u00d72\u2070\uff09 5 101 \u30a4\u30c1\u30bc\u30ed\u30a4\u30c1 6 110 \u30a4\u30c1\u30a4\u30c1\u30bc\u30ed 7 111 \u30a4\u30c1\u30a4\u30c1\u30a4\u30c1 8 1000 \u30a4\u30c1\u30bc\u30ed\u30bc\u30ed\u30bc\u30ed <p>\u3064\u307e\u308a\u3001\u79c1\u305f\u3061\u304c\u300c5\u300d\u3068\u547c\u3093\u3067\u3044\u308b\u6570\u3092\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u300c101\u300d\u3068\u3044\u3046\u96fb\u6c17\u306eON-OFF-ON\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u8a18\u61b6\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u3002</p>"},{"location":"chapter01/#_7","title":"\u3010\u5b9f\u884c\u3011\u30b9\u30de\u30db\u306e\u5bb9\u91cf\u8a08\u7b97\u3067\u5358\u4f4d\u3092\u7406\u89e3\u3059\u308b","text":"<p>\u5b9f\u969b\u306b\u3042\u306a\u305f\u306e\u30b9\u30de\u30db\u3092\u4f7f\u3063\u3066\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u5358\u4f4d\u3092\u7406\u89e3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter01/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30b9\u30de\u30db\u306e\u5bb9\u91cf\u3092\u78ba\u8a8d\u3057\u3088\u3046","text":"<p>iPhone\u306e\u5834\u5408\uff1a 1. \u8a2d\u5b9a\u30a2\u30d7\u30ea\u3092\u958b\u304f 2. \u300c\u4e00\u822c\u300d\u2192\u300ciPhone\u30b9\u30c8\u30ec\u30fc\u30b8\u300d\u3092\u30bf\u30c3\u30d7 3. \u4e0a\u90e8\u306b\u300c\u25cb\u25cbGB\u4e2d\u25cb\u25cbGB\u4f7f\u7528\u6e08\u307f\u300d\u3068\u8868\u793a\u3055\u308c\u308b</p> <p>Android\u306e\u5834\u5408\uff1a 1. \u8a2d\u5b9a\u30a2\u30d7\u30ea\u3092\u958b\u304f 2. \u300c\u30b9\u30c8\u30ec\u30fc\u30b8\u300d\u307e\u305f\u306f\u300c\u30c7\u30d0\u30a4\u30b9\u30b1\u30a2\u300d\u2192\u300c\u30b9\u30c8\u30ec\u30fc\u30b8\u300d\u3092\u30bf\u30c3\u30d7 3. \u5bb9\u91cf\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u308b</p>"},{"location":"chapter01/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5358\u4f4d\u306e\u95a2\u4fc2\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u5bb9\u91cf\u306f\u3001\u6b21\u306e\u3088\u3046\u306a\u968e\u5c64\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>1\u30d0\u30a4\u30c8 = 8\u30d3\u30c3\u30c8\n1KB\uff08\u30ad\u30ed\u30d0\u30a4\u30c8\uff09 = 1,024\u30d0\u30a4\u30c8\n1MB\uff08\u30e1\u30ac\u30d0\u30a4\u30c8\uff09 = 1,024KB\n1GB\uff08\u30ae\u30ac\u30d0\u30a4\u30c8\uff09 = 1,024MB\n1TB\uff08\u30c6\u30e9\u30d0\u30a4\u30c8\uff09 = 1,024GB\n</code></pre>"},{"location":"chapter01/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8a08\u7b97\u3057\u3066\u307f\u3088\u3046","text":"<p>\u4f8b\u3048\u3070\u3001\u3042\u306a\u305f\u306e\u30b9\u30de\u30db\u304c64GB\u3060\u3068\u3057\u307e\u3059\uff1a</p> <pre><code>64GB = 64 \u00d7 1,024MB = 65,536MB\n65,536MB = 65,536 \u00d7 1,024KB = 67,108,864KB\n67,108,864KB = 67,108,864 \u00d7 1,024\u30d0\u30a4\u30c8 = 68,719,476,736\u30d0\u30a4\u30c8\n68,719,476,736\u30d0\u30a4\u30c8 = 68,719,476,736 \u00d7 8\u30d3\u30c3\u30c8 = 549,755,813,888\u30d3\u30c3\u30c8\n</code></pre> <p>\u3064\u307e\u308a\u300164GB\u306e\u30b9\u30de\u30db\u306b\u306f\u3001\u7d045,498\u5104\u500b\u306e0\u30681\u3092\u8a18\u9332\u3067\u304d\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\uff01</p>"},{"location":"chapter01/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b9f\u611f\u3057\u3066\u307f\u3088\u3046","text":"<p>\u3053\u306e\u81a8\u5927\u306a0\u30681\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u6b21\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>\u5199\u771f1\u679a\uff1a\u7d043\u301c5MB\uff08\u7d042,500\u4e07\u301c4,200\u4e07\u30d3\u30c3\u30c8\uff09</li> <li>\u97f3\u697d1\u66f2\uff1a\u7d044MB\uff08\u7d043,400\u4e07\u30d3\u30c3\u30c8\uff09</li> <li>LINE1\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\u7d04100\u30d0\u30a4\u30c8\uff08\u7d04800\u30d3\u30c3\u30c8\uff09</li> </ul> <p>1\u3064\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304c800\u500b\u306e0\u30681\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u308b\u3068\u3001\u4e0d\u601d\u8b70\u306a\u611f\u3058\u304c\u3057\u307e\u305b\u3093\u304b\uff1f</p>"},{"location":"chapter01/#_8","title":"\u306a\u305c\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\u306a\u306e\u304b","text":"<p>\u3053\u3053\u3067\u91cd\u8981\u306a\u7591\u554f\u304c\u51fa\u3066\u304d\u307e\u3059\uff1a\u300c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u305d\u3093\u306a\u306b\u8ce2\u3044\u306a\u3089\u3001\u306a\u305c\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5fc5\u8981\u306a\u306e\uff1f\u300d</p>"},{"location":"chapter01/#_9","title":"\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u5f93\u9806\u3060\u3051\u308c\u3069...","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u78ba\u304b\u306b\u9ad8\u901f\u3067\u6b63\u78ba\u3067\u3059\u304c\u3001\u5b9f\u306f\u3068\u3066\u3082\u7d20\u76f4\u3059\u304e\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li>\u8a00\u308f\u308c\u305f\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\uff1a\u6307\u793a\u3055\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u306f\u4e00\u5207\u3084\u308a\u307e\u305b\u3093</li> <li>\u66d6\u6627\u306a\u6307\u793a\u306f\u7406\u89e3\u3067\u304d\u306a\u3044\uff1a\u300c\u9069\u5f53\u306b\u300d\u300c\u3044\u3044\u611f\u3058\u306b\u300d\u3068\u3044\u3046\u6307\u793a\u306f\u7406\u89e3\u3067\u304d\u307e\u305b\u3093</li> <li>\u878d\u901a\u304c\u5229\u304b\u306a\u3044\uff1a\u4f8b\u5916\u7684\u306a\u72b6\u6cc1\u3078\u306e\u5bfe\u5fdc\u306f\u4e8b\u524d\u306b\u6559\u3048\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059</li> </ul>"},{"location":"chapter01/#_10","title":"\u4eba\u9593\u3068\u306e\u9055\u3044","text":"<p>\u4eba\u9593\u306e\u5834\u5408\uff1a \u300c\u304a\u8179\u304c\u7a7a\u3044\u305f\u304b\u3089\u4f55\u304b\u4f5c\u3063\u3066\u300d \u2192 \u51b7\u8535\u5eab\u3092\u898b\u3066\u3001\u6750\u6599\u306b\u5fdc\u3058\u3066\u9069\u5f53\u306a\u6599\u7406\u3092\u8003\u3048\u308b</p> <p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u5834\u5408\uff1a \u300c\u51b7\u8535\u5eab\u3092\u958b\u3051\u3066\u3001\u5375\u304c\u3042\u3063\u305f\u3089\u5375\u713c\u304d\u3092\u4f5c\u308a\u3001\u306a\u3051\u308c\u3070\u30d1\u30f3\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u30d1\u30f3\u304c\u3042\u3063\u305f\u3089\u30c8\u30fc\u30b9\u30c8\u3092\u4f5c\u308a\u3001\u4f55\u3082\u306a\u3051\u308c\u3070\u30b3\u30f3\u30d3\u30cb\u306b\u8cb7\u3044\u7269\u306b\u884c\u3063\u3066...\u300d \u2192 \u3042\u3089\u3086\u308b\u5834\u5408\u3092\u4e8b\u524d\u306b\u8a73\u3057\u304f\u6307\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b</p>"},{"location":"chapter01/#_11","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5f79\u5272","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5bfe\u3059\u308b\u8a73\u7d30\u306a\u6307\u793a\u66f8\u306e\u3053\u3068\u3067\u3059\u3002</p> <ul> <li>\u3069\u3093\u306a\u6761\u4ef6\u306e\u3068\u304d\u306b</li> <li>\u3069\u3093\u306a\u51e6\u7406\u3092\u3057\u3066</li> <li>\u3069\u3093\u306a\u7d50\u679c\u3092\u51fa\u3059\u304b</li> </ul> <p>\u3053\u308c\u3089\u3092\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u7406\u89e3\u3067\u304d\u308b\u8a00\u8449\u3067\u8a73\u3057\u304f\u66f8\u3044\u305f\u3082\u306e\u304c\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002</p>"},{"location":"chapter01/#_12","title":"\u3010\u5b9f\u884c\u3011\u96fb\u5353\u30a2\u30d7\u30ea\u3068\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u9055\u3044\u3092\u4f53\u9a13","text":"<p>\u5b9f\u969b\u306b\u96fb\u5353\u30a2\u30d7\u30ea\u3092\u4f7f\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5fc5\u8981\u6027\u3092\u7406\u89e3\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter01/#1_2","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u96fb\u5353\u30a2\u30d7\u30ea\u3067\u8a08\u7b97\u3057\u3066\u307f\u3088\u3046","text":"<p>\u30b9\u30de\u30db\u306e\u96fb\u5353\u30a2\u30d7\u30ea\u3067\u3001\u6b21\u306e\u8a08\u7b97\u3092\u3057\u3066\u304f\u3060\u3055\u3044\uff1a</p> <p>\u554f\u984c\uff1a\u6bce\u6708\u306e\u96fb\u6c17\u4ee3\u3092\u8a08\u7b97\u3057\u3088\u3046 - \u57fa\u672c\u6599\u91d1\uff1a1,000\u5186 - \u4f7f\u7528\u91cf\uff1a350kWh - 1kWh\u3042\u305f\u308a\u306e\u6599\u91d1\uff1a27\u5186 - \u8a08\u7b97\u5f0f\uff1a1,000 + (350 \u00d7 27)</p> <p>\u96fb\u5353\u3067\u8a08\u7b97\u3059\u308b\u3068\uff1a 1. 350 \u00d7 27 = 9,450 2. 1,000 + 9,450 = 10,450</p> <p>\u7b54\u3048\uff1a10,450\u5186</p>"},{"location":"chapter01/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u6bce\u6708\u540c\u3058\u8a08\u7b97\u3092\u3059\u308b\u5834\u5408\u3092\u8003\u3048\u3088\u3046","text":"<p>\u3082\u3057\u6bce\u6708\u3053\u306e\u8a08\u7b97\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u3057\u305f\u3089\uff1a</p> <p>\u96fb\u5353\u306e\u5834\u5408\uff1a - \u6bce\u56de\u3001\u540c\u3058\u624b\u9806\u3067\u8a08\u7b97\u3057\u76f4\u3059 - \u4f7f\u7528\u91cf\u304c\u5909\u308f\u308b\u305f\u3073\u306b\u3001\u624b\u52d5\u3067\u5165\u529b\u3057\u76f4\u3059 - \u8a08\u7b97\u30df\u30b9\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5834\u5408\uff1a - \u4e00\u5ea6\u4f5c\u3063\u3066\u304a\u3051\u3070\u3001\u4f7f\u7528\u91cf\u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u81ea\u52d5\u8a08\u7b97 - \u8a08\u7b97\u30df\u30b9\u304c\u306a\u3044 - \u8907\u6570\u6708\u5206\u306e\u6bd4\u8f03\u3082\u7c21\u5358</p>"},{"location":"chapter01/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8907\u96d1\u306a\u6761\u4ef6\u3092\u8003\u3048\u3066\u307f\u3088\u3046","text":"<p>\u5b9f\u969b\u306e\u96fb\u6c17\u6599\u91d1\u306f\u3082\u3063\u3068\u8907\u96d1\u3067\u3059\uff1a</p> <pre><code>120kWh\u307e\u3067\uff1a1kWh\u3042\u305f\u308a19\u5186\n121\u301c300kWh\uff1a1kWh\u3042\u305f\u308a26\u5186\n301kWh\u4ee5\u4e0a\uff1a1kWh\u3042\u305f\u308a30\u5186\n</code></pre> <p>\u3053\u306e\u8a08\u7b97\u3092\u96fb\u5353\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\uff1a 1. \u4f7f\u7528\u91cf\u3092\u30c1\u30a7\u30c3\u30af 2. \u3069\u306e\u7bc4\u56f2\u306b\u5f53\u3066\u306f\u307e\u308b\u304b\u5224\u65ad 3. \u6bb5\u968e\u7684\u306b\u8a08\u7b97 4. \u5408\u8a08\u3092\u8a08\u7b97</p> <p>\u3068\u3066\u3082\u8907\u96d1\u3067\u3001\u9593\u9055\u3048\u3084\u3059\u304f\u306a\u308a\u307e\u3059\u3002</p> <p>\u3067\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u3089\u3001\u4e00\u5ea6\u30eb\u30fc\u30eb\u3092\u66f8\u3044\u3066\u304a\u3051\u3070\u3001\u4f7f\u7528\u91cf\u3092\u5165\u529b\u3059\u308b\u3060\u3051\u3067\u6b63\u3057\u3044\u7b54\u3048\u304c\u51fa\u3066\u304d\u307e\u3059\u3002</p>"},{"location":"chapter01/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fa1\u5024\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4fa1\u5024\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff1a</p> <ol> <li>\u81ea\u52d5\u5316\uff1a\u9762\u5012\u306a\u4f5c\u696d\u3092\u81ea\u52d5\u3067\u51e6\u7406</li> <li>\u6b63\u78ba\u6027\uff1a\u4eba\u9593\u306e\u30df\u30b9\u3092\u9632\u3050</li> <li>\u518d\u5229\u7528\uff1a\u4e00\u5ea6\u4f5c\u308c\u3070\u4f55\u5ea6\u3067\u3082\u4f7f\u3048\u308b</li> <li>\u8907\u96d1\u306a\u51e6\u7406\uff1a\u4eba\u9593\u3067\u306f\u51e6\u7406\u3057\u304d\u308c\u306a\u3044\u8907\u96d1\u306a\u8a08\u7b97\u3082\u53ef\u80fd</li> <li>\u5927\u91cf\u51e6\u7406\uff1a\u4f55\u5343\u3001\u4f55\u4e07\u4ef6\u306e\u30c7\u30fc\u30bf\u3082\u77ac\u6642\u306b\u51e6\u7406</li> </ol>"},{"location":"chapter01/#_13","title":"\u307e\u3068\u3081\uff1a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u95a2\u4fc2","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter01/#_14","title":"\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6b63\u4f53","text":"<ul> <li>\u79c1\u305f\u3061\u306e\u8eab\u306e\u56de\u308a\u306b\u306f\u305f\u304f\u3055\u3093\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3042\u308b</li> <li>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f0\u30681\uff08\u96fb\u6c17\u306eON/OFF\uff09\u3060\u3051\u3067\u52d5\u3044\u3066\u3044\u308b</li> <li>\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u306f\u3001\u81a8\u5927\u306a0\u30681\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u308b</li> </ul>"},{"location":"chapter01/#_15","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5fc5\u8981\u6027","text":"<ul> <li>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u6307\u793a\u3055\u308c\u305f\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044</li> <li>\u66d6\u6627\u306a\u6307\u793a\u306f\u7406\u89e3\u3067\u304d\u306a\u3044</li> <li>\u8a73\u7d30\u3067\u6b63\u78ba\u306a\u6307\u793a\u66f8\uff08\u30d7\u30ed\u30b0\u30e9\u30e0\uff09\u304c\u5fc5\u8981</li> </ul>"},{"location":"chapter01/#_16","title":"\u306a\u305c\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3076\u306e\u304b","text":"<ul> <li>\u9762\u5012\u306a\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3067\u304d\u308b</li> <li>\u4eba\u9593\u3067\u306f\u51e6\u7406\u3067\u304d\u306a\u3044\u8907\u96d1\u306a\u4f5c\u696d\u304c\u3067\u304d\u308b</li> <li>\u4e00\u5ea6\u4f5c\u308c\u3070\u4f55\u5ea6\u3067\u3082\u6b63\u78ba\u306b\u4f7f\u3048\u308b</li> <li>\u81ea\u5206\u306e\u601d\u3044\u901a\u308a\u306b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u52d5\u304b\u305b\u308b</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3069\u3046\u3084\u3063\u3066\u6570\u5b57\u3084\u6587\u5b57\u3092\u8a18\u61b6\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u305d\u306e\u4ed5\u7d44\u307f\u3092\u8a73\u3057\u304f\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u30020\u30681\u3060\u3051\u3067\u3001\u3069\u3046\u3084\u3063\u3066\u79c1\u305f\u3061\u306e\u540d\u524d\u3084\u5199\u771f\u3092\u8868\u73fe\u3067\u304d\u308b\u306e\u304b\u3001\u305d\u306e\u79d8\u5bc6\u3092\u89e3\u304d\u660e\u304b\u3057\u307e\u3059\uff01</p>"},{"location":"chapter02/","title":"\u7b2c2\u7ae0\uff1a\u30c7\u30fc\u30bf\u306e\u6b63\u4f53 - \u6570\u5b57\u3068\u6587\u5b57\u306e\u8868\u73fe","text":"<p>\u524d\u306e\u7ae0\u3067\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c0\u30681\u3060\u3051\u3067\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u300c0\u30681\u3060\u3051\u3067\u3001\u3069\u3046\u3084\u3063\u3066\u79c1\u305f\u3061\u306e\u540d\u524d\u3084\u5199\u771f\u3092\u8868\u73fe\u3067\u304d\u308b\u306e\uff1f\u300d\u3068\u7591\u554f\u306b\u601d\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u304b\uff1f\u3053\u306e\u7ae0\u3067\u306f\u3001\u305d\u306e\u4ed5\u7d44\u307f\u3092\u8a73\u3057\u304f\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#01","title":"\u30d3\u30c3\u30c8\uff080\u30681\uff09\u304b\u3089\u30d0\u30a4\u30c8\u3078","text":""},{"location":"chapter02/#_1","title":"\u30d3\u30c3\u30c8\u3060\u3051\u3067\u306f\u8db3\u308a\u306a\u3044","text":"<p>1\u3064\u306e\u30d3\u30c3\u30c8\uff080\u307e\u305f\u306f1\uff09\u3067\u306f\u30012\u3064\u306e\u72b6\u614b\u3057\u304b\u8868\u73fe\u3067\u304d\u307e\u305b\u3093\u3002\u3067\u3082\u3001\u79c1\u305f\u3061\u304c\u8868\u73fe\u3057\u305f\u3044\u3082\u306e\u306f\u3082\u3063\u3068\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\uff1a</p> <ul> <li>\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306f26\u6587\u5b57\uff08A\u301cZ\uff09</li> <li>\u65e5\u672c\u8a9e\u306e\u3072\u3089\u304c\u306a\u306f46\u6587\u5b57\uff08\u3042\u301c\u3093\uff09</li> <li>\u6570\u5b57\u306f10\u7a2e\u985e\uff080\u301c9\uff09</li> <li>\u8a18\u53f7\u3082\u305f\u304f\u3055\u3093\uff08!@#$%\u306a\u3069\uff09</li> </ul>"},{"location":"chapter02/#_2","title":"\u30d3\u30c3\u30c8\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7","text":"<p>\u30d3\u30c3\u30c8\u3092\u8907\u6570\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001\u8868\u73fe\u3067\u304d\u308b\u7a2e\u985e\u304c\u98db\u8e8d\u7684\u306b\u5897\u3048\u307e\u3059\uff1a</p> \u30d3\u30c3\u30c8\u6570 \u7d44\u307f\u5408\u308f\u305b\u6570 \u4f8b 1\u30d3\u30c3\u30c8 2\u7a2e\u985e 0, 1 2\u30d3\u30c3\u30c8 4\u7a2e\u985e 00, 01, 10, 11 3\u30d3\u30c3\u30c8 8\u7a2e\u985e 000, 001, 010, 011, 100, 101, 110, 111 4\u30d3\u30c3\u30c8 16\u7a2e\u985e 0000\u301c1111 8\u30d3\u30c3\u30c8 256\u7a2e\u985e 00000000\u301c11111111"},{"location":"chapter02/#_3","title":"\u30d0\u30a4\u30c8\u306e\u8a95\u751f","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e16\u754c\u3067\u306f\u30018\u30d3\u30c3\u30c8\u3092\u307e\u3068\u3081\u30661\u30d0\u30a4\u30c8\u3068\u547c\u3073\u307e\u3059\u30021\u30d0\u30a4\u30c8\u3067256\u7a2e\u985e\u306e\u7570\u306a\u308b\u5024\u3092\u8868\u73fe\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u308c\u304c\u30c7\u30fc\u30bf\u306e\u57fa\u672c\u5358\u4f4d\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002</p> <pre><code>1\u30d0\u30a4\u30c8 = 8\u30d3\u30c3\u30c8 = 256\u901a\u308a\u306e\u7d44\u307f\u5408\u308f\u305b\n</code></pre>"},{"location":"chapter02/#2","title":"\u3010\u5b9f\u884c\u3011\u5e74\u9f62\u3084\u4f53\u91cd\u30922\u9032\u6570\u3067\u8868\u73fe\u3057\u3066\u307f\u3088\u3046","text":"<p>\u5b9f\u969b\u306b\u8eab\u8fd1\u306a\u6570\u5b57\u30922\u9032\u6570\u3067\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#1102","title":"\u30b9\u30c6\u30c3\u30d71\uff1a10\u9032\u6570\u304b\u30892\u9032\u6570\u3078\u306e\u5909\u63db\u65b9\u6cd5","text":"<p>10\u9032\u6570\u30922\u9032\u6570\u306b\u5909\u63db\u3059\u308b\u306b\u306f\u30012\u3067\u5272\u308a\u7d9a\u3051\u3066\u4f59\u308a\u3092\u8a18\u9332\u3057\u307e\u3059\u3002</p> <p>\u4f8b\uff1a\u5e74\u9f6225\u6b73\u30922\u9032\u6570\u306b\u3057\u3066\u307f\u3088\u3046</p> <pre><code>25 \u00f7 2 = 12 \u4f59\u308a 1\n12 \u00f7 2 = 6  \u4f59\u308a 0\n6  \u00f7 2 = 3  \u4f59\u308a 0\n3  \u00f7 2 = 1  \u4f59\u308a 1\n1  \u00f7 2 = 0  \u4f59\u308a 1\n</code></pre> <p>\u4f59\u308a\u3092\u4e0b\u304b\u3089\u8aad\u3080\u3068\uff1a11001</p> <p>\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff1a <pre><code>1\u00d72\u2074 + 1\u00d72\u00b3 + 0\u00d72\u00b2 + 0\u00d72\u00b9 + 1\u00d72\u2070\n= 1\u00d716 + 1\u00d78 + 0\u00d74 + 0\u00d72 + 1\u00d71\n= 16 + 8 + 0 + 0 + 1\n= 25 \u2713\n</code></pre></p>"},{"location":"chapter02/#22","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u3042\u306a\u305f\u306e\u5e74\u9f62\u30922\u9032\u6570\u306b\u3057\u3066\u307f\u3088\u3046","text":"<p>\u7df4\u7fd2\u554f\u984c\uff1a \u3042\u306a\u305f\u306e\u5e74\u9f62\u30922\u9032\u6570\u3067\u8868\u73fe\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <p>\u30d2\u30f3\u30c8\uff1a\u3088\u304f\u4f7f\u308f\u308c\u308b\u5e74\u9f62\u306e2\u9032\u6570 - 10\u6b73 \u2192 1010 - 15\u6b73 \u2192 1111 - 20\u6b73 \u2192 10100 - 30\u6b73 \u2192 11110 - 40\u6b73 \u2192 101000</p>"},{"location":"chapter02/#32","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u4f53\u91cd\u30922\u9032\u6570\u306b\u3057\u3066\u307f\u3088\u3046","text":"<p>\u4f8b\uff1a\u4f53\u91cd60kg\u306e\u5834\u5408</p> <pre><code>60 \u00f7 2 = 30 \u4f59\u308a 0\n30 \u00f7 2 = 15 \u4f59\u308a 0\n15 \u00f7 2 = 7  \u4f59\u308a 1\n7  \u00f7 2 = 3  \u4f59\u308a 1\n3  \u00f7 2 = 1  \u4f59\u308a 1\n1  \u00f7 2 = 0  \u4f59\u308a 1\n</code></pre> <p>\u7b54\u3048\uff1a111100</p>"},{"location":"chapter02/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u306e\u5b9f\u969b\u306e\u4fdd\u5b58\u65b9\u6cd5","text":"<p>\u5b9f\u969b\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3067\u306f\u3001\u6570\u5024\u306f\u6c7a\u307e\u3063\u305f\u30d3\u30c3\u30c8\u6570\u3067\u4fdd\u5b58\u3055\u308c\u307e\u3059\uff1a</p> <p>8\u30d3\u30c3\u30c8\uff081\u30d0\u30a4\u30c8\uff09\u3067\u4fdd\u5b58\u3059\u308b\u5834\u5408\uff1a - 25\u6b73 \u2192 00011001 - 60kg \u2192 00111100</p> <p>\u5de6\u5074\u306b0\u3092\u8ffd\u52a0\u3057\u3066\u30018\u30d3\u30c3\u30c8\u306b\u305d\u308d\u3048\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u30bc\u30ed\u30d1\u30c7\u30a3\u30f3\u30b0\u3068\u8a00\u3044\u307e\u3059\u3002</p>"},{"location":"chapter02/#_4","title":"\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u6587\u5b57\u3092\u3069\u3046\u899a\u3048\u3066\u3044\u308b\u304b","text":"<p>\u6570\u5b57\u306e\u6b21\u306f\u3001\u6587\u5b57\u304c\u3069\u3046\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#_5","title":"\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u4ed5\u7d44\u307f","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u6587\u5b57\u3092\u76f4\u63a5\u7406\u89e3\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u6587\u5b57\u3068\u6570\u5b57\u3092\u5bfe\u5fdc\u3055\u305b\u308b\u8868\u3092\u4f5c\u3063\u3066\u3001\u6587\u5b57\u3092\u6570\u5b57\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5bfe\u5fdc\u8868\u3092\u6587\u5b57\u30b3\u30fc\u30c9\u3068\u8a00\u3044\u307e\u3059\u3002</p>"},{"location":"chapter02/#ascii","title":"ASCII \u30b3\u30fc\u30c9\uff08\u30a2\u30b9\u30ad\u30fc\u30b3\u30fc\u30c9\uff09","text":"<p>\u6700\u3082\u57fa\u672c\u7684\u306a\u6587\u5b57\u30b3\u30fc\u30c9\u304cASCII\u3067\u3059\u3002\u82f1\u8a9e\u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3001\u6570\u5b57\u3001\u8a18\u53f7\u306b\u756a\u53f7\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002</p> <p>\u4e3b\u8981\u306aASCII\u6587\u5b57\u30b3\u30fc\u30c9\uff1a</p> \u6587\u5b57 10\u9032\u6570 2\u9032\u6570 \u8aac\u660e A 65 01000001 \u5927\u6587\u5b57\u306eA B 66 01000010 \u5927\u6587\u5b57\u306eB a 97 01100001 \u5c0f\u6587\u5b57\u306ea b 98 01100010 \u5c0f\u6587\u5b57\u306eb 0 48 00110000 \u6570\u5b57\u306e\u30bc\u30ed 1 49 00110001 \u6570\u5b57\u306e\u30a4\u30c1 ! 33 00100001 \u611f\u5606\u7b26 ? 63 00111111 \u7591\u554f\u7b26"},{"location":"chapter02/#_6","title":"\u65e5\u672c\u8a9e\u306e\u6587\u5b57\u30b3\u30fc\u30c9","text":"<p>\u65e5\u672c\u8a9e\u306b\u306f\u3001\u3072\u3089\u304c\u306a\u3001\u30ab\u30bf\u30ab\u30ca\u3001\u6f22\u5b57\u304c\u3042\u308a\u3001ASCII \u3060\u3051\u3067\u306f\u8db3\u308a\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u3001\u3088\u308a\u591a\u304f\u306e\u6587\u5b57\u3092\u8868\u73fe\u3067\u304d\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u304c\u4f5c\u3089\u308c\u307e\u3057\u305f\u3002</p> <p>\u4e3b\u8981\u306a\u65e5\u672c\u8a9e\u6587\u5b57\u30b3\u30fc\u30c9\uff1a</p> <ol> <li>Shift-JIS\uff1a\u65e5\u672c\u3067\u5e83\u304f\u4f7f\u308f\u308c\u305f</li> <li>EUC-JP\uff1aUNIX\u7cfb\u3067\u4f7f\u308f\u308c\u305f</li> <li>UTF-8\uff1a\u73fe\u5728\u306e\u6a19\u6e96\uff08\u4e16\u754c\u4e2d\u306e\u6587\u5b57\u3092\u8868\u73fe\u53ef\u80fd\uff09</li> </ol> <p>UTF-8\u3067\u306e\u4f8b\uff1a - \u300c\u3042\u300d\u2192 11100011 10000001 10000010\uff083\u30d0\u30a4\u30c8\uff09 - \u300c\u6f22\u300d\u2192 11100110 10100100 10100010\uff083\u30d0\u30a4\u30c8\uff09</p> <p>\u65e5\u672c\u8a9e\u306f1\u6587\u5b57\u3067\u8907\u6570\u30d0\u30a4\u30c8\u3092\u4f7f\u3046\u305f\u3081\u3001\u82f1\u8a9e\u3088\u308a\u5bb9\u91cf\u304c\u5927\u304d\u304f\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"chapter02/#_7","title":"\u3010\u5b9f\u884c\u3011\u81ea\u5206\u306e\u540d\u524d\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u3066\u307f\u3088\u3046","text":"<p>\u5b9f\u969b\u306b\u3042\u306a\u305f\u306e\u540d\u524d\u304c\u3069\u3093\u306a\u6570\u5b57\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30aa\u30f3\u30e9\u30a4\u30f3\u6587\u5b57\u30b3\u30fc\u30c9\u5909\u63db\u30c4\u30fc\u30eb\u3092\u4f7f\u3046","text":"<p>\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7121\u6599\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a</p> <ol> <li>\u30d6\u30e9\u30a6\u30b6\u3067\u300c\u6587\u5b57\u30b3\u30fc\u30c9\u5909\u63db \u30aa\u30f3\u30e9\u30a4\u30f3\u300d\u3068\u691c\u7d22</li> <li>\u6587\u5b57\u30b3\u30fc\u30c9\u5909\u63db\u30b5\u30a4\u30c8\u3092\u958b\u304f</li> <li>\u3042\u306a\u305f\u306e\u540d\u524d\u3092\u5165\u529b\u6b04\u306b\u5165\u529b</li> <li>UTF-8\u3084Shift-JIS\u306a\u3069\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u9078\u629e</li> <li>\u5909\u63db\u7d50\u679c\u3092\u78ba\u8a8d</li> </ol>"},{"location":"chapter02/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u7d50\u679c\u3092\u7406\u89e3\u3057\u3066\u307f\u3088\u3046","text":"<p>\u4f8b\uff1a\u300c\u7530\u4e2d\u300d\u3068\u3044\u3046\u540d\u524d\u306e\u5834\u5408\uff08UTF-8\uff09</p> <pre><code>\u300c\u7530\u300d\u2192 E7 94 B0 (16\u9032\u6570) \u2192 11100111 10010100 10110000 (2\u9032\u6570)\n\u300c\u4e2d\u300d\u2192 E4 B8 AD (16\u9032\u6570) \u2192 11100100 10111000 10101101 (2\u9032\u6570)\n</code></pre> <p>\u3064\u307e\u308a\u3001\u300c\u7530\u4e2d\u300d\u3068\u3044\u30462\u6587\u5b57\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e2d\u3067\u306f6\u30d0\u30a4\u30c8\uff0848\u30d3\u30c3\u30c8\uff09\u306e0\u30681\u306e\u7d44\u307f\u5408\u308f\u305b\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter02/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u82f1\u8a9e\u540d\u3068\u6bd4\u8f03\u3057\u3066\u307f\u3088\u3046","text":"<p>\u4f8b\uff1a\u300cTARO\u300d\u3068\u3044\u3046\u540d\u524d\u306e\u5834\u5408\uff08ASCII\uff09</p> <pre><code>\u300cT\u300d\u2192 54 (16\u9032\u6570) \u2192 01010100 (2\u9032\u6570) \u2192 1\u30d0\u30a4\u30c8\n\u300cA\u300d\u2192 41 (16\u9032\u6570) \u2192 01000001 (2\u9032\u6570) \u2192 1\u30d0\u30a4\u30c8\n\u300cR\u300d\u2192 52 (16\u9032\u6570) \u2192 01010010 (2\u9032\u6570) \u2192 1\u30d0\u30a4\u30c8\n\u300cO\u300d\u2192 4F (16\u9032\u6570) \u2192 01001111 (2\u9032\u6570) \u2192 1\u30d0\u30a4\u30c8\n</code></pre> <p>\u300cTARO\u300d\u306f4\u30d0\u30a4\u30c8\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\u3002\u65e5\u672c\u8a9e\u306e\u300c\u7530\u4e2d\u300d\uff086\u30d0\u30a4\u30c8\uff09\u3088\u308a\u5c11\u306a\u3044\u5bb9\u91cf\u3067\u6e08\u307f\u307e\u3059\u3002</p>"},{"location":"chapter02/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u6587\u5b57\u5316\u3051\u306e\u539f\u56e0\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<p>\u6642\u3005\u3001\u30e1\u30fc\u30eb\u3084\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u3067\u6587\u5b57\u304c\u5909\u306b\u8868\u793a\u3055\u308c\u308b\u300c\u6587\u5b57\u5316\u3051\u300d\u3092\u898b\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u305b\u3093\u304b\uff1f</p> <p>\u6587\u5b57\u5316\u3051\u306e\u539f\u56e0\uff1a 1. \u9001\u4fe1\u5074\uff1aUTF-8\u3067\u300c\u3053\u3093\u306b\u3061\u306f\u300d\u3092\u9001\u4fe1 2. \u53d7\u4fe1\u5074\uff1aShift-JIS\u3068\u3057\u3066\u89e3\u91c8\u3057\u3066\u3057\u307e\u3046 3. \u7d50\u679c\uff1a\u610f\u5473\u4e0d\u660e\u306a\u6587\u5b57\u304c\u8868\u793a\u3055\u308c\u308b</p> <p>\u3053\u308c\u306f\u3001\u540c\u3058\u6570\u5b57\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u7570\u306a\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u8868\u3067\u89e3\u91c8\u3057\u3066\u3057\u307e\u3046\u305f\u3081\u306b\u8d77\u3053\u308a\u307e\u3059\u3002</p>"},{"location":"chapter02/#_8","title":"\u30e1\u30e2\u30ea\u3068\u3044\u3046\u540d\u524d\u306e\u8a18\u61b6\u88c5\u7f6e","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u3053\u308c\u3089\u306e\u30c7\u30fc\u30bf\u3092\u3069\u3053\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308b\u304b\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#_9","title":"\u30e1\u30e2\u30ea\u306e\u4ed5\u7d44\u307f","text":"<p>\u30e1\u30e2\u30ea\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e00\u6642\u7684\u306a\u8a18\u61b6\u88c5\u7f6e\u3067\u3059\u3002\u672c\u68da\u306e\u3088\u3046\u306b\u3001\u305f\u304f\u3055\u3093\u306e\u300c\u4f4f\u6240\u300d\u304c\u3042\u308a\u3001\u305d\u308c\u305e\u308c\u306e\u4f4f\u6240\u306b1\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002</p> <pre><code>\u30e1\u30e2\u30ea\u306e\u30a4\u30e1\u30fc\u30b8\uff1a\n\u4f4f\u6240     | \u30c7\u30fc\u30bf\uff081\u30d0\u30a4\u30c8\uff09\n---------|------------------\n0x1000   | 01001000  (H)\n0x1001   | 01100101  (e)\n0x1002   | 01101100  (l)\n0x1003   | 01101100  (l)\n0x1004   | 01101111  (o)\n</code></pre> <p>\u3053\u306e\u4f8b\u3067\u306f\u3001\u300cHello\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u304c\u4f4f\u62400x1000\u304b\u30890x1004\u307e\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter02/#_10","title":"\u30e1\u30e2\u30ea\u306e\u7a2e\u985e","text":"<p>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u306f\u8907\u6570\u7a2e\u985e\u306e\u30e1\u30e2\u30ea\u304c\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li>RAM\uff08\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u30e1\u30e2\u30ea\uff09</li> <li>\u4e00\u6642\u7684\u306a\u4f5c\u696d\u5834\u6240</li> <li>\u96fb\u6e90\u3092\u5207\u308b\u3068\u5185\u5bb9\u304c\u6d88\u3048\u308b</li> <li> <p>\u9ad8\u901f\u3060\u304c\u5bb9\u91cf\u306f\u5c11\u306a\u3081</p> </li> <li> <p>\u30b9\u30c8\u30ec\u30fc\u30b8\uff08HDD/SSD\uff09</p> </li> <li>\u9577\u671f\u7684\u306a\u4fdd\u5b58\u5834\u6240</li> <li>\u96fb\u6e90\u3092\u5207\u3063\u3066\u3082\u5185\u5bb9\u304c\u6b8b\u308b</li> <li> <p>\u4f4e\u901f\u3060\u304c\u5927\u5bb9\u91cf</p> </li> <li> <p>CPU\u5185\u306e\u30ec\u30b8\u30b9\u30bf</p> </li> <li>\u6700\u3082\u9ad8\u901f\u306a\u8a18\u61b6\u88c5\u7f6e</li> <li>\u5bb9\u91cf\u306f\u6975\u3081\u3066\u5c11\u306a\u3044</li> <li>CPU\u304c\u8a08\u7b97\u306b\u4f7f\u3046</li> </ol>"},{"location":"chapter02/#_11","title":"\u30c7\u30fc\u30bf\u306e\u6d41\u308c","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u30c7\u30fc\u30bf\u306e\u6d41\u308c\uff1a</p> <ol> <li>\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089RAM\u3078\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f</li> <li>RAM\u304b\u3089CPU\u3078\uff1a\u51e6\u7406\u3059\u308b\u30c7\u30fc\u30bf\u3092\u8ee2\u9001</li> <li>CPU\u5185\u3067\u51e6\u7406\uff1a\u8a08\u7b97\u3084\u5224\u65ad\u3092\u5b9f\u884c</li> <li>CPU\u304b\u3089RAM\u3078\uff1a\u7d50\u679c\u3092\u4fdd\u5b58</li> <li>RAM\u304b\u3089\u30b9\u30c8\u30ec\u30fc\u30b8\u3078\uff1a\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u9577\u671f\u4fdd\u5b58</li> </ol>"},{"location":"chapter02/#_12","title":"\u30c7\u30fc\u30bf\u578b\u306e\u57fa\u672c\u6982\u5ff5","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u30c7\u30fc\u30bf\u578b\u3068\u3057\u3066\u5206\u985e\u3057\u307e\u3059\u3002</p>"},{"location":"chapter02/#_13","title":"\u4e3b\u8981\u306a\u30c7\u30fc\u30bf\u578b","text":"<ol> <li>\u6574\u6570\u578b\uff08Integer\uff09</li> <li>\u4f8b\uff1a25, -10, 0</li> <li>\u5c0f\u6570\u70b9\u306e\u306a\u3044\u6570\u5024</li> <li> <p>\u8a08\u7b97\u304c\u9ad8\u901f</p> </li> <li> <p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\uff08Float\uff09</p> </li> <li>\u4f8b\uff1a3.14, -2.5, 0.0</li> <li>\u5c0f\u6570\u70b9\u306e\u3042\u308b\u6570\u5024</li> <li> <p>\u8fd1\u4f3c\u5024\u3068\u3057\u3066\u4fdd\u5b58</p> </li> <li> <p>\u6587\u5b57\u5217\u578b\uff08String\uff09</p> </li> <li>\u4f8b\uff1a\u300c\u3053\u3093\u306b\u3061\u306f\u300d, \"Hello\"</li> <li>\u6587\u5b57\u306e\u96c6\u307e\u308a</li> <li> <p>\u6587\u5b57\u30b3\u30fc\u30c9\u3067\u4fdd\u5b58</p> </li> <li> <p>\u8ad6\u7406\u578b\uff08Boolean\uff09</p> </li> <li>True\uff08\u771f\uff09\u307e\u305f\u306fFalse\uff08\u507d\uff09</li> <li>\u6761\u4ef6\u5224\u65ad\u306b\u4f7f\u7528</li> <li>1\u30d3\u30c3\u30c8\u3067\u8868\u73fe\u53ef\u80fd\u3060\u304c\u3001\u901a\u5e381\u30d0\u30a4\u30c8\u4f7f\u7528</li> </ol>"},{"location":"chapter02/#_14","title":"\u30c7\u30fc\u30bf\u578b\u304c\u91cd\u8981\u306a\u7406\u7531","text":"<ol> <li>\u30e1\u30e2\u30ea\u52b9\u7387\uff1a\u9069\u5207\u306a\u578b\u3092\u9078\u3076\u3053\u3068\u3067\u7121\u99c4\u306a\u5bb9\u91cf\u3092\u4f7f\u308f\u306a\u3044</li> <li>\u51e6\u7406\u901f\u5ea6\uff1a\u578b\u306b\u5fdc\u3058\u305f\u6700\u9069\u306a\u51e6\u7406\u65b9\u6cd5\u3092\u9078\u629e</li> <li>\u30a8\u30e9\u30fc\u9632\u6b62\uff1a\u610f\u56f3\u3057\u306a\u3044\u64cd\u4f5c\u3092\u9632\u3050</li> </ol> <p>\u4f8b\uff1a\u5e74\u9f62\u306e\u4fdd\u5b58 - \u4e0d\u9069\u5207\uff1a\u6587\u5b57\u5217\u3068\u3057\u3066\u300c25\u6b73\u300d\u3067\u4fdd\u5b58 \u2192 \u8a08\u7b97\u3067\u304d\u306a\u3044 - \u9069\u5207\uff1a\u6574\u6570\u3068\u3057\u306625\u3067\u4fdd\u5b58 \u2192 \u8a08\u7b97\u53ef\u80fd</p>"},{"location":"chapter02/#_15","title":"\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba\u3092\u4f53\u611f\u3057\u3066\u307f\u3088\u3046","text":"<p>\u8eab\u306e\u56de\u308a\u306e\u30c7\u30fc\u30bf\u304c\u3069\u306e\u304f\u3089\u3044\u306e\u30b5\u30a4\u30ba\u304b\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter02/#_16","title":"\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf","text":"<pre><code>\u300c\u3053\u3093\u306b\u3061\u306f\u300d\uff085\u6587\u5b57\uff09\n= 5\u6587\u5b57 \u00d7 3\u30d0\u30a4\u30c8\uff08UTF-8\u3067\u306e\u65e5\u672c\u8a9e1\u6587\u5b57\uff09\n= 15\u30d0\u30a4\u30c8\n\n\u77ed\u3044\u30e1\u30fc\u30eb\uff08200\u6587\u5b57\u7a0b\u5ea6\uff09\n= 200\u6587\u5b57 \u00d7 3\u30d0\u30a4\u30c8\n= 600\u30d0\u30a4\u30c8\n</code></pre>"},{"location":"chapter02/#_17","title":"\u753b\u50cf\u30c7\u30fc\u30bf","text":"<pre><code>\u30b9\u30de\u30db\u5199\u771f\uff081200\u4e07\u753b\u7d20\uff09\n= 1200\u4e07\u30d4\u30af\u30bb\u30eb \u00d7 3\u8272\uff08RGB\uff09 \u00d7 1\u30d0\u30a4\u30c8\n= \u7d0436MB\uff08\u5727\u7e2e\u524d\uff09\n\n\u5b9f\u969b\u306eJPEG\u5199\u771f\n= \u7d043-5MB\uff08\u5727\u7e2e\u5f8c\uff09\n</code></pre>"},{"location":"chapter02/#_18","title":"\u97f3\u697d\u30c7\u30fc\u30bf","text":"<pre><code>CD\u97f3\u8cea\u306e\u97f3\u697d\uff081\u5206\u9593\uff09\n= 44,100\u30b5\u30f3\u30d7\u30eb/\u79d2 \u00d7 60\u79d2 \u00d7 2\u30c1\u30e3\u30f3\u30cd\u30eb \u00d7 2\u30d0\u30a4\u30c8\n= \u7d0410MB\n\nMP3\u97f3\u697d\uff081\u5206\u9593\uff09\n= \u7d041MB\uff08\u5727\u7e2e\u5f8c\uff09\n</code></pre>"},{"location":"chapter02/#_19","title":"\u52d5\u753b\u30c7\u30fc\u30bf","text":"<pre><code>\u30d5\u30ebHD\u52d5\u753b\uff081\u5206\u9593\u3001\u5727\u7e2e\u524d\uff09\n= 1920\u00d71080\u30d4\u30af\u30bb\u30eb \u00d7 30\u30d5\u30ec\u30fc\u30e0/\u79d2 \u00d7 60\u79d2 \u00d7 3\u8272 \u00d7 1\u30d0\u30a4\u30c8\n= \u7d0411GB\n\n\u5b9f\u969b\u306eMP4\u52d5\u753b\uff081\u5206\u9593\uff09\n= \u7d0450-100MB\uff08\u5727\u7e2e\u5f8c\uff09\n</code></pre>"},{"location":"chapter02/#_20","title":"\u307e\u3068\u3081\uff1a\u30c7\u30fc\u30bf\u8868\u73fe\u306e\u4ed5\u7d44\u307f","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter02/#_21","title":"\u6570\u5b57\u306e\u8868\u73fe","text":"<ul> <li>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f2\u9032\u6570\uff080\u30681\uff09\u3067\u3059\u3079\u3066\u306e\u6570\u3092\u8868\u73fe</li> <li>8\u30d3\u30c3\u30c8 = 1\u30d0\u30a4\u30c8\u304c\u57fa\u672c\u5358\u4f4d</li> <li>\u5927\u304d\u306a\u6570\u306f\u8907\u6570\u30d0\u30a4\u30c8\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u8868\u73fe</li> </ul>"},{"location":"chapter02/#_22","title":"\u6587\u5b57\u306e\u8868\u73fe","text":"<ul> <li>\u6587\u5b57\u306f\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u6570\u5b57\u306b\u5909\u63db</li> <li>ASCII\u306f\u82f1\u8a9e\u306e\u57fa\u672c\u6587\u5b57\u30bb\u30c3\u30c8</li> <li>UTF-8\u306f\u4e16\u754c\u4e2d\u306e\u6587\u5b57\u3092\u8868\u73fe\u53ef\u80fd</li> <li>\u65e5\u672c\u8a9e\u306f1\u6587\u5b57\u3067\u8907\u6570\u30d0\u30a4\u30c8\u5fc5\u8981</li> </ul>"},{"location":"chapter02/#_23","title":"\u30e1\u30e2\u30ea\u306e\u4ed5\u7d44\u307f","text":"<ul> <li>\u30c7\u30fc\u30bf\u306f\u4f4f\u6240\u4ed8\u304d\u306e\u8a18\u61b6\u5834\u6240\u306b\u4fdd\u5b58</li> <li>RAM\u306f\u4e00\u6642\u7684\u3001\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u6c38\u7d9a\u7684</li> <li>\u30c7\u30fc\u30bf\u578b\u306b\u3088\u3063\u3066\u4fdd\u5b58\u65b9\u6cd5\u304c\u5909\u308f\u308b</li> </ul>"},{"location":"chapter02/#_24","title":"\u30b5\u30a4\u30ba\u306e\u611f\u899a","text":"<ul> <li>\u30c6\u30ad\u30b9\u30c8\uff1a\u8efd\u3044\uff08\u6570\u30d0\u30a4\u30c8\u301c\u6570KB\uff09</li> <li>\u753b\u50cf\uff1a\u4e2d\u7a0b\u5ea6\uff08\u6570MB\uff09</li> <li>\u97f3\u697d\uff1a\u4e2d\u7a0b\u5ea6\uff08\u6570MB\uff09</li> <li>\u52d5\u753b\uff1a\u91cd\u3044\uff08\u6570\u5341\u301c\u6570\u767eMB\uff09</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u3044\u3088\u3044\u3088\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3044\u3046\u3082\u306e\u306b\u5b9f\u969b\u306b\u89e6\u308c\u3066\u307f\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u5b66\u3093\u3060\u300c0\u30681\u306e\u4e16\u754c\u300d\u3068\u300c\u30c7\u30fc\u30bf\u306e\u8868\u73fe\u300d\u3092\u57fa\u790e\u3068\u3057\u3066\u3001\u5b9f\u969b\u306b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u6307\u793a\u3092\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter03/","title":"\u7b2c3\u7ae0\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306e\u51fa\u4f1a\u3044","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c0\u30681\u3067\u52d5\u3044\u3066\u3044\u308b\u3053\u3068\u3068\u3001\u30c7\u30fc\u30bf\u304c\u3069\u3046\u8868\u73fe\u3055\u308c\u308b\u304b\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u3044\u3088\u3044\u3088\u3053\u306e\u7ae0\u3067\u306f\u3001\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3044\u3046\u3082\u306e\u306b\u89e6\u308c\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u305d\u3057\u3066\u3001\u306a\u305c\u6570\u3042\u308b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u4e2d\u304b\u3089Python\u3092\u9078\u3076\u306e\u304b\u3001\u305d\u306e\u7406\u7531\u3082\u7406\u89e3\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"chapter03/#_1","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3063\u3066\u4f55\u3060\u308d\u3046\uff1f","text":""},{"location":"chapter03/#_2","title":"\u6599\u7406\u306e\u30ec\u30b7\u30d4\u3067\u8003\u3048\u3066\u307f\u3088\u3046","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u307e\u305a\u306f\u8eab\u8fd1\u306a\u300c\u6599\u7406\u306e\u30ec\u30b7\u30d4\u300d\u3067\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p> <p>\u30ab\u30ec\u30fc\u3092\u4f5c\u308b\u30ec\u30b7\u30d4\uff1a 1. \u7389\u306d\u304e\u3092\u8584\u5207\u308a\u306b\u3059\u308b 2. \u4eba\u53c2\u3092\u4e00\u53e3\u5927\u306b\u5207\u308b 3. \u8089\u3092\u4e00\u53e3\u5927\u306b\u5207\u308b 4. \u934b\u306b\u6cb9\u3092\u5165\u308c\u3066\u52a0\u71b1\u3059\u308b 5. \u7389\u306d\u304e\u3092\u7092\u3081\u3066\u900f\u660e\u306b\u306a\u3063\u305f\u3089\u4eba\u53c2\u3068\u8089\u3092\u52a0\u3048\u308b 6. \u6c34\u3092\u52a0\u3048\u306620\u5206\u716e\u8fbc\u3080 7. \u30ab\u30ec\u30fc\u30eb\u30fc\u3092\u52a0\u3048\u306610\u5206\u716e\u8fbc\u3080 8. \u5b8c\u6210</p> <p>\u3053\u306e\u30ec\u30b7\u30d4\u306f\u3001\u300c\u30ab\u30ec\u30fc\u3092\u4f5c\u308b\u300d\u3068\u3044\u3046\u76ee\u7684\u3092\u9054\u6210\u3059\u308b\u305f\u3081\u306e\u624b\u9806\u66f8\u3067\u3059\u3002</p>"},{"location":"chapter03/#_3","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u7528\u306e\u30ec\u30b7\u30d4","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u3001\u30ec\u30b7\u30d4\u3068\u540c\u3058\u3088\u3046\u306b\u624b\u9806\u66f8\u3067\u3059\u3002\u305f\u3060\u3057\u3001\u4eba\u9593\u7528\u3067\u306f\u306a\u304f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u7528\u306e\u624b\u9806\u66f8\u3067\u3059\u3002</p> <p>\u4f8b\uff1a\u6d88\u8cbb\u7a0e\u3092\u8a08\u7b97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0 1. \u5546\u54c1\u306e\u4fa1\u683c\u3092\u53d7\u3051\u53d6\u308b 2. \u7a0e\u7387\uff080.1\uff09\u3092\u8a2d\u5b9a\u3059\u308b 3. \u4fa1\u683c\u306b\u7a0e\u7387\u3092\u639b\u3051\u308b 4. \u5143\u306e\u4fa1\u683c\u306b\u7a0e\u984d\u3092\u8db3\u3059 5. \u7d50\u679c\u3092\u8868\u793a\u3059\u308b</p>"},{"location":"chapter03/#_4","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u5f79\u5272","text":"<p>\u305f\u3060\u3057\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f0\u30681\u3057\u304b\u7406\u89e3\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u79c1\u305f\u3061\u306e\u8a00\u8449\u3092\u305d\u306e\u307e\u307e\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306f\u3001\u4eba\u9593\u306e\u8003\u3048\u3092\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u4f1d\u3048\u308b\u7ffb\u8a33\u30c4\u30fc\u30eb\u3067\u3059\u3002</p> <pre><code>\u4eba\u9593\u306e\u8003\u3048\uff1a\u300c\u5546\u54c1\u4fa1\u683c\u306b\u6d88\u8cbb\u7a0e\u3092\u52a0\u7b97\u3057\u305f\u3044\u300d\n\u3000\u3000\u3000\u2193 (\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u3067\u8a18\u8ff0)\nPython\uff1aprice_with_tax = price * 1.1\n\u3000\u3000\u3000\u2193 (\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u304c\u7406\u89e3\u3067\u304d\u308b\u5f62\u306b\u5909\u63db)\n\u6a5f\u68b0\u8a9e\uff1a01001000 01010100... (0\u30681\u306e\u7d44\u307f\u5408\u308f\u305b)\n</code></pre>"},{"location":"chapter03/#python","title":"\u306a\u305cPython\u3092\u9078\u3076\u306e\u304b\uff08\u4ed6\u306e\u8a00\u8a9e\u3068\u306e\u9055\u3044\uff09","text":"<p>\u4e16\u754c\u306b\u306f\u6570\u767e\u7a2e\u985e\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u305c\u305d\u306e\u4e2d\u304b\u3089Python\u3092\u9078\u3076\u306e\u3067\u3057\u3087\u3046\u304b\uff1f</p>"},{"location":"chapter03/#_5","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306e\u9055\u3044\u3092\u6bd4\u8f03\u3057\u3066\u307f\u3088\u3046","text":"<p>\u540c\u3058\u300cHello, World!\u300d\u3092\u8868\u793a\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3001\u7570\u306a\u308b\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u307f\u308b\u3068\uff1a</p> <p>C\u8a00\u8a9e\uff1a <pre><code>#include &lt;stdio.h&gt;\nint main() {\n    printf(\"Hello, World!\\n\");\n    return 0;\n}\n</code></pre></p> <p>Java\uff1a <pre><code>public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, World!\");\n    }\n}\n</code></pre></p> <p>Python\uff1a <pre><code>print(\"Hello, World!\")\n</code></pre></p> <p>\u3069\u306e\u8a00\u8a9e\u3082\u540c\u3058\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u306e\u306b\u3001Python\u304c\u5727\u5012\u7684\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\uff01</p>"},{"location":"chapter03/#python_1","title":"Python\u306e\u7279\u5fb4","text":"<p>1. \u8aad\u307f\u3084\u3059\u3055\u3092\u91cd\u8996 <pre><code># Python\u306e\u5834\u5408\nif age &gt;= 18:\n    print(\"\u6210\u4eba\u3067\u3059\")\nelse:\n    print(\"\u672a\u6210\u5e74\u3067\u3059\")\n</code></pre></p> <pre><code>// C\u8a00\u8a9e\u306e\u5834\u5408\nif (age &gt;= 18) {\n    printf(\"\u6210\u4eba\u3067\u3059\\n\");\n} else {\n    printf(\"\u672a\u6210\u5e74\u3067\u3059\\n\");\n}\n</code></pre> <p>Python\u306e\u65b9\u304c\u65e5\u672c\u8a9e\u306b\u8fd1\u3044\u611f\u899a\u3067\u8aad\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <p>2. \u5c11\u306a\u3044\u30b3\u30fc\u30c9\u3067\u591a\u304f\u306e\u3053\u3068\u304c\u3067\u304d\u308b</p> <p>\u30c7\u30fc\u30bf\u5206\u6790\u3092\u4f8b\u306b\u3068\u308b\u3068\uff1a</p> <p>Python\uff1a <pre><code>import pandas as pd\ndata = pd.read_csv(\"sales.csv\")\ntotal = data[\"price\"].sum()\nprint(f\"\u58f2\u4e0a\u5408\u8a08: {total}\u5186\")\n</code></pre></p> <p>\u4ed6\u306e\u8a00\u8a9e\u3067\u306f\u3001\u3053\u308c\u3068\u540c\u3058\u3053\u3068\u3092\u3059\u308b\u306e\u306b\u4f55\u5341\u884c\u3082\u5fc5\u8981\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002</p> <p>3. \u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea</p> <p>Python\u306b\u306f\u3001\u69d8\u3005\u306a\u5206\u91ce\u3067\u4f7f\u3048\u308b\u300c\u90e8\u54c1\u300d\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u304c\u8c4a\u5bcc\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8\u4f5c\u6210\uff1aDjango, Flask</li> <li>\u30c7\u30fc\u30bf\u5206\u6790\uff1apandas, numpy</li> <li>AI\u30fb\u6a5f\u68b0\u5b66\u7fd2\uff1aTensorFlow, PyTorch</li> <li>\u753b\u50cf\u51e6\u7406\uff1aPIL, OpenCV</li> <li>\u30b2\u30fc\u30e0\u958b\u767a\uff1apygame</li> </ul>"},{"location":"chapter03/#python_2","title":"Python\u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u8eab\u8fd1\u306a\u4f8b","text":"<p>\u5b9f\u306f\u3001\u3042\u306a\u305f\u304c\u666e\u6bb5\u4f7f\u3063\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u306e\u591a\u304f\u3067Python\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\uff1a</p> <ul> <li>YouTube\uff1a\u52d5\u753b\u914d\u4fe1\u30b7\u30b9\u30c6\u30e0\u306e\u4e00\u90e8</li> <li>Instagram\uff1a\u5199\u771f\u5171\u6709\u30b7\u30b9\u30c6\u30e0</li> <li>Spotify\uff1a\u97f3\u697d\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0</li> <li>Netflix\uff1a\u52d5\u753b\u63a8\u85a6\u30b7\u30b9\u30c6\u30e0</li> <li>Google\uff1a\u691c\u7d22\u30a8\u30f3\u30b8\u30f3\u306e\u4e00\u90e8</li> <li>Dropbox\uff1a\u30d5\u30a1\u30a4\u30eb\u540c\u671f\u30b7\u30b9\u30c6\u30e0</li> </ul>"},{"location":"chapter03/#_6","title":"\u4ed6\u306e\u8a00\u8a9e\u3068\u306e\u4f7f\u3044\u5206\u3051","text":"<p>\u5404\u8a00\u8a9e\u306b\u306f\u5f97\u610f\u5206\u91ce\u304c\u3042\u308a\u307e\u3059\uff1a</p> \u8a00\u8a9e \u5f97\u610f\u5206\u91ce \u7279\u5fb4 Python \u30c7\u30fc\u30bf\u5206\u6790\u3001AI\u3001\u30a6\u30a7\u30d6\u958b\u767a \u8aad\u307f\u3084\u3059\u3044\u3001\u66f8\u304d\u3084\u3059\u3044 Java \u4f01\u696d\u30b7\u30b9\u30c6\u30e0\u3001Android\u30a2\u30d7\u30ea \u5b89\u5b9a\u6027\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3 C\u8a00\u8a9e OS\u3001\u7d44\u307f\u8fbc\u307f\u30b7\u30b9\u30c6\u30e0 \u9ad8\u901f\u3001\u30e1\u30e2\u30ea\u52b9\u7387\u826f\u3044 JavaScript \u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u306e\u52d5\u4f5c \u30d6\u30e9\u30a6\u30b6\u3067\u52d5\u304f Swift iPhone\u30a2\u30d7\u30ea Apple\u88fd\u54c1\u5c02\u7528 <p>Python\u306f\u7279\u306b\u5b66\u7fd2\u3057\u3084\u3059\u3055\u3068\u5fdc\u7528\u306e\u5e45\u5e83\u3055\u306e\u30d0\u30e9\u30f3\u30b9\u304c\u512a\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u521d\u5fc3\u8005\u306b\u304a\u3059\u3059\u3081\u3067\u3059\u3002</p>"},{"location":"chapter03/#python_3","title":"\u3010\u5b9f\u884c\u3011Python\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u3088\u3046","text":"<p>\u3044\u3088\u3044\u3088Python\u3092\u5b9f\u969b\u306b\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter03/#windows","title":"Windows \u306e\u5834\u5408","text":"<p>\u30b9\u30c6\u30c3\u30d71\uff1aPython\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u30a2\u30af\u30bb\u30b9 1. \u30d6\u30e9\u30a6\u30b6\u3067\u300cpython.org\u300d\u306b\u30a2\u30af\u30bb\u30b9 2. \u300cDownloads\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af 3. \u300cPython 3.11.x\u300d\uff08\u6700\u65b0\u7248\uff09\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9</p> <p>\u30b9\u30c6\u30c3\u30d72\uff1a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b9f\u884c 1. \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af 2. \u91cd\u8981\uff1a\u300cAdd Python to PATH\u300d\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b 3. \u300cInstall Now\u300d\u3092\u30af\u30ea\u30c3\u30af 4. \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5b8c\u4e86\u307e\u3067\u5f85\u3064</p> <p>\u30b9\u30c6\u30c3\u30d73\uff1a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u78ba\u8a8d 1. Windows\u30ad\u30fc + R \u3092\u62bc\u3059 2. \u300ccmd\u300d\u3068\u5165\u529b\u3057\u3066Enter 3. <code>python --version</code> \u3068\u5165\u529b\u3057\u3066Enter 4. \u300cPython 3.11.x\u300d\u306e\u3088\u3046\u306b\u8868\u793a\u3055\u308c\u308c\u3070OK</p>"},{"location":"chapter03/#macos","title":"macOS \u306e\u5834\u5408","text":"<p>\u30b9\u30c6\u30c3\u30d71\uff1aHomebrew\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\uff08\u63a8\u5968\u65b9\u6cd5\uff09 1. \u300c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u300d\u2192\u300c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u300d\u2192\u300c\u30bf\u30fc\u30df\u30ca\u30eb\u300d\u3092\u958b\u304f 2. \u4ee5\u4e0b\u3092\u30b3\u30d4\u30fc\u3057\u3066\u8cbc\u308a\u4ed8\u3051\u3001Enter\u3092\u62bc\u3059\uff1a <pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre></p> <p>\u30b9\u30c6\u30c3\u30d72\uff1aPython\u3092Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb <pre><code>brew install python\n</code></pre></p> <p>\u30b9\u30c6\u30c3\u30d73\uff1a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u78ba\u8a8d <pre><code>python3 --version\n</code></pre></p>"},{"location":"chapter03/#_7","title":"\u4ee3\u66ff\u65b9\u6cd5\uff1a\u30aa\u30f3\u30e9\u30a4\u30f3\u74b0\u5883\u3092\u4f7f\u3046","text":"<p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u96e3\u3057\u3044\u5834\u5408\u306f\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u3067Python\u3092\u5b9f\u884c\u3067\u304d\u308b\u30b5\u30fc\u30d3\u30b9\u3082\u3042\u308a\u307e\u3059\uff1a</p> <ol> <li>Replit\uff08replit.com\uff09\uff1a\u30d6\u30e9\u30a6\u30b6\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0</li> <li>Google Colab\uff1aGoogle\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u5229\u7528\u53ef\u80fd</li> <li>Jupyter Notebook online\uff1a\u30c7\u30fc\u30bf\u5206\u6790\u5411\u3051</li> </ol>"},{"location":"chapter03/#_8","title":"\u958b\u767a\u74b0\u5883\u306e\u9078\u629e","text":"<p>Python\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u305f\u3081\u306e\u30a8\u30c7\u30a3\u30bf\u304c\u5fc5\u8981\u3067\u3059\u3002</p> <p>\u521d\u5fc3\u8005\u306b\u304a\u3059\u3059\u3081\uff1a</p> <ol> <li>IDLE\uff08Python\u306b\u4ed8\u5c5e\uff09</li> <li>Python\u3068\u4e00\u7dd2\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b</li> <li> <p>\u30b7\u30f3\u30d7\u30eb\u3067\u5b66\u7fd2\u306b\u6700\u9069</p> </li> <li> <p>Visual Studio Code\uff08\u7121\u6599\uff09</p> </li> <li>\u30d7\u30ed\u3082\u4f7f\u3046\u9ad8\u6a5f\u80fd\u30a8\u30c7\u30a3\u30bf</li> <li> <p>Python\u62e1\u5f35\u6a5f\u80fd\u304c\u8c4a\u5bcc</p> </li> <li> <p>PyCharm Community Edition\uff08\u7121\u6599\uff09</p> </li> <li>Python\u5c02\u7528\u306e\u958b\u767a\u74b0\u5883</li> <li>\u9ad8\u6a5f\u80fd\u3060\u304c\u521d\u5fc3\u8005\u306b\u306f\u5c11\u3057\u91cd\u3044</li> </ol> <p>\u307e\u305a\u306fIDLE\u304b\u3089\u59cb\u3081\u308b\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002</p>"},{"location":"chapter03/#_9","title":"\u3010\u5b9f\u884c\u3011\u81ea\u5206\u306e\u540d\u524d\u3067\u6328\u62f6\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u3064\u3044\u306b\u521d\u3081\u3066\u306ePython\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter03/#1idle","title":"\u30b9\u30c6\u30c3\u30d71\uff1aIDLE\u3092\u8d77\u52d5\u3057\u3088\u3046","text":"<p>Windows\uff1a 1. \u30b9\u30bf\u30fc\u30c8\u30e1\u30cb\u30e5\u30fc\u3067\u300cIDLE\u300d\u3068\u691c\u7d22 2. \u300cIDLE (Python 3.xx)\u300d\u3092\u30af\u30ea\u30c3\u30af</p> <p>macOS\uff1a 1. Launchpad\u3067\u300cIDLE\u300d\u3068\u691c\u7d22 2. IDLE\u3092\u30af\u30ea\u30c3\u30af</p> <p>IDLE\u304c\u8d77\u52d5\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff1a</p> <pre><code>Python 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license()\" for more information.\n&gt;&gt;&gt; \n</code></pre> <p>\u3053\u306e <code>&gt;&gt;&gt;</code> \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u72b6\u614b\u304c\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3067\u3059\u3002\u3053\u3053\u306bPython\u306e\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"chapter03/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u521d\u3081\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c","text":"<p>\u307e\u305a\u306f\u4f1d\u7d71\u7684\u306a\u300cHello, World!\u300d\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; print(\"Hello, World!\")\n</code></pre> <p>Enter\u3092\u62bc\u3059\u3068\uff1a</p> <pre><code>Hello, World!\n&gt;&gt;&gt; \n</code></pre> <p>\u304a\u3081\u3067\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\u3042\u306a\u305f\u306f\u4eca\u3001\u521d\u3081\u3066\u306ePython\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3057\u305f\uff01</p>"},{"location":"chapter03/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u81ea\u5206\u306e\u540d\u524d\u3067\u6328\u62f6\u3057\u3066\u307f\u3088\u3046","text":"<p>\u6b21\u306b\u3001\u3042\u306a\u305f\u306e\u540d\u524d\u3092\u4f7f\u3063\u305f\u6328\u62f6\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"  # \u3042\u306a\u305f\u306e\u540d\u524d\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\n&gt;&gt;&gt; print(\"\u3053\u3093\u306b\u3061\u306f\u3001\" + name + \"\u3055\u3093\uff01\")\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\uff1a <pre><code>\u3053\u3093\u306b\u3061\u306f\u3001\u7530\u4e2d\u592a\u90ce\u3055\u3093\uff01\n&gt;&gt;&gt; \n</code></pre></p>"},{"location":"chapter03/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u3082\u3046\u5c11\u3057\u8907\u96d1\u306b\u3057\u3066\u307f\u3088\u3046","text":"<p>\u4eca\u5ea6\u306f\u3001\u6642\u9593\u306b\u5fdc\u3058\u3066\u6328\u62f6\u3092\u5909\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; now = datetime.datetime.now()\n&gt;&gt;&gt; hour = now.hour\n&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"  # \u3042\u306a\u305f\u306e\u540d\u524d\u306b\u5909\u66f4\n\n&gt;&gt;&gt; if hour &lt; 12:\n...     greeting = \"\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\"\n... elif hour &lt; 18:\n...     greeting = \"\u3053\u3093\u306b\u3061\u306f\"\n... else:\n...     greeting = \"\u3053\u3093\u3070\u3093\u306f\"\n... \n&gt;&gt;&gt; print(greeting + \"\u3001\" + name + \"\u3055\u3093\uff01\")\n</code></pre> <p>\u6ce8\u610f\uff1a<code>if</code>\u6587\u3092\u5165\u529b\u3059\u308b\u3068\u304d\u3001IDLE\u3067\u306f <code>...</code> \u3068\u3044\u3046\u8868\u793a\u306b\u5909\u308f\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u300c\u7d9a\u304d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002\u5404\u884c\u3092\u5165\u529b\u3057\u305f\u5f8c\u3001\u6700\u5f8c\u306b\u7a7a\u884c\uff08\u4f55\u3082\u5165\u529b\u305b\u305a\u306bEnter\uff09\u3092\u5165\u529b\u3059\u308b\u3068\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"chapter03/#5f-string","title":"\u30b9\u30c6\u30c3\u30d75\uff1af-string \u3092\u4f7f\u3063\u3066\u3082\u3063\u3068\u30b9\u30de\u30fc\u30c8\u306b","text":"<p>Python\u306b\u306f\u3001\u6587\u5b57\u5217\u3092\u3082\u3063\u3068\u7c21\u5358\u306b\u7d44\u307f\u7acb\u3066\u308b\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; print(f\"\u79c1\u306e\u540d\u524d\u306f{name}\u3067\u3001{age}\u6b73\u3067\u3059\u3002\")\n</code></pre> <p>\u5b9f\u884c\u7d50\u679c\uff1a <pre><code>\u79c1\u306e\u540d\u524d\u306f\u7530\u4e2d\u592a\u90ce\u3067\u300125\u6b73\u3067\u3059\u3002\n&gt;&gt;&gt; \n</code></pre></p> <p><code>f\"...\"</code> \u306e\u5f62\u5f0f\u3092f-string\u3068\u547c\u3073\u3001<code>{}</code>\u306e\u4e2d\u306b\u5909\u6570\u540d\u3092\u66f8\u304f\u3060\u3051\u3067\u5024\u304c\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\u3002</p>"},{"location":"chapter03/#6","title":"\u30b9\u30c6\u30c3\u30d76\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u307f\u3088\u3046","text":"<p>\u3053\u308c\u307e\u3067\u306f\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3067\u4e00\u884c\u305a\u3064\u5b9f\u884c\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002</p> <p>IDLE\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\uff1a 1. IDLE\u3067\u300cFile\u300d\u2192\u300cNew File\u300d\u3092\u30af\u30ea\u30c3\u30af 2. \u65b0\u3057\u3044\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u304d\u307e\u3059 3. \u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5165\u529b\uff1a</p> <pre><code># \u79c1\u306e\u521d\u3081\u3066\u306ePython\u30d7\u30ed\u30b0\u30e9\u30e0\nimport datetime\n\nname = \"\u7530\u4e2d\u592a\u90ce\"  # \u3053\u3053\u3092\u3042\u306a\u305f\u306e\u540d\u524d\u306b\u5909\u66f4\nnow = datetime.datetime.now()\nhour = now.hour\n\nif hour &lt; 12:\n    greeting = \"\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\"\nelif hour &lt; 18:\n    greeting = \"\u3053\u3093\u306b\u3061\u306f\"\nelse:\n    greeting = \"\u3053\u3093\u3070\u3093\u306f\"\n\nprint(f\"{greeting}\u3001{name}\u3055\u3093\uff01\")\nprint(f\"\u4eca\u65e5\u3082Python\u306e\u5b66\u7fd2\u3092\u9811\u5f35\u308a\u307e\u3057\u3087\u3046\uff01\")\n</code></pre> <ol> <li>\u300cFile\u300d\u2192\u300cSave As\u300d\u3067\u300chello.py\u300d\u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58</li> <li>\u300cRun\u300d\u2192\u300cRun Module\u300d(\u307e\u305f\u306fF5\u30ad\u30fc)\u3067\u5b9f\u884c</li> </ol>"},{"location":"chapter03/#7","title":"\u30b9\u30c6\u30c3\u30d77\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<p>\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5404\u90e8\u5206\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\uff1a</p> <p><pre><code># \u79c1\u306e\u521d\u3081\u3066\u306ePython\u30d7\u30ed\u30b0\u30e9\u30e0\n</code></pre> - <code>#</code> \u3067\u59cb\u307e\u308b\u884c\u306f\u30b3\u30e1\u30f3\u30c8 - \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u52d5\u4f5c\u306b\u5f71\u97ff\u3057\u306a\u3044\u8aac\u660e\u6587</p> <p><pre><code>import datetime\n</code></pre> - \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\uff08\u8aad\u307f\u8fbc\u307f\uff09 - <code>datetime</code>\u306f\u65e5\u4ed8\u3068\u6642\u523b\u3092\u6271\u3046\u305f\u3081\u306e\u30e9\u30a4\u30d6\u30e9\u30ea</p> <p><pre><code>name = \"\u7530\u4e2d\u592a\u90ce\"\n</code></pre> - \u5909\u6570\u306e\u5b9a\u7fa9 - <code>name</code>\u3068\u3044\u3046\u7bb1\u306b\u300c\u7530\u4e2d\u592a\u90ce\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u4fdd\u5b58</p> <p><pre><code>now = datetime.datetime.now()\nhour = now.hour\n</code></pre> - \u73fe\u5728\u306e\u65e5\u6642\u3092\u53d6\u5f97 - \u305d\u306e\u4e2d\u304b\u3089\u300c\u6642\u300d\u306e\u90e8\u5206\u3060\u3051\u3092\u53d6\u308a\u51fa\u3057</p> <p><pre><code>if hour &lt; 12:\n    greeting = \"\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\"\nelif hour &lt; 18:\n    greeting = \"\u3053\u3093\u306b\u3061\u306f\"\nelse:\n    greeting = \"\u3053\u3093\u3070\u3093\u306f\"\n</code></pre> - \u6761\u4ef6\u5206\u5c90\uff08if\u6587\uff09 - \u6642\u9593\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u6328\u62f6\u3092\u8a2d\u5b9a</p> <p><pre><code>print(f\"{greeting}\u3001{name}\u3055\u3093\uff01\")\n</code></pre> - f-string\u3092\u4f7f\u3063\u305f\u6587\u5b57\u5217\u306e\u7d44\u307f\u7acb\u3066\u3068\u8868\u793a</p>"},{"location":"chapter03/#_10","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306b\u8d77\u3053\u3063\u3066\u3044\u308b\u3053\u3068","text":"<p>\u3042\u306a\u305f\u304c\u4eca\u5b9f\u884c\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e2d\u3067\u3069\u3046\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u7406\u89e3\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter03/#python_4","title":"Python\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306e\u5f79\u5272","text":"<p>Python\u306f\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u578b\u8a00\u8a9e\u3067\u3059\u3002\u3053\u308c\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4e00\u884c\u305a\u3064\u8aad\u307f\u53d6\u3063\u3066\u5b9f\u884c\u3059\u308b\u65b9\u5f0f\u3067\u3059\u3002</p> <p>\u5b9f\u884c\u306e\u6d41\u308c\uff1a 1. \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\uff1a\u3042\u306a\u305f\u304c\u66f8\u3044\u305fPython\u30d7\u30ed\u30b0\u30e9\u30e0 2. \u5b57\u53e5\u89e3\u6790\uff1a\u6587\u5b57\u3092\u30c8\u30fc\u30af\u30f3\uff08\u610f\u5473\u306e\u3042\u308b\u5358\u4f4d\uff09\u306b\u5206\u5272 3. \u69cb\u6587\u89e3\u6790\uff1a\u30c8\u30fc\u30af\u30f3\u3092\u69cb\u6587\u6728\uff08\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u69cb\u9020\uff09\u306b\u5909\u63db 4. \u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u5909\u63db\uff1aPython\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u7528\u306e\u30b3\u30fc\u30c9\u306b\u5909\u63db 5. \u5b9f\u884c\uff1aPython\u4eee\u60f3\u30de\u30b7\u30f3\uff08PVM\uff09\u304c\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c</p>"},{"location":"chapter03/#_11","title":"\u4ed6\u306e\u5b9f\u884c\u65b9\u5f0f\u3068\u306e\u6bd4\u8f03","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30eb\u578b\u8a00\u8a9e\uff08C\u8a00\u8a9e\u306a\u3069\uff09\uff1a <pre><code>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u2192 \u30b3\u30f3\u30d1\u30a4\u30e9 \u2192 \u6a5f\u68b0\u8a9e \u2192 \u5b9f\u884c\n</code></pre> - \u4e8b\u524d\u306b\u3059\u3079\u3066\u3092\u6a5f\u68b0\u8a9e\u306b\u5909\u63db - \u5b9f\u884c\u306f\u9ad8\u901f\u3060\u304c\u3001\u958b\u767a\u306b\u6642\u9593\u304c\u304b\u304b\u308b</p> <p>\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u578b\u8a00\u8a9e\uff08Python\uff09\uff1a <pre><code>\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u2192 \u30a4\u30f3\u30bf\u30d7\u30ea\u30bf \u2192 \u5b9f\u884c\n</code></pre> - \u305d\u306e\u5834\u3067\u89e3\u91c8\u3057\u306a\u304c\u3089\u5b9f\u884c - \u958b\u767a\u306f\u5feb\u9069\u3060\u304c\u3001\u5b9f\u884c\u306f\u5c11\u3057\u9045\u3044</p>"},{"location":"chapter03/#_12","title":"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6050\u308c\u306a\u3044","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3076\u4e0a\u3067\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6575\u3067\u306f\u306a\u304f\u5473\u65b9\u3067\u3059\u3002</p> <p>\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u306e\u4f8b\uff1a</p> <p><pre><code>&gt;&gt;&gt; print(\"Hello World\"\n</code></pre> <pre><code>SyntaxError: unexpected EOF while parsing\n</code></pre></p> <p>\u3053\u308c\u306f\u300c\u9589\u3058\u62ec\u5f27 <code>)</code> \u304c\u8db3\u308a\u307e\u305b\u3093\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002</p> <p><pre><code>&gt;&gt;&gt; print(hello)\n</code></pre> <pre><code>NameError: name 'hello' is not defined\n</code></pre></p> <p>\u3053\u308c\u306f\u300c<code>hello</code>\u3068\u3044\u3046\u5909\u6570\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u300d\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002</p> <p>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8aad\u307f\u65b9\uff1a 1. \u30a8\u30e9\u30fc\u306e\u7a2e\u985e\uff1aSyntaxError, NameError \u306a\u3069 2. \u30a8\u30e9\u30fc\u306e\u5185\u5bb9\uff1a\u4f55\u304c\u554f\u984c\u306a\u306e\u304b\u306e\u8aac\u660e 3. \u767a\u751f\u7b87\u6240\uff1a\u3069\u306e\u884c\u3067\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u304b</p> <p>\u30a8\u30e9\u30fc\u306f\u300c\u9593\u9055\u3044\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u89aa\u5207\u306a\u5148\u751f\u300d\u3060\u3068\u601d\u3063\u3066\u3001\u6050\u308c\u305a\u306b\u5411\u304d\u5408\u3044\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter03/#_13","title":"\u307e\u3068\u3081\uff1a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u7b2c\u4e00\u6b69","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter03/#_14","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u672c\u8cea","text":"<ul> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u7528\u306e\u624b\u9806\u66f8</li> <li>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306f\u4eba\u9593\u3068\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u6a4b\u6e21\u3057</li> <li>\u8907\u96d1\u306a\u51e6\u7406\u3082\u3001\u5358\u7d14\u306a\u624b\u9806\u306e\u7d44\u307f\u5408\u308f\u305b</li> </ul>"},{"location":"chapter03/#python_5","title":"Python\u306e\u7279\u5fb4","text":"<ul> <li>\u8aad\u307f\u3084\u3059\u304f\u3001\u66f8\u304d\u3084\u3059\u3044</li> <li>\u8c4a\u5bcc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u69d8\u3005\u306a\u5206\u91ce\u306b\u5bfe\u5fdc</li> <li>\u5b66\u7fd2\u3057\u3084\u3059\u304f\u3001\u5b9f\u7528\u6027\u3082\u9ad8\u3044</li> </ul>"},{"location":"chapter03/#_15","title":"\u521d\u3081\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u4f53\u9a13","text":"<ul> <li>\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3067\u5373\u5ea7\u306b\u7d50\u679c\u3092\u78ba\u8a8d</li> <li>\u5909\u6570\u3001\u6761\u4ef6\u5206\u5c90\u3001\u6587\u5b57\u5217\u64cd\u4f5c\u306e\u57fa\u672c</li> <li>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u5b66\u7fd2\u306e\u52a9\u3051\u306b\u306a\u308b</li> </ul>"},{"location":"chapter03/#_16","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u306e\u4ed5\u7d44\u307f","text":"<ul> <li>\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u304c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u89e3\u91c8\u3057\u3066\u5b9f\u884c</li> <li>\u4eba\u9593\u306e\u8a00\u8449\u304b\u3089\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e0\u30681\u3078\u3068\u5909\u63db\u3055\u308c\u308b</li> <li>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u554f\u984c\u89e3\u6c7a\u306e\u30d2\u30f3\u30c8</li> </ul> <p>\u3042\u306a\u305f\u306f\u3082\u3046\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e\u7b2c\u4e00\u6b69\u3092\u8e0f\u307f\u51fa\u3057\u307e\u3057\u305f\uff01\u6b21\u306e\u7ae0\u304b\u3089\u306f\u3001Python\u306e\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u3092\u4f7f\u3063\u3066\u3001\u3082\u3063\u3068\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u96fb\u5353\u306e\u3088\u3046\u306a\u8a08\u7b97\u304b\u3089\u59cb\u3081\u3066\u3001\u5f90\u3005\u306b\u8907\u96d1\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u6311\u6226\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"chapter04/","title":"\u7b2c4\u7ae0\uff1aPython\u3068\u53cb\u9054\u306b\u306a\u308d\u3046","text":"<p>\u524d\u306e\u7ae0\u3067Python\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001\u521d\u3081\u3066\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Python\u3068\u306e\u5bfe\u8a71\u3092\u3082\u3063\u3068\u6df1\u3081\u3066\u3001\u5b9f\u7528\u7684\u306a\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u8eab\u8fd1\u306a\u300c\u6d88\u8cbb\u7a0e\u8a08\u7b97\u300d\u304b\u3089\u59cb\u3081\u3066\u3001Python\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u30de\u30b9\u30bf\u30fc\u3057\u3066\u3044\u304d\u307e\u3059\u3002</p>"},{"location":"chapter04/#python","title":"Python\u3068\u306e\u5bfe\u8a71\uff08\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\uff09","text":""},{"location":"chapter04/#_1","title":"\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3068\u306f","text":"<p>\u524d\u7ae0\u3067\u5c11\u3057\u89e6\u308c\u307e\u3057\u305f\u304c\u3001Python\u306b\u306f\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\uff08\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30b7\u30a7\u30eb\uff09\u3068\u3044\u3046\u4fbf\u5229\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3001Python\u3068\u300c\u4f1a\u8a71\u300d\u3059\u308b\u3088\u3046\u306a\u611f\u899a\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3067\u304d\u308b\u74b0\u5883\u3067\u3059\u3002</p> <p>\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u7279\u5fb4\uff1a - \u4e00\u884c\u5165\u529b\u3059\u308b\u305f\u3073\u306b\u3001\u3059\u3050\u306b\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b - \u8a08\u7b97\u6a5f\u306e\u3088\u3046\u306b\u6c17\u8efd\u306b\u4f7f\u3048\u308b - \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c6\u30b9\u30c8\u3084\u78ba\u8a8d\u306b\u6700\u9069 - \u5b66\u7fd2\u306b\u306f\u6700\u9069\u306a\u74b0\u5883</p>"},{"location":"chapter04/#idle","title":"IDLE\u306e\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3092\u8d77\u52d5\u3057\u3088\u3046","text":"<p>IDLE\u3092\u8d77\u52d5\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff1a</p> <pre><code>Python 3.11.0 (main, Oct 24 2022, 18:26:48)\n[GCC 12.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license()\" for more information.\n&gt;&gt;&gt; \n</code></pre> <p>\u3053\u306e <code>&gt;&gt;&gt;</code> \u304c\u30d7\u30ed\u30f3\u30d7\u30c8\u3068\u547c\u3070\u308c\u308b\u5165\u529b\u5f85\u3061\u72b6\u614b\u306e\u5370\u3067\u3059\u3002\u3053\u3053\u306bPython\u306e\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"chapter04/#_2","title":"\u96fb\u5353\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u3088\u3046","text":"<p>\u307e\u305a\u306f\u3001Python\u3092\u96fb\u5353\u4ee3\u308f\u308a\u306b\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; 2 + 3\n5\n&gt;&gt;&gt; 10 - 4\n6\n&gt;&gt;&gt; 3 * 7\n21\n&gt;&gt;&gt; 15 / 3\n5.0\n</code></pre> <p>\u3059\u3050\u306b\u7b54\u3048\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u306d\uff01\u3053\u308c\u304c\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u4fbf\u5229\u3055\u3067\u3059\u3002</p>"},{"location":"chapter04/#python_1","title":"Python\u306e\u8a08\u7b97\u6f14\u7b97\u5b50","text":"<p>Python\u3067\u4f7f\u3048\u308b\u8a08\u7b97\u6f14\u7b97\u5b50\u3092\u899a\u3048\u307e\u3057\u3087\u3046\uff1a</p> \u6f14\u7b97\u5b50 \u610f\u5473 \u4f8b \u7d50\u679c <code>+</code> \u8db3\u3057\u7b97 <code>5 + 3</code> <code>8</code> <code>-</code> \u5f15\u304d\u7b97 <code>10 - 4</code> <code>6</code> <code>*</code> \u639b\u3051\u7b97 <code>6 * 7</code> <code>42</code> <code>/</code> \u5272\u308a\u7b97\uff08\u5c0f\u6570\uff09 <code>15 / 4</code> <code>3.75</code> <code>//</code> \u5272\u308a\u7b97\uff08\u6574\u6570\uff09 <code>15 // 4</code> <code>3</code> <code>%</code> \u4f59\u308a <code>15 % 4</code> <code>3</code> <code>**</code> \u7d2f\u4e57 <code>2 ** 3</code> <code>8</code>"},{"location":"chapter04/#_3","title":"\u8a08\u7b97\u306e\u512a\u5148\u9806\u4f4d","text":"<p>\u6570\u5b66\u3068\u540c\u3058\u3088\u3046\u306b\u3001Python\u3067\u3082\u8a08\u7b97\u306e\u512a\u5148\u9806\u4f4d\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; 2 + 3 * 4\n14\n&gt;&gt;&gt; (2 + 3) * 4\n20\n</code></pre> <p>\u512a\u5148\u9806\u4f4d\uff08\u9ad8\u3044\u9806\uff09\uff1a 1. \u62ec\u5f27 <code>()</code> 2. \u7d2f\u4e57 <code>**</code> 3. \u5358\u9805\u6f14\u7b97\u5b50 <code>+</code>, <code>-</code>\uff08\u7b26\u53f7\uff09 4. \u639b\u3051\u7b97\u30fb\u5272\u308a\u7b97 <code>*</code>, <code>/</code>, <code>//</code>, <code>%</code> 5. \u8db3\u3057\u7b97\u30fb\u5f15\u304d\u7b97 <code>+</code>, <code>-</code></p> <p>\u899a\u3048\u65b9\u306e\u30b3\u30c4\uff1a\u6570\u5b66\u306e\u6388\u696d\u3067\u7fd2\u3063\u305f\u9806\u5e8f\u3068\u540c\u3058\u3067\u3059\uff01</p>"},{"location":"chapter04/#_4","title":"\u3010\u5b9f\u884c\u3011\u6d88\u8cbb\u7a0e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308d\u3046","text":"<p>\u8eab\u8fd1\u3067\u5b9f\u7528\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001\u6d88\u8cbb\u7a0e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter04/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u6d88\u8cbb\u7a0e\u8a08\u7b97","text":"<p>\u307e\u305a\u306f\u3001\u7c21\u5358\u306a\u6d88\u8cbb\u7a0e\u8a08\u7b97\u304b\u3089\u59cb\u3081\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; price = 1000  # \u5546\u54c1\u4fa1\u683c\n&gt;&gt;&gt; tax_rate = 0.1  # \u6d88\u8cbb\u7a0e\u7387\uff0810%\uff09\n&gt;&gt;&gt; tax = price * tax_rate  # \u7a0e\u984d\n&gt;&gt;&gt; total = price + tax  # \u5408\u8a08\u91d1\u984d\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u4fa1\u683c: {price}\u5186\")\n\u5546\u54c1\u4fa1\u683c: 1000\u5186\n&gt;&gt;&gt; print(f\"\u6d88\u8cbb\u7a0e: {tax}\u5186\")\n\u6d88\u8cbb\u7a0e: 100.0\u5186\n&gt;&gt;&gt; print(f\"\u5408\u8a08: {total}\u5186\")\n\u5408\u8a08: 1100.0\u5186\n</code></pre>"},{"location":"chapter04/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u3088\u308a\u5b9f\u7528\u7684\u306a\u30d0\u30fc\u30b8\u30e7\u30f3","text":"<p>\u4eca\u5ea6\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u4fa1\u683c\u3092\u5165\u529b\u3067\u304d\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; price_input = input(\"\u5546\u54c1\u4fa1\u683c\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \")\n\u5546\u54c1\u4fa1\u683c\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: 1500\n&gt;&gt;&gt; price = int(price_input)  # \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\n&gt;&gt;&gt; tax_rate = 0.1\n&gt;&gt;&gt; tax = price * tax_rate\n&gt;&gt;&gt; total = price + tax\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u4fa1\u683c: {price}\u5186\")\n\u5546\u54c1\u4fa1\u683c: 1500\u5186\n&gt;&gt;&gt; print(f\"\u6d88\u8cbb\u7a0e: {tax}\u5186\")\n\u6d88\u8cbb\u7a0e: 150.0\u5186\n&gt;&gt;&gt; print(f\"\u5408\u8a08: {total}\u5186\")\n\u5408\u8a08: 1650.0\u5186\n</code></pre> <p>\u30dd\u30a4\u30f3\u30c8\uff1a - <code>input()</code>\u95a2\u6570\uff1a\u30e6\u30fc\u30b6\u30fc\u304b\u3089\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b - <code>int()</code>\u95a2\u6570\uff1a\u6587\u5b57\u5217\u3092\u6574\u6570\u306b\u5909\u63db - \u30e6\u30fc\u30b6\u30fc\u304c\u5165\u529b\u3057\u305f\u5024\u306f\u6700\u521d\u306f\u300c\u6587\u5b57\u5217\u300d\u3068\u3057\u3066\u6271\u308f\u308c\u308b</p>"},{"location":"chapter04/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8907\u6570\u306e\u5546\u54c1\u306b\u5bfe\u5fdc","text":"<p>\u8907\u6570\u306e\u5546\u54c1\u306e\u5408\u8a08\u6d88\u8cbb\u7a0e\u3092\u8a08\u7b97\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; items = [1200, 800, 1500, 3000]  # \u5546\u54c1\u4fa1\u683c\u306e\u30ea\u30b9\u30c8\n&gt;&gt;&gt; tax_rate = 0.1\n&gt;&gt;&gt; \n&gt;&gt;&gt; total_price = 0\n&gt;&gt;&gt; total_tax = 0\n&gt;&gt;&gt; \n&gt;&gt;&gt; for price in items:\n...     tax = price * tax_rate\n...     total_price += price\n...     total_tax += tax\n...     print(f\"{price}\u5186\u306e\u5546\u54c1: \u7a0e\u984d{tax}\u5186\")\n... \n1200\u5186\u306e\u5546\u54c1: \u7a0e\u984d120.0\u5186\n800\u5186\u306e\u5546\u54c1: \u7a0e\u984d80.0\u5186\n1500\u5186\u306e\u5546\u54c1: \u7a0e\u984d150.0\u5186\n3000\u5186\u306e\u5546\u54c1: \u7a0e\u984d300.0\u5186\n&gt;&gt;&gt; \n&gt;&gt;&gt; print(f\"\u5546\u54c1\u5408\u8a08: {total_price}\u5186\")\n\u5546\u54c1\u5408\u8a08: 6500\u5186\n&gt;&gt;&gt; print(f\"\u6d88\u8cbb\u7a0e\u5408\u8a08: {total_tax}\u5186\")\n\u6d88\u8cbb\u7a0e\u5408\u8a08: 650.0\u5186\n&gt;&gt;&gt; print(f\"\u652f\u6255\u7dcf\u984d: {total_price + total_tax}\u5186\")\n\u652f\u6255\u7dcf\u984d: 7150.0\u5186\n</code></pre>"},{"location":"chapter04/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u95a2\u6570\u3068\u3057\u3066\u6574\u7406","text":"<p>\u540c\u3058\u8a08\u7b97\u3092\u4f55\u5ea6\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001\u95a2\u6570\u3068\u3057\u3066\u6574\u7406\u3057\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; def calculate_tax(price, rate=0.1):\n...     \"\"\"\u6d88\u8cbb\u7a0e\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     tax = price * rate\n...     total = price + tax\n...     return tax, total\n... \n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; tax, total = calculate_tax(1000)\n&gt;&gt;&gt; print(f\"1000\u5186\u306e\u5546\u54c1: \u7a0e\u984d{tax}\u5186\u3001\u5408\u8a08{total}\u5186\")\n1000\u5186\u306e\u5546\u54c1: \u7a0e\u984d100.0\u5186\u3001\u5408\u8a081100.0\u5186\n&gt;&gt;&gt; \n&gt;&gt;&gt; tax, total = calculate_tax(2500)\n&gt;&gt;&gt; print(f\"2500\u5186\u306e\u5546\u54c1: \u7a0e\u984d{tax}\u5186\u3001\u5408\u8a08{total}\u5186\")\n2500\u5186\u306e\u5546\u54c1: \u7a0e\u984d250.0\u5186\u3001\u5408\u8a082750.0\u5186\n</code></pre> <p>\u95a2\u6570\u306e\u57fa\u672c\u69cb\u9020\uff1a <pre><code>def \u95a2\u6570\u540d(\u5f15\u6570):\n    \"\"\"\u95a2\u6570\u306e\u8aac\u660e\uff08\u7701\u7565\u53ef\u80fd\uff09\"\"\"\n    \u51e6\u7406\u5185\u5bb9\n    return \u623b\u308a\u5024\n</code></pre></p>"},{"location":"chapter04/#5","title":"\u30b9\u30c6\u30c3\u30d75\uff1a\u5b8c\u5168\u7248\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u3053\u308c\u307e\u3067\u306e\u8981\u7d20\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u5b8c\u5168\u7248\u306e\u6d88\u8cbb\u7a0e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\u3002\u65b0\u3057\u3044\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff1a</p> <pre><code># \u6d88\u8cbb\u7a0e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\ndef calculate_tax(price, rate=0.1):\n    \"\"\"\n    \u6d88\u8cbb\u7a0e\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\n\n    Args:\n        price (float): \u5546\u54c1\u4fa1\u683c\n        rate (float): \u7a0e\u7387\uff08\u30c7\u30d5\u30a9\u30eb\u30c80.1\uff09\n\n    Returns:\n        tuple: (\u7a0e\u984d, \u5408\u8a08\u91d1\u984d)\n    \"\"\"\n    tax = price * rate\n    total = price + tax\n    return tax, total\n\ndef main():\n    \"\"\"\u30e1\u30a4\u30f3\u51e6\u7406\"\"\"\n    print(\"=== \u6d88\u8cbb\u7a0e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0 ===\")\n\n    # \u5546\u54c1\u306e\u5165\u529b\n    items = []\n    while True:\n        price_str = input(\"\u5546\u54c1\u4fa1\u683c\u3092\u5165\u529b\uff08\u7d42\u4e86\u306f0\uff09: \")\n        price = float(price_str)\n\n        if price == 0:\n            break\n\n        if price &lt; 0:\n            print(\"\u6b63\u306e\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\n            continue\n\n        items.append(price)\n\n    if not items:\n        print(\"\u5546\u54c1\u304c\u5165\u529b\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\")\n        return\n\n    # \u8a08\u7b97\u3068\u8868\u793a\n    total_price = 0\n    total_tax = 0\n\n    print(\"\\n=== \u8a08\u7b97\u7d50\u679c ===\")\n    for i, price in enumerate(items, 1):\n        tax, total = calculate_tax(price)\n        total_price += price\n        total_tax += tax\n        print(f\"\u5546\u54c1{i}: {price:,.0f}\u5186 (\u7a0e\u984d: {tax:,.0f}\u5186, \u5408\u8a08: {total:,.0f}\u5186)\")\n\n    print(\"-\" * 40)\n    print(f\"\u5546\u54c1\u5408\u8a08: {total_price:,.0f}\u5186\")\n    print(f\"\u6d88\u8cbb\u7a0e\u5408\u8a08: {total_tax:,.0f}\u5186\")\n    print(f\"\u652f\u6255\u7dcf\u984d: {total_price + total_tax:,.0f}\u5186\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u65b0\u3057\u3044\u8981\u7d20\u306e\u8aac\u660e\uff1a - <code>while True:</code>\uff1a\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u308b\u307e\u3067\u7e70\u308a\u8fd4\u3057 - <code>break</code>\uff1a\u30eb\u30fc\u30d7\u304b\u3089\u629c\u3051\u308b - <code>continue</code>\uff1a\u30eb\u30fc\u30d7\u306e\u6b21\u306e\u5468\u671f\u3078 - <code>enumerate()</code>\uff1a\u756a\u53f7\u4ed8\u304d\u3067\u30eb\u30fc\u30d7 - <code>{:,.0f}</code>\uff1a\u6570\u5024\u30923\u6841\u533a\u5207\u308a\u3067\u8868\u793a - <code>if __name__ == \"__main__\":</code>\uff1a\u30d5\u30a1\u30a4\u30eb\u304c\u76f4\u63a5\u5b9f\u884c\u3055\u308c\u305f\u3068\u304d\u3060\u3051main()\u3092\u5b9f\u884c</p>"},{"location":"chapter04/#_5","title":"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u6016\u304f\u306a\u3044","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3076\u4e0a\u3067\u3001\u30a8\u30e9\u30fc\u306f\u907f\u3051\u3066\u901a\u308c\u307e\u305b\u3093\u3002\u3067\u3082\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300c\u6575\u300d\u3067\u306f\u306a\u304f\u300c\u554f\u984c\u3092\u6559\u3048\u3066\u304f\u308c\u308b\u89aa\u5207\u306a\u5148\u751f\u300d\u3067\u3059\u3002</p>"},{"location":"chapter04/#_6","title":"\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u3068\u305d\u306e\u5bfe\u51e6\u6cd5","text":"<p>1. SyntaxError\uff08\u69cb\u6587\u30a8\u30e9\u30fc\uff09</p> <pre><code>&gt;&gt;&gt; print(\"Hello World\"\n  File \"&lt;stdin&gt;\", line 1\n    print(\"Hello World\"\n                       ^\nSyntaxError: unexpected EOF while parsing\n</code></pre> <p>\u539f\u56e0\uff1a\u9589\u3058\u62ec\u5f27\u304c\u8db3\u308a\u306a\u3044 \u5bfe\u51e6\u6cd5\uff1a\u62ec\u5f27\u3092\u6b63\u3057\u304f\u9589\u3058\u308b</p> <pre><code>&gt;&gt;&gt; print(\"Hello World\")  # \u6b63\u3057\u3044\nHello World\n</code></pre> <p>2. NameError\uff08\u540d\u524d\u30a8\u30e9\u30fc\uff09</p> <pre><code>&gt;&gt;&gt; print(message)\nNameError: name 'message' is not defined\n</code></pre> <p>\u539f\u56e0\uff1a\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5909\u6570\u3092\u4f7f\u304a\u3046\u3068\u3057\u305f \u5bfe\u51e6\u6cd5\uff1a\u5909\u6570\u3092\u5148\u306b\u5b9a\u7fa9\u3059\u308b</p> <pre><code>&gt;&gt;&gt; message = \"Hello\"  # \u5909\u6570\u3092\u5b9a\u7fa9\n&gt;&gt;&gt; print(message)     # \u6b63\u3057\u3044\nHello\n</code></pre> <p>3. TypeError\uff08\u578b\u30a8\u30e9\u30fc\uff09</p> <pre><code>&gt;&gt;&gt; \"5\" + 3\nTypeError: can only concatenate str (not \"int\") to str\n</code></pre> <p>\u539f\u56e0\uff1a\u6587\u5b57\u5217\u3068\u6570\u5024\u3092\u8db3\u305d\u3046\u3068\u3057\u305f \u5bfe\u51e6\u6cd5\uff1a\u578b\u3092\u63c3\u3048\u308b</p> <pre><code>&gt;&gt;&gt; int(\"5\") + 3    # \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\n8\n&gt;&gt;&gt; \"5\" + str(3)    # \u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n'53'\n</code></pre> <p>4. ValueError\uff08\u5024\u30a8\u30e9\u30fc\uff09</p> <pre><code>&gt;&gt;&gt; int(\"hello\")\nValueError: invalid literal for int() with base 10: 'hello'\n</code></pre> <p>\u539f\u56e0\uff1a\u6570\u5024\u3067\u306a\u3044\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u305f \u5bfe\u51e6\u6cd5\uff1a\u5165\u529b\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b</p> <pre><code>&gt;&gt;&gt; text = \"hello\"\n&gt;&gt;&gt; if text.isdigit():\n...     number = int(text)\n... else:\n...     print(\"\u6570\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\")\n... \n\u6570\u5024\u3067\u306f\u3042\u308a\u307e\u305b\u3093\n</code></pre>"},{"location":"chapter04/#_7","title":"\u3010\u5b9f\u884c\u3011\u8a08\u7b97\u30df\u30b9\u3067\u30a8\u30e9\u30fc\u3092\u4f53\u9a13\u3057\u3066\u307f\u3088\u3046","text":"<p>\u610f\u56f3\u7684\u306b\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u3066\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8aad\u307f\u65b9\u3092\u7df4\u7fd2\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter04/#1_1","title":"\u7df4\u7fd21\uff1a\u69cb\u6587\u30a8\u30e9\u30fc","text":"<p>\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\uff08\u308f\u3056\u3068\u9593\u9055\u3063\u3066\u3044\u307e\u3059\uff09\uff1a</p> <pre><code>&gt;&gt;&gt; print(\"\u6d88\u8cbb\u7a0e\u8a08\u7b97\"\n</code></pre> <p>\u7d50\u679c\uff1a <pre><code>SyntaxError: unexpected EOF while parsing\n</code></pre></p> <p>\u89e3\u8aac\uff1a\u300c\u4e88\u671f\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u7d42\u7aef\u300d\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3067\u3059\u3002\u9589\u3058\u62ec\u5f27\u304c\u8db3\u308a\u306a\u3044\u3053\u3068\u3092\u6559\u3048\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter04/#2_1","title":"\u7df4\u7fd22\uff1a\u5909\u6570\u540d\u306e\u9593\u9055\u3044","text":"<pre><code>&gt;&gt;&gt; price = 1000\n&gt;&gt;&gt; print(prise)  # 'price'\u306e\u30b9\u30da\u30eb\u30df\u30b9\n</code></pre> <p>\u7d50\u679c\uff1a <pre><code>NameError: name 'prise' is not defined\n</code></pre></p> <p>\u89e3\u8aac\uff1a\u300cprise\u300d\u3068\u3044\u3046\u540d\u524d\u306e\u5909\u6570\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002</p>"},{"location":"chapter04/#3_1","title":"\u7df4\u7fd23\uff1a\u578b\u306e\u9593\u9055\u3044","text":"<pre><code>&gt;&gt;&gt; price = \"1000\"  # \u6587\u5b57\u5217\u3068\u3057\u3066\u5b9a\u7fa9\n&gt;&gt;&gt; tax = price * 0.1  # \u6587\u5b57\u5217\u306b\u6570\u5024\u3092\u639b\u3051\u3088\u3046\u3068\u3059\u308b\n</code></pre> <p>\u7d50\u679c\uff1a <pre><code>TypeError: can't multiply sequence by non-int of type 'float'\n</code></pre></p> <p>\u89e3\u8aac\uff1a\u6587\u5b57\u5217\u306b\u306f\u6574\u6570\u4ee5\u5916\u306e\u6570\u5024\u3092\u639b\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002</p>"},{"location":"chapter04/#4_1","title":"\u7df4\u7fd24\uff1a\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc","text":"<pre><code>&gt;&gt;&gt; result = 10 / 0\n</code></pre> <p>\u7d50\u679c\uff1a <pre><code>ZeroDivisionError: division by zero\n</code></pre></p> <p>\u89e3\u8aac\uff1a\u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u3059\u3002</p>"},{"location":"chapter04/#_8","title":"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u8aad\u307f\u65b9","text":"<p>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u306f\u91cd\u8981\u306a\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>Traceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\nNameError: name 'prise' is not defined\n</code></pre> <p>\u69cb\u6210\u8981\u7d20\uff1a 1. Traceback\uff1a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u6240\u306e\u5c65\u6b74 2. File, line\uff1a\u3069\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u4f55\u884c\u76ee\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u304b 3. \u30a8\u30e9\u30fc\u306e\u7a2e\u985e\uff1aNameError, TypeError \u306a\u3069 4. \u30a8\u30e9\u30fc\u306e\u8a73\u7d30\uff1a\u5177\u4f53\u7684\u306b\u4f55\u304c\u554f\u984c\u306a\u306e\u304b</p>"},{"location":"chapter04/#_9","title":"\u30c7\u30fc\u30bf\u578b\u306e\u57fa\u672c","text":"<p>\u3053\u308c\u307e\u3067\u306e\u4f8b\u3067\u3001\u6570\u5024\u3084\u6587\u5b57\u5217\u306a\u3069\u3001\u7570\u306a\u308b\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3092\u6271\u3063\u3066\u304d\u307e\u3057\u305f\u3002Python\u3067\u306f\u3001\u30c7\u30fc\u30bf\u306e\u7a2e\u985e\u3092\u30c7\u30fc\u30bf\u578b\u3068\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002</p>"},{"location":"chapter04/#_10","title":"\u4e3b\u8981\u306a\u30c7\u30fc\u30bf\u578b","text":"<p>1. \u6574\u6570\u578b\uff08int\uff09 <pre><code>&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; type(age)\n&lt;class 'int'&gt;\n</code></pre></p> <p>2. \u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\uff08float\uff09 <pre><code>&gt;&gt;&gt; price = 1500.50\n&gt;&gt;&gt; type(price)\n&lt;class 'float'&gt;\n</code></pre></p> <p>3. \u6587\u5b57\u5217\u578b\uff08str\uff09 <pre><code>&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; type(name)\n&lt;class 'str'&gt;\n</code></pre></p> <p>4. \u8ad6\u7406\u578b\uff08bool\uff09 <pre><code>&gt;&gt;&gt; is_student = True\n&gt;&gt;&gt; type(is_student)\n&lt;class 'bool'&gt;\n</code></pre></p>"},{"location":"chapter04/#_11","title":"\u578b\u306e\u5909\u63db","text":"<p>\u7570\u306a\u308b\u578b\u306e\u9593\u3067\u5024\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u306e\u5909\u63db\n&gt;&gt;&gt; price_str = \"1500\"\n&gt;&gt;&gt; price_int = int(price_str)\n&gt;&gt;&gt; price_float = float(price_str)\n&gt;&gt;&gt; print(price_int, price_float)\n1500 1500.0\n\n&gt;&gt;&gt; # \u6570\u5024\u304b\u3089\u6587\u5b57\u5217\u3078\u306e\u5909\u63db\n&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; age_str = str(age)\n&gt;&gt;&gt; print(f\"\u79c1\u306f{age_str}\u6b73\u3067\u3059\")\n\u79c1\u306f25\u6b73\u3067\u3059\n\n&gt;&gt;&gt; # \u8ad6\u7406\u578b\u3078\u306e\u5909\u63db\n&gt;&gt;&gt; bool(1)    # 0\u4ee5\u5916\u306f True\nTrue\n&gt;&gt;&gt; bool(0)    # 0\u306f False\nFalse\n&gt;&gt;&gt; bool(\"\")   # \u7a7a\u6587\u5b57\u5217\u306f False\nFalse\n&gt;&gt;&gt; bool(\"Hello\")  # \u7a7a\u3067\u306a\u3044\u6587\u5b57\u5217\u306f True\nTrue\n</code></pre>"},{"location":"chapter04/#_12","title":"\u578b\u306e\u78ba\u8a8d\u65b9\u6cd5","text":"<pre><code>&gt;&gt;&gt; value = 3.14\n&gt;&gt;&gt; print(type(value))\n&lt;class 'float'&gt;\n&gt;&gt;&gt; print(isinstance(value, float))\nTrue\n&gt;&gt;&gt; print(isinstance(value, int))\nFalse\n</code></pre>"},{"location":"chapter04/#_13","title":"\u5909\u6570\u306e\u57fa\u672c","text":"<p>\u3053\u308c\u307e\u3067\u4f55\u5ea6\u3082\u4f7f\u3063\u3066\u304d\u305f\u5909\u6570\u306b\u3064\u3044\u3066\u3001\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter04/#_14","title":"\u5909\u6570\u3068\u306f","text":"<p>\u5909\u6570\u306f\u3001\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306e\u300c\u540d\u524d\u4ed8\u304d\u306e\u7bb1\u300d\u3067\u3059\u3002</p> <pre><code>&gt;&gt;&gt; # \u5909\u6570\u306e\u5b9a\u7fa9\n&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; height = 170.5\n</code></pre>"},{"location":"chapter04/#_15","title":"\u5909\u6570\u540d\u306e\u30eb\u30fc\u30eb","text":"<p>\u4f7f\u3048\u308b\u6587\u5b57\uff1a - \u82f1\u5b57\uff08a-z, A-Z\uff09 - \u6570\u5b57\uff080-9\uff09\u203b\u5148\u982d\u306b\u306f\u4f7f\u3048\u306a\u3044 - \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\uff08_\uff09</p> <p>\u826f\u3044\u5909\u6570\u540d\u306e\u4f8b\uff1a <pre><code>user_name = \"\u7530\u4e2d\u592a\u90ce\"\ntotal_price = 1500\nis_student = True\nstudent_count = 30\n</code></pre></p> <p>\u60aa\u3044\u5909\u6570\u540d\u306e\u4f8b\uff1a <pre><code># \u30c0\u30e1\u306a\u4f8b\u3068\u305d\u306e\u7406\u7531\n2name = \"\u7530\u4e2d\"      # \u6570\u5b57\u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u308b\nuser-name = \"\u7530\u4e2d\"  # \u30cf\u30a4\u30d5\u30f3\u306f\u4f7f\u3048\u306a\u3044\nuser name = \"\u7530\u4e2d\"  # \u30b9\u30da\u30fc\u30b9\u306f\u4f7f\u3048\u306a\u3044\ndef = \"\u5b9a\u7fa9\"        # Python\u306e\u4e88\u7d04\u8a9e\u306f\u4f7f\u3048\u306a\u3044\n</code></pre></p>"},{"location":"chapter04/#_16","title":"\u5909\u6570\u306e\u547d\u540d\u898f\u5247\uff08\u6163\u7fd2\uff09","text":"<p>Python\u3067\u306f\u4ee5\u4e0b\u306e\u547d\u540d\u898f\u5247\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <p>1. \u30b9\u30cd\u30fc\u30af\u30b1\u30fc\u30b9\uff08\u63a8\u5968\uff09 <pre><code>user_name = \"\u7530\u4e2d\u592a\u90ce\"\ntotal_price = 1500\nmax_retry_count = 3\n</code></pre></p> <p>2. \u610f\u5473\u306e\u3042\u308b\u540d\u524d\u3092\u4ed8\u3051\u308b <pre><code># \u826f\u3044\u4f8b\nstudent_count = 30\naverage_score = 85.5\n\n# \u60aa\u3044\u4f8b\nx = 30\ny = 85.5\n</code></pre></p> <p>3. \u5b9a\u6570\u306f\u5927\u6587\u5b57 <pre><code>TAX_RATE = 0.1\nMAX_STUDENTS = 100\nPI = 3.14159\n</code></pre></p>"},{"location":"chapter04/#python_2","title":"\u307e\u3068\u3081\uff1aPython\u306e\u57fa\u672c\u64cd\u4f5c","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter04/#_17","title":"\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u6d3b\u7528","text":"<ul> <li>\u4e00\u884c\u305a\u3064\u5b9f\u884c\u3057\u3066\u5373\u5ea7\u306b\u7d50\u679c\u3092\u78ba\u8a8d</li> <li>\u8a08\u7b97\u6a5f\u4ee3\u308f\u308a\u306b\u6c17\u8efd\u306b\u4f7f\u3048\u308b</li> <li>\u5b66\u7fd2\u3084\u30c6\u30b9\u30c8\u306b\u6700\u9069</li> </ul>"},{"location":"chapter04/#_18","title":"\u57fa\u672c\u7684\u306a\u8a08\u7b97","text":"<ul> <li>\u56db\u5247\u6f14\u7b97\uff08+, -, *, /\uff09</li> <li>\u6574\u6570\u9664\u7b97\uff08//\uff09\u3001\u4f59\u308a\uff08%\uff09\u3001\u7d2f\u4e57\uff08**\uff09</li> <li>\u512a\u5148\u9806\u4f4d\u306f\u6570\u5b66\u3068\u540c\u3058</li> </ul>"},{"location":"chapter04/#_19","title":"\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u4f5c\u6210","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u306e\u53d7\u3051\u53d6\u308a\uff08input\uff09</li> <li>\u578b\u5909\u63db\uff08int, float, str\uff09</li> <li>\u95a2\u6570\u306e\u5b9a\u7fa9\u3068\u4f7f\u7528</li> <li>\u30a8\u30e9\u30fc\u51e6\u7406\u306e\u57fa\u672c</li> </ul>"},{"location":"chapter04/#_20","title":"\u30a8\u30e9\u30fc\u3068\u306e\u4ed8\u304d\u5408\u3044\u65b9","text":"<ul> <li>\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u554f\u984c\u89e3\u6c7a\u306e\u30d2\u30f3\u30c8</li> <li>\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u306e\u7a2e\u985e\u3068\u5bfe\u51e6\u6cd5</li> <li>\u30a8\u30e9\u30fc\u3092\u6050\u308c\u305a\u306b\u5b9f\u9a13\u3059\u308b\u3053\u3068\u304c\u5927\u5207</li> </ul>"},{"location":"chapter04/#_21","title":"\u30c7\u30fc\u30bf\u578b\u3068\u5909\u6570","text":"<ul> <li>\u6574\u6570\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u3001\u6587\u5b57\u5217\u3001\u8ad6\u7406\u578b</li> <li>\u578b\u5909\u63db\u306e\u65b9\u6cd5</li> <li>\u5909\u6570\u306e\u547d\u540d\u898f\u5247</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u3082\u3063\u3068\u8907\u96d1\u306a\u8a08\u7b97\u3084\u6570\u5024\u51e6\u7406\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u30022\u9032\u6570\u308416\u9032\u6570\u3068\u3044\u3063\u305f\u7570\u306a\u308b\u6570\u5024\u8868\u73fe\u3084\u3001\u8a08\u7b97\u306e\u512a\u5148\u9806\u4f4d\u306b\u3064\u3044\u3066\u3088\u308a\u8a73\u3057\u304f\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter05/","title":"\u7b2c5\u7ae0\uff1a\u6570\u306e\u4e16\u754c\u3067\u904a\u307c\u3046","text":"<p>\u524d\u306e\u7ae0\u3067\u57fa\u672c\u7684\u306a\u8a08\u7b97\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u6570\u306e\u4e16\u754c\u3092\u3082\u3063\u3068\u6df1\u304f\u63a2\u691c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6574\u6570\u3068\u5c0f\u6570\u306e\u9055\u3044\u3001\u5927\u304d\u306a\u6570\u3084\u5c0f\u3055\u306a\u6570\u306e\u6271\u3044\u65b9\u3001\u305d\u3057\u3066\u79c1\u305f\u3061\u304c\u666e\u6bb5\u4f7f\u304610\u9032\u6570\u4ee5\u5916\u306e\u6570\u5024\u8868\u73fe\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u5b9f\u969b\u306b\u5bb6\u8a08\u7c3f\u306e\u8a08\u7b97\u3084\u3001\u65e5\u672c\u306e\u4eba\u53e3\u306e\u3088\u3046\u306a\u5927\u304d\u306a\u6570\u3092\u6271\u3044\u306a\u304c\u3089\u3001Python\u306e\u6570\u5024\u51e6\u7406\u80fd\u529b\u3092\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter05/#_1","title":"\u6574\u6570\u3068\u5c0f\u6570\u306e\u9055\u3044","text":""},{"location":"chapter05/#_2","title":"\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e2d\u3067\u306e\u6570\u306e\u8868\u73fe","text":"<p>\u4eba\u9593\u306b\u3068\u3063\u3066\u300c\u6570\u300d\u306f\u300c\u6570\u300d\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u4e2d\u3067\u306f\u6574\u6570\u3068\u5c0f\u6570\u306f\u5168\u304f\u9055\u3046\u65b9\u6cd5\u3067\u4fdd\u5b58\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u6574\u6570\uff08int\uff09\u306e\u7279\u5fb4\uff1a - \u5c0f\u6570\u70b9\u304c\u306a\u3044\u6570\uff08..., -2, -1, 0, 1, 2, ...\uff09 - \u6b63\u78ba\u306a\u5024\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b - \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u6bd4\u8f03\u7684\u5c11\u306a\u3044 - \u8a08\u7b97\u304c\u9ad8\u901f</p> <p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff08float\uff09\u306e\u7279\u5fb4\uff1a - \u5c0f\u6570\u70b9\u304c\u3042\u308b\u6570\uff083.14, -2.5, 0.0 \u306a\u3069\uff09 - \u8fd1\u4f3c\u5024\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\uff08\u91cd\u8981\uff01\uff09 - \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u591a\u3044 - \u8a08\u7b97\u306b\u6642\u9593\u304c\u304b\u304b\u308b</p>"},{"location":"chapter05/#_3","title":"\u5b9f\u969b\u306b\u8a66\u3057\u3066\u307f\u3088\u3046","text":"<pre><code>&gt;&gt;&gt; # \u6574\u6570\u306e\u4f8b\n&gt;&gt;&gt; students = 30\n&gt;&gt;&gt; print(type(students))\n&lt;class 'int'&gt;\n\n&gt;&gt;&gt; # \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u4f8b\n&gt;&gt;&gt; average_score = 85.5\n&gt;&gt;&gt; print(type(average_score))\n&lt;class 'float'&gt;\n\n&gt;&gt;&gt; # \u6574\u6570\u3067\u3082\u5272\u308a\u7b97\u3059\u308b\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u306a\u308b\n&gt;&gt;&gt; result = 10 / 2\n&gt;&gt;&gt; print(result, type(result))\n5.0 &lt;class 'float'&gt;\n\n&gt;&gt;&gt; # \u6574\u6570\u9664\u7b97\u3092\u4f7f\u3046\u3068\u6574\u6570\u306e\u307e\u307e\n&gt;&gt;&gt; result = 10 // 2\n&gt;&gt;&gt; print(result, type(result))\n5 &lt;class 'int'&gt;\n</code></pre>"},{"location":"chapter05/#_4","title":"\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u843d\u3068\u3057\u7a74","text":"<p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u8fd1\u4f3c\u5024\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\u305f\u3081\u3001\u6642\u3005\u4e88\u60f3\u5916\u306e\u7d50\u679c\u306b\u306a\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; 0.1 + 0.2\n0.30000000000000004\n\n&gt;&gt;&gt; # \u3053\u308c\u306f\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u4ed5\u69d8\u3067\u3059\uff01\n&gt;&gt;&gt; # \u6b63\u78ba\u306a\u5c0f\u6570\u8a08\u7b97\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f...\n&gt;&gt;&gt; from decimal import Decimal\n&gt;&gt;&gt; result = Decimal('0.1') + Decimal('0.2')\n&gt;&gt;&gt; print(result)\n0.3\n</code></pre> <p>\u304a\u91d1\u306e\u8a08\u7b97\u3067\u306f\u8981\u6ce8\u610f\uff1a <pre><code>&gt;&gt;&gt; # \u5371\u967a\u306a\u4f8b\n&gt;&gt;&gt; price = 0.1  # 10\u5186\n&gt;&gt;&gt; quantity = 3\n&gt;&gt;&gt; total = price * quantity\n&gt;&gt;&gt; print(total)\n0.30000000000000004\n\n&gt;&gt;&gt; # \u5b89\u5168\u306a\u65b9\u6cd5\n&gt;&gt;&gt; price_yen = 10  # \u5186\u5358\u4f4d\u3067\u6574\u6570\u3068\u3057\u3066\u6271\u3046\n&gt;&gt;&gt; quantity = 3\n&gt;&gt;&gt; total_yen = price_yen * quantity\n&gt;&gt;&gt; print(f\"{total_yen}\u5186\")\n30\u5186\n</code></pre></p>"},{"location":"chapter05/#_5","title":"\u3010\u5b9f\u884c\u3011\u5bb6\u8a08\u7c3f\u306e\u8a08\u7b97\uff08\u53ce\u5165\u30fb\u652f\u51fa\u30fb\u6b8b\u9ad8\uff09","text":"<p>\u5b9f\u7528\u7684\u306a\u5bb6\u8a08\u7c3f\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u6574\u6570\u3068\u5c0f\u6570\u306e\u6271\u3044\u3092\u7df4\u7fd2\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter05/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u5bb6\u8a08\u7c3f","text":"<pre><code>&gt;&gt;&gt; # \u6708\u306e\u53ce\u5165\u3068\u652f\u51fa\n&gt;&gt;&gt; salary = 250000      # \u7d66\u6599\n&gt;&gt;&gt; part_time = 50000    # \u30a2\u30eb\u30d0\u30a4\u30c8\n&gt;&gt;&gt; total_income = salary + part_time\n\n&gt;&gt;&gt; # \u652f\u51fa\n&gt;&gt;&gt; rent = 80000         # \u5bb6\u8cc3\n&gt;&gt;&gt; food = 45000         # \u98df\u8cbb\n&gt;&gt;&gt; utilities = 15000    # \u5149\u71b1\u8cbb\n&gt;&gt;&gt; transport = 12000    # \u4ea4\u901a\u8cbb\n&gt;&gt;&gt; others = 25000       # \u305d\u306e\u4ed6\n\n&gt;&gt;&gt; total_expenses = rent + food + utilities + transport + others\n&gt;&gt;&gt; balance = total_income - total_expenses\n\n&gt;&gt;&gt; print(f\"\u53ce\u5165\u5408\u8a08: {total_income:,}\u5186\")\n\u53ce\u5165\u5408\u8a08: 300,000\u5186\n&gt;&gt;&gt; print(f\"\u652f\u51fa\u5408\u8a08: {total_expenses:,}\u5186\")\n\u652f\u51fa\u5408\u8a08: 177,000\u5186\n&gt;&gt;&gt; print(f\"\u6b8b\u9ad8: {balance:,}\u5186\")\n\u6b8b\u9ad8: 123,000\u5186\n</code></pre>"},{"location":"chapter05/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u8907\u6570\u6708\u306e\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; # 3\u30f6\u6708\u5206\u306e\u5bb6\u8a08\u7c3f\u30c7\u30fc\u30bf\n&gt;&gt;&gt; monthly_data = [\n...     {\"month\": \"1\u6708\", \"income\": 300000, \"expenses\": 177000},\n...     {\"month\": \"2\u6708\", \"income\": 285000, \"expenses\": 190000},\n...     {\"month\": \"3\u6708\", \"income\": 320000, \"expenses\": 165000}\n... ]\n\n&gt;&gt;&gt; total_income = 0\n&gt;&gt;&gt; total_expenses = 0\n&gt;&gt;&gt; \n&gt;&gt;&gt; print(\"=== \u6708\u5225\u5bb6\u8a08\u7c3f ===\")\n&gt;&gt;&gt; for data in monthly_data:\n...     month = data[\"month\"]\n...     income = data[\"income\"]\n...     expenses = data[\"expenses\"]\n...     balance = income - expenses\n...     \n...     total_income += income\n...     total_expenses += expenses\n...     \n...     print(f\"{month}: \u53ce\u5165{income:,}\u5186, \u652f\u51fa{expenses:,}\u5186, \u6b8b\u9ad8{balance:,}\u5186\")\n... \n=== \u6708\u5225\u5bb6\u8a08\u7c3f ===\n1\u6708: \u53ce\u5165300,000\u5186, \u652f\u51fa177,000\u5186, \u6b8b\u9ad8123,000\u5186\n2\u6708: \u53ce\u5165285,000\u5186, \u652f\u51fa190,000\u5186, \u6b8b\u9ad895,000\u5186\n3\u6708: \u53ce\u5165320,000\u5186, \u652f\u51fa165,000\u5186, \u6b8b\u9ad8155,000\u5186\n\n&gt;&gt;&gt; total_balance = total_income - total_expenses\n&gt;&gt;&gt; average_income = total_income / len(monthly_data)\n&gt;&gt;&gt; average_expenses = total_expenses / len(monthly_data)\n\n&gt;&gt;&gt; print(f\"\\n=== 3\u30f6\u6708\u9593\u306e\u5408\u8a08 ===\")\n&gt;&gt;&gt; print(f\"\u7dcf\u53ce\u5165: {total_income:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u7dcf\u652f\u51fa: {total_expenses:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u7dcf\u6b8b\u9ad8: {total_balance:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u6708\u5e73\u5747\u53ce\u5165: {average_income:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u6708\u5e73\u5747\u652f\u51fa: {average_expenses:,.0f}\u5186\")\n</code></pre>"},{"location":"chapter05/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8caf\u91d1\u76ee\u6a19\u306e\u8a08\u7b97","text":"<pre><code>&gt;&gt;&gt; # \u8caf\u91d1\u76ee\u6a19\u306e\u8a2d\u5b9a\n&gt;&gt;&gt; savings_goal = 1000000  # 100\u4e07\u5186\n&gt;&gt;&gt; monthly_savings = 50000  # \u67085\u4e07\u5186\n\n&gt;&gt;&gt; months_needed = savings_goal / monthly_savings\n&gt;&gt;&gt; years_needed = months_needed / 12\n\n&gt;&gt;&gt; print(f\"\u8caf\u91d1\u76ee\u6a19: {savings_goal:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u6708\u9593\u8caf\u91d1\u984d: {monthly_savings:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u9054\u6210\u307e\u3067: {months_needed:.1f}\u30f6\u6708 ({years_needed:.1f}\u5e74)\")\n\u8caf\u91d1\u76ee\u6a19: 1,000,000\u5186\n\u6708\u9593\u8caf\u91d1\u984d: 50,000\u5186\n\u9054\u6210\u307e\u3067: 20.0\u30f6\u6708 (1.7\u5e74)\n\n&gt;&gt;&gt; # \u5b9f\u969b\u306e\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n&gt;&gt;&gt; current_savings = 0\n&gt;&gt;&gt; month = 0\n\n&gt;&gt;&gt; print(\"\\n=== \u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3 ===\")\n&gt;&gt;&gt; while current_savings &lt; savings_goal:\n...     month += 1\n...     current_savings += monthly_savings\n...     print(f\"{month}\u30f6\u6708\u76ee: {current_savings:,}\u5186\")\n...     if month &gt;= 24:  # 2\u5e74\u3067\u6253\u3061\u5207\u308a\n...         break\n... \n=== \u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3 ===\n1\u30f6\u6708\u76ee: 50,000\u5186\n2\u30f6\u6708\u76ee: 100,000\u5186\n3\u30f6\u6708\u76ee: 150,000\u5186\n...\uff08\u4e2d\u7565\uff09...\n20\u30f6\u6708\u76ee: 1,000,000\u5186\n</code></pre>"},{"location":"chapter05/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b8c\u5168\u7248\u5bb6\u8a08\u7c3f\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3067\u304d\u308b\u5b8c\u5168\u7248\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code># \u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\nclass HouseholdBudget:\n    def __init__(self):\n        self.monthly_data = []\n\n    def add_month(self, month, income, expenses):\n        \"\"\"\u6708\u306e\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\"\"\"\n        data = {\n            \"month\": month,\n            \"income\": income,\n            \"expenses\": expenses,\n            \"balance\": income - expenses\n        }\n        self.monthly_data.append(data)\n\n    def calculate_totals(self):\n        \"\"\"\u5408\u8a08\u5024\u3092\u8a08\u7b97\"\"\"\n        if not self.monthly_data:\n            return 0, 0, 0\n\n        total_income = sum(data[\"income\"] for data in self.monthly_data)\n        total_expenses = sum(data[\"expenses\"] for data in self.monthly_data)\n        total_balance = total_income - total_expenses\n\n        return total_income, total_expenses, total_balance\n\n    def calculate_averages(self):\n        \"\"\"\u5e73\u5747\u5024\u3092\u8a08\u7b97\"\"\"\n        if not self.monthly_data:\n            return 0, 0\n\n        total_income, total_expenses, _ = self.calculate_totals()\n        count = len(self.monthly_data)\n\n        return total_income / count, total_expenses / count\n\n    def print_summary(self):\n        \"\"\"\u30b5\u30de\u30ea\u30fc\u3092\u8868\u793a\"\"\"\n        print(\"=== \u5bb6\u8a08\u7c3f\u30b5\u30de\u30ea\u30fc ===\")\n\n        for data in self.monthly_data:\n            print(f\"{data['month']}: \u53ce\u5165{data['income']:,}\u5186, \"\n                  f\"\u652f\u51fa{data['expenses']:,}\u5186, \"\n                  f\"\u6b8b\u9ad8{data['balance']:,}\u5186\")\n\n        total_income, total_expenses, total_balance = self.calculate_totals()\n        avg_income, avg_expenses = self.calculate_averages()\n\n        print(f\"\\n=== \u5408\u8a08 ===\")\n        print(f\"\u7dcf\u53ce\u5165: {total_income:,}\u5186\")\n        print(f\"\u7dcf\u652f\u51fa: {total_expenses:,}\u5186\")\n        print(f\"\u7dcf\u6b8b\u9ad8: {total_balance:,}\u5186\")\n        print(f\"\u6708\u5e73\u5747\u53ce\u5165: {avg_income:,.0f}\u5186\")\n        print(f\"\u6708\u5e73\u5747\u652f\u51fa: {avg_expenses:,.0f}\u5186\")\n\n# \u4f7f\u7528\u4f8b\nbudget = HouseholdBudget()\nbudget.add_month(\"1\u6708\", 300000, 177000)\nbudget.add_month(\"2\u6708\", 285000, 190000)\nbudget.add_month(\"3\u6708\", 320000, 165000)\nbudget.print_summary()\n</code></pre>"},{"location":"chapter05/#_6","title":"\u5927\u304d\u306a\u6570\u3001\u5c0f\u3055\u306a\u6570","text":""},{"location":"chapter05/#python","title":"Python\u306e\u6570\u5024\u306e\u7bc4\u56f2","text":"<p>\u6574\u6570\uff08int\uff09\uff1a <pre><code>&gt;&gt;&gt; # Python\u306e\u6574\u6570\u306f\u4efb\u610f\u7cbe\u5ea6\uff01\n&gt;&gt;&gt; big_number = 2 ** 100\n&gt;&gt;&gt; print(big_number)\n1267650600228229401496703205376\n\n&gt;&gt;&gt; # \u3055\u3089\u306b\u5927\u304d\u306a\u6570\n&gt;&gt;&gt; huge_number = 2 ** 1000\n&gt;&gt;&gt; print(len(str(huge_number)))  # \u6841\u6570\n302\n</code></pre></p> <p>\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\uff08float\uff09\uff1a <pre><code>&gt;&gt;&gt; import sys\n&gt;&gt;&gt; print(f\"\u6700\u5927\u5024: {sys.float_info.max}\")\n\u6700\u5927\u5024: 1.7976931348623157e+308\n\n&gt;&gt;&gt; print(f\"\u6700\u5c0f\u5024: {sys.float_info.min}\")\n\u6700\u5c0f\u5024: 2.2250738585072014e-308\n\n&gt;&gt;&gt; # \u30aa\u30fc\u30d0\u30fc\u30d5\u30ed\u30fc\u306e\u4f8b\n&gt;&gt;&gt; big_float = 1e308 * 10\n&gt;&gt;&gt; print(big_float)\ninf\n\n&gt;&gt;&gt; # \u30a2\u30f3\u30c0\u30fc\u30d5\u30ed\u30fc\u306e\u4f8b\n&gt;&gt;&gt; small_float = 1e-324 / 10\n&gt;&gt;&gt; print(small_float)\n0.0\n</code></pre></p>"},{"location":"chapter05/#_7","title":"\u79d1\u5b66\u7684\u8a18\u6cd5\uff08\u6307\u6570\u8868\u8a18\uff09","text":"<p>\u5927\u304d\u306a\u6570\u3084\u5c0f\u3055\u306a\u6570\u306f\u3001\u79d1\u5b66\u7684\u8a18\u6cd5\u3067\u8868\u73fe\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u79d1\u5b66\u7684\u8a18\u6cd5\u306e\u4f8b\n&gt;&gt;&gt; speed_of_light = 3e8  # 3 \u00d7 10^8 m/s\n&gt;&gt;&gt; print(speed_of_light)\n300000000.0\n\n&gt;&gt;&gt; # \u975e\u5e38\u306b\u5c0f\u3055\u306a\u6570\n&gt;&gt;&gt; planck_constant = 6.626e-34  # \u30d7\u30e9\u30f3\u30af\u5b9a\u6570\n&gt;&gt;&gt; print(planck_constant)\n6.626e-34\n\n&gt;&gt;&gt; # \u8a08\u7b97\u4f8b\n&gt;&gt;&gt; distance_to_sun = 1.5e11  # \u5730\u7403-\u592a\u967d\u9593\u8ddd\u96e2\uff08\u30e1\u30fc\u30c8\u30eb\uff09\n&gt;&gt;&gt; time_for_light = distance_to_sun / speed_of_light\n&gt;&gt;&gt; print(f\"\u592a\u967d\u306e\u5149\u304c\u5730\u7403\u306b\u5c4a\u304f\u307e\u3067: {time_for_light:.1f}\u79d2\")\n\u592a\u967d\u306e\u5149\u304c\u5730\u7403\u306b\u5c4a\u304f\u307e\u3067: 500.0\u79d2\n</code></pre>"},{"location":"chapter05/#_8","title":"\u6570\u5024\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c6\u30af\u30cb\u30c3\u30af","text":"<pre><code>&gt;&gt;&gt; number = 1234567.89\n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n&gt;&gt;&gt; print(f\"{number:,}\")        # 3\u6841\u533a\u5207\u308a\n1,234,567.89\n\n&gt;&gt;&gt; print(f\"{number:.2f}\")      # \u5c0f\u6570\u70b9\u4ee5\u4e0b2\u6841\n1234567.89\n\n&gt;&gt;&gt; print(f\"{number:,.2f}\")     # 3\u6841\u533a\u5207\u308a + \u5c0f\u6570\u70b9\u4ee5\u4e0b2\u6841\n1,234,567.89\n\n&gt;&gt;&gt; print(f\"{number:.2e}\")      # \u79d1\u5b66\u7684\u8a18\u6cd5\n1.23e+06\n\n&gt;&gt;&gt; # \u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\n&gt;&gt;&gt; ratio = 0.1234\n&gt;&gt;&gt; print(f\"{ratio:.1%}\")\n12.3%\n</code></pre>"},{"location":"chapter05/#_9","title":"\u3010\u5b9f\u884c\u3011\u65e5\u672c\u306e\u4eba\u53e3\u3084\u56fd\u571f\u9762\u7a4d\u3092\u3044\u308d\u3093\u306a\u9032\u6570\u3067\u8868\u73fe","text":"<p>\u8eab\u8fd1\u3067\u5927\u304d\u306a\u6570\u3092\u4f7f\u3063\u3066\u3001\u7570\u306a\u308b\u9032\u6570\u8868\u73fe\u3092\u5b66\u3093\u3067\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter05/#_10","title":"\u65e5\u672c\u306e\u57fa\u672c\u30c7\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; # \u65e5\u672c\u306e\u57fa\u672c\u30c7\u30fc\u30bf\uff082023\u5e74\u63a8\u5b9a\uff09\n&gt;&gt;&gt; population = 125000000      # \u4eba\u53e3\uff08\u7d041\u51042500\u4e07\u4eba\uff09\n&gt;&gt;&gt; area_km2 = 377975          # \u56fd\u571f\u9762\u7a4d\uff08\u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\uff09\n&gt;&gt;&gt; gdp_trillion = 4.2         # GDP\uff08\u5146\u30c9\u30eb\uff09\n\n&gt;&gt;&gt; print(f\"\u65e5\u672c\u306e\u4eba\u53e3: {population:,}\u4eba\")\n\u65e5\u672c\u306e\u4eba\u53e3: 125,000,000\u4eba\n&gt;&gt;&gt; print(f\"\u65e5\u672c\u306e\u56fd\u571f\u9762\u7a4d: {area_km2:,}\u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\")\n\u65e5\u672c\u306e\u56fd\u571f\u9762\u7a4d: 377,975\u5e73\u65b9\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\n&gt;&gt;&gt; print(f\"\u65e5\u672c\u306eGDP: {gdp_trillion}\u5146\u30c9\u30eb\")\n\u65e5\u672c\u306eGDP: 4.2\u5146\u30c9\u30eb\n</code></pre>"},{"location":"chapter05/#10","title":"10\u9032\u6570\u304b\u3089\u4ed6\u306e\u9032\u6570\u3078\u306e\u5909\u63db","text":"<p>Python \u306b\u306f\u9032\u6570\u5909\u63db\u306e\u4fbf\u5229\u306a\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; number = 255\n\n&gt;&gt;&gt; # 2\u9032\u6570\u8868\u73fe\n&gt;&gt;&gt; binary = bin(number)\n&gt;&gt;&gt; print(f\"10\u9032\u6570 {number} \u306f 2\u9032\u6570\u3067 {binary}\")\n10\u9032\u6570 255 \u306f 2\u9032\u6570\u3067 0b11111111\n\n&gt;&gt;&gt; # 8\u9032\u6570\u8868\u73fe  \n&gt;&gt;&gt; octal = oct(number)\n&gt;&gt;&gt; print(f\"10\u9032\u6570 {number} \u306f 8\u9032\u6570\u3067 {octal}\")\n10\u9032\u6570 255 \u306f 8\u9032\u6570\u3067 0o377\n\n&gt;&gt;&gt; # 16\u9032\u6570\u8868\u73fe\n&gt;&gt;&gt; hexadecimal = hex(number)\n&gt;&gt;&gt; print(f\"10\u9032\u6570 {number} \u306f 16\u9032\u6570\u3067 {hexadecimal}\")\n10\u9032\u6570 255 \u306f 16\u9032\u6570\u3067 0xff\n</code></pre>"},{"location":"chapter05/#_11","title":"\u65e5\u672c\u306e\u4eba\u53e3\u3092\u5404\u9032\u6570\u3067\u8868\u73fe","text":"<pre><code>&gt;&gt;&gt; population = 125000000\n\n&gt;&gt;&gt; print(f\"\u65e5\u672c\u306e\u4eba\u53e3: {population:,}\u4eba\")\n&gt;&gt;&gt; print(f\"2\u9032\u6570: {bin(population)}\")\n&gt;&gt;&gt; print(f\"8\u9032\u6570: {oct(population)}\")\n&gt;&gt;&gt; print(f\"16\u9032\u6570: {hex(population)}\")\n\n\u65e5\u672c\u306e\u4eba\u53e3: 125,000,000\u4eba\n2\u9032\u6570: 0b111011101011111010000000000\n8\u9032\u6570: 0o735372000\n16\u9032\u6570: 0x7735f400\n\n&gt;&gt;&gt; # 2\u9032\u6570\u306e\u6841\u6570\u3092\u78ba\u8a8d\n&gt;&gt;&gt; binary_str = bin(population)[2:]  # 0b\u3092\u9664\u53bb\n&gt;&gt;&gt; print(f\"2\u9032\u6570\u306e\u6841\u6570: {len(binary_str)}\u6841\")\n2\u9032\u6570\u306e\u6841\u6570: 27\u6841\n</code></pre>"},{"location":"chapter05/#_12","title":"\u5404\u9032\u6570\u3067\u306e\u8a08\u7b97\u4f8b","text":"<pre><code>&gt;&gt;&gt; # 16\u9032\u6570\u3067\u8272\u3092\u8868\u73fe\uff08RGB\uff09\n&gt;&gt;&gt; red = 0xFF     # 255\n&gt;&gt;&gt; green = 0x80   # 128  \n&gt;&gt;&gt; blue = 0x00    # 0\n\n&gt;&gt;&gt; color = (red &lt;&lt; 16) + (green &lt;&lt; 8) + blue\n&gt;&gt;&gt; print(f\"\u8272\u30b3\u30fc\u30c9: #{color:06X}\")\n\u8272\u30b3\u30fc\u30c9: #FF8000\n\n&gt;&gt;&gt; # 2\u9032\u6570\u3067\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u3092\u8a08\u7b97\n&gt;&gt;&gt; # 1KB = 1024\u30d0\u30a4\u30c8 = 2^10\u30d0\u30a4\u30c8\n&gt;&gt;&gt; file_size_kb = 1500\n&gt;&gt;&gt; file_size_bytes = file_size_kb * 1024\n&gt;&gt;&gt; print(f\"{file_size_kb}KB = {file_size_bytes:,}\u30d0\u30a4\u30c8\")\n&gt;&gt;&gt; print(f\"2\u9032\u6570: {bin(file_size_bytes)}\")\n1500KB = 1,536,000\u30d0\u30a4\u30c8\n2\u9032\u6570: 0b101110111000000000000\n</code></pre>"},{"location":"chapter05/#_13","title":"\u9032\u6570\u5909\u63db\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<pre><code>&gt;&gt;&gt; def decimal_to_binary(n):\n...     \"\"\"10\u9032\u6570\u30922\u9032\u6570\u306b\u5909\u63db\uff08\u4ed5\u7d44\u307f\u3092\u8868\u793a\uff09\"\"\"\n...     if n == 0:\n...         return \"0\"\n...     \n...     binary_digits = []\n...     original_n = n\n...     \n...     print(f\"{n}\u30922\u9032\u6570\u306b\u5909\u63db:\")\n...     while n &gt; 0:\n...         remainder = n % 2\n...         quotient = n // 2\n...         print(f\"{n} \u00f7 2 = {quotient} \u4f59\u308a {remainder}\")\n...         binary_digits.append(str(remainder))\n...         n = quotient\n...     \n...     binary_str = ''.join(reversed(binary_digits))\n...     print(f\"\u7b54\u3048: {original_n} = {binary_str}(2\u9032\u6570)\")\n...     return binary_str\n... \n\n&gt;&gt;&gt; # \u5b9f\u969b\u306b\u4f7f\u3063\u3066\u307f\u3088\u3046\n&gt;&gt;&gt; decimal_to_binary(25)\n25\u30922\u9032\u6570\u306b\u5909\u63db:\n25 \u00f7 2 = 12 \u4f59\u308a 1\n12 \u00f7 2 = 6 \u4f59\u308a 0\n6 \u00f7 2 = 3 \u4f59\u308a 0\n3 \u00f7 2 = 1 \u4f59\u308a 1\n1 \u00f7 2 = 0 \u4f59\u308a 1\n\u7b54\u3048: 25 = 11001(2\u9032\u6570)\n'11001'\n</code></pre>"},{"location":"chapter05/#_14","title":"\u8a08\u7b97\u306e\u9806\u756a\uff08\u512a\u5148\u9806\u4f4d\uff09","text":""},{"location":"chapter05/#_15","title":"\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d","text":"<p>\u6570\u5b66\u3068\u540c\u3058\u3088\u3046\u306b\u3001Python\u3067\u3082\u8a08\u7b97\u306e\u9806\u756a\uff08\u512a\u5148\u9806\u4f4d\uff09\u304c\u3042\u308a\u307e\u3059\uff1a</p> \u512a\u5148\u9806\u4f4d \u6f14\u7b97\u5b50 \u8aac\u660e \u4f8b 1\uff08\u9ad8\uff09 <code>()</code> \u62ec\u5f27 <code>(2 + 3) * 4</code> 2 <code>**</code> \u7d2f\u4e57 <code>2 ** 3</code> 3 <code>+x</code>, <code>-x</code> \u5358\u9805\u6f14\u7b97\u5b50 <code>-5</code>, <code>+3</code> 4 <code>*</code>, <code>/</code>, <code>//</code>, <code>%</code> \u4e57\u9664\u7b97 <code>6 * 7 / 2</code> 5\uff08\u4f4e\uff09 <code>+</code>, <code>-</code> \u52a0\u6e1b\u7b97 <code>5 + 3 - 1</code>"},{"location":"chapter05/#_16","title":"\u512a\u5148\u9806\u4f4d\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u4f8b1: \u57fa\u672c\u7684\u306a\u512a\u5148\u9806\u4f4d\n&gt;&gt;&gt; result = 2 + 3 * 4\n&gt;&gt;&gt; print(result)  # 2 + (3 * 4) = 2 + 12 = 14\n14\n\n&gt;&gt;&gt; # \u4f8b2: \u7d2f\u4e57\u306e\u512a\u5148\u9806\u4f4d\n&gt;&gt;&gt; result = 2 + 3 ** 2 * 4\n&gt;&gt;&gt; print(result)  # 2 + (3^2) * 4 = 2 + 9 * 4 = 2 + 36 = 38\n38\n\n&gt;&gt;&gt; # \u4f8b3: \u62ec\u5f27\u3067\u9806\u5e8f\u3092\u5909\u66f4\n&gt;&gt;&gt; result = (2 + 3) ** 2 * 4\n&gt;&gt;&gt; print(result)  # (2 + 3)^2 * 4 = 5^2 * 4 = 25 * 4 = 100\n100\n</code></pre>"},{"location":"chapter05/#_17","title":"\u8907\u96d1\u306a\u8a08\u7b97\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u8907\u5229\u8a08\u7b97\u306e\u4f8b\n&gt;&gt;&gt; principal = 1000000    # \u5143\u672c\uff08100\u4e07\u5186\uff09\n&gt;&gt;&gt; rate = 0.02           # \u5e74\u52292%\n&gt;&gt;&gt; years = 10            # 10\u5e74\n\n&gt;&gt;&gt; # \u8907\u5229\u8a08\u7b97\u5f0f: A = P(1 + r)^n\n&gt;&gt;&gt; amount = principal * (1 + rate) ** years\n&gt;&gt;&gt; print(f\"\u5143\u672c: {principal:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u5e74\u5229: {rate:.1%}\")\n&gt;&gt;&gt; print(f\"\u671f\u9593: {years}\u5e74\")\n&gt;&gt;&gt; print(f\"\u6700\u7d42\u91d1\u984d: {amount:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u5229\u606f: {amount - principal:,.0f}\u5186\")\n\n\u5143\u672c: 1,000,000\u5186\n\u5e74\u5229: 2.0%\n\u671f\u9593: 10\u5e74\n\u6700\u7d42\u91d1\u984d: 1,218,994\u5186\n\u5229\u606f: 218,994\u5186\n\n&gt;&gt;&gt; # \u8a08\u7b97\u5f0f\u3092\u5206\u89e3\u3057\u3066\u78ba\u8a8d\n&gt;&gt;&gt; print(f\"(1 + {rate}) = {1 + rate}\")\n&gt;&gt;&gt; print(f\"(1 + {rate})^{years} = {(1 + rate) ** years}\")\n&gt;&gt;&gt; print(f\"{principal} \u00d7 {(1 + rate) ** years:.6f} = {amount:.0f}\")\n</code></pre>"},{"location":"chapter05/#_18","title":"\u5b9f\u969b\u306e\u8a08\u7b97\u3067\u306e\u6ce8\u610f\u70b9","text":"<pre><code>&gt;&gt;&gt; # \u6ce8\u610f1: \u6574\u6570\u9664\u7b97\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u9664\u7b97\n&gt;&gt;&gt; print(f\"10 / 3 = {10 / 3}\")        # \u6d6e\u52d5\u5c0f\u6570\u70b9\u9664\u7b97\n&gt;&gt;&gt; print(f\"10 // 3 = {10 // 3}\")       # \u6574\u6570\u9664\u7b97\n&gt;&gt;&gt; print(f\"10 % 3 = {10 % 3}\")         # \u4f59\u308a\n\n10 / 3 = 3.3333333333333335\n10 // 3 = 3\n10 % 3 = 1\n\n&gt;&gt;&gt; # \u6ce8\u610f2: \u7d2f\u4e57\u306e\u7d50\u5408\u6027\uff08\u53f3\u304b\u3089\u8a08\u7b97\u3055\u308c\u308b\uff09\n&gt;&gt;&gt; print(f\"2 ** 3 ** 2 = {2 ** 3 ** 2}\")  # 2^(3^2) = 2^9 = 512\n&gt;&gt;&gt; print(f\"(2 ** 3) ** 2 = {(2 ** 3) ** 2}\")  # (2^3)^2 = 8^2 = 64\n\n2 ** 3 ** 2 = 512\n(2 ** 3) ** 2 = 64\n\n&gt;&gt;&gt; # \u6ce8\u610f3: \u8ca0\u6570\u306e\u7d2f\u4e57\n&gt;&gt;&gt; print(f\"-2 ** 2 = {-2 ** 2}\")      # -(2^2) = -4\n&gt;&gt;&gt; print(f\"(-2) ** 2 = {(-2) ** 2}\")  # (-2)^2 = 4\n\n-2 ** 2 = -4\n(-2) ** 2 = 4\n</code></pre>"},{"location":"chapter05/#_19","title":"\u6570\u5b66\u95a2\u6570\u306e\u5229\u7528","text":""},{"location":"chapter05/#math","title":"math\u30e2\u30b8\u30e5\u30fc\u30eb","text":"<p>Python\u306b\u306f\u6570\u5b66\u8a08\u7b97\u306e\u305f\u3081\u306e\u8c4a\u5bcc\u306a\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; import math\n\n&gt;&gt;&gt; # \u4e09\u89d2\u95a2\u6570\n&gt;&gt;&gt; angle = math.pi / 4  # 45\u5ea6\n&gt;&gt;&gt; print(f\"sin(45\u00b0) = {math.sin(angle):.3f}\")\n&gt;&gt;&gt; print(f\"cos(45\u00b0) = {math.cos(angle):.3f}\")\n\nsin(45\u00b0) = 0.707\ncos(45\u00b0) = 0.707\n\n&gt;&gt;&gt; # \u5bfe\u6570\u30fb\u6307\u6570\n&gt;&gt;&gt; print(f\"log(10) = {math.log10(100)}\")  # \u5e38\u7528\u5bfe\u6570\n&gt;&gt;&gt; print(f\"ln(e) = {math.log(math.e)}\")    # \u81ea\u7136\u5bfe\u6570\n&gt;&gt;&gt; print(f\"e^2 = {math.exp(2):.3f}\")       # \u6307\u6570\u95a2\u6570\n\nlog(10) = 2.0\nln(e) = 1.0\ne^2 = 7.389\n\n&gt;&gt;&gt; # \u305d\u306e\u4ed6\u306e\u95a2\u6570\n&gt;&gt;&gt; print(f\"\u221a16 = {math.sqrt(16)}\")\n&gt;&gt;&gt; print(f\"|-5| = {math.fabs(-5)}\")\n&gt;&gt;&gt; print(f\"\u23083.2\u2309 = {math.ceil(3.2)}\")    # \u5929\u4e95\u95a2\u6570\n&gt;&gt;&gt; print(f\"\u230a3.8\u230b = {math.floor(3.8)}\")   # \u5e8a\u95a2\u6570\n\n\u221a16 = 4.0\n|-5| = 5.0\n\u23083.2\u2309 = 4\n\u230a3.8\u230b = 3\n</code></pre>"},{"location":"chapter05/#_20","title":"\u5b9f\u7528\u7684\u306a\u8a08\u7b97\u4f8b","text":"<pre><code>&gt;&gt;&gt; import math\n\n&gt;&gt;&gt; # \u4f4f\u5b85\u30ed\u30fc\u30f3\u306e\u8a08\u7b97\n&gt;&gt;&gt; loan_amount = 30000000    # \u501f\u5165\u984d\uff083000\u4e07\u5186\uff09\n&gt;&gt;&gt; annual_rate = 0.015       # \u5e74\u52291.5%\n&gt;&gt;&gt; years = 35               # \u8fd4\u6e08\u671f\u959335\u5e74\n\n&gt;&gt;&gt; monthly_rate = annual_rate / 12\n&gt;&gt;&gt; total_months = years * 12\n\n&gt;&gt;&gt; # \u6708\u3005\u306e\u8fd4\u6e08\u984d\u8a08\u7b97\uff08\u5143\u5229\u5747\u7b49\uff09\n&gt;&gt;&gt; monthly_payment = (loan_amount * monthly_rate * \n...                    (1 + monthly_rate) ** total_months) / \\\n...                   ((1 + monthly_rate) ** total_months - 1)\n\n&gt;&gt;&gt; total_payment = monthly_payment * total_months\n&gt;&gt;&gt; total_interest = total_payment - loan_amount\n\n&gt;&gt;&gt; print(f\"\u501f\u5165\u984d: {loan_amount:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u5e74\u5229: {annual_rate:.1%}\")\n&gt;&gt;&gt; print(f\"\u8fd4\u6e08\u671f\u9593: {years}\u5e74\")\n&gt;&gt;&gt; print(f\"\u6708\u3005\u306e\u8fd4\u6e08\u984d: {monthly_payment:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u7dcf\u8fd4\u6e08\u984d: {total_payment:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u5229\u606f\u5408\u8a08: {total_interest:,.0f}\u5186\")\n\n\u501f\u5165\u984d: 30,000,000\u5186\n\u5e74\u5229: 1.5%\n\u8fd4\u6e08\u671f\u9593: 35\u5e74\n\u6708\u3005\u306e\u8fd4\u6e08\u984d: 91,856\u5186\n\u7dcf\u8fd4\u6e08\u984d: 38,579,424\u5186\n\u5229\u606f\u5408\u8a08: 8,579,424\u5186\n</code></pre>"},{"location":"chapter05/#python_1","title":"\u307e\u3068\u3081\uff1aPython\u3067\u306e\u6570\u5024\u51e6\u7406","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter05/#_21","title":"\u6574\u6570\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570","text":"<ul> <li>\u6574\u6570\u306f\u6b63\u78ba\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306f\u8fd1\u4f3c\u5024</li> <li>\u304a\u91d1\u306e\u8a08\u7b97\u3067\u306f\u6574\u6570\u3092\u4f7f\u3046\u3053\u3068\u3092\u63a8\u5968</li> <li>\u79d1\u5b66\u7684\u8a18\u6cd5\u3067\u5927\u304d\u306a\u6570\u30fb\u5c0f\u3055\u306a\u6570\u3092\u8868\u73fe</li> </ul>"},{"location":"chapter05/#_22","title":"\u9032\u6570\u306e\u5909\u63db","text":"<ul> <li>bin(), oct(), hex()\u3067\u9032\u6570\u5909\u63db</li> <li>\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306f\u5185\u90e8\u30672\u9032\u6570\u3092\u4f7f\u7528</li> <li>16\u9032\u6570\u306f\u8272\u3084\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u3067\u3088\u304f\u4f7f\u7528</li> </ul>"},{"location":"chapter05/#_23","title":"\u8a08\u7b97\u306e\u512a\u5148\u9806\u4f4d","text":"<ul> <li>\u62ec\u5f27 \u2192 \u7d2f\u4e57 \u2192 \u4e57\u9664\u7b97 \u2192 \u52a0\u6e1b\u7b97</li> <li>\u8907\u96d1\u306a\u5f0f\u3067\u306f\u62ec\u5f27\u3092\u4f7f\u3063\u3066\u660e\u78ba\u306b</li> <li>\u6574\u6570\u9664\u7b97\uff08//\uff09\u3068\u6d6e\u52d5\u5c0f\u6570\u70b9\u9664\u7b97\uff08/\uff09\u306e\u9055\u3044</li> </ul>"},{"location":"chapter05/#_24","title":"\u5b9f\u7528\u7684\u306a\u8a08\u7b97","text":"<ul> <li>\u5bb6\u8a08\u7c3f\u7ba1\u7406</li> <li>\u8907\u5229\u8a08\u7b97</li> <li>\u4f4f\u5b85\u30ed\u30fc\u30f3\u8a08\u7b97</li> <li>math\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6d3b\u7528</li> </ul>"},{"location":"chapter05/#_25","title":"\u6570\u5024\u30d5\u30a9\u30fc\u30de\u30c3\u30c8","text":"<ul> <li>3\u6841\u533a\u5207\u308a\u8868\u793a\uff08:,\uff09</li> <li>\u5c0f\u6570\u70b9\u4ee5\u4e0b\u306e\u6841\u6570\u6307\u5b9a\uff08:.2f\uff09</li> <li>\u30d1\u30fc\u30bb\u30f3\u30c8\u8868\u793a\uff08:.1%\uff09</li> <li>\u79d1\u5b66\u7684\u8a18\u6cd5\uff08:.2e\uff09</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u6570\u5024\u3060\u3051\u3067\u306a\u304f\u6587\u5b57\u5217\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u30e1\u30fc\u30eb\u306e\u4ef6\u540d\u4f5c\u6210\u3084\u4f4f\u6240\u306e\u6574\u5f62\u306a\u3069\u3001\u5b9f\u969b\u306e\u6587\u5b57\u5217\u64cd\u4f5c\u3092\u901a\u3058\u3066\u3001Python\u306e\u6587\u5b57\u5217\u51e6\u7406\u80fd\u529b\u3092\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter06/","title":"\u7b2c6\u7ae0\uff1a\u6587\u5b57\u3068\u6587\u7ae0\u3092\u6271\u304a\u3046","text":"<p>\u3053\u308c\u307e\u3067\u6570\u5024\u306e\u8a08\u7b97\u306b\u3064\u3044\u3066\u5b66\u3093\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u6587\u5b57\u3084\u6587\u7ae0\u306e\u51e6\u7406\u3082\u975e\u5e38\u306b\u91cd\u8981\u3067\u3059\u3002\u30e1\u30fc\u30eb\u306e\u4ef6\u540d\u3092\u4f5c\u6210\u3057\u305f\u308a\u3001\u4f4f\u6240\u3092\u6574\u7406\u3057\u305f\u308a\u3001\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u6790\u3057\u305f\u308a\u3068\u3001\u6587\u5b57\u5217\u51e6\u7406\u306f\u65e5\u5e38\u7684\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Python\u306e\u6587\u5b57\u5217\u51e6\u7406\u6a5f\u80fd\u3092\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter06/#_1","title":"\u6587\u5b57\u5217\u3063\u3066\u306a\u306b\uff1f","text":""},{"location":"chapter06/#_2","title":"\u6587\u5b57\u5217\u306e\u57fa\u672c\u6982\u5ff5","text":"<p>\u6587\u5b57\u5217\uff08String\uff09\u306f\u3001\u6587\u5b57\u306e\u96c6\u307e\u308a\u3067\u3059\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u540d\u524d\u3001\u4f4f\u6240\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306a\u3069\u3001\u3042\u3089\u3086\u308b\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002</p> <pre><code>&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u4f5c\u6210\n&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; message = \"\u3053\u3093\u306b\u3061\u306f\"\n&gt;&gt;&gt; email = \"tanaka@example.com\"\n\n&gt;&gt;&gt; print(type(name))\n&lt;class 'str'&gt;\n</code></pre>"},{"location":"chapter06/#_3","title":"\u6587\u5b57\u5217\u306e\u4f5c\u6210\u65b9\u6cd5","text":"<p>Python\u3067\u306f\u3001\u3044\u304f\u3064\u304b\u306e\u65b9\u6cd5\u3067\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\n&gt;&gt;&gt; message1 = '\u3053\u3093\u306b\u3061\u306f'\n\n&gt;&gt;&gt; # \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\n&gt;&gt;&gt; message2 = \"\u3053\u3093\u306b\u3061\u306f\"\n\n&gt;&gt;&gt; # \u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\uff08\u8907\u6570\u884c\uff09\n&gt;&gt;&gt; long_message = \"\"\"\u3053\u308c\u306f\n\u8907\u6570\u884c\u306b\u308f\u305f\u308b\n\u9577\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3059\"\"\"\n\n&gt;&gt;&gt; print(long_message)\n\u3053\u308c\u306f\n\u8907\u6570\u884c\u306b\u308f\u305f\u308b\n\u9577\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3059\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u4e2d\u306b\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3080\u5834\u5408\n&gt;&gt;&gt; quote1 = \"\u5f7c\u306f'\u3053\u3093\u306b\u3061\u306f'\u3068\u8a00\u3063\u305f\"\n&gt;&gt;&gt; quote2 = '\u5f7c\u306f\"\u3053\u3093\u306b\u3061\u306f\"\u3068\u8a00\u3063\u305f'\n&gt;&gt;&gt; quote3 = \"\u5f7c\u306f\\\"\u3053\u3093\u306b\u3061\u306f\\\"\u3068\u8a00\u3063\u305f\"  # \u30a8\u30b9\u30b1\u30fc\u30d7\n\n&gt;&gt;&gt; print(quote1)\n&gt;&gt;&gt; print(quote2)\n&gt;&gt;&gt; print(quote3)\n\u5f7c\u306f'\u3053\u3093\u306b\u3061\u306f'\u3068\u8a00\u3063\u305f\n\u5f7c\u306f\"\u3053\u3093\u306b\u3061\u306f\"\u3068\u8a00\u3063\u305f\n\u5f7c\u306f\"\u3053\u3093\u306b\u3061\u306f\"\u3068\u8a00\u3063\u305f\n</code></pre>"},{"location":"chapter06/#_4","title":"\u6587\u5b57\u5217\u306e\u9577\u3055","text":"<pre><code>&gt;&gt;&gt; message = \"\u3053\u3093\u306b\u3061\u306f\"\n&gt;&gt;&gt; print(f\"\u6587\u5b57\u6570: {len(message)}\")\n\u6587\u5b57\u6570: 5\n\n&gt;&gt;&gt; # \u82f1\u8a9e\u3068\u65e5\u672c\u8a9e\u306e\u6bd4\u8f03\n&gt;&gt;&gt; english = \"Hello\"\n&gt;&gt;&gt; japanese = \"\u3053\u3093\u306b\u3061\u306f\"\n&gt;&gt;&gt; print(f\"\u82f1\u8a9e: {len(english)}\u6587\u5b57\")\n&gt;&gt;&gt; print(f\"\u65e5\u672c\u8a9e: {len(japanese)}\u6587\u5b57\")\n\u82f1\u8a9e: 5\u6587\u5b57\n\u65e5\u672c\u8a9e: 5\u6587\u5b57\n</code></pre>"},{"location":"chapter06/#_5","title":"\u3010\u5b9f\u884c\u3011\u30e1\u30fc\u30eb\u306e\u4ef6\u540d\u3092\u7d44\u307f\u7acb\u3066\u308b\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u5b9f\u969b\u306b\u30e1\u30fc\u30eb\u306e\u4ef6\u540d\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter06/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u4ef6\u540d\u4f5c\u6210","text":"<pre><code>&gt;&gt;&gt; # \u57fa\u672c\u60c5\u5831\n&gt;&gt;&gt; sender_name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; date = \"2024\u5e741\u670815\u65e5\"\n&gt;&gt;&gt; subject_type = \"\u4f1a\u8b70\u8cc7\u6599\"\n\n&gt;&gt;&gt; # \u4ef6\u540d\u306e\u7d44\u307f\u7acb\u3066\n&gt;&gt;&gt; subject = f\"\u3010{subject_type}\u3011{date} - {sender_name}\"\n&gt;&gt;&gt; print(f\"\u4ef6\u540d: {subject}\")\n\u4ef6\u540d: \u3010\u4f1a\u8b70\u8cc7\u6599\u30112024\u5e741\u670815\u65e5 - \u7530\u4e2d\u592a\u90ce\n\n&gt;&gt;&gt; # \u3088\u308a\u8907\u96d1\u306a\u4ef6\u540d\n&gt;&gt;&gt; department = \"\u55b6\u696d\u90e8\"\n&gt;&gt;&gt; project = \"\u65b0\u5546\u54c1\u4f01\u753b\"\n&gt;&gt;&gt; version = \"v1.2\"\n\n&gt;&gt;&gt; subject = f\"\u3010{department}\u3011{project} {subject_type}({version}) - {sender_name}\"\n&gt;&gt;&gt; print(f\"\u4ef6\u540d: {subject}\")\n\u4ef6\u540d: \u3010\u55b6\u696d\u90e8\u3011\u65b0\u5546\u54c1\u4f01\u753b \u4f1a\u8b70\u8cc7\u6599(v1.2) - \u7530\u4e2d\u592a\u90ce\n</code></pre>"},{"location":"chapter06/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u4ef6\u540d\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; def create_email_subject(template_type, **kwargs):\n...     \"\"\"\u30e1\u30fc\u30eb\u4ef6\u540d\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\"\"\"\n...     templates = {\n...         \"meeting\": \"\u3010\u4f1a\u8b70\u3011{date} {meeting_type} - {organizer}\",\n...         \"report\": \"\u3010\u5831\u544a\u3011{department} {report_type} ({date}) - {author}\",\n...         \"request\": \"\u3010\u4f9d\u983c\u3011{content} - {requester}\",\n...         \"notification\": \"\u3010\u304a\u77e5\u3089\u305b\u3011{title} - {sender}\"\n...     }\n...     \n...     if template_type not in templates:\n...         return \"\u3010\u305d\u306e\u4ed6\u3011\u4ef6\u540d\u306a\u3057\"\n...     \n...     template = templates[template_type]\n...     try:\n...         return template.format(**kwargs)\n...     except KeyError as e:\n...         return f\"\u30a8\u30e9\u30fc: \u5fc5\u8981\u306a\u9805\u76ee\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059 ({e})\"\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; meeting_subject = create_email_subject(\n...     \"meeting\",\n...     date=\"2024\u5e741\u670820\u65e5\",\n...     meeting_type=\"\u6708\u6b21\u58f2\u4e0a\u4f1a\u8b70\",\n...     organizer=\"\u4f50\u85e4\u90e8\u9577\"\n... )\n&gt;&gt;&gt; print(meeting_subject)\n\u3010\u4f1a\u8b70\u30112024\u5e741\u670820\u65e5 \u6708\u6b21\u58f2\u4e0a\u4f1a\u8b70 - \u4f50\u85e4\u90e8\u9577\n\n&gt;&gt;&gt; report_subject = create_email_subject(\n...     \"report\",\n...     department=\"\u55b6\u696d\u90e8\",\n...     report_type=\"\u6708\u6b21\u58f2\u4e0a\u5831\u544a\u66f8\",\n...     date=\"2024\u5e741\u6708\",\n...     author=\"\u7530\u4e2d\u592a\u90ce\"\n... )\n&gt;&gt;&gt; print(report_subject)\n\u3010\u5831\u544a\u3011\u55b6\u696d\u90e8 \u6708\u6b21\u58f2\u4e0a\u5831\u544a\u66f8 (2024\u5e741\u6708) - \u7530\u4e2d\u592a\u90ce\n</code></pre>"},{"location":"chapter06/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u4ef6\u540d\u306e\u9577\u3055\u5236\u9650\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; def create_safe_subject(template_type, max_length=50, **kwargs):\n...     \"\"\"\u9577\u3055\u5236\u9650\u4ed8\u304d\u306e\u4ef6\u540d\u751f\u6210\"\"\"\n...     subject = create_email_subject(template_type, **kwargs)\n...     \n...     if len(subject) &gt; max_length:\n...         # \u9577\u3059\u304e\u308b\u5834\u5408\u306f\u7701\u7565\n...         subject = subject[:max_length-3] + \"...\"\n...     \n...     return subject\n... \n\n&gt;&gt;&gt; # \u9577\u3044\u4ef6\u540d\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; long_subject = create_safe_subject(\n...     \"meeting\",\n...     max_length=30,\n...     date=\"2024\u5e741\u670820\u65e5\",\n...     meeting_type=\"\u65b0\u5546\u54c1\u4f01\u753b\u306b\u95a2\u3059\u308b\u91cd\u8981\u306a\u6253\u3061\u5408\u308f\u305b\u4f1a\u8b70\",\n...     organizer=\"\u4f50\u85e4\u90e8\u9577\"\n... )\n&gt;&gt;&gt; print(f\"\u77ed\u7e2e\u7248\u4ef6\u540d: {long_subject}\")\n&gt;&gt;&gt; print(f\"\u6587\u5b57\u6570: {len(long_subject)}\")\n\u77ed\u7e2e\u7248\u4ef6\u540d: \u3010\u4f1a\u8b70\u30112024\u5e741\u670820\u65e5 \u65b0\u5546\u54c1\u4f01\u753b\u306b\u95a2\u3059...\n\u6587\u5b57\u6570: 30\n</code></pre>"},{"location":"chapter06/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b8c\u5168\u7248\u30e1\u30fc\u30eb\u4ef6\u540d\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc","text":"<pre><code># \u30e1\u30fc\u30eb\u4ef6\u540d\u751f\u6210\u30d7\u30ed\u30b0\u30e9\u30e0\nfrom datetime import datetime\n\nclass EmailSubjectGenerator:\n    def __init__(self):\n        self.templates = {\n            \"meeting\": \"\u3010\u4f1a\u8b70\u3011{date} {meeting_type} - {organizer}\",\n            \"report\": \"\u3010\u5831\u544a\u3011{department} {report_type} ({period}) - {author}\",\n            \"request\": \"\u3010\u4f9d\u983c\u3011{content} - {requester}\u304b\u3089{recipient}\u3078\",\n            \"notification\": \"\u3010\u304a\u77e5\u3089\u305b\u3011{title} - {sender}\",\n            \"urgent\": \"\u3010\u7dca\u6025\u3011{content} - {sender}\",\n            \"followup\": \"\u3010\u30d5\u30a9\u30ed\u30fc\u30a2\u30c3\u30d7\u3011{original_subject} - {sender}\"\n        }\n\n    def generate(self, template_type, max_length=None, **kwargs):\n        \"\"\"\u4ef6\u540d\u3092\u751f\u6210\"\"\"\n        if template_type not in self.templates:\n            available_types = \", \".join(self.templates.keys())\n            return f\"\u30a8\u30e9\u30fc: \u672a\u5bfe\u5fdc\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3002\u5229\u7528\u53ef\u80fd: {available_types}\"\n\n        # \u73fe\u5728\u65e5\u6642\u3092\u81ea\u52d5\u8ffd\u52a0\uff08date\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\uff09\n        if 'date' not in kwargs and template_type in ['meeting', 'report']:\n            kwargs['date'] = datetime.now().strftime(\"%Y\u5e74%m\u6708%d\u65e5\")\n\n        template = self.templates[template_type]\n\n        try:\n            subject = template.format(**kwargs)\n        except KeyError as e:\n            missing_key = str(e).strip(\"'\")\n            return f\"\u30a8\u30e9\u30fc: '{missing_key}'\u304c\u5fc5\u8981\u3067\u3059\"\n\n        # \u9577\u3055\u5236\u9650\n        if max_length and len(subject) &gt; max_length:\n            subject = subject[:max_length-3] + \"...\"\n\n        return subject\n\n    def add_template(self, name, template):\n        \"\"\"\u65b0\u3057\u3044\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8ffd\u52a0\"\"\"\n        self.templates[name] = template\n\n    def list_templates(self):\n        \"\"\"\u5229\u7528\u53ef\u80fd\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u4e00\u89a7\"\"\"\n        for name, template in self.templates.items():\n            print(f\"{name}: {template}\")\n\n# \u4f7f\u7528\u4f8b\ngenerator = EmailSubjectGenerator()\n\n# \u5404\u7a2e\u4ef6\u540d\u3092\u751f\u6210\nsubjects = []\n\nsubjects.append(generator.generate(\n    \"meeting\",\n    meeting_type=\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u9032\u6357\u4f1a\u8b70\",\n    organizer=\"\u7530\u4e2d\u90e8\u9577\"\n))\n\nsubjects.append(generator.generate(\n    \"report\",\n    department=\"\u55b6\u696d\u90e8\",\n    report_type=\"\u56db\u534a\u671f\u58f2\u4e0a\u5831\u544a\",\n    period=\"2024\u5e74Q1\",\n    author=\"\u4f50\u85e4\u592a\u90ce\"\n))\n\nsubjects.append(generator.generate(\n    \"urgent\",\n    content=\"\u30b7\u30b9\u30c6\u30e0\u969c\u5bb3\u5bfe\u5fdc\u306b\u3064\u3044\u3066\",\n    sender=\"IT\u90e8\"\n))\n\nfor i, subject in enumerate(subjects, 1):\n    print(f\"{i}. {subject}\")\n</code></pre>"},{"location":"chapter06/#_6","title":"\u7279\u6b8a\u306a\u6587\u5b57\uff08\u6539\u884c\u3001\u30bf\u30d6\u306a\u3069\uff09","text":""},{"location":"chapter06/#_7","title":"\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9","text":"<p>\u6587\u5b57\u5217\u306e\u4e2d\u3067\u7279\u5225\u306a\u610f\u5473\u3092\u6301\u3064\u6587\u5b57\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306b\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u4f7f\u3044\u307e\u3059\uff1a</p> \u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9 \u610f\u5473 \u4f8b <code>\\n</code> \u6539\u884c <code>\"1\u884c\u76ee\\n2\u884c\u76ee\"</code> <code>\\t</code> \u30bf\u30d6 <code>\"\u540d\u524d\\t\u5e74\u9f62\"</code> <code>\\\"</code> \u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8 <code>\"\u5f7c\u306f\\\"\u306f\u3044\\\"\u3068\u8a00\u3063\u305f\"</code> <code>\\'</code> \u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8 <code>'\u5f7c\u306f\\'\u306f\u3044\\'\u3068\u8a00\u3063\u305f'</code> <code>\\\\</code> \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5 <code>\"C:\\\\Users\\\\name\"</code> <code>\\r</code> \u30ad\u30e3\u30ea\u30c3\u30b8\u30ea\u30bf\u30fc\u30f3 <code>\"\u884c1\\r\\n\u884c2\"</code>"},{"location":"chapter06/#_8","title":"\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u6539\u884c\u3092\u542b\u3080\u30c6\u30ad\u30b9\u30c8\n&gt;&gt;&gt; address = \"\u3012100-0001\\n\u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\\nXXX\u30d3\u30eb3\u968e\"\n&gt;&gt;&gt; print(address)\n\u3012100-0001\n\u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\nXXX\u30d3\u30eb3\u968e\n\n&gt;&gt;&gt; # \u30bf\u30d6\u533a\u5207\u308a\u306e\u30c7\u30fc\u30bf\n&gt;&gt;&gt; header = \"\u540d\u524d\\t\u5e74\u9f62\\t\u8077\u696d\"\n&gt;&gt;&gt; data1 = \"\u7530\u4e2d\u592a\u90ce\\t30\\t\u30a8\u30f3\u30b8\u30cb\u30a2\"\n&gt;&gt;&gt; data2 = \"\u4f50\u85e4\u82b1\u5b50\\t25\\t\u30c7\u30b6\u30a4\u30ca\u30fc\"\n\n&gt;&gt;&gt; print(header)\n&gt;&gt;&gt; print(data1)\n&gt;&gt;&gt; print(data2)\n\u540d\u524d  \u5e74\u9f62  \u8077\u696d\n\u7530\u4e2d\u592a\u90ce    30  \u30a8\u30f3\u30b8\u30cb\u30a2\n\u4f50\u85e4\u82b1\u5b50    25  \u30c7\u30b6\u30a4\u30ca\u30fc\n\n&gt;&gt;&gt; # \u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\uff08Windows\uff09\n&gt;&gt;&gt; file_path = \"C:\\\\Users\\\\\u7530\u4e2d\\\\Documents\\\\report.txt\"\n&gt;&gt;&gt; print(file_path)\nC:\\Users\\\u7530\u4e2d\\Documents\\report.txt\n\n&gt;&gt;&gt; # Raw\u6587\u5b57\u5217\uff08\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u306a\u3044\uff09\n&gt;&gt;&gt; raw_path = r\"C:\\Users\\\u7530\u4e2d\\Documents\\report.txt\"\n&gt;&gt;&gt; print(raw_path)\nC:\\Users\\\u7530\u4e2d\\Documents\\report.txt\n</code></pre>"},{"location":"chapter06/#rawf-string","title":"Raw\u6587\u5b57\u5217\u3068f-string","text":"<pre><code>&gt;&gt;&gt; # Raw\u6587\u5b57\u5217\uff08r\"...\") - \u30a8\u30b9\u30b1\u30fc\u30d7\u3092\u7121\u8996\n&gt;&gt;&gt; regex_pattern = r\"\\d{3}-\\d{4}-\\d{4}\"  # \u96fb\u8a71\u756a\u53f7\u30d1\u30bf\u30fc\u30f3\n&gt;&gt;&gt; print(regex_pattern)\n\\d{3}-\\d{4}-\\d{4}\n\n&gt;&gt;&gt; # f-string\uff08f\"...\") - \u5909\u6570\u57cb\u3081\u8fbc\u307f\n&gt;&gt;&gt; name = \"\u7530\u4e2d\"\n&gt;&gt;&gt; age = 30\n&gt;&gt;&gt; message = f\"{name}\u3055\u3093\u306f{age}\u6b73\u3067\u3059\"\n&gt;&gt;&gt; print(message)\n\u7530\u4e2d\u3055\u3093\u306f30\u6b73\u3067\u3059\n\n&gt;&gt;&gt; # Raw f-string\uff08rf\"...\" \u307e\u305f\u306f fr\"...\"\uff09\n&gt;&gt;&gt; name = \"\u7530\u4e2d\"\n&gt;&gt;&gt; path_pattern = rf\"C:\\Users\\{name}\\Documents\\*.txt\"\n&gt;&gt;&gt; print(path_pattern)\nC:\\Users\\\u7530\u4e2d\\Documents\\*.txt\n</code></pre>"},{"location":"chapter06/#_9","title":"\u3010\u5b9f\u884c\u3011\u4f4f\u6240\u306e\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u4f4f\u6240\u30c7\u30fc\u30bf\u306e\u6574\u7406\u3068\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter06/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u4f4f\u6240\u6574\u5f62","text":"<pre><code>&gt;&gt;&gt; # \u4f4f\u6240\u30c7\u30fc\u30bf\uff08\u6574\u5f62\u524d\uff09\n&gt;&gt;&gt; raw_addresses = [\n...     \"  \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3  \",\n...     \"\u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u7530\uff11\u2212\uff12\u2212\uff13\u3000\",\n...     \"\u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\u68043-4-5 \uff14\u968e\",\n...     \"\u3012100-0001 \u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\"\n... ]\n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u6574\u5f62\n&gt;&gt;&gt; cleaned_addresses = []\n&gt;&gt;&gt; for addr in raw_addresses:\n...     # \u524d\u5f8c\u306e\u7a7a\u767d\u3092\u524a\u9664\n...     clean_addr = addr.strip()\n...     # \u5168\u89d2\u6570\u5b57\u3092\u534a\u89d2\u306b\u5909\u63db\uff08\u7c21\u6613\u7248\uff09\n...     clean_addr = clean_addr.replace(\"\uff11\", \"1\").replace(\"\uff12\", \"2\").replace(\"\uff13\", \"3\")\n...     clean_addr = clean_addr.replace(\"\uff14\", \"4\").replace(\"\uff15\", \"5\")\n...     # \u5168\u89d2\u30cf\u30a4\u30d5\u30f3\u3092\u534a\u89d2\u306b\n...     clean_addr = clean_addr.replace(\"\u2212\", \"-\").replace(\"\uff0d\", \"-\")\n...     cleaned_addresses.append(clean_addr)\n... \n\n&gt;&gt;&gt; print(\"=== \u6574\u5f62\u5f8c\u306e\u4f4f\u6240 ===\")\n&gt;&gt;&gt; for i, addr in enumerate(cleaned_addresses, 1):\n...     print(f\"{i}. {addr}\")\n=== \u6574\u5f62\u5f8c\u306e\u4f4f\u6240 ===\n1. \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\n2. \u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u75301-2-3\n3. \u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\u68043-4-5 4\u968e\n4. \u3012100-0001 \u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\n</code></pre>"},{"location":"chapter06/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u90f5\u4fbf\u756a\u53f7\u306e\u62bd\u51fa\u3068\u5206\u96e2","text":"<pre><code>&gt;&gt;&gt; import re\n\n&gt;&gt;&gt; def parse_address(address):\n...     \"\"\"\u4f4f\u6240\u3092\u90f5\u4fbf\u756a\u53f7\u3068\u4f4f\u6240\u306b\u5206\u96e2\"\"\"\n...     # \u90f5\u4fbf\u756a\u53f7\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u3012xxx-xxxx \u307e\u305f\u306f xxx-xxxx\uff09\n...     postal_pattern = r'\u3012?(\\d{3}-\\d{4})'\n...     \n...     match = re.search(postal_pattern, address)\n...     if match:\n...         postal_code = match.group(1)\n...         # \u90f5\u4fbf\u756a\u53f7\u90e8\u5206\u3092\u9664\u53bb\n...         address_only = re.sub(r'\u3012?\\d{3}-\\d{4}\\s*', '', address)\n...         return postal_code, address_only.strip()\n...     else:\n...         return None, address\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\n&gt;&gt;&gt; test_addresses = [\n...     \"\u3012100-0001 \u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\",\n...     \"150-0041 \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\",\n...     \"\u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3-4-5\"\n... ]\n\n&gt;&gt;&gt; for addr in test_addresses:\n...     postal, address_part = parse_address(addr)\n...     if postal:\n...         print(f\"\u90f5\u4fbf\u756a\u53f7: {postal}\")\n...         print(f\"\u4f4f\u6240: {address_part}\")\n...     else:\n...         print(f\"\u90f5\u4fbf\u756a\u53f7\u306a\u3057: {address_part}\")\n...     print(\"---\")\n\u90f5\u4fbf\u756a\u53f7: 100-0001\n\u4f4f\u6240: \u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u75301-1\n---\n\u90f5\u4fbf\u756a\u53f7: 150-0041\n\u4f4f\u6240: \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\n---\n\u90f5\u4fbf\u756a\u53f7\u306a\u3057: \u6771\u4eac\u90fd\u65b0\u5bbf\u533a\u65b0\u5bbf3-4-5\n---\n</code></pre>"},{"location":"chapter06/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u4f4f\u6240\u306e\u968e\u5c64\u5206\u89e3","text":"<pre><code>&gt;&gt;&gt; def split_address(address):\n...     \"\"\"\u4f4f\u6240\u3092\u90fd\u9053\u5e9c\u770c\u3001\u5e02\u533a\u753a\u6751\u3001\u753a\u540d\u30fb\u756a\u5730\u306b\u5206\u89e3\"\"\"\n...     import re\n...     \n...     # \u90fd\u9053\u5e9c\u770c\u306e\u30d1\u30bf\u30fc\u30f3\n...     prefecture_pattern = r'^(.*?[\u90fd\u9053\u5e9c\u770c])'\n...     # \u5e02\u533a\u753a\u6751\u306e\u30d1\u30bf\u30fc\u30f3\n...     city_pattern = r'([^\u90fd\u9053\u5e9c\u770c]*?[\u5e02\u533a\u753a\u6751])'\n...     \n...     prefecture_match = re.search(prefecture_pattern, address)\n...     prefecture = prefecture_match.group(1) if prefecture_match else \"\"\n...     \n...     remaining = address[len(prefecture):] if prefecture else address\n...     \n...     city_match = re.search(city_pattern, remaining)\n...     city = city_match.group(1) if city_match else \"\"\n...     \n...     town = remaining[len(city):] if city else remaining\n...     \n...     return {\n...         \"prefecture\": prefecture,\n...         \"city\": city,\n...         \"town\": town.strip()\n...     }\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\n&gt;&gt;&gt; addresses = [\n...     \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\",\n...     \"\u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u75301-2-3\",\n...     \"\u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\u68043-4-5\"\n... ]\n\n&gt;&gt;&gt; for addr in addresses:\n...     parts = split_address(addr)\n...     print(f\"\u5143\u306e\u4f4f\u6240: {addr}\")\n...     print(f\"  \u90fd\u9053\u5e9c\u770c: {parts['prefecture']}\")\n...     print(f\"  \u5e02\u533a\u753a\u6751: {parts['city']}\")\n...     print(f\"  \u753a\u540d\u30fb\u756a\u5730: {parts['town']}\")\n...     print(\"---\")\n\u5143\u306e\u4f4f\u6240: \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\n  \u90fd\u9053\u5e9c\u770c: \u6771\u4eac\u90fd\n  \u5e02\u533a\u753a\u6751: \u6e0b\u8c37\u533a\n  \u753a\u540d\u30fb\u756a\u5730: \u795e\u53571-2-3\n---\n\u5143\u306e\u4f4f\u6240: \u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u75301-2-3\n  \u90fd\u9053\u5e9c\u770c: \u5927\u962a\u5e9c\n  \u5e02\u533a\u753a\u6751: \u5927\u962a\u5e02\u5317\u533a\n  \u753a\u540d\u30fb\u756a\u5730: \u6885\u75301-2-3\n---\n\u5143\u306e\u4f4f\u6240: \u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\u68043-4-5\n  \u90fd\u9053\u5e9c\u770c: \u611b\u77e5\u770c\n  \u5e02\u533a\u753a\u6751: \u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\n  \u753a\u540d\u30fb\u756a\u5730: \u68043-4-5\n---\n</code></pre>"},{"location":"chapter06/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b8c\u5168\u7248\u4f4f\u6240\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<pre><code># \u4f4f\u6240\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0\nimport re\n\nclass AddressFormatter:\n    def __init__(self):\n        # \u5168\u89d2\u2192\u534a\u89d2\u5909\u63db\u30c6\u30fc\u30d6\u30eb\n        self.zenkaku_to_hankaku = {\n            '\uff10': '0', '\uff11': '1', '\uff12': '2', '\uff13': '3', '\uff14': '4',\n            '\uff15': '5', '\uff16': '6', '\uff17': '7', '\uff18': '8', '\uff19': '9',\n            '\u2212': '-', '\uff0d': '-', '\uff5e': '~', '\uff1a': ':'\n        }\n\n    def normalize_text(self, text):\n        \"\"\"\u30c6\u30ad\u30b9\u30c8\u306e\u6b63\u898f\u5316\"\"\"\n        # \u524d\u5f8c\u306e\u7a7a\u767d\u524a\u9664\n        text = text.strip()\n\n        # \u5168\u89d2\u6587\u5b57\u3092\u534a\u89d2\u306b\u5909\u63db\n        for zenkaku, hankaku in self.zenkaku_to_hankaku.items():\n            text = text.replace(zenkaku, hankaku)\n\n        # \u8907\u6570\u306e\u7a7a\u767d\u3092\u5358\u4e00\u306b\n        text = re.sub(r'\\s+', ' ', text)\n\n        return text\n\n    def extract_postal_code(self, address):\n        \"\"\"\u90f5\u4fbf\u756a\u53f7\u306e\u62bd\u51fa\"\"\"\n        pattern = r'\u3012?(\\d{3}-\\d{4})'\n        match = re.search(pattern, address)\n\n        if match:\n            postal_code = match.group(1)\n            # \u90f5\u4fbf\u756a\u53f7\u90e8\u5206\u3092\u524a\u9664\n            cleaned_address = re.sub(r'\u3012?\\d{3}-\\d{4}\\s*', '', address)\n            return postal_code, cleaned_address.strip()\n\n        return None, address\n\n    def split_address_parts(self, address):\n        \"\"\"\u4f4f\u6240\u306e\u968e\u5c64\u5206\u89e3\"\"\"\n        # \u90fd\u9053\u5e9c\u770c\n        prefecture_pattern = r'^(.*?[\u90fd\u9053\u5e9c\u770c])'\n        prefecture_match = re.search(prefecture_pattern, address)\n        prefecture = prefecture_match.group(1) if prefecture_match else \"\"\n\n        remaining = address[len(prefecture):]\n\n        # \u5e02\u533a\u753a\u6751\n        city_pattern = r'^(.*?[\u5e02\u533a\u753a\u6751])'\n        city_match = re.search(city_pattern, remaining)\n        city = city_match.group(1) if city_match else \"\"\n\n        # \u6b8b\u308a\uff08\u753a\u540d\u30fb\u756a\u5730\uff09\n        town = remaining[len(city):].strip()\n\n        return prefecture, city, town\n\n    def format_address(self, raw_address):\n        \"\"\"\u4f4f\u6240\u306e\u5b8c\u5168\u6574\u5f62\"\"\"\n        # Step 1: \u30c6\u30ad\u30b9\u30c8\u6b63\u898f\u5316\n        normalized = self.normalize_text(raw_address)\n\n        # Step 2: \u90f5\u4fbf\u756a\u53f7\u62bd\u51fa\n        postal_code, address_without_postal = self.extract_postal_code(normalized)\n\n        # Step 3: \u4f4f\u6240\u968e\u5c64\u5206\u89e3\n        prefecture, city, town = self.split_address_parts(address_without_postal)\n\n        return {\n            'original': raw_address,\n            'postal_code': postal_code,\n            'prefecture': prefecture,\n            'city': city,\n            'town': town,\n            'formatted': f\"{prefecture}{city}{town}\"\n        }\n\n    def format_multiple(self, addresses):\n        \"\"\"\u8907\u6570\u4f4f\u6240\u306e\u4e00\u62ec\u6574\u5f62\"\"\"\n        results = []\n        for addr in addresses:\n            result = self.format_address(addr)\n            results.append(result)\n        return results\n\n# \u4f7f\u7528\u4f8b\nformatter = AddressFormatter()\n\ntest_addresses = [\n    \"  \u3012100-0001  \u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a\u5343\u4ee3\u7530\uff11\u2212\uff11  \",\n    \"150-0041 \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3 \uff14\u968e\",\n    \"\u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u7530\uff11\u2212\uff12\u2212\uff13\u3000\",\n    \"\u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\u4e2d\u533a\u68043-4-5 XXX\u30d3\u30eb\",\n    \"\u3012810-0001 \u798f\u5ca1\u770c\u798f\u5ca1\u5e02\u4e2d\u592e\u533a\u5929\u795e2-3-4\"\n]\n\nresults = formatter.format_multiple(test_addresses)\n\nprint(\"=== \u4f4f\u6240\u6574\u5f62\u7d50\u679c ===\")\nfor i, result in enumerate(results, 1):\n    print(f\"\\n{i}. \u5143\u306e\u4f4f\u6240: {result['original']}\")\n    if result['postal_code']:\n        print(f\"   \u90f5\u4fbf\u756a\u53f7: \u3012{result['postal_code']}\")\n    print(f\"   \u90fd\u9053\u5e9c\u770c: {result['prefecture']}\")\n    print(f\"   \u5e02\u533a\u753a\u6751: {result['city']}\")\n    print(f\"   \u753a\u540d\u756a\u5730: {result['town']}\")\n    print(f\"   \u6574\u5f62\u5f8c: {result['formatted']}\")\n</code></pre>"},{"location":"chapter06/#_10","title":"\u6587\u5b57\u5217\u306e\u4e2d\u8eab\u3092\u8abf\u3079\u3088\u3046","text":""},{"location":"chapter06/#_11","title":"\u6587\u5b57\u5217\u306e\u57fa\u672c\u64cd\u4f5c","text":"<p>\u6587\u5b57\u5217\u306b\u306f\u3001\u305d\u306e\u5185\u5bb9\u3092\u8abf\u3079\u305f\u308a\u64cd\u4f5c\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306e\u591a\u304f\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; text = \"Hello Python Programming\"\n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u60c5\u5831\n&gt;&gt;&gt; print(f\"\u9577\u3055: {len(text)}\")\n&gt;&gt;&gt; print(f\"\u5927\u6587\u5b57: {text.upper()}\")\n&gt;&gt;&gt; print(f\"\u5c0f\u6587\u5b57: {text.lower()}\")\n&gt;&gt;&gt; print(f\"\u30bf\u30a4\u30c8\u30eb\u30b1\u30fc\u30b9: {text.title()}\")\n\n\u9577\u3055: 24\n\u5927\u6587\u5b57: HELLO PYTHON PROGRAMMING\n\u5c0f\u6587\u5b57: hello python programming\n\u30bf\u30a4\u30c8\u30eb\u30b1\u30fc\u30b9: Hello Python Programming\n\n&gt;&gt;&gt; # \u691c\u7d22\n&gt;&gt;&gt; print(f\"'Python'\u306e\u4f4d\u7f6e: {text.find('Python')}\")\n&gt;&gt;&gt; print(f\"'Python'\u304c\u542b\u307e\u308c\u308b: {'Python' in text}\")\n&gt;&gt;&gt; print(f\"'Java'\u304c\u542b\u307e\u308c\u308b: {'Java' in text}\")\n\n'Python'\u306e\u4f4d\u7f6e: 6\n'Python'\u304c\u542b\u307e\u308c\u308b: True\n'Java'\u304c\u542b\u307e\u308c\u308b: False\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u5224\u5b9a\n&gt;&gt;&gt; print(f\"\u6570\u5b57\u306e\u307f: {'123'.isdigit()}\")\n&gt;&gt;&gt; print(f\"\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u307f: {'abc'.isalpha()}\")\n&gt;&gt;&gt; print(f\"\u82f1\u6570\u5b57\u306e\u307f: {'abc123'.isalnum()}\")\n&gt;&gt;&gt; print(f\"\u7a7a\u767d\u306e\u307f: {'   '.isspace()}\")\n\n\u6570\u5b57\u306e\u307f: True\n\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\u307f: True\n\u82f1\u6570\u5b57\u306e\u307f: True\n\u7a7a\u767d\u306e\u307f: True\n</code></pre>"},{"location":"chapter06/#_12","title":"\u6587\u5b57\u5217\u306e\u5206\u5272\u3068\u7d50\u5408","text":"<pre><code>&gt;&gt;&gt; # \u5206\u5272\n&gt;&gt;&gt; sentence = \"Python,Java,JavaScript,Ruby\"\n&gt;&gt;&gt; languages = sentence.split(',')\n&gt;&gt;&gt; print(languages)\n['Python', 'Java', 'JavaScript', 'Ruby']\n\n&gt;&gt;&gt; # \u884c\u5206\u5272\n&gt;&gt;&gt; multiline = \"\"\"\u7b2c1\u884c\n\u7b2c2\u884c\n\u7b2c3\u884c\"\"\"\n&gt;&gt;&gt; lines = multiline.split('\\n')\n&gt;&gt;&gt; print(lines)\n['\u7b2c1\u884c', '\u7b2c2\u884c', '\u7b2c3\u884c']\n\n&gt;&gt;&gt; # \u7d50\u5408\n&gt;&gt;&gt; words = ['Hello', 'Python', 'World']\n&gt;&gt;&gt; sentence = ' '.join(words)\n&gt;&gt;&gt; print(sentence)\nHello Python World\n\n&gt;&gt;&gt; # CSV\u5f62\u5f0f\u3067\u7d50\u5408\n&gt;&gt;&gt; data = ['\u7530\u4e2d', '30', '\u30a8\u30f3\u30b8\u30cb\u30a2']\n&gt;&gt;&gt; csv_line = ','.join(data)\n&gt;&gt;&gt; print(csv_line)\n\u7530\u4e2d,30,\u30a8\u30f3\u30b8\u30cb\u30a2\n</code></pre>"},{"location":"chapter06/#_13","title":"\u6587\u5b57\u5217\u306e\u7f6e\u63db\u3068\u524a\u9664","text":"<pre><code>&gt;&gt;&gt; text = \"  Hello Python World  \"\n\n&gt;&gt;&gt; # \u7f6e\u63db\n&gt;&gt;&gt; new_text = text.replace('Python', 'Java')\n&gt;&gt;&gt; print(f\"\u7f6e\u63db\u5f8c: {new_text}\")\n\u7f6e\u63db\u5f8c:   Hello Java World  \n\n&gt;&gt;&gt; # \u7a7a\u767d\u524a\u9664\n&gt;&gt;&gt; print(f\"\u524d\u5f8c\u7a7a\u767d\u524a\u9664: '{text.strip()}'\")\n&gt;&gt;&gt; print(f\"\u5de6\u7a7a\u767d\u524a\u9664: '{text.lstrip()}'\")\n&gt;&gt;&gt; print(f\"\u53f3\u7a7a\u767d\u524a\u9664: '{text.rstrip()}'\")\n\n\u524d\u5f8c\u7a7a\u767d\u524a\u9664: 'Hello Python World'\n\u5de6\u7a7a\u767d\u524a\u9664: 'Hello Python World  '\n\u53f3\u7a7a\u767d\u524a\u9664:   Hello Python World'\n\n&gt;&gt;&gt; # \u7279\u5b9a\u6587\u5b57\u306e\u524a\u9664\n&gt;&gt;&gt; phone = \"090-1234-5678\"\n&gt;&gt;&gt; digits_only = phone.replace('-', '')\n&gt;&gt;&gt; print(f\"\u30cf\u30a4\u30d5\u30f3\u524a\u9664: {digits_only}\")\n\u30cf\u30a4\u30d5\u30f3\u524a\u9664: 09012345678\n</code></pre>"},{"location":"chapter06/#_14","title":"\u6587\u5b57\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u30b9\u30e9\u30a4\u30b9","text":"<pre><code>&gt;&gt;&gt; text = \"Python\"\n\n&gt;&gt;&gt; # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff080\u304b\u3089\u59cb\u307e\u308b\uff09\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e\u6587\u5b57: {text[0]}\")\n&gt;&gt;&gt; print(f\"\u6700\u5f8c\u306e\u6587\u5b57: {text[-1]}\")\n&gt;&gt;&gt; print(f\"\u5f8c\u308d\u304b\u30892\u756a\u76ee: {text[-2]}\")\n\n\u6700\u521d\u306e\u6587\u5b57: P\n\u6700\u5f8c\u306e\u6587\u5b57: n\n\u5f8c\u308d\u304b\u30892\u756a\u76ee: o\n\n&gt;&gt;&gt; # \u30b9\u30e9\u30a4\u30b9\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e3\u6587\u5b57: {text[:3]}\")\n&gt;&gt;&gt; print(f\"3\u6587\u5b57\u76ee\u4ee5\u964d: {text[3:]}\")\n&gt;&gt;&gt; print(f\"2-4\u6587\u5b57\u76ee: {text[2:5]}\")\n&gt;&gt;&gt; print(f\"\u9006\u9806: {text[::-1]}\")\n\n\u6700\u521d\u306e3\u6587\u5b57: Pyt\n3\u6587\u5b57\u76ee\u4ee5\u964d: hon\n2-4\u6587\u5b57\u76ee: tho\n\u9006\u9806: nohtyP\n\n&gt;&gt;&gt; # \u65e5\u672c\u8a9e\u3067\u3082\u540c\u69d8\n&gt;&gt;&gt; japanese = \"\u3053\u3093\u306b\u3061\u306f\"\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e2\u6587\u5b57: {japanese[:2]}\")\n&gt;&gt;&gt; print(f\"\u6700\u5f8c\u306e2\u6587\u5b57: {japanese[-2:]}\")\n\n\u6700\u521d\u306e2\u6587\u5b57: \u3053\u3093\n\u6700\u5f8c\u306e2\u6587\u5b57: \u3061\u306f\n</code></pre>"},{"location":"chapter06/#_15","title":"\u5b9f\u7528\u7684\u306a\u6587\u5b57\u5217\u51e6\u7406\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u691c\u8a3c\uff08\u7c21\u6613\u7248\uff09\n&gt;&gt;&gt; def is_valid_email(email):\n...     \"\"\"\u7c21\u6613\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u691c\u8a3c\"\"\"\n...     if '@' not in email:\n...         return False\n...     \n...     parts = email.split('@')\n...     if len(parts) != 2:\n...         return False\n...     \n...     local, domain = parts\n...     \n...     # \u7a7a\u6587\u5b57\u30c1\u30a7\u30c3\u30af\n...     if not local or not domain:\n...         return False\n...     \n...     # \u30c9\u30e1\u30a4\u30f3\u306b\u30d4\u30ea\u30aa\u30c9\u304c\u5fc5\u8981\n...     if '.' not in domain:\n...         return False\n...     \n...     return True\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\n&gt;&gt;&gt; emails = [\n...     \"user@example.com\",\n...     \"test@domain.co.jp\",\n...     \"invalid-email\",\n...     \"@example.com\",\n...     \"user@\"\n... ]\n\n&gt;&gt;&gt; for email in emails:\n...     result = \"\u6709\u52b9\" if is_valid_email(email) else \"\u7121\u52b9\"\n...     print(f\"{email}: {result}\")\n\nuser@example.com: \u6709\u52b9\ntest@domain.co.jp: \u6709\u52b9\ninvalid-email: \u7121\u52b9\n@example.com: \u7121\u52b9\nuser@: \u7121\u52b9\n\n&gt;&gt;&gt; # \u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\n&gt;&gt;&gt; def check_password_strength(password):\n...     \"\"\"\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\"\"\"\n...     score = 0\n...     feedback = []\n...     \n...     # \u9577\u3055\u30c1\u30a7\u30c3\u30af\n...     if len(password) &gt;= 8:\n...         score += 1\n...     else:\n...         feedback.append(\"8\u6587\u5b57\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u5927\u6587\u5b57\u30c1\u30a7\u30c3\u30af\n...     if any(c.isupper() for c in password):\n...         score += 1\n...     else:\n...         feedback.append(\"\u5927\u6587\u5b57\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u5c0f\u6587\u5b57\u30c1\u30a7\u30c3\u30af\n...     if any(c.islower() for c in password):\n...         score += 1\n...     else:\n...         feedback.append(\"\u5c0f\u6587\u5b57\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u6570\u5b57\u30c1\u30a7\u30c3\u30af\n...     if any(c.isdigit() for c in password):\n...         score += 1\n...     else:\n...         feedback.append(\"\u6570\u5b57\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u8a18\u53f7\u30c1\u30a7\u30c3\u30af\n...     symbols = \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\"\n...     if any(c in symbols for c in password):\n...         score += 1\n...     else:\n...         feedback.append(\"\u8a18\u53f7\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     strength_levels = [\"\u975e\u5e38\u306b\u5f31\u3044\", \"\u5f31\u3044\", \"\u666e\u901a\", \"\u5f37\u3044\", \"\u975e\u5e38\u306b\u5f37\u3044\"]\n...     strength = strength_levels[min(score, 4)]\n...     \n...     return {\n...         \"score\": score,\n...         \"strength\": strength,\n...         \"feedback\": feedback\n...     }\n... \n\n&gt;&gt;&gt; # \u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c6\u30b9\u30c8\n&gt;&gt;&gt; passwords = [\n...     \"password\",\n...     \"Password1\",\n...     \"Password123!\",\n...     \"MyStr0ng!Pass\"\n... ]\n\n&gt;&gt;&gt; for pwd in passwords:\n...     result = check_password_strength(pwd)\n...     print(f\"\\n\u30d1\u30b9\u30ef\u30fc\u30c9: {pwd}\")\n...     print(f\"\u5f37\u5ea6: {result['strength']} (\u30b9\u30b3\u30a2: {result['score']}/5)\")\n...     if result['feedback']:\n...         print(\"\u6539\u5584\u70b9:\")\n...         for tip in result['feedback']:\n...             print(f\"  - {tip}\")\n</code></pre>"},{"location":"chapter06/#_16","title":"\u307e\u3068\u3081\uff1a\u6587\u5b57\u5217\u51e6\u7406\u306e\u57fa\u672c","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter06/#_17","title":"\u6587\u5b57\u5217\u306e\u57fa\u672c","text":"<ul> <li>\u30b7\u30f3\u30b0\u30eb\u30fb\u30c0\u30d6\u30eb\u30fb\u30c8\u30ea\u30d7\u30eb\u30af\u30a9\u30fc\u30c8\u3067\u306e\u4f5c\u6210</li> <li>\u6587\u5b57\u5217\u306e\u9577\u3055\uff08len()\uff09</li> <li>\u30a8\u30b9\u30b1\u30fc\u30d7\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\\n, \\t, \\\"\u306a\u3069\uff09</li> <li>Raw\u6587\u5b57\u5217\u3068f-string</li> </ul>"},{"location":"chapter06/#_18","title":"\u5b9f\u7528\u7684\u306a\u51e6\u7406","text":"<ul> <li>\u30e1\u30fc\u30eb\u4ef6\u540d\u306e\u81ea\u52d5\u751f\u6210</li> <li>\u4f4f\u6240\u30c7\u30fc\u30bf\u306e\u6574\u7406\u3068\u6b63\u898f\u5316</li> <li>\u5168\u89d2\u30fb\u534a\u89d2\u6587\u5b57\u306e\u5909\u63db</li> <li>\u90f5\u4fbf\u756a\u53f7\u306e\u62bd\u51fa</li> </ul>"},{"location":"chapter06/#_19","title":"\u6587\u5b57\u5217\u64cd\u4f5c\u30e1\u30bd\u30c3\u30c9","text":"<ul> <li>\u5927\u6587\u5b57\u30fb\u5c0f\u6587\u5b57\u5909\u63db\uff08upper(), lower(), title()\uff09</li> <li>\u691c\u7d22\u3068\u5224\u5b9a\uff08find(), in\u6f14\u7b97\u5b50, isdigit()\u306a\u3069\uff09</li> <li>\u5206\u5272\u3068\u7d50\u5408\uff08split(), join()\uff09</li> <li>\u7f6e\u63db\u3068\u524a\u9664\uff08replace(), strip()\uff09</li> </ul>"},{"location":"chapter06/#_20","title":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u30b9\u30e9\u30a4\u30b9","text":"<ul> <li>\u6587\u5b57\u306e\u4f4d\u7f6e\u6307\u5b9a\uff08[0], [-1]\uff09</li> <li>\u90e8\u5206\u6587\u5b57\u5217\u306e\u62bd\u51fa\uff08[start:end]\uff09</li> <li>\u9006\u9806\u8868\u793a\uff08[::-1]\uff09</li> </ul>"},{"location":"chapter06/#_21","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528","text":"<ul> <li>\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u691c\u8a3c</li> <li>\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af</li> <li>\u30c7\u30fc\u30bf\u30af\u30ea\u30fc\u30cb\u30f3\u30b0</li> <li>\u30c6\u30ad\u30b9\u30c8\u89e3\u6790</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u3053\u308c\u307e\u3067\u5b66\u3093\u3060\u6570\u5024\u3068\u6587\u5b57\u5217\u306e\u77e5\u8b58\u3092\u4f7f\u3063\u3066\u3001\u5909\u6570\u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u91cd\u8981\u306a\u6982\u5ff5\u3092\u6df1\u304f\u5b66\u3093\u3067\u3044\u304d\u307e\u3059\u3002\u5909\u6570\u3092\u4f7f\u3063\u3066\u60c5\u5831\u3092\u7ba1\u7406\u3057\u3001\u3088\u308a\u8907\u96d1\u3067\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter07/","title":"\u7b2c7\u7ae0\uff1a\u5909\u6570\u3068\u3044\u3046\u9b54\u6cd5\u306e\u7bb1","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u3001\u6570\u5024\u3084\u6587\u5b57\u5217\u3092\u76f4\u63a5\u6271\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3092\u5909\u6570\u3068\u3044\u3046\u300c\u540d\u524d\u4ed8\u304d\u306e\u7bb1\u300d\u306b\u4fdd\u5b58\u3057\u3066\u7ba1\u7406\u3057\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u5909\u6570\u306e\u672c\u8cea\u7684\u306a\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3084\u5546\u54c1\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u5909\u6570\u306e\u52b9\u679c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u5b66\u3093\u3067\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter07/#_1","title":"\u5909\u6570\u3063\u3066\u306a\u306b\uff1f\u306a\u305c\u5fc5\u8981\uff1f","text":""},{"location":"chapter07/#_2","title":"\u5909\u6570\u306a\u3057\u306e\u4e16\u754c\u3092\u60f3\u50cf\u3057\u3066\u307f\u3088\u3046","text":"<p>\u307e\u305a\u3001\u5909\u6570\u304c\u306a\u3044\u4e16\u754c\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u3069\u3046\u306a\u308b\u304b\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046\uff1a</p> <pre><code>&gt;&gt;&gt; # \u5909\u6570\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\uff08\u60aa\u3044\u4f8b\uff09\n&gt;&gt;&gt; print(\"\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u6d88\u8cbb\u7a0e\u8a08\u7b97\")\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u4fa1\u683c: {1500}\u5186\")\n&gt;&gt;&gt; print(f\"\u6d88\u8cbb\u7a0e: {1500 * 0.1}\u5186\")\n&gt;&gt;&gt; print(f\"\u5408\u8a08: {1500 + 1500 * 0.1}\u5186\")\n\n&gt;&gt;&gt; print(\"\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u9001\u6599\u8a08\u7b97\")\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u4fa1\u683c: {1500}\u5186\")  # \u540c\u3058\u5024\u3092\u4f55\u5ea6\u3082\u66f8\u304f\n&gt;&gt;&gt; if 1500 &gt;= 3000:  # \u307e\u305f\u540c\u3058\u5024\u3092\u66f8\u304f\n...     print(\"\u9001\u6599\u7121\u6599\")\n... else:\n...     print(f\"\u9001\u6599: {500}\u5186\")\n...     print(f\"\u7dcf\u5408\u8a08: {1500 + 1500 * 0.1 + 500}\u5186\")  # \u8907\u96d1\u306a\u8a08\u7b97\u3092\u7e70\u308a\u8fd4\u3057\n</code></pre> <p>\u3053\u306e\u4f8b\u306e\u554f\u984c\u70b9\uff1a 1. \u540c\u3058\u5024\uff081500\uff09\u3092\u4f55\u5ea6\u3082\u66f8\u3044\u3066\u3044\u308b 2. \u4fa1\u683c\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u3059\u3079\u3066\u306e\u5834\u6240\u3092\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b 3. \u8a08\u7b97\u304c\u8907\u96d1\u3067\u9593\u9055\u3044\u3084\u3059\u3044 4. \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u610f\u5473\u304c\u7406\u89e3\u3057\u306b\u304f\u3044</p>"},{"location":"chapter07/#_3","title":"\u5909\u6570\u3092\u4f7f\u3063\u305f\u5834\u5408","text":"<pre><code>&gt;&gt;&gt; # \u5909\u6570\u3092\u4f7f\u3046\u5834\u5408\uff08\u826f\u3044\u4f8b\uff09\n&gt;&gt;&gt; customer_name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; product_price = 1500\n&gt;&gt;&gt; tax_rate = 0.1\n&gt;&gt;&gt; shipping_fee = 500\n&gt;&gt;&gt; free_shipping_threshold = 3000\n\n&gt;&gt;&gt; print(f\"{customer_name}\u3055\u3093\u306e\u6d88\u8cbb\u7a0e\u8a08\u7b97\")\n&gt;&gt;&gt; tax_amount = product_price * tax_rate\n&gt;&gt;&gt; total_with_tax = product_price + tax_amount\n\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u4fa1\u683c: {product_price}\u5186\")\n&gt;&gt;&gt; print(f\"\u6d88\u8cbb\u7a0e: {tax_amount}\u5186\")\n&gt;&gt;&gt; print(f\"\u5408\u8a08: {total_with_tax}\u5186\")\n\n&gt;&gt;&gt; print(f\"{customer_name}\u3055\u3093\u306e\u9001\u6599\u8a08\u7b97\")\n&gt;&gt;&gt; if product_price &gt;= free_shipping_threshold:\n...     shipping_cost = 0\n...     print(\"\u9001\u6599\u7121\u6599\")\n... else:\n...     shipping_cost = shipping_fee\n...     print(f\"\u9001\u6599: {shipping_cost}\u5186\")\n\n&gt;&gt;&gt; final_total = total_with_tax + shipping_cost\n&gt;&gt;&gt; print(f\"\u7dcf\u5408\u8a08: {final_total}\u5186\")\n</code></pre> <p>\u5909\u6570\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\uff1a 1. \u518d\u5229\u7528\u6027\uff1a\u540c\u3058\u5024\u3092\u4f55\u5ea6\u3067\u3082\u4f7f\u3048\u308b 2. \u4fdd\u5b88\u6027\uff1a\u5024\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u3001\u4e00\u7b87\u6240\u3060\u3051\u4fee\u6b63\u3059\u308c\u3070\u3088\u3044 3. \u53ef\u8aad\u6027\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u610f\u5473\u304c\u7406\u89e3\u3057\u3084\u3059\u3044 4. \u5b89\u5168\u6027\uff1a\u8a08\u7b97\u30df\u30b9\u304c\u6e1b\u308b</p>"},{"location":"chapter07/#_4","title":"\u5909\u6570\u306e\u672c\u8cea\uff1a\u30e1\u30e2\u30ea\u4e0a\u306e\u4ed5\u7d44\u307f","text":"<p>\u5909\u6570\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u4e0a\u306b\u4f5c\u3089\u308c\u308b\u300c\u540d\u524d\u4ed8\u304d\u306e\u4fdd\u5b58\u5834\u6240\u300d\u3067\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u5909\u6570\u306e\u4f5c\u6210\u3068\u30e1\u30e2\u30ea\u4e0a\u306e\u52d5\u4f5c\n&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"  # \u30e1\u30e2\u30ea\u306e\u3069\u3053\u304b\u306b\"\u7530\u4e2d\u592a\u90ce\"\u3092\u4fdd\u5b58\u3057\u3001name\u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b\n&gt;&gt;&gt; age = 30          # \u30e1\u30e2\u30ea\u306e\u3069\u3053\u304b\u306b30\u3092\u4fdd\u5b58\u3057\u3001age\u3068\u3044\u3046\u540d\u524d\u3092\u4ed8\u3051\u308b\n\n&gt;&gt;&gt; # id()\u95a2\u6570\u3067\u30e1\u30e2\u30ea\u4e0a\u306e\u4f4d\u7f6e\uff08\u30a2\u30c9\u30ec\u30b9\uff09\u3092\u78ba\u8a8d\n&gt;&gt;&gt; print(f\"name\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9: {id(name)}\")\n&gt;&gt;&gt; print(f\"age\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9: {id(age)}\")\n\nname\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9: 140234567891200\nage\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9: 140234567890112\n\n&gt;&gt;&gt; # \u540c\u3058\u5024\u3092\u6301\u3064\u5909\u6570\u306e\u30a2\u30c9\u30ec\u30b9\n&gt;&gt;&gt; age2 = 30\n&gt;&gt;&gt; print(f\"age\u306e\u30a2\u30c9\u30ec\u30b9: {id(age)}\")\n&gt;&gt;&gt; print(f\"age2\u306e\u30a2\u30c9\u30ec\u30b9: {id(age2)}\")\n&gt;&gt;&gt; print(f\"\u540c\u3058\u30a2\u30c9\u30ec\u30b9: {id(age) == id(age2)}\")\n\nage\u306e\u30a2\u30c9\u30ec\u30b9: 140234567890112\nage2\u306e\u30a2\u30c9\u30ec\u30b9: 140234567890112\n\u540c\u3058\u30a2\u30c9\u30ec\u30b9: True  # Python\u306f\u540c\u3058\u5024\u306f\u540c\u3058\u5834\u6240\u306b\u4fdd\u5b58\u3059\u308b\u3053\u3068\u304c\u3042\u308b\n</code></pre>"},{"location":"chapter07/#_5","title":"\u3010\u5b9f\u884c\u3011\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u540d\u524d\u3001\u5e74\u9f62\u3001\u4f4f\u6240\uff09","text":"<p>\u5b9f\u969b\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u7ba1\u7406\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u5909\u6570\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter07/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; # \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u5b9a\u7fa9\n&gt;&gt;&gt; user_name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; user_age = 30\n&gt;&gt;&gt; user_email = \"tanaka@example.com\"\n&gt;&gt;&gt; user_phone = \"090-1234-5678\"\n&gt;&gt;&gt; user_address = \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\"\n&gt;&gt;&gt; user_is_premium = True\n\n&gt;&gt;&gt; # \u60c5\u5831\u306e\u8868\u793a\n&gt;&gt;&gt; print(\"=== \u30e6\u30fc\u30b6\u30fc\u60c5\u5831 ===\")\n&gt;&gt;&gt; print(f\"\u540d\u524d: {user_name}\")\n&gt;&gt;&gt; print(f\"\u5e74\u9f62: {user_age}\u6b73\")\n&gt;&gt;&gt; print(f\"\u30e1\u30fc\u30eb: {user_email}\")\n&gt;&gt;&gt; print(f\"\u96fb\u8a71: {user_phone}\")\n&gt;&gt;&gt; print(f\"\u4f4f\u6240: {user_address}\")\n&gt;&gt;&gt; print(f\"\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1: {'\u306f\u3044' if user_is_premium else '\u3044\u3044\u3048'}\")\n\n=== \u30e6\u30fc\u30b6\u30fc\u60c5\u5831 ===\n\u540d\u524d: \u7530\u4e2d\u592a\u90ce\n\u5e74\u9f62: 30\u6b73\n\u30e1\u30fc\u30eb: tanaka@example.com\n\u96fb\u8a71: 090-1234-5678\n\u4f4f\u6240: \u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\n\u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1: \u306f\u3044\n</code></pre>"},{"location":"chapter07/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u8a08\u7b97\u51e6\u7406\u3092\u542b\u3080\u60c5\u5831\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; import datetime\n\n&gt;&gt;&gt; # \u751f\u5e74\u6708\u65e5\u304b\u3089\u5e74\u9f62\u3092\u8a08\u7b97\n&gt;&gt;&gt; birth_year = 1993\n&gt;&gt;&gt; current_year = datetime.datetime.now().year\n&gt;&gt;&gt; calculated_age = current_year - birth_year\n\n&gt;&gt;&gt; # \u4f1a\u54e1\u30e9\u30f3\u30af\u306e\u5224\u5b9a\n&gt;&gt;&gt; if user_age &lt; 20:\n...     age_category = \"\u5b66\u751f\"\n... elif user_age &lt; 65:\n...     age_category = \"\u4e00\u822c\"\n... else:\n...     age_category = \"\u30b7\u30cb\u30a2\"\n\n&gt;&gt;&gt; # \u30d7\u30ec\u30df\u30a2\u30e0\u7279\u5178\u306e\u8a08\u7b97\n&gt;&gt;&gt; base_discount = 0.05  # \u57fa\u672c\u5272\u5f155%\n&gt;&gt;&gt; if user_is_premium:\n...     if age_category == \"\u5b66\u751f\":\n...         total_discount = base_discount + 0.10  # \u5b66\u751f\u8ffd\u52a0\u5272\u5f1510%\n...     elif age_category == \"\u30b7\u30cb\u30a2\":\n...         total_discount = base_discount + 0.15  # \u30b7\u30cb\u30a2\u8ffd\u52a0\u5272\u5f1515%\n...     else:\n...         total_discount = base_discount + 0.05  # \u4e00\u822c\u8ffd\u52a0\u5272\u5f155%\n... else:\n...     total_discount = 0\n\n&gt;&gt;&gt; print(f\"\u751f\u5e74\u6708\u65e5\u304b\u3089\u8a08\u7b97\u3057\u305f\u5e74\u9f62: {calculated_age}\u6b73\")\n&gt;&gt;&gt; print(f\"\u5e74\u9f62\u30ab\u30c6\u30b4\u30ea: {age_category}\")\n&gt;&gt;&gt; print(f\"\u9069\u7528\u5272\u5f15\u7387: {total_discount:.1%}\")\n\n\u751f\u5e74\u6708\u65e5\u304b\u3089\u8a08\u7b97\u3057\u305f\u5e74\u9f62: 31\u6b73\n\u5e74\u9f62\u30ab\u30c6\u30b4\u30ea: \u4e00\u822c\n\u9069\u7528\u5272\u5f15\u7387: 10.0%\n</code></pre>"},{"location":"chapter07/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8907\u6570\u30e6\u30fc\u30b6\u30fc\u306e\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; # \u8907\u6570\u30e6\u30fc\u30b6\u30fc\u306e\u60c5\u5831\n&gt;&gt;&gt; user1_name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; user1_age = 30\n&gt;&gt;&gt; user1_email = \"tanaka@example.com\"\n&gt;&gt;&gt; user1_is_premium = True\n\n&gt;&gt;&gt; user2_name = \"\u4f50\u85e4\u82b1\u5b50\"\n&gt;&gt;&gt; user2_age = 25\n&gt;&gt;&gt; user2_email = \"sato@example.com\"\n&gt;&gt;&gt; user2_is_premium = False\n\n&gt;&gt;&gt; user3_name = \"\u9234\u6728\u4e00\u90ce\"\n&gt;&gt;&gt; user3_age = 70\n&gt;&gt;&gt; user3_email = \"suzuki@example.com\"\n&gt;&gt;&gt; user3_is_premium = True\n\n&gt;&gt;&gt; # \u30e6\u30fc\u30b6\u30fc\u3054\u3068\u306e\u51e6\u7406\uff08\u95a2\u6570\u5316\uff09\n&gt;&gt;&gt; def calculate_user_discount(age, is_premium):\n...     \"\"\"\u30e6\u30fc\u30b6\u30fc\u306e\u5272\u5f15\u7387\u3092\u8a08\u7b97\"\"\"\n...     base_discount = 0.05\n...     \n...     if not is_premium:\n...         return 0\n...     \n...     if age &lt; 20:\n...         return base_discount + 0.10  # \u5b66\u751f\n...     elif age &gt;= 65:\n...         return base_discount + 0.15  # \u30b7\u30cb\u30a2\n...     else:\n...         return base_discount + 0.05  # \u4e00\u822c\n... \n\n&gt;&gt;&gt; def display_user_info(name, age, email, is_premium):\n...     \"\"\"\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u8868\u793a\"\"\"\n...     discount = calculate_user_discount(age, is_premium)\n...     premium_status = \"\u30d7\u30ec\u30df\u30a2\u30e0\" if is_premium else \"\u4e00\u822c\"\n...     \n...     print(f\"\u540d\u524d: {name}\")\n...     print(f\"\u5e74\u9f62: {age}\u6b73\")\n...     print(f\"\u30e1\u30fc\u30eb: {email}\")\n...     print(f\"\u4f1a\u54e1\u30bf\u30a4\u30d7: {premium_status}\")\n...     print(f\"\u5272\u5f15\u7387: {discount:.1%}\")\n...     print(\"---\")\n... \n\n&gt;&gt;&gt; # \u5168\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u8868\u793a\n&gt;&gt;&gt; display_user_info(user1_name, user1_age, user1_email, user1_is_premium)\n&gt;&gt;&gt; display_user_info(user2_name, user2_age, user2_email, user2_is_premium)\n&gt;&gt;&gt; display_user_info(user3_name, user3_age, user3_email, user3_is_premium)\n\n\u540d\u524d: \u7530\u4e2d\u592a\u90ce\n\u5e74\u9f62: 30\u6b73\n\u30e1\u30fc\u30eb: tanaka@example.com\n\u4f1a\u54e1\u30bf\u30a4\u30d7: \u30d7\u30ec\u30df\u30a2\u30e0\n\u5272\u5f15\u7387: 10.0%\n---\n\u540d\u524d: \u4f50\u85e4\u82b1\u5b50\n\u5e74\u9f62: 25\u6b73\n\u30e1\u30fc\u30eb: sato@example.com\n\u4f1a\u54e1\u30bf\u30a4\u30d7: \u4e00\u822c\n\u5272\u5f15\u7387: 0.0%\n---\n\u540d\u524d: \u9234\u6728\u4e00\u90ce\n\u5e74\u9f62: 70\u6b73\n\u30e1\u30fc\u30eb: suzuki@example.com\n\u4f1a\u54e1\u30bf\u30a4\u30d7: \u30d7\u30ec\u30df\u30a2\u30e0\n\u5272\u5f15\u7387: 20.0%\n---\n</code></pre>"},{"location":"chapter07/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u8f9e\u66f8\u3092\u4f7f\u3063\u305f\u6539\u826f\u7248","text":"<pre><code>&gt;&gt;&gt; # \u8f9e\u66f8\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u307e\u3068\u3081\u308b\n&gt;&gt;&gt; user1 = {\n...     \"name\": \"\u7530\u4e2d\u592a\u90ce\",\n...     \"age\": 30,\n...     \"email\": \"tanaka@example.com\",\n...     \"phone\": \"090-1234-5678\",\n...     \"address\": \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\u795e\u53571-2-3\",\n...     \"is_premium\": True,\n...     \"registration_date\": \"2023-01-15\"\n... }\n\n&gt;&gt;&gt; user2 = {\n...     \"name\": \"\u4f50\u85e4\u82b1\u5b50\",\n...     \"age\": 25,\n...     \"email\": \"sato@example.com\",\n...     \"phone\": \"080-9876-5432\",\n...     \"address\": \"\u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a\u6885\u75301-1-1\",\n...     \"is_premium\": False,\n...     \"registration_date\": \"2023-03-20\"\n... }\n\n&gt;&gt;&gt; # \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u51e6\u7406\u306e\u6539\u826f\u7248\n&gt;&gt;&gt; def process_user(user):\n...     \"\"\"\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u51e6\u7406\"\"\"\n...     name = user[\"name\"]\n...     age = user[\"age\"]\n...     is_premium = user[\"is_premium\"]\n...     \n...     # \u5e74\u9f62\u30ab\u30c6\u30b4\u30ea\u306e\u5224\u5b9a\n...     if age &lt; 20:\n...         category = \"\u5b66\u751f\"\n...     elif age &lt; 65:\n...         category = \"\u4e00\u822c\"\n...     else:\n...         category = \"\u30b7\u30cb\u30a2\"\n...     \n...     # \u5272\u5f15\u7387\u306e\u8a08\u7b97\n...     discount = calculate_user_discount(age, is_premium)\n...     \n...     # \u7d50\u679c\u306e\u8fd4\u5374\n...     return {\n...         \"category\": category,\n...         \"discount\": discount,\n...         \"premium_status\": \"\u30d7\u30ec\u30df\u30a2\u30e0\" if is_premium else \"\u4e00\u822c\"\n...     }\n... \n\n&gt;&gt;&gt; # \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u51e6\u7406\u3068\u8868\u793a\n&gt;&gt;&gt; for user in [user1, user2]:\n...     result = process_user(user)\n...     \n...     print(f\"\u540d\u524d: {user['name']}\")\n...     print(f\"\u5e74\u9f62: {user['age']}\u6b73 ({result['category']})\")\n...     print(f\"\u4f1a\u54e1: {result['premium_status']}\")\n...     print(f\"\u5272\u5f15: {result['discount']:.1%}\")\n...     print(f\"\u767b\u9332\u65e5: {user['registration_date']}\")\n...     print(\"---\")\n</code></pre>"},{"location":"chapter07/#_6","title":"\u3044\u3044\u5909\u6570\u540d\u3001\u3060\u3081\u306a\u5909\u6570\u540d","text":"<p>\u5909\u6570\u540d\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u53ef\u8aad\u6027\u306b\u5927\u304d\u304f\u5f71\u97ff\u3057\u307e\u3059\u3002\u826f\u3044\u5909\u6570\u540d\u306e\u4ed8\u3051\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter07/#_7","title":"\u5909\u6570\u540d\u306e\u30eb\u30fc\u30eb\uff08\u5fc5\u9808\uff09","text":"<pre><code>&gt;&gt;&gt; # \u6b63\u3057\u3044\u5909\u6570\u540d\n&gt;&gt;&gt; user_name = \"\u7530\u4e2d\"      # OK: \u82f1\u5b57\u3068\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\n&gt;&gt;&gt; age_2024 = 30          # OK: \u82f1\u5b57\u3001\u6570\u5b57\u3001\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\n&gt;&gt;&gt; _private_data = \"\u79d8\u5bc6\"  # OK: \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u59cb\u307e\u308b\n\n&gt;&gt;&gt; # \u9593\u9055\u3063\u305f\u5909\u6570\u540d\uff08\u30a8\u30e9\u30fc\u306b\u306a\u308b\uff09\n&gt;&gt;&gt; # 2user_name = \"\u7530\u4e2d\"   # NG: \u6570\u5b57\u3067\u59cb\u307e\u308b\n&gt;&gt;&gt; # user-name = \"\u7530\u4e2d\"    # NG: \u30cf\u30a4\u30d5\u30f3\u306f\u4f7f\u3048\u306a\u3044\n&gt;&gt;&gt; # user name = \"\u7530\u4e2d\"    # NG: \u30b9\u30da\u30fc\u30b9\u306f\u4f7f\u3048\u306a\u3044\n&gt;&gt;&gt; # def = \"\u5b9a\u7fa9\"          # NG: Python\u306e\u4e88\u7d04\u8a9e\n</code></pre>"},{"location":"chapter07/#_8","title":"\u826f\u3044\u5909\u6570\u540d\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u610f\u5473\u304c\u660e\u78ba\u306a\u5909\u6570\u540d\n&gt;&gt;&gt; total_price = 1500           # \u5408\u8a08\u4fa1\u683c\n&gt;&gt;&gt; user_email_address = \"...\"   # \u30e6\u30fc\u30b6\u30fc\u306e\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\n&gt;&gt;&gt; is_premium_member = True     # \u30d7\u30ec\u30df\u30a2\u30e0\u4f1a\u54e1\u304b\u3069\u3046\u304b\n&gt;&gt;&gt; max_retry_count = 3          # \u6700\u5927\u30ea\u30c8\u30e9\u30a4\u56de\u6570\n&gt;&gt;&gt; product_list = []            # \u5546\u54c1\u30ea\u30b9\u30c8\n\n&gt;&gt;&gt; # \u5358\u4f4d\u3092\u542b\u3080\u5909\u6570\u540d\n&gt;&gt;&gt; distance_km = 100            # \u8ddd\u96e2\uff08\u30ad\u30ed\u30e1\u30fc\u30c8\u30eb\uff09\n&gt;&gt;&gt; weight_kg = 5.5              # \u91cd\u91cf\uff08\u30ad\u30ed\u30b0\u30e9\u30e0\uff09\n&gt;&gt;&gt; time_seconds = 3600          # \u6642\u9593\uff08\u79d2\uff09\n&gt;&gt;&gt; price_yen = 1500             # \u4fa1\u683c\uff08\u5186\uff09\n\n&gt;&gt;&gt; # \u30d6\u30fc\u30eb\u5024\u306e\u5909\u6570\u540d\n&gt;&gt;&gt; is_logged_in = True          # \u30ed\u30b0\u30a4\u30f3\u72b6\u614b\n&gt;&gt;&gt; has_permission = False       # \u6a29\u9650\u306e\u6709\u7121\n&gt;&gt;&gt; can_edit = True              # \u7de8\u96c6\u53ef\u80fd\u304b\u3069\u3046\u304b\n&gt;&gt;&gt; should_update = False        # \u66f4\u65b0\u3059\u3079\u304d\u304b\u3069\u3046\u304b\n</code></pre>"},{"location":"chapter07/#_9","title":"\u60aa\u3044\u5909\u6570\u540d\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u610f\u5473\u304c\u4e0d\u660e\u306a\u5909\u6570\u540d\n&gt;&gt;&gt; x = \"\u7530\u4e2d\u592a\u90ce\"               # \u4f55\u306ex\uff1f\n&gt;&gt;&gt; data = 1500                 # \u4f55\u306e\u30c7\u30fc\u30bf\uff1f\n&gt;&gt;&gt; temp = True                 # \u4e00\u6642\u7684\uff1f\u6e29\u5ea6\uff1f\n&gt;&gt;&gt; list1 = []                  # \u4f55\u306e\u30ea\u30b9\u30c8\uff1f\n\n&gt;&gt;&gt; # \u7701\u7565\u3057\u3059\u304e\u305f\u5909\u6570\u540d\n&gt;&gt;&gt; usr_nm = \"\u7530\u4e2d\"              # user_name\u3068\u66f8\u3053\u3046\n&gt;&gt;&gt; calc_prc = 1500             # calculated_price\u3068\u66f8\u3053\u3046\n&gt;&gt;&gt; chk_flg = True              # check_flag\u3068\u66f8\u3053\u3046\n\n&gt;&gt;&gt; # \u8aa4\u89e3\u3092\u62db\u304f\u5909\u6570\u540d\n&gt;&gt;&gt; user_data = 1500            # \u6570\u5024\u306a\u306e\u306bdata\uff1f\n&gt;&gt;&gt; count = \"\u7530\u4e2d\u592a\u90ce\"           # \u6587\u5b57\u5217\u306a\u306e\u306bcount\uff1f\n&gt;&gt;&gt; is_valid = \"yes\"            # \u6587\u5b57\u5217\u306a\u306e\u306bis_\uff1f\n</code></pre>"},{"location":"chapter07/#_10","title":"\u3010\u5b9f\u884c\u3011\u5546\u54c1\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u5909\u6570\u540d\u3092\u8003\u3048\u3088\u3046","text":"<p>\u5b9f\u969b\u306e\u5546\u54c1\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u9069\u5207\u306a\u5909\u6570\u540d\u306e\u4ed8\u3051\u65b9\u3092\u7df4\u7fd2\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter07/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u5546\u54c1\u306e\u57fa\u672c\u60c5\u5831","text":"<pre><code>&gt;&gt;&gt; # \u5546\u54c1\u60c5\u5831\u306e\u5b9a\u7fa9\uff08\u826f\u3044\u5909\u6570\u540d\uff09\n&gt;&gt;&gt; product_id = \"P001\"\n&gt;&gt;&gt; product_name = \"\u30ef\u30a4\u30e4\u30ec\u30b9\u30a4\u30e4\u30db\u30f3\"\n&gt;&gt;&gt; product_category = \"\u96fb\u5b50\u6a5f\u5668\"\n&gt;&gt;&gt; unit_price = 8500\n&gt;&gt;&gt; stock_quantity = 25\n&gt;&gt;&gt; is_in_stock = stock_quantity &gt; 0\n&gt;&gt;&gt; is_on_sale = True\n&gt;&gt;&gt; sale_discount_rate = 0.15\n&gt;&gt;&gt; supplier_name = \"\u30c6\u30c3\u30af\u682a\u5f0f\u4f1a\u793e\"\n&gt;&gt;&gt; arrival_date = \"2024-01-10\"\n\n&gt;&gt;&gt; # \u8a08\u7b97\u3055\u308c\u305f\u5024\n&gt;&gt;&gt; sale_price = unit_price * (1 - sale_discount_rate) if is_on_sale else unit_price\n&gt;&gt;&gt; stock_status = \"\u5728\u5eab\u3042\u308a\" if is_in_stock else \"\u5728\u5eab\u5207\u308c\"\n\n&gt;&gt;&gt; print(\"=== \u5546\u54c1\u60c5\u5831 ===\")\n&gt;&gt;&gt; print(f\"\u5546\u54c1ID: {product_id}\")\n&gt;&gt;&gt; print(f\"\u5546\u54c1\u540d: {product_name}\")\n&gt;&gt;&gt; print(f\"\u30ab\u30c6\u30b4\u30ea: {product_category}\")\n&gt;&gt;&gt; print(f\"\u5b9a\u4fa1: {unit_price:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u8ca9\u58f2\u4fa1\u683c: {sale_price:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u5728\u5eab\u6570: {stock_quantity}\u500b\")\n&gt;&gt;&gt; print(f\"\u5728\u5eab\u72b6\u6cc1: {stock_status}\")\n&gt;&gt;&gt; print(f\"\u4ed5\u5165\u5148: {supplier_name}\")\n</code></pre>"},{"location":"chapter07/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5728\u5eab\u7ba1\u7406\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; def update_stock(current_stock, transaction_type, quantity):\n...     \"\"\"\u5728\u5eab\u3092\u66f4\u65b0\u3059\u308b\u95a2\u6570\"\"\"\n...     if transaction_type == \"\u5165\u8377\":\n...         new_stock = current_stock + quantity\n...         print(f\"\u5165\u8377: {quantity}\u500b \u2192 \u5728\u5eab: {new_stock}\u500b\")\n...     elif transaction_type == \"\u51fa\u8377\":\n...         if current_stock &gt;= quantity:\n...             new_stock = current_stock - quantity\n...             print(f\"\u51fa\u8377: {quantity}\u500b \u2192 \u5728\u5eab: {new_stock}\u500b\")\n...         else:\n...             print(f\"\u30a8\u30e9\u30fc: \u5728\u5eab\u4e0d\u8db3\uff08\u8981\u6c42: {quantity}\u500b, \u5728\u5eab: {current_stock}\u500b\uff09\")\n...             new_stock = current_stock\n...     else:\n...         print(f\"\u30a8\u30e9\u30fc: \u4e0d\u660e\u306a\u53d6\u5f15\u30bf\u30a4\u30d7: {transaction_type}\")\n...         new_stock = current_stock\n...     \n...     return new_stock\n... \n\n&gt;&gt;&gt; # \u5728\u5eab\u306e\u66f4\u65b0\u30c6\u30b9\u30c8\n&gt;&gt;&gt; current_stock_quantity = stock_quantity\n&gt;&gt;&gt; print(f\"\u521d\u671f\u5728\u5eab: {current_stock_quantity}\u500b\")\n\n&gt;&gt;&gt; # \u5165\u8377\n&gt;&gt;&gt; current_stock_quantity = update_stock(current_stock_quantity, \"\u5165\u8377\", 10)\n\n&gt;&gt;&gt; # \u51fa\u8377\n&gt;&gt;&gt; current_stock_quantity = update_stock(current_stock_quantity, \"\u51fa\u8377\", 8)\n\n&gt;&gt;&gt; # \u5728\u5eab\u4e0d\u8db3\u306e\u51fa\u8377\n&gt;&gt;&gt; current_stock_quantity = update_stock(current_stock_quantity, \"\u51fa\u8377\", 50)\n\n\u521d\u671f\u5728\u5eab: 25\u500b\n\u5165\u8377: 10\u500b \u2192 \u5728\u5eab: 35\u500b\n\u51fa\u8377: 8\u500b \u2192 \u5728\u5eab: 27\u500b\n\u30a8\u30e9\u30fc: \u5728\u5eab\u4e0d\u8db3\uff08\u8981\u6c42: 50\u500b, \u5728\u5eab: 27\u500b\uff09\n</code></pre>"},{"location":"chapter07/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8ca9\u58f2\u5b9f\u7e3e\u306e\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; # \u8ca9\u58f2\u5b9f\u7e3e\u306e\u7ba1\u7406\n&gt;&gt;&gt; daily_sales_count = 0\n&gt;&gt;&gt; daily_sales_amount = 0\n&gt;&gt;&gt; total_sales_count = 0\n&gt;&gt;&gt; total_sales_amount = 0\n\n&gt;&gt;&gt; def record_sale(product_price, sale_quantity):\n...     \"\"\"\u8ca9\u58f2\u3092\u8a18\u9332\u3059\u308b\u95a2\u6570\"\"\"\n...     global daily_sales_count, daily_sales_amount\n...     global total_sales_count, total_sales_amount\n...     \n...     sale_amount = product_price * sale_quantity\n...     \n...     daily_sales_count += sale_quantity\n...     daily_sales_amount += sale_amount\n...     total_sales_count += sale_quantity\n...     total_sales_amount += sale_amount\n...     \n...     print(f\"\u8ca9\u58f2\u8a18\u9332: {sale_quantity}\u500b \u00d7 {product_price:,}\u5186 = {sale_amount:,}\u5186\")\n...     return sale_amount\n... \n\n&gt;&gt;&gt; def display_sales_summary():\n...     \"\"\"\u8ca9\u58f2\u30b5\u30de\u30ea\u30fc\u3092\u8868\u793a\"\"\"\n...     print(\"\\n=== \u8ca9\u58f2\u30b5\u30de\u30ea\u30fc ===\")\n...     print(f\"\u672c\u65e5\u8ca9\u58f2\u6570: {daily_sales_count}\u500b\")\n...     print(f\"\u672c\u65e5\u58f2\u4e0a: {daily_sales_amount:,}\u5186\")\n...     print(f\"\u7d2f\u8a08\u8ca9\u58f2\u6570: {total_sales_count}\u500b\")\n...     print(f\"\u7d2f\u8a08\u58f2\u4e0a: {total_sales_amount:,}\u5186\")\n...     \n...     if daily_sales_count &gt; 0:\n...         average_unit_price = daily_sales_amount / daily_sales_count\n...         print(f\"\u5e73\u5747\u5358\u4fa1: {average_unit_price:,.0f}\u5186\")\n... \n\n&gt;&gt;&gt; # \u8ca9\u58f2\u8a18\u9332\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; record_sale(sale_price, 3)\n&gt;&gt;&gt; record_sale(sale_price, 2)\n&gt;&gt;&gt; record_sale(sale_price, 1)\n&gt;&gt;&gt; display_sales_summary()\n\n\u8ca9\u58f2\u8a18\u9332: 3\u500b \u00d7 7,225\u5186 = 21,675\u5186\n\u8ca9\u58f2\u8a18\u9332: 2\u500b \u00d7 7,225\u5186 = 14,450\u5186\n\u8ca9\u58f2\u8a18\u9332: 1\u500b \u00d7 7,225\u5186 = 7,225\u5186\n\n=== \u8ca9\u58f2\u30b5\u30de\u30ea\u30fc ===\n\u672c\u65e5\u8ca9\u58f2\u6570: 6\u500b\n\u672c\u65e5\u58f2\u4e0a: 43,350\u5186\n\u7d2f\u8a08\u8ca9\u58f2\u6570: 6\u500b\n\u7d2f\u8a08\u58f2\u4e0a: 43,350\u5186\n\u5e73\u5747\u5358\u4fa1: 7,225\u5186\n</code></pre>"},{"location":"chapter07/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b8c\u5168\u7248\u5546\u54c1\u7ba1\u7406\u30af\u30e9\u30b9","text":"<pre><code># \u5546\u54c1\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\nfrom datetime import datetime\n\nclass ProductManager:\n    def __init__(self, product_id, product_name, unit_price, initial_stock=0):\n        # \u5546\u54c1\u57fa\u672c\u60c5\u5831\n        self.product_id = product_id\n        self.product_name = product_name\n        self.product_category = \"\"\n        self.unit_price = unit_price\n\n        # \u5728\u5eab\u60c5\u5831\n        self.current_stock = initial_stock\n        self.minimum_stock_level = 5  # \u6700\u4f4e\u5728\u5eab\u30ec\u30d9\u30eb\n        self.maximum_stock_level = 100  # \u6700\u5927\u5728\u5eab\u30ec\u30d9\u30eb\n\n        # \u8ca9\u58f2\u60c5\u5831\n        self.is_on_sale = False\n        self.sale_discount_rate = 0.0\n\n        # \u8ca9\u58f2\u5b9f\u7e3e\n        self.total_sales_quantity = 0\n        self.total_sales_amount = 0\n\n        # \u4ed5\u5165\u5148\u60c5\u5831\n        self.supplier_name = \"\"\n        self.last_restock_date = None\n\n        # \u53d6\u5f15\u5c65\u6b74\n        self.transaction_history = []\n\n    def get_selling_price(self):\n        \"\"\"\u73fe\u5728\u306e\u8ca9\u58f2\u4fa1\u683c\u3092\u53d6\u5f97\"\"\"\n        if self.is_on_sale:\n            return self.unit_price * (1 - self.sale_discount_rate)\n        return self.unit_price\n\n    def is_stock_available(self, requested_quantity=1):\n        \"\"\"\u5728\u5eab\u304c\u3042\u308b\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n        return self.current_stock &gt;= requested_quantity\n\n    def is_low_stock(self):\n        \"\"\"\u5728\u5eab\u304c\u5c11\u306a\u3044\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n        return self.current_stock &lt;= self.minimum_stock_level\n\n    def add_stock(self, quantity, note=\"\"):\n        \"\"\"\u5728\u5eab\u3092\u8ffd\u52a0\"\"\"\n        if quantity &lt;= 0:\n            return False, \"\u6570\u91cf\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n\n        old_stock = self.current_stock\n        self.current_stock += quantity\n        self.last_restock_date = datetime.now()\n\n        # \u53d6\u5f15\u5c65\u6b74\u306b\u8a18\u9332\n        transaction = {\n            \"date\": datetime.now(),\n            \"type\": \"\u5165\u8377\",\n            \"quantity\": quantity,\n            \"before_stock\": old_stock,\n            \"after_stock\": self.current_stock,\n            \"note\": note\n        }\n        self.transaction_history.append(transaction)\n\n        return True, f\"\u5165\u8377\u5b8c\u4e86: {quantity}\u500b\u8ffd\u52a0\uff08\u5728\u5eab: {old_stock} \u2192 {self.current_stock}\uff09\"\n\n    def sell_product(self, quantity, note=\"\"):\n        \"\"\"\u5546\u54c1\u3092\u8ca9\u58f2\"\"\"\n        if quantity &lt;= 0:\n            return False, \"\u6570\u91cf\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n\n        if not self.is_stock_available(quantity):\n            return False, f\"\u5728\u5eab\u4e0d\u8db3\uff08\u8981\u6c42: {quantity}\u500b, \u5728\u5eab: {self.current_stock}\u500b\uff09\"\n\n        old_stock = self.current_stock\n        self.current_stock -= quantity\n\n        # \u8ca9\u58f2\u5b9f\u7e3e\u3092\u66f4\u65b0\n        selling_price = self.get_selling_price()\n        sale_amount = selling_price * quantity\n        self.total_sales_quantity += quantity\n        self.total_sales_amount += sale_amount\n\n        # \u53d6\u5f15\u5c65\u6b74\u306b\u8a18\u9332\n        transaction = {\n            \"date\": datetime.now(),\n            \"type\": \"\u8ca9\u58f2\",\n            \"quantity\": quantity,\n            \"unit_price\": selling_price,\n            \"total_amount\": sale_amount,\n            \"before_stock\": old_stock,\n            \"after_stock\": self.current_stock,\n            \"note\": note\n        }\n        self.transaction_history.append(transaction)\n\n        return True, f\"\u8ca9\u58f2\u5b8c\u4e86: {quantity}\u500b \u00d7 {selling_price:,.0f}\u5186 = {sale_amount:,.0f}\u5186\"\n\n    def set_sale(self, discount_rate):\n        \"\"\"\u30bb\u30fc\u30eb\u3092\u8a2d\u5b9a\"\"\"\n        if 0 &lt;= discount_rate &lt;= 1:\n            self.is_on_sale = True\n            self.sale_discount_rate = discount_rate\n            return True, f\"\u30bb\u30fc\u30eb\u8a2d\u5b9a: {discount_rate:.1%}\u5272\u5f15\"\n        return False, \"\u5272\u5f15\u7387\u306f0-1\u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\"\n\n    def end_sale(self):\n        \"\"\"\u30bb\u30fc\u30eb\u3092\u7d42\u4e86\"\"\"\n        self.is_on_sale = False\n        self.sale_discount_rate = 0.0\n        return \"\u30bb\u30fc\u30eb\u7d42\u4e86\"\n\n    def get_product_summary(self):\n        \"\"\"\u5546\u54c1\u30b5\u30de\u30ea\u30fc\u3092\u53d6\u5f97\"\"\"\n        return {\n            \"product_id\": self.product_id,\n            \"product_name\": self.product_name,\n            \"unit_price\": self.unit_price,\n            \"selling_price\": self.get_selling_price(),\n            \"current_stock\": self.current_stock,\n            \"is_low_stock\": self.is_low_stock(),\n            \"total_sales\": self.total_sales_quantity,\n            \"total_revenue\": self.total_sales_amount,\n            \"is_on_sale\": self.is_on_sale\n        }\n\n# \u4f7f\u7528\u4f8b\nproduct = ProductManager(\"P001\", \"\u30ef\u30a4\u30e4\u30ec\u30b9\u30a4\u30e4\u30db\u30f3\", 8500, 20)\n\n# \u5546\u54c1\u60c5\u5831\u8a2d\u5b9a\nproduct.product_category = \"\u96fb\u5b50\u6a5f\u5668\"\nproduct.supplier_name = \"\u30c6\u30c3\u30af\u682a\u5f0f\u4f1a\u793e\"\nproduct.minimum_stock_level = 5\n\n# \u30bb\u30fc\u30eb\u8a2d\u5b9a\nsuccess, message = product.set_sale(0.15)\nprint(message)\n\n# \u8ca9\u58f2\u30c6\u30b9\u30c8\nsuccess, message = product.sell_product(3, \"\u30aa\u30f3\u30e9\u30a4\u30f3\u6ce8\u6587\")\nprint(message)\n\n# \u5728\u5eab\u88dc\u5145\nsuccess, message = product.add_stock(15, \"\u5b9a\u671f\u767a\u6ce8\")\nprint(message)\n\n# \u30b5\u30de\u30ea\u30fc\u8868\u793a\nsummary = product.get_product_summary()\nprint(\"\\n=== \u5546\u54c1\u30b5\u30de\u30ea\u30fc ===\")\nfor key, value in summary.items():\n    print(f\"{key}: {value}\")\n</code></pre>"},{"location":"chapter07/#_11","title":"\u3010\u5b9f\u884c\u3011\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u91cf\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3088\u3046","text":"<p>\u5909\u6570\u304c\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u306b\u3069\u3046\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u304b\u3092\u5b9f\u969b\u306b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter07/#_12","title":"\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u306e\u78ba\u8a8d","text":"<pre><code>&gt;&gt;&gt; # \u540c\u3058\u5024\u3092\u6301\u3064\u5909\u6570\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\n&gt;&gt;&gt; number1 = 100\n&gt;&gt;&gt; number2 = 100\n&gt;&gt;&gt; number3 = 200\n\n&gt;&gt;&gt; print(f\"number1 (100)\u306e\u30a2\u30c9\u30ec\u30b9: {id(number1)}\")\n&gt;&gt;&gt; print(f\"number2 (100)\u306e\u30a2\u30c9\u30ec\u30b9: {id(number2)}\")\n&gt;&gt;&gt; print(f\"number3 (200)\u306e\u30a2\u30c9\u30ec\u30b9: {id(number3)}\")\n&gt;&gt;&gt; print(f\"number1\u3068number2\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9: {id(number1) == id(number2)}\")\n\nnumber1 (100)\u306e\u30a2\u30c9\u30ec\u30b9: 140234567890112\nnumber2 (100)\u306e\u30a2\u30c9\u30ec\u30b9: 140234567890112\nnumber3 (200)\u306e\u30a2\u30c9\u30ec\u30b9: 140234567890144\nnumber1\u3068number2\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9: True\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u5834\u5408\n&gt;&gt;&gt; text1 = \"Hello\"\n&gt;&gt;&gt; text2 = \"Hello\"\n&gt;&gt;&gt; text3 = \"World\"\n\n&gt;&gt;&gt; print(f\"text1\u306e\u30a2\u30c9\u30ec\u30b9: {id(text1)}\")\n&gt;&gt;&gt; print(f\"text2\u306e\u30a2\u30c9\u30ec\u30b9: {id(text2)}\")\n&gt;&gt;&gt; print(f\"text3\u306e\u30a2\u30c9\u30ec\u30b9: {id(text3)}\")\n&gt;&gt;&gt; print(f\"text1\u3068text2\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9: {id(text1) == id(text2)}\")\n\ntext1\u306e\u30a2\u30c9\u30ec\u30b9: 140234567891200\ntext2\u306e\u30a2\u30c9\u30ec\u30b9: 140234567891200\ntext3\u306e\u30a2\u30c9\u30ec\u30b9: 140234567891264\ntext1\u3068text2\u306f\u540c\u3058\u30a2\u30c9\u30ec\u30b9: True\n</code></pre>"},{"location":"chapter07/#_13","title":"\u5909\u6570\u306e\u4ee3\u5165\u3068\u30e1\u30e2\u30ea\u306e\u52d5\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u5909\u6570\u306e\u4ee3\u5165\n&gt;&gt;&gt; original_list = [1, 2, 3]\n&gt;&gt;&gt; copied_reference = original_list  # \u53c2\u7167\u3092\u30b3\u30d4\u30fc\n&gt;&gt;&gt; copied_value = original_list.copy()  # \u5024\u3092\u30b3\u30d4\u30fc\n\n&gt;&gt;&gt; print(f\"original_list\u306e\u30a2\u30c9\u30ec\u30b9: {id(original_list)}\")\n&gt;&gt;&gt; print(f\"copied_reference\u306e\u30a2\u30c9\u30ec\u30b9: {id(copied_reference)}\")\n&gt;&gt;&gt; print(f\"copied_value\u306e\u30a2\u30c9\u30ec\u30b9: {id(copied_value)}\")\n\noriginal_list\u306e\u30a2\u30c9\u30ec\u30b9: 140234567892160\ncopied_reference\u306e\u30a2\u30c9\u30ec\u30b9: 140234567892160\ncopied_value\u306e\u30a2\u30c9\u30ec\u30b9: 140234567892224\n\n&gt;&gt;&gt; # \u5143\u306e\u30ea\u30b9\u30c8\u3092\u5909\u66f4\n&gt;&gt;&gt; original_list.append(4)\n\n&gt;&gt;&gt; print(f\"original_list: {original_list}\")\n&gt;&gt;&gt; print(f\"copied_reference: {copied_reference}\")  # \u540c\u3058\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u5909\u66f4\u3055\u308c\u308b\n&gt;&gt;&gt; print(f\"copied_value: {copied_value}\")          # \u5225\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u3067\u5909\u66f4\u3055\u308c\u306a\u3044\n\noriginal_list: [1, 2, 3, 4]\ncopied_reference: [1, 2, 3, 4]\ncopied_value: [1, 2, 3]\n</code></pre>"},{"location":"chapter07/#_14","title":"\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u6e2c\u5b9a","text":"<pre><code>&gt;&gt;&gt; import sys\n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u30c7\u30fc\u30bf\u578b\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\n&gt;&gt;&gt; integer_var = 42\n&gt;&gt;&gt; float_var = 3.14\n&gt;&gt;&gt; string_var = \"Hello, Python!\"\n&gt;&gt;&gt; list_var = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; dict_var = {\"name\": \"\u7530\u4e2d\", \"age\": 30}\n\n&gt;&gt;&gt; print(\"=== \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf ===\")\n&gt;&gt;&gt; print(f\"\u6574\u6570 ({integer_var}): {sys.getsizeof(integer_var)} bytes\")\n&gt;&gt;&gt; print(f\"\u6d6e\u52d5\u5c0f\u6570\u70b9 ({float_var}): {sys.getsizeof(float_var)} bytes\")\n&gt;&gt;&gt; print(f\"\u6587\u5b57\u5217 ('{string_var}'): {sys.getsizeof(string_var)} bytes\")\n&gt;&gt;&gt; print(f\"\u30ea\u30b9\u30c8 {list_var}: {sys.getsizeof(list_var)} bytes\")\n&gt;&gt;&gt; print(f\"\u8f9e\u66f8 {dict_var}: {sys.getsizeof(dict_var)} bytes\")\n\n=== \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf ===\n\u6574\u6570 (42): 28 bytes\n\u6d6e\u52d5\u5c0f\u6570\u70b9 (3.14): 24 bytes\n\u6587\u5b57\u5217 ('Hello, Python!'): 64 bytes\n\u30ea\u30b9\u30c8 [1, 2, 3, 4, 5]: 104 bytes\n\u8f9e\u66f8 {'name': '\u7530\u4e2d', 'age': 30}: 232 bytes\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u9577\u3055\u3068\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u95a2\u4fc2\n&gt;&gt;&gt; short_string = \"Hi\"\n&gt;&gt;&gt; medium_string = \"Hello, World!\"\n&gt;&gt;&gt; long_string = \"This is a very long string that contains many characters to test memory usage.\"\n\n&gt;&gt;&gt; print(f\"\u77ed\u3044\u6587\u5b57\u5217 ('{short_string}'): {sys.getsizeof(short_string)} bytes\")\n&gt;&gt;&gt; print(f\"\u4e2d\u7a0b\u5ea6\u306e\u6587\u5b57\u5217: {sys.getsizeof(medium_string)} bytes\")\n&gt;&gt;&gt; print(f\"\u9577\u3044\u6587\u5b57\u5217: {sys.getsizeof(long_string)} bytes\")\n\n\u77ed\u3044\u6587\u5b57\u5217 ('Hi'): 51 bytes\n\u4e2d\u7a0b\u5ea6\u306e\u6587\u5b57\u5217: 62 bytes\n\u9577\u3044\u6587\u5b57\u5217: 128 bytes\n</code></pre>"},{"location":"chapter07/#_15","title":"\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u3068\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb","text":"<pre><code>&gt;&gt;&gt; # \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\n&gt;&gt;&gt; global_counter = 0\n\n&gt;&gt;&gt; def increment_counter():\n...     \"\"\"\u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u5897\u52a0\u3055\u305b\u308b\u95a2\u6570\"\"\"\n...     global global_counter\n...     local_temp = global_counter  # \u30ed\u30fc\u30ab\u30eb\u5909\u6570\n...     global_counter += 1\n...     print(f\"\u30ed\u30fc\u30ab\u30eb\u5909\u6570 local_temp: {local_temp}\")\n...     print(f\"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 global_counter: {global_counter}\")\n...     # local_temp\u306f\u95a2\u6570\u7d42\u4e86\u6642\u306b\u30e1\u30e2\u30ea\u304b\u3089\u524a\u9664\u3055\u308c\u308b\n... \n\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u547c\u3073\u51fa\u3057\u524d: {global_counter}\")\n&gt;&gt;&gt; increment_counter()\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u547c\u3073\u51fa\u3057\u5f8c: {global_counter}\")\n\n&gt;&gt;&gt; # local_temp\u306b\u306f\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\uff08\u30b9\u30b3\u30fc\u30d7\u5916\uff09\n&gt;&gt;&gt; # print(local_temp)  # NameError: name 'local_temp' is not defined\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u524d: 0\n\u30ed\u30fc\u30ab\u30eb\u5909\u6570 local_temp: 0\n\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 global_counter: 1\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u5f8c: 1\n</code></pre>"},{"location":"chapter07/#_16","title":"\u307e\u3068\u3081\uff1a\u5909\u6570\u306e\u52b9\u679c\u7684\u306a\u4f7f\u3044\u65b9","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter07/#_17","title":"\u5909\u6570\u306e\u672c\u8cea","text":"<ul> <li>\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u300c\u540d\u524d\u4ed8\u304d\u306e\u7bb1\u300d</li> <li>\u30e1\u30e2\u30ea\u4e0a\u306e\u7279\u5b9a\u306e\u5834\u6240\u306b\u5024\u3092\u4fdd\u5b58</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u53ef\u8aad\u6027\u3068\u4fdd\u5b88\u6027\u3092\u5411\u4e0a</li> <li>\u540c\u3058\u5024\u3092\u7e70\u308a\u8fd4\u3057\u4f7f\u3048\u308b</li> </ul>"},{"location":"chapter07/#_18","title":"\u5909\u6570\u540d\u306e\u4ed8\u3051\u65b9","text":"<ul> <li>\u610f\u5473\u304c\u660e\u78ba\uff1a\u4f55\u3092\u4fdd\u5b58\u3059\u308b\u304b\u304c\u5206\u304b\u308b\u540d\u524d</li> <li>\u4e00\u8cab\u6027\uff1a\u540c\u3058\u3088\u3046\u306a\u5909\u6570\u306b\u306f\u4f3c\u305f\u547d\u540d\u898f\u5247</li> <li>\u9069\u5207\u306a\u9577\u3055\uff1a\u77ed\u3059\u304e\u305a\u9577\u3059\u304e\u305a</li> <li>\u898f\u7d04\u306b\u5f93\u3046\uff1asnake_case\u3092\u4f7f\u7528</li> </ul>"},{"location":"chapter07/#_19","title":"\u826f\u3044\u5909\u6570\u540d\u306e\u4f8b","text":"<pre><code>user_name = \"\u7530\u4e2d\u592a\u90ce\"\ntotal_price = 1500\nis_premium_member = True\nmax_retry_count = 3\ndistance_km = 100\n</code></pre>"},{"location":"chapter07/#_20","title":"\u60aa\u3044\u5909\u6570\u540d\u306e\u4f8b","text":"<pre><code>x = \"\u7530\u4e2d\u592a\u90ce\"          # \u610f\u5473\u4e0d\u660e\ndata = 1500            # \u4f55\u306e\u30c7\u30fc\u30bf\uff1f\ntemp = True            # \u4e00\u6642\u7684\uff1f\nusr_nm = \"\u7530\u4e2d\"         # \u7701\u7565\u3057\u3059\u304e\n</code></pre>"},{"location":"chapter07/#_21","title":"\u30e1\u30e2\u30ea\u3068\u306e\u95a2\u4fc2","text":"<ul> <li>\u5909\u6570\u306f\u30e1\u30e2\u30ea\u4e0a\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u6307\u3059</li> <li>\u540c\u3058\u5024\u306f\u540c\u3058\u30e1\u30e2\u30ea\u4f4d\u7f6e\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u304c\u3042\u308b</li> <li>\u53c2\u7167\u3068\u30b3\u30d4\u30fc\u306e\u9055\u3044\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u91cd\u8981</li> <li>\u30c7\u30fc\u30bf\u578b\u306b\u3088\u3063\u3066\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u7570\u306a\u308b</li> </ul>"},{"location":"chapter07/#_22","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528","text":"<ul> <li>\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0</li> <li>\u5546\u54c1\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0</li> <li>\u5728\u5eab\u7ba1\u7406\u3068\u8ca9\u58f2\u8a18\u9332</li> <li>\u8a2d\u5b9a\u5024\u3068\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306e\u5206\u96e2</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5224\u65ad\u3092\u3055\u305b\u308b\u300c\u6761\u4ef6\u5206\u5c90\u300d\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u5e74\u9f62\u306b\u3088\u308b\u6599\u91d1\u8a08\u7b97\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3001\u5b9f\u969b\u306e\u5224\u65ad\u51e6\u7406\u3092\u901a\u3058\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u77e5\u80fd\u3092\u6301\u305f\u305b\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter08/","title":"\u7b2c8\u7ae0\uff1a\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5224\u65ad\u3055\u305b\u3088\u3046","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u306f\u3001\u6c7a\u307e\u3063\u305f\u51e6\u7406\u3092\u9806\u756a\u306b\u5b9f\u884c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u300c\u3082\u3057\u3082\u301c\u3060\u3063\u305f\u3089\u301c\u3059\u308b\u300d\u3068\u3044\u3046\u5224\u65ad\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u6761\u4ef6\u5206\u5c90\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306b\u5224\u65ad\u3055\u305b\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u5e74\u9f62\u306b\u3088\u308b\u6620\u753b\u6599\u91d1\u8a08\u7b97\u3084\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3001\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u77e5\u80fd\u3092\u6301\u305f\u305b\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter08/#if","title":"\u3082\u3057\u3082\u301c\u3060\u3063\u305f\u3089\uff08if\u6587\uff09","text":""},{"location":"chapter08/#_1","title":"\u6761\u4ef6\u5206\u5c90\u306e\u57fa\u672c\u6982\u5ff5","text":"<p>\u6761\u4ef6\u5206\u5c90\u3068\u306f\u3001\u3042\u308b\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u308b\u304b\u3069\u3046\u304b\u306b\u3088\u3063\u3066\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u3092\u5909\u3048\u308b\u3053\u3068\u3067\u3059\u3002\u3053\u308c\u306f\u79c1\u305f\u3061\u304c\u65e5\u5e38\u7684\u306b\u884c\u3063\u3066\u3044\u308b\u5224\u65ad\u3068\u540c\u3058\u3067\u3059\uff1a</p> <p>\u65e5\u5e38\u306e\u4f8b\uff1a - \u3082\u3057\u96e8\u304c\u964d\u3063\u3066\u3044\u305f\u3089\u3001\u5098\u3092\u6301\u3063\u3066\u884c\u304f - \u3082\u3057\u6642\u9593\u304c\u5348\u524d\u4e2d\u3060\u3063\u305f\u3089\u3001\u300c\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\u300d\u3068\u6328\u62f6\u3059\u308b - \u3082\u3057\u6b8b\u9ad8\u304c\u8db3\u308a\u306a\u304b\u3063\u305f\u3089\u3001\u304a\u91d1\u3092\u4e0b\u308d\u3057\u306b\u884c\u304f</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\uff1a - \u3082\u3057\u30e6\u30fc\u30b6\u30fc\u304c\u6210\u4eba\u3060\u3063\u305f\u3089\u3001\u5927\u4eba\u6599\u91d1\u3092\u9069\u7528\u3059\u308b - \u3082\u3057\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u304b\u3063\u305f\u3089\u3001\u30ed\u30b0\u30a4\u30f3\u3092\u8a31\u53ef\u3059\u308b - \u3082\u3057\u5728\u5eab\u304c\u4e0d\u8db3\u3057\u3066\u3044\u305f\u3089\u3001\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b</p>"},{"location":"chapter08/#if_1","title":"if\u6587\u306e\u57fa\u672c\u69cb\u6587","text":"<p>Python\u306eif\u6587\u306f\u4ee5\u4e0b\u306e\u5f62\u3067\u66f8\u304d\u307e\u3059\uff1a</p> <pre><code>if \u6761\u4ef6:\n    \u6761\u4ef6\u304c\u771f\u306e\u3068\u304d\u306b\u5b9f\u884c\u3059\u308b\u51e6\u7406\n</code></pre> <p>\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8\uff1a 1. <code>if</code>\u306e\u5f8c\u306b\u6761\u4ef6\u3092\u66f8\u304f 2. \u6761\u4ef6\u306e\u5f8c\u306b<code>:</code>\uff08\u30b3\u30ed\u30f3\uff09\u3092\u4ed8\u3051\u308b 3. \u5b9f\u884c\u3057\u305f\u3044\u51e6\u7406\u306f\u30a4\u30f3\u30c7\u30f3\u30c8\uff08\u5b57\u4e0b\u3052\uff09\u3057\u3066\u66f8\u304f</p>"},{"location":"chapter08/#_2","title":"\u7c21\u5358\u306a\u4f8b\u304b\u3089\u59cb\u3081\u3088\u3046","text":"<pre><code>&gt;&gt;&gt; age = 20\n\n&gt;&gt;&gt; if age &gt;= 18:\n...     print(\"\u6210\u4eba\u3067\u3059\")\n\u6210\u4eba\u3067\u3059\n\n&gt;&gt;&gt; # \u6761\u4ef6\u304c\u507d\u306e\u5834\u5408\u306f\u4f55\u3082\u5b9f\u884c\u3055\u308c\u306a\u3044\n&gt;&gt;&gt; age = 16\n\n&gt;&gt;&gt; if age &gt;= 18:\n...     print(\"\u6210\u4eba\u3067\u3059\")\n&gt;&gt;&gt; # \u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\n</code></pre>"},{"location":"chapter08/#if-else","title":"if-else\u6587","text":"<p>\u6761\u4ef6\u304c\u507d\u306e\u5834\u5408\u306e\u51e6\u7406\u3082\u66f8\u304d\u305f\u3044\u5834\u5408\u306f\u3001<code>else</code>\u3092\u4f7f\u3044\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; age = 16\n\n&gt;&gt;&gt; if age &gt;= 18:\n...     print(\"\u6210\u4eba\u3067\u3059\")\n... else:\n...     print(\"\u672a\u6210\u5e74\u3067\u3059\")\n\u672a\u6210\u5e74\u3067\u3059\n\n&gt;&gt;&gt; # \u5e74\u9f62\u306b\u5fdc\u3058\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\n&gt;&gt;&gt; name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; age = 25\n\n&gt;&gt;&gt; if age &gt;= 18:\n...     print(f\"{name}\u3055\u3093\u306f\u6210\u4eba\u3067\u3059\")\n... else:\n...     print(f\"{name}\u3055\u3093\u306f\u672a\u6210\u5e74\u3067\u3059\")\n\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306f\u6210\u4eba\u3067\u3059\n</code></pre>"},{"location":"chapter08/#if-elif-else","title":"if-elif-else\u6587","text":"<p>\u8907\u6570\u306e\u6761\u4ef6\u3092\u5224\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f\u3001<code>elif</code>\uff08else if\uff09\u3092\u4f7f\u3044\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; score = 85\n\n&gt;&gt;&gt; if score &gt;= 90:\n...     grade = \"A\"\n... elif score &gt;= 80:\n...     grade = \"B\"\n... elif score &gt;= 70:\n...     grade = \"C\"\n... elif score &gt;= 60:\n...     grade = \"D\"\n... else:\n...     grade = \"F\"\n\n&gt;&gt;&gt; print(f\"\u70b9\u6570: {score}, \u8a55\u4fa1: {grade}\")\n\u70b9\u6570: 85, \u8a55\u4fa1: B\n</code></pre> <p>\u91cd\u8981\uff1a<code>elif</code>\u306f\u4e0a\u304b\u3089\u9806\u756a\u306b\u8a55\u4fa1\u3055\u308c\u3001\u6700\u521d\u306b\u771f\u306b\u306a\u3063\u305f\u6761\u4ef6\u3060\u3051\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"chapter08/#_3","title":"\u3010\u5b9f\u884c\u3011\u5e74\u9f62\u306b\u3088\u308b\u6620\u753b\u6599\u91d1\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u5b9f\u969b\u306e\u6620\u753b\u9928\u306e\u6599\u91d1\u30b7\u30b9\u30c6\u30e0\u3092\u6a21\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter08/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u5e74\u9f62\u5225\u6599\u91d1","text":"<pre><code>&gt;&gt;&gt; def calculate_movie_ticket_price(age):\n...     \"\"\"\u5e74\u9f62\u306b\u57fa\u3065\u3044\u3066\u6620\u753b\u30c1\u30b1\u30c3\u30c8\u6599\u91d1\u3092\u8a08\u7b97\"\"\"\n...     \n...     if age &lt; 3:\n...         price = 0  # 3\u6b73\u672a\u6e80\u7121\u6599\n...         category = \"\u5e7c\u5150\uff08\u7121\u6599\uff09\"\n...     elif age &lt; 12:\n...         price = 1000  # \u5b50\u4f9b\u6599\u91d1\n...         category = \"\u5b50\u4f9b\"\n...     elif age &lt; 18:\n...         price = 1300  # \u5b66\u751f\u6599\u91d1\n...         category = \"\u5b66\u751f\"\n...     elif age &lt; 60:\n...         price = 1800  # \u4e00\u822c\u6599\u91d1\n...         category = \"\u4e00\u822c\"\n...     else:\n...         price = 1200  # \u30b7\u30cb\u30a2\u6599\u91d1\n...         category = \"\u30b7\u30cb\u30a2\"\n...     \n...     return price, category\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u7528\u306e\u5e74\u9f62\u30c7\u30fc\u30bf\n&gt;&gt;&gt; test_ages = [2, 8, 15, 25, 45, 65, 80]\n\n&gt;&gt;&gt; print(\"=== \u6620\u753b\u30c1\u30b1\u30c3\u30c8\u6599\u91d1 ===\")\n&gt;&gt;&gt; for age in test_ages:\n...     price, category = calculate_movie_ticket_price(age)\n...     print(f\"{age}\u6b73: {category} - {price}\u5186\")\n\n=== \u6620\u753b\u30c1\u30b1\u30c3\u30c8\u6599\u91d1 ===\n2\u6b73: \u5e7c\u5150\uff08\u7121\u6599\uff09 - 0\u5186\n8\u6b73: \u5b50\u4f9b - 1000\u5186\n15\u6b73: \u5b66\u751f - 1300\u5186\n25\u6b73: \u4e00\u822c - 1800\u5186\n45\u6b73: \u4e00\u822c - 1800\u5186\n65\u6b73: \u30b7\u30cb\u30a2 - 1200\u5186\n80\u6b73: \u30b7\u30cb\u30a2 - 1200\u5186\n</code></pre>"},{"location":"chapter08/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u6642\u9593\u5e2f\u306b\u3088\u308b\u5272\u5f15","text":"<pre><code>&gt;&gt;&gt; import datetime\n\n&gt;&gt;&gt; def get_time_discount(current_time):\n...     \"\"\"\u6642\u9593\u5e2f\u306b\u3088\u308b\u5272\u5f15\u3092\u8a08\u7b97\"\"\"\n...     hour = current_time.hour\n...     \n...     if hour &lt; 10:\n...         return 0.2, \"\u65e9\u671d\u5272\u5f15\"  # 20%\u30aa\u30d5\n...     elif hour &lt; 18:\n...         return 0, \"\u901a\u5e38\u6599\u91d1\"      # \u5272\u5f15\u306a\u3057\n...     elif hour &lt; 20:\n...         return 0.1, \"\u5915\u65b9\u5272\u5f15\"   # 10%\u30aa\u30d5\n...     else:\n...         return 0.3, \"\u30ec\u30a4\u30c8\u5272\u5f15\" # 30%\u30aa\u30d5\n... \n\n&gt;&gt;&gt; def calculate_final_price(age, show_time=None):\n...     \"\"\"\u6700\u7d42\u7684\u306a\u6599\u91d1\u3092\u8a08\u7b97\uff08\u6642\u9593\u5272\u5f15\u8fbc\u307f\uff09\"\"\"\n...     if show_time is None:\n...         show_time = datetime.datetime.now()\n...     \n...     # \u57fa\u672c\u6599\u91d1\u3092\u53d6\u5f97\n...     base_price, age_category = calculate_movie_ticket_price(age)\n...     \n...     # \u6642\u9593\u5272\u5f15\u3092\u53d6\u5f97\n...     discount_rate, time_category = get_time_discount(show_time)\n...     \n...     # \u6700\u7d42\u6599\u91d1\u3092\u8a08\u7b97\n...     discount_amount = base_price * discount_rate\n...     final_price = base_price - discount_amount\n...     \n...     return {\n...         \"age\": age,\n...         \"age_category\": age_category,\n...         \"base_price\": base_price,\n...         \"time_category\": time_category,\n...         \"discount_rate\": discount_rate,\n...         \"discount_amount\": discount_amount,\n...         \"final_price\": final_price,\n...         \"show_time\": show_time.strftime(\"%H:%M\")\n...     }\n... \n\n&gt;&gt;&gt; # \u7570\u306a\u308b\u6642\u9593\u5e2f\u3067\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; test_times = [\n...     datetime.datetime(2024, 1, 1, 9, 0),   # 9:00 \u65e9\u671d\n...     datetime.datetime(2024, 1, 1, 14, 0),  # 14:00 \u663c\u9593\n...     datetime.datetime(2024, 1, 1, 19, 0),  # 19:00 \u5915\u65b9\n...     datetime.datetime(2024, 1, 1, 22, 0),  # 22:00 \u6df1\u591c\n... ]\n\n&gt;&gt;&gt; age = 25  # \u4e00\u822c\u6599\u91d1\n&gt;&gt;&gt; print(\"=== \u6642\u9593\u5e2f\u5225\u6599\u91d1\uff0825\u6b73\u30fb\u4e00\u822c\uff09 ===\")\n&gt;&gt;&gt; for test_time in test_times:\n...     result = calculate_final_price(age, test_time)\n...     print(f\"{result['show_time']}: {result['time_category']}\")\n...     print(f\"  \u57fa\u672c\u6599\u91d1: {result['base_price']}\u5186\")\n...     print(f\"  \u5272\u5f15: {result['discount_rate']:.0%} ({result['discount_amount']:.0f}\u5186)\")\n...     print(f\"  \u6700\u7d42\u6599\u91d1: {result['final_price']:.0f}\u5186\")\n...     print(\"---\")\n</code></pre>"},{"location":"chapter08/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u4f1a\u54e1\u5272\u5f15\u3068\u30dd\u30a4\u30f3\u30c8\u9084\u5143","text":"<pre><code>&gt;&gt;&gt; def calculate_member_benefits(is_member, member_level, final_price):\n...     \"\"\"\u4f1a\u54e1\u7279\u5178\u3092\u8a08\u7b97\"\"\"\n...     if not is_member:\n...         return 0, 0, \"\u975e\u4f1a\u54e1\"\n...     \n...     # \u4f1a\u54e1\u30ec\u30d9\u30eb\u5225\u306e\u5272\u5f15\u7387\n...     if member_level == \"\u30b4\u30fc\u30eb\u30c9\":\n...         member_discount_rate = 0.15\n...         point_rate = 0.05\n...     elif member_level == \"\u30b7\u30eb\u30d0\u30fc\":\n...         member_discount_rate = 0.10\n...         point_rate = 0.03\n...     else:  # \u30d6\u30ed\u30f3\u30ba\n...         member_discount_rate = 0.05\n...         point_rate = 0.02\n...     \n...     member_discount = final_price * member_discount_rate\n...     points_earned = int(final_price * point_rate)\n...     \n...     return member_discount, points_earned, f\"{member_level}\u4f1a\u54e1\"\n... \n\n&gt;&gt;&gt; def calculate_complete_price(age, is_member=False, member_level=\"\u30d6\u30ed\u30f3\u30ba\", show_time=None):\n...     \"\"\"\u3059\u3079\u3066\u306e\u5272\u5f15\u3092\u9069\u7528\u3057\u305f\u6700\u7d42\u6599\u91d1\u8a08\u7b97\"\"\"\n...     # \u57fa\u672c\u6599\u91d1\u3068\u6642\u9593\u5272\u5f15\n...     price_info = calculate_final_price(age, show_time)\n...     \n...     # \u4f1a\u54e1\u5272\u5f15\n...     member_discount, points, member_status = calculate_member_benefits(\n...         is_member, member_level, price_info[\"final_price\"]\n...     )\n...     \n...     # \u6700\u7d42\u8a08\u7b97\n...     final_price = price_info[\"final_price\"] - member_discount\n...     \n...     return {\n...         **price_info,\n...         \"is_member\": is_member,\n...         \"member_status\": member_status,\n...         \"member_discount\": member_discount,\n...         \"points_earned\": points,\n...         \"total_discount\": price_info[\"discount_amount\"] + member_discount,\n...         \"final_price_with_member\": final_price\n...     }\n... \n\n&gt;&gt;&gt; # \u5b8c\u5168\u7248\u30c6\u30b9\u30c8\n&gt;&gt;&gt; customers = [\n...     {\"name\": \"\u7530\u4e2d\u592a\u90ce\", \"age\": 25, \"is_member\": False},\n...     {\"name\": \"\u4f50\u85e4\u82b1\u5b50\", \"age\": 15, \"is_member\": True, \"member_level\": \"\u30b7\u30eb\u30d0\u30fc\"},\n...     {\"name\": \"\u9234\u6728\u4e00\u90ce\", \"age\": 70, \"is_member\": True, \"member_level\": \"\u30b4\u30fc\u30eb\u30c9\"},\n... ]\n\n&gt;&gt;&gt; show_time = datetime.datetime(2024, 1, 1, 19, 0)  # 19:00\u4e0a\u6620\n\n&gt;&gt;&gt; print(\"=== \u5b8c\u5168\u7248\u6599\u91d1\u8a08\u7b97 ===\")\n&gt;&gt;&gt; for customer in customers:\n...     result = calculate_complete_price(\n...         customer[\"age\"],\n...         customer.get(\"is_member\", False),\n...         customer.get(\"member_level\", \"\u30d6\u30ed\u30f3\u30ba\"),\n...         show_time\n...     )\n...     \n...     print(f\"\u304a\u5ba2\u69d8: {customer['name']} ({result['age']}\u6b73)\")\n...     print(f\"\u30ab\u30c6\u30b4\u30ea: {result['age_category']}\")\n...     print(f\"\u4e0a\u6620\u6642\u9593: {result['show_time']} ({result['time_category']})\")\n...     print(f\"\u4f1a\u54e1\u30b9\u30c6\u30fc\u30bf\u30b9: {result['member_status']}\")\n...     print(f\"\u57fa\u672c\u6599\u91d1: {result['base_price']}\u5186\")\n...     print(f\"\u6642\u9593\u5272\u5f15: -{result['discount_amount']:.0f}\u5186\")\n...     print(f\"\u4f1a\u54e1\u5272\u5f15: -{result['member_discount']:.0f}\u5186\")\n...     print(f\"\u6700\u7d42\u6599\u91d1: {result['final_price_with_member']:.0f}\u5186\")\n...     if result['is_member']:\n...         print(f\"\u7372\u5f97\u30dd\u30a4\u30f3\u30c8: {result['points_earned']}pt\")\n...     print(\"=\" * 30)\n</code></pre>"},{"location":"chapter08/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u6620\u753b\u30c1\u30b1\u30c3\u30c8\u8ca9\u58f2\u30b7\u30b9\u30c6\u30e0","text":"<pre><code># \u6620\u753b\u30c1\u30b1\u30c3\u30c8\u8ca9\u58f2\u30b7\u30b9\u30c6\u30e0\nfrom datetime import datetime, time\n\nclass MovieTicketSystem:\n    def __init__(self):\n        # \u57fa\u672c\u6599\u91d1\u8a2d\u5b9a\n        self.age_prices = {\n            \"\u5e7c\u5150\": {\"min_age\": 0, \"max_age\": 2, \"price\": 0},\n            \"\u5b50\u4f9b\": {\"min_age\": 3, \"max_age\": 11, \"price\": 1000},\n            \"\u5b66\u751f\": {\"min_age\": 12, \"max_age\": 17, \"price\": 1300},\n            \"\u4e00\u822c\": {\"min_age\": 18, \"max_age\": 59, \"price\": 1800},\n            \"\u30b7\u30cb\u30a2\": {\"min_age\": 60, \"max_age\": 120, \"price\": 1200}\n        }\n\n        # \u6642\u9593\u5e2f\u5272\u5f15\u8a2d\u5b9a\n        self.time_discounts = [\n            {\"start\": time(0, 0), \"end\": time(9, 59), \"rate\": 0.2, \"name\": \"\u65e9\u671d\u5272\u5f15\"},\n            {\"start\": time(10, 0), \"end\": time(17, 59), \"rate\": 0.0, \"name\": \"\u901a\u5e38\u6599\u91d1\"},\n            {\"start\": time(18, 0), \"end\": time(19, 59), \"rate\": 0.1, \"name\": \"\u5915\u65b9\u5272\u5f15\"},\n            {\"start\": time(20, 0), \"end\": time(23, 59), \"rate\": 0.3, \"name\": \"\u30ec\u30a4\u30c8\u5272\u5f15\"}\n        ]\n\n        # \u4f1a\u54e1\u30ec\u30d9\u30eb\u8a2d\u5b9a\n        self.member_levels = {\n            \"\u30d6\u30ed\u30f3\u30ba\": {\"discount\": 0.05, \"point_rate\": 0.02},\n            \"\u30b7\u30eb\u30d0\u30fc\": {\"discount\": 0.10, \"point_rate\": 0.03},\n            \"\u30b4\u30fc\u30eb\u30c9\": {\"discount\": 0.15, \"point_rate\": 0.05}\n        }\n\n    def get_age_category_and_price(self, age):\n        \"\"\"\u5e74\u9f62\u304b\u3089\u6599\u91d1\u30ab\u30c6\u30b4\u30ea\u3068\u57fa\u672c\u6599\u91d1\u3092\u53d6\u5f97\"\"\"\n        for category, info in self.age_prices.items():\n            if info[\"min_age\"] &lt;= age &lt;= info[\"max_age\"]:\n                return category, info[\"price\"]\n        return \"\u4e00\u822c\", self.age_prices[\"\u4e00\u822c\"][\"price\"]  # \u30c7\u30d5\u30a9\u30eb\u30c8\n\n    def get_time_discount(self, show_time):\n        \"\"\"\u6642\u9593\u5e2f\u5272\u5f15\u3092\u53d6\u5f97\"\"\"\n        show_time_only = show_time.time()\n\n        for discount_info in self.time_discounts:\n            if discount_info[\"start\"] &lt;= show_time_only &lt;= discount_info[\"end\"]:\n                return discount_info[\"rate\"], discount_info[\"name\"]\n\n        return 0.0, \"\u901a\u5e38\u6599\u91d1\"  # \u30c7\u30d5\u30a9\u30eb\u30c8\n\n    def calculate_ticket_price(self, age, show_time, is_member=False, member_level=\"\u30d6\u30ed\u30f3\u30ba\"):\n        \"\"\"\u30c1\u30b1\u30c3\u30c8\u6599\u91d1\u3092\u8a08\u7b97\"\"\"\n        # \u57fa\u672c\u6599\u91d1\n        age_category, base_price = self.get_age_category_and_price(age)\n\n        # \u6642\u9593\u5272\u5f15\n        time_discount_rate, time_discount_name = self.get_time_discount(show_time)\n        time_discount_amount = base_price * time_discount_rate\n        price_after_time_discount = base_price - time_discount_amount\n\n        # \u4f1a\u54e1\u5272\u5f15\n        if is_member and member_level in self.member_levels:\n            member_info = self.member_levels[member_level]\n            member_discount_rate = member_info[\"discount\"]\n            point_rate = member_info[\"point_rate\"]\n            member_status = f\"{member_level}\u4f1a\u54e1\"\n        else:\n            member_discount_rate = 0\n            point_rate = 0\n            member_status = \"\u975e\u4f1a\u54e1\"\n\n        member_discount_amount = price_after_time_discount * member_discount_rate\n        final_price = price_after_time_discount - member_discount_amount\n        points_earned = int(final_price * point_rate) if is_member else 0\n\n        return {\n            \"age\": age,\n            \"age_category\": age_category,\n            \"base_price\": base_price,\n            \"time_discount_name\": time_discount_name,\n            \"time_discount_rate\": time_discount_rate,\n            \"time_discount_amount\": time_discount_amount,\n            \"member_status\": member_status,\n            \"member_discount_rate\": member_discount_rate,\n            \"member_discount_amount\": member_discount_amount,\n            \"final_price\": final_price,\n            \"points_earned\": points_earned,\n            \"show_time\": show_time.strftime(\"%Y-%m-%d %H:%M\"),\n            \"total_savings\": time_discount_amount + member_discount_amount\n        }\n\n    def print_ticket_receipt(self, ticket_info):\n        \"\"\"\u30c1\u30b1\u30c3\u30c8\u6599\u91d1\u306e\u660e\u7d30\u3092\u8868\u793a\"\"\"\n        print(\"=\" * 40)\n        print(\"     \u6620\u753b\u30c1\u30b1\u30c3\u30c8\u6599\u91d1\u660e\u7d30\")\n        print(\"=\" * 40)\n        print(f\"\u5e74\u9f62: {ticket_info['age']}\u6b73 ({ticket_info['age_category']})\")\n        print(f\"\u4e0a\u6620\u6642\u9593: {ticket_info['show_time']}\")\n        print(f\"\u4f1a\u54e1\u30b9\u30c6\u30fc\u30bf\u30b9: {ticket_info['member_status']}\")\n        print(\"-\" * 40)\n        print(f\"\u57fa\u672c\u6599\u91d1: {ticket_info['base_price']:,}\u5186\")\n\n        if ticket_info['time_discount_amount'] &gt; 0:\n            print(f\"{ticket_info['time_discount_name']}: -{ticket_info['time_discount_amount']:,.0f}\u5186\")\n\n        if ticket_info['member_discount_amount'] &gt; 0:\n            print(f\"\u4f1a\u54e1\u5272\u5f15: -{ticket_info['member_discount_amount']:,.0f}\u5186\")\n\n        print(\"-\" * 40)\n        print(f\"\u304a\u652f\u6255\u3044\u91d1\u984d: {ticket_info['final_price']:,.0f}\u5186\")\n\n        if ticket_info['total_savings'] &gt; 0:\n            print(f\"\u304a\u5f97\u984d: {ticket_info['total_savings']:,.0f}\u5186\")\n\n        if ticket_info['points_earned'] &gt; 0:\n            print(f\"\u7372\u5f97\u30dd\u30a4\u30f3\u30c8: {ticket_info['points_earned']}pt\")\n\n        print(\"=\" * 40)\n\n# \u4f7f\u7528\u4f8b\nticket_system = MovieTicketSystem()\n\n# \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\ntest_cases = [\n    {\"age\": 8, \"show_time\": datetime(2024, 1, 1, 10, 30), \"is_member\": False},\n    {\"age\": 25, \"show_time\": datetime(2024, 1, 1, 21, 0), \"is_member\": True, \"member_level\": \"\u30b4\u30fc\u30eb\u30c9\"},\n    {\"age\": 70, \"show_time\": datetime(2024, 1, 1, 14, 0), \"is_member\": True, \"member_level\": \"\u30b7\u30eb\u30d0\u30fc\"}\n]\n\nfor i, case in enumerate(test_cases, 1):\n    print(f\"\\n--- \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9 {i} ---\")\n    ticket_info = ticket_system.calculate_ticket_price(**case)\n    ticket_system.print_ticket_receipt(ticket_info)\n</code></pre>"},{"location":"chapter08/#truefalse","title":"\u771f\u507d\u5024\uff08True\u3068False\uff09","text":"<p>\u6761\u4ef6\u5206\u5c90\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u771f\u507d\u5024\uff08\u30d6\u30fc\u30eb\u5024\uff09\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter08/#_4","title":"\u30d6\u30fc\u30eb\u5024\u306e\u57fa\u672c","text":"<p>Python\u306b\u306f\u3001\u771f\u507d\u3092\u8868\u3059\u305f\u3081\u306e\u7279\u5225\u306a\u30c7\u30fc\u30bf\u578b\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u30d6\u30fc\u30eb\u5024\u306e\u57fa\u672c\n&gt;&gt;&gt; is_adult = True\n&gt;&gt;&gt; is_student = False\n\n&gt;&gt;&gt; print(type(is_adult))\n&lt;class 'bool'&gt;\n\n&gt;&gt;&gt; print(f\"\u6210\u4eba: {is_adult}\")\n&gt;&gt;&gt; print(f\"\u5b66\u751f: {is_student}\")\n\n\u6210\u4eba: True\n\u5b66\u751f: False\n</code></pre>"},{"location":"chapter08/#_5","title":"\u6bd4\u8f03\u6f14\u7b97\u5b50","text":"<p>\u6761\u4ef6\u3092\u4f5c\u308b\u305f\u3081\u306b\u4f7f\u7528\u3059\u308b\u6bd4\u8f03\u6f14\u7b97\u5b50\uff1a</p> \u6f14\u7b97\u5b50 \u610f\u5473 \u4f8b \u7d50\u679c <code>==</code> \u7b49\u3057\u3044 <code>5 == 5</code> <code>True</code> <code>!=</code> \u7b49\u3057\u304f\u306a\u3044 <code>5 != 3</code> <code>True</code> <code>&lt;</code> \u3088\u308a\u5c0f\u3055\u3044 <code>3 &lt; 5</code> <code>True</code> <code>&lt;=</code> \u4ee5\u4e0b <code>5 &lt;= 5</code> <code>True</code> <code>&gt;</code> \u3088\u308a\u5927\u304d\u3044 <code>7 &gt; 3</code> <code>True</code> <code>&gt;=</code> \u4ee5\u4e0a <code>5 &gt;= 7</code> <code>False</code> <pre><code>&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; limit = 18\n\n&gt;&gt;&gt; print(f\"{age} == {limit}: {age == limit}\")\n&gt;&gt;&gt; print(f\"{age} != {limit}: {age != limit}\")\n&gt;&gt;&gt; print(f\"{age} &gt; {limit}: {age &gt; limit}\")\n&gt;&gt;&gt; print(f\"{age} &gt;= {limit}: {age &gt;= limit}\")\n\n25 == 18: False\n25 != 18: True\n25 &gt; 18: True\n25 &gt;= 18: True\n</code></pre>"},{"location":"chapter08/#_6","title":"\u6587\u5b57\u5217\u306e\u6bd4\u8f03","text":"<pre><code>&gt;&gt;&gt; name1 = \"\u7530\u4e2d\"\n&gt;&gt;&gt; name2 = \"\u4f50\u85e4\"\n&gt;&gt;&gt; name3 = \"\u7530\u4e2d\"\n\n&gt;&gt;&gt; print(f\"'{name1}' == '{name3}': {name1 == name3}\")\n&gt;&gt;&gt; print(f\"'{name1}' != '{name2}': {name1 != name2}\")\n\n'\u7530\u4e2d' == '\u7530\u4e2d': True\n'\u7530\u4e2d' != '\u4f50\u85e4': True\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u306e\u8f9e\u66f8\u9806\u6bd4\u8f03\n&gt;&gt;&gt; print(f\"'apple' &lt; 'banana': {'apple' &lt; 'banana'}\")\n&gt;&gt;&gt; print(f\"'zebra' &gt; 'apple': {'zebra' &gt; 'apple'}\")\n\n'apple' &lt; 'banana': True\n'zebra' &gt; 'apple': True\n</code></pre>"},{"location":"chapter08/#python","title":"Python\u306b\u304a\u3051\u308b\u300c\u507d\u300d\u3068\u307f\u306a\u3055\u308c\u308b\u5024","text":"<p>Python\u3067\u306f\u3001<code>False</code>\u4ee5\u5916\u306b\u3082\u300c\u507d\u300d\u3068\u307f\u306a\u3055\u308c\u308b\u5024\u304c\u3042\u308a\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u507d\u3068\u307f\u306a\u3055\u308c\u308b\u5024\n&gt;&gt;&gt; false_values = [\n...     False,\n...     0,           # \u30bc\u30ed\n...     0.0,         # \u30bc\u30ed\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\n...     \"\",          # \u7a7a\u6587\u5b57\u5217\n...     [],          # \u7a7a\u30ea\u30b9\u30c8\n...     {},          # \u7a7a\u8f9e\u66f8\n...     None         # None\u5024\n... ]\n\n&gt;&gt;&gt; for value in false_values:\n...     print(f\"{repr(value):&gt;10}: {bool(value)}\")\n\n     False: False\n         0: False\n       0.0: False\n        '': False\n        []: False\n        {}: False\n      None: False\n\n&gt;&gt;&gt; # \u771f\u3068\u307f\u306a\u3055\u308c\u308b\u5024\uff08\u4e0a\u8a18\u4ee5\u5916\u306e\u3059\u3079\u3066\uff09\n&gt;&gt;&gt; true_values = [\n...     True,\n...     1,           # \u30bc\u30ed\u4ee5\u5916\u306e\u6570\n...     -1,          # \u8ca0\u306e\u6570\u3082\u771f\n...     \"hello\",     # \u7a7a\u3067\u306a\u3044\u6587\u5b57\u5217\n...     [1, 2, 3],   # \u7a7a\u3067\u306a\u3044\u30ea\u30b9\u30c8\n...     {\"key\": \"value\"}  # \u7a7a\u3067\u306a\u3044\u8f9e\u66f8\n... ]\n\n&gt;&gt;&gt; for value in true_values:\n...     print(f\"{repr(value):&gt;15}: {bool(value)}\")\n\n           True: True\n              1: True\n             -1: True\n        'hello': True\n      [1, 2, 3]: True\n{'key': 'value'}: True\n</code></pre>"},{"location":"chapter08/#_7","title":"\u3010\u5b9f\u884c\u3011\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u5b9f\u7528\u7684\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u8907\u96d1\u306a\u6761\u4ef6\u5206\u5c90\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter08/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af","text":"<pre><code>&gt;&gt;&gt; def check_password_basic(password):\n...     \"\"\"\u57fa\u672c\u7684\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af\"\"\"\n...     \n...     # \u9577\u3055\u30c1\u30a7\u30c3\u30af\n...     if len(password) &lt; 8:\n...         return False, \"\u30d1\u30b9\u30ef\u30fc\u30c9\u306f8\u6587\u5b57\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     \n...     # \u82f1\u6570\u5b57\u30c1\u30a7\u30c3\u30af\n...     has_letter = False\n...     has_digit = False\n...     \n...     for char in password:\n...         if char.isalpha():  # \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\n...             has_letter = True\n...         elif char.isdigit():  # \u6570\u5b57\n...             has_digit = True\n...     \n...     if not has_letter:\n...         return False, \"\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\"\n...     \n...     if not has_digit:\n...         return False, \"\u6570\u5b57\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\"\n...     \n...     return True, \"\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u6709\u52b9\u3067\u3059\"\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\n&gt;&gt;&gt; test_passwords = [\n...     \"abc\",           # \u77ed\u3044\n...     \"abcdefgh\",      # \u6570\u5b57\u306a\u3057\n...     \"12345678\",      # \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306a\u3057\n...     \"abc12345\"       # \u6709\u52b9\n... ]\n\n&gt;&gt;&gt; print(\"=== \u57fa\u672c\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af ===\")\n&gt;&gt;&gt; for pwd in test_passwords:\n...     is_valid, message = check_password_basic(pwd)\n...     status = \"\u2713\" if is_valid else \"\u2717\"\n...     print(f\"{status} '{pwd}': {message}\")\n\n=== \u57fa\u672c\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af ===\n\u2717 'abc': \u30d1\u30b9\u30ef\u30fc\u30c9\u306f8\u6587\u5b57\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n\u2717 'abcdefgh': \u6570\u5b57\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\n\u2717 '12345678': \u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u542b\u3081\u3066\u304f\u3060\u3055\u3044\n\u2713 'abc12345': \u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u6709\u52b9\u3067\u3059\n</code></pre>"},{"location":"chapter08/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u8a73\u7d30\u306a\u5f37\u5ea6\u8a55\u4fa1","text":"<pre><code>&gt;&gt;&gt; def evaluate_password_strength(password):\n...     \"\"\"\u8a73\u7d30\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u8a55\u4fa1\"\"\"\n...     \n...     score = 0\n...     feedback = []\n...     \n...     # \u9577\u3055\u306b\u3088\u308b\u8a55\u4fa1\n...     if len(password) &gt;= 12:\n...         score += 2\n...         feedback.append(\"\u2713 \u5341\u5206\u306a\u9577\u3055\u3067\u3059\")\n...     elif len(password) &gt;= 8:\n...         score += 1\n...         feedback.append(\"\u25b3 8\u6587\u5b57\u4ee5\u4e0a\u3067\u3059\u304c\u300112\u6587\u5b57\u4ee5\u4e0a\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\")\n...     else:\n...         feedback.append(\"\u2717 8\u6587\u5b57\u4ee5\u4e0a\u306b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u6587\u5b57\u7a2e\u985e\u306b\u3088\u308b\u8a55\u4fa1\n...     has_lower = any(c.islower() for c in password)\n...     has_upper = any(c.isupper() for c in password)\n...     has_digit = any(c.isdigit() for c in password)\n...     has_symbol = any(c in \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\" for c in password)\n...     \n...     char_types = sum([has_lower, has_upper, has_digit, has_symbol])\n...     \n...     if char_types &gt;= 4:\n...         score += 3\n...         feedback.append(\"\u2713 4\u7a2e\u985e\u306e\u6587\u5b57\u3092\u4f7f\u7528\")\n...     elif char_types &gt;= 3:\n...         score += 2\n...         feedback.append(\"\u25b3 3\u7a2e\u985e\u306e\u6587\u5b57\u3092\u4f7f\u7528\uff08\u8a18\u53f7\u3082\u8ffd\u52a0\u3092\u304a\u52e7\u3081\uff09\")\n...     elif char_types &gt;= 2:\n...         score += 1\n...         feedback.append(\"\u25b3 2\u7a2e\u985e\u306e\u6587\u5b57\u3092\u4f7f\u7528\uff08\u5927\u6587\u5b57\u30fb\u8a18\u53f7\u3082\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\uff09\")\n...     else:\n...         feedback.append(\"\u2717 \u3088\u308a\u591a\u304f\u306e\u6587\u5b57\u7a2e\u985e\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\")\n...     \n...     # \u30d1\u30bf\u30fc\u30f3\u30c1\u30a7\u30c3\u30af\n...     if password.lower() in [\"password\", \"123456\", \"qwerty\"]:\n...         score -= 2\n...         feedback.append(\"\u2717 \u3088\u304f\u4f7f\u308f\u308c\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u3059\")\n...     \n...     # \u9023\u7d9a\u6587\u5b57\u30c1\u30a7\u30c3\u30af\n...     has_sequence = False\n...     for i in range(len(password) - 2):\n...         if (ord(password[i]) + 1 == ord(password[i+1]) and \n...             ord(password[i+1]) + 1 == ord(password[i+2])):\n...             has_sequence = True\n...             break\n...     \n...     if has_sequence:\n...         score -= 1\n...         feedback.append(\"\u25b3 \u9023\u7d9a\u3059\u308b\u6587\u5b57\u304c\u3042\u308a\u307e\u3059\")\n...     \n...     # \u5f37\u5ea6\u30ec\u30d9\u30eb\u306e\u6c7a\u5b9a\n...     if score &gt;= 5:\n...         strength = \"\u975e\u5e38\u306b\u5f37\u3044\"\n...         color = \"\ud83d\udfe2\"\n...     elif score &gt;= 3:\n...         strength = \"\u5f37\u3044\"\n...         color = \"\ud83d\udd35\"\n...     elif score &gt;= 1:\n...         strength = \"\u666e\u901a\"\n...         color = \"\ud83d\udfe1\"\n...     else:\n...         strength = \"\u5f31\u3044\"\n...         color = \"\ud83d\udd34\"\n...     \n...     return {\n...         \"score\": score,\n...         \"strength\": strength,\n...         \"color\": color,\n...         \"feedback\": feedback\n...     }\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u7528\u30d1\u30b9\u30ef\u30fc\u30c9\n&gt;&gt;&gt; test_passwords = [\n...     \"123456\",\n...     \"password\",\n...     \"Password1\",\n...     \"MySecret123\",\n...     \"Str0ng!P@ssw0rd\",\n...     \"VeryLongAndComplexPassword123!@#\"\n... ]\n\n&gt;&gt;&gt; print(\"=== \u8a73\u7d30\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u8a55\u4fa1 ===\")\n&gt;&gt;&gt; for pwd in test_passwords:\n...     result = evaluate_password_strength(pwd)\n...     print(f\"\\n\u30d1\u30b9\u30ef\u30fc\u30c9: '{pwd}'\")\n...     print(f\"\u5f37\u5ea6: {result['color']} {result['strength']} (\u30b9\u30b3\u30a2: {result['score']})\")\n...     print(\"\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af:\")\n...     for item in result['feedback']:\n...         print(f\"  {item}\")\n</code></pre>"},{"location":"chapter08/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc","text":"<pre><code>&gt;&gt;&gt; def interactive_password_checker():\n...     \"\"\"\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306a\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30ab\u30fc\"\"\"\n...     \n...     print(\"=== \u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30ab\u30fc ===\")\n...     print(\"\u7d42\u4e86\u3059\u308b\u306b\u306f 'quit' \u3068\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\\n\")\n...     \n...     while True:\n...         password = input(\"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \")\n...         \n...         if password.lower() == 'quit':\n...             print(\"\u7d42\u4e86\u3057\u307e\u3059\u3002\")\n...             break\n...         \n...         if not password:\n...             print(\"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\\n\")\n...             continue\n...         \n...         # \u57fa\u672c\u30c1\u30a7\u30c3\u30af\n...         is_valid, basic_message = check_password_basic(password)\n...         \n...         if not is_valid:\n...             print(f\"\u2717 {basic_message}\\n\")\n...             continue\n...         \n...         # \u8a73\u7d30\u8a55\u4fa1\n...         result = evaluate_password_strength(password)\n...         \n...         print(f\"\\n\u5f37\u5ea6\u8a55\u4fa1: {result['color']} {result['strength']}\")\n...         print(f\"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b9\u30b3\u30a2: {result['score']}/6\")\n...         print(\"\\n\u8a73\u7d30\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af:\")\n...         for item in result['feedback']:\n...             print(f\"  {item}\")\n...         \n...         # \u6539\u5584\u63d0\u6848\n...         if result['score'] &lt; 4:\n...             print(\"\\n\ud83d\udca1 \u6539\u5584\u63d0\u6848:\")\n...             if len(password) &lt; 12:\n...                 print(\"  \u2022 12\u6587\u5b57\u4ee5\u4e0a\u306b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\")\n...             if not any(c.isupper() for c in password):\n...                 print(\"  \u2022 \u5927\u6587\u5b57\u3092\u542b\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\")\n...             if not any(c in \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\" for c in password):\n...                 print(\"  \u2022 \u8a18\u53f7\u3092\u542b\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\")\n...         \n...         print(\"\\n\" + \"=\"*50 + \"\\n\")\n... \n\n&gt;&gt;&gt; # \u5b9f\u884c\u4f8b\uff08\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u624b\u52d5\u5b9f\u884c\uff09\n&gt;&gt;&gt; # interactive_password_checker()\n</code></pre>"},{"location":"chapter08/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u4f01\u696d\u5411\u3051\u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc\u30c1\u30a7\u30c3\u30ab\u30fc","text":"<pre><code># \u4f01\u696d\u5411\u3051\u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc\u30c1\u30a7\u30c3\u30ab\u30fc\nimport re\nfrom datetime import datetime, timedelta\n\nclass PasswordPolicyChecker:\n    def __init__(self, policy_level=\"standard\"):\n        \"\"\"\n        \u30d1\u30b9\u30ef\u30fc\u30c9\u30dd\u30ea\u30b7\u30fc\u30c1\u30a7\u30c3\u30ab\u30fc\n        policy_level: \"basic\", \"standard\", \"strict\"\n        \"\"\"\n        self.policies = {\n            \"basic\": {\n                \"min_length\": 8,\n                \"require_upper\": False,\n                \"require_lower\": True,\n                \"require_digit\": True,\n                \"require_symbol\": False,\n                \"max_repeated\": 3,\n                \"forbidden_patterns\": [\"password\", \"123456\"],\n                \"expiry_days\": 90\n            },\n            \"standard\": {\n                \"min_length\": 10,\n                \"require_upper\": True,\n                \"require_lower\": True,\n                \"require_digit\": True,\n                \"require_symbol\": True,\n                \"max_repeated\": 2,\n                \"forbidden_patterns\": [\"password\", \"123456\", \"qwerty\", \"admin\"],\n                \"expiry_days\": 60\n            },\n            \"strict\": {\n                \"min_length\": 12,\n                \"require_upper\": True,\n                \"require_lower\": True,\n                \"require_digit\": True,\n                \"require_symbol\": True,\n                \"max_repeated\": 1,\n                \"forbidden_patterns\": [\"password\", \"123456\", \"qwerty\", \"admin\", \"welcome\"],\n                \"expiry_days\": 30\n            }\n        }\n\n        self.current_policy = self.policies.get(policy_level, self.policies[\"standard\"])\n        self.policy_level = policy_level\n\n    def check_password(self, password, username=\"\", previous_passwords=None):\n        \"\"\"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30dd\u30ea\u30b7\u30fc\u306b\u5f93\u3063\u3066\u30c1\u30a7\u30c3\u30af\"\"\"\n        if previous_passwords is None:\n            previous_passwords = []\n\n        violations = []\n        score = 0\n\n        # \u9577\u3055\u30c1\u30a7\u30c3\u30af\n        if len(password) &lt; self.current_policy[\"min_length\"]:\n            violations.append(f\"\u30d1\u30b9\u30ef\u30fc\u30c9\u306f{self.current_policy['min_length']}\u6587\u5b57\u4ee5\u4e0a\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n        else:\n            score += 1\n\n        # \u6587\u5b57\u7a2e\u5225\u30c1\u30a7\u30c3\u30af\n        if self.current_policy[\"require_upper\"] and not any(c.isupper() for c in password):\n            violations.append(\"\u5927\u6587\u5b57\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n        elif any(c.isupper() for c in password):\n            score += 1\n\n        if self.current_policy[\"require_lower\"] and not any(c.islower() for c in password):\n            violations.append(\"\u5c0f\u6587\u5b57\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n        elif any(c.islower() for c in password):\n            score += 1\n\n        if self.current_policy[\"require_digit\"] and not any(c.isdigit() for c in password):\n            violations.append(\"\u6570\u5b57\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n        elif any(c.isdigit() for c in password):\n            score += 1\n\n        if self.current_policy[\"require_symbol\"]:\n            symbols = \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\"\n            if not any(c in symbols for c in password):\n                violations.append(\"\u8a18\u53f7\u3092\u542b\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n            else:\n                score += 1\n        elif any(c in \"!@#$%^&amp;*()_+-=[]{}|;:,.&lt;&gt;?\" for c in password):\n            score += 1\n\n        # \u9023\u7d9a\u30fb\u91cd\u8907\u6587\u5b57\u30c1\u30a7\u30c3\u30af\n        max_repeated = self.current_policy[\"max_repeated\"]\n        repeated_count = 1\n        for i in range(1, len(password)):\n            if password[i] == password[i-1]:\n                repeated_count += 1\n                if repeated_count &gt; max_repeated:\n                    violations.append(f\"\u540c\u3058\u6587\u5b57\u306e\u9023\u7d9a\u306f{max_repeated}\u6587\u5b57\u4ee5\u4e0b\u306b\u3057\u3066\u304f\u3060\u3055\u3044\")\n                    break\n            else:\n                repeated_count = 1\n\n        # \u7981\u6b62\u30d1\u30bf\u30fc\u30f3\u30c1\u30a7\u30c3\u30af\n        password_lower = password.lower()\n        for pattern in self.current_policy[\"forbidden_patterns\"]:\n            if pattern in password_lower:\n                violations.append(f\"\u7981\u6b62\u3055\u308c\u305f\u30d1\u30bf\u30fc\u30f3 '{pattern}' \u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\")\n\n        # \u30e6\u30fc\u30b6\u30fc\u540d\u3068\u306e\u985e\u4f3c\u6027\u30c1\u30a7\u30c3\u30af\n        if username and username.lower() in password_lower:\n            violations.append(\"\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u30e6\u30fc\u30b6\u30fc\u540d\u3092\u542b\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\n\n        # \u904e\u53bb\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3068\u306e\u91cd\u8907\u30c1\u30a7\u30c3\u30af\n        for prev_password in previous_passwords:\n            if password == prev_password:\n                violations.append(\"\u904e\u53bb\u306b\u4f7f\u7528\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u306f\u4f7f\u7528\u3067\u304d\u307e\u305b\u3093\")\n                break\n\n        # \u7d50\u679c\u306e\u8a55\u4fa1\n        is_valid = len(violations) == 0\n\n        return {\n            \"is_valid\": is_valid,\n            \"violations\": violations,\n            \"score\": score,\n            \"max_score\": 5,\n            \"policy_level\": self.policy_level,\n            \"password_length\": len(password)\n        }\n\n    def generate_password_suggestions(self):\n        \"\"\"\u30dd\u30ea\u30b7\u30fc\u306b\u9069\u5408\u3059\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u4f8b\u3092\u751f\u6210\"\"\"\n        import random\n        import string\n\n        min_len = self.current_policy[\"min_length\"]\n\n        # \u57fa\u672c\u6587\u5b57\u30bb\u30c3\u30c8\n        lowercase = string.ascii_lowercase\n        uppercase = string.ascii_uppercase\n        digits = string.digits\n        symbols = \"!@#$%^&amp;*\"\n\n        # \u5fc5\u8981\u306a\u6587\u5b57\u7a2e\u5225\u3092\u542b\u3080\n        password_chars = []\n\n        if self.current_policy[\"require_lower\"]:\n            password_chars.extend(random.choices(lowercase, k=2))\n        if self.current_policy[\"require_upper\"]:\n            password_chars.extend(random.choices(uppercase, k=2))\n        if self.current_policy[\"require_digit\"]:\n            password_chars.extend(random.choices(digits, k=2))\n        if self.current_policy[\"require_symbol\"]:\n            password_chars.extend(random.choices(symbols, k=2))\n\n        # \u6b8b\u308a\u306e\u6587\u5b57\u6570\u3092\u57cb\u3081\u308b\n        all_chars = lowercase + uppercase + digits + symbols\n        remaining_length = min_len - len(password_chars)\n        password_chars.extend(random.choices(all_chars, k=remaining_length))\n\n        # \u30b7\u30e3\u30c3\u30d5\u30eb\n        random.shuffle(password_chars)\n\n        return ''.join(password_chars)\n\n# \u4f7f\u7528\u4f8b\npolicy_checker = PasswordPolicyChecker(\"standard\")\n\ntest_cases = [\n    {\"password\": \"password123\", \"username\": \"user1\"},\n    {\"password\": \"MySecureP@ss2024\", \"username\": \"user2\"},\n    {\"password\": \"VeryStr0ng!P@ssw0rd\", \"username\": \"user3\"},\n]\n\nprint(\"=== \u4f01\u696d\u30dd\u30ea\u30b7\u30fc\u30c1\u30a7\u30c3\u30af ===\")\nfor case in test_cases:\n    result = policy_checker.check_password(case[\"password\"], case[\"username\"])\n\n    print(f\"\\n\u30d1\u30b9\u30ef\u30fc\u30c9: '{case['password']}'\")\n    print(f\"\u30e6\u30fc\u30b6\u30fc\u540d: {case['username']}\")\n    print(f\"\u30dd\u30ea\u30b7\u30fc\u30ec\u30d9\u30eb: {result['policy_level']}\")\n    print(f\"\u691c\u67fb\u7d50\u679c: {'\u2713 \u5408\u683c' if result['is_valid'] else '\u2717 \u4e0d\u5408\u683c'}\")\n    print(f\"\u30b9\u30b3\u30a2: {result['score']}/{result['max_score']}\")\n\n    if result['violations']:\n        print(\"\u9055\u53cd\u9805\u76ee:\")\n        for violation in result['violations']:\n            print(f\"  \u2022 {violation}\")\n    else:\n        print(\"\u2713 \u3059\u3079\u3066\u306e\u30dd\u30ea\u30b7\u30fc\u306b\u9069\u5408\u3057\u3066\u3044\u307e\u3059\")\n\nprint(f\"\\n\ud83d\udca1 \u63a8\u5968\u30d1\u30b9\u30ef\u30fc\u30c9\u4f8b: {policy_checker.generate_password_suggestions()}\")\n</code></pre>"},{"location":"chapter08/#and-or-not","title":"\u8907\u96d1\u306a\u6761\u4ef6\uff08and, or, not\uff09","text":"<p>\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u8907\u6570\u306e\u6761\u4ef6\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"chapter08/#_8","title":"\u8ad6\u7406\u6f14\u7b97\u5b50","text":"\u6f14\u7b97\u5b50 \u610f\u5473 \u4f8b \u7d50\u679c <code>and</code> \u304b\u3064 <code>True and False</code> <code>False</code> <code>or</code> \u307e\u305f\u306f <code>True or False</code> <code>True</code> <code>not</code> \u3067\u306a\u3044 <code>not True</code> <code>False</code>"},{"location":"chapter08/#and","title":"and\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u4e21\u65b9\u306e\u6761\u4ef6\u304c\u771f\u306e\u5834\u5408\u306e\u307f\u771f\n&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; has_license = True\n\n&gt;&gt;&gt; if age &gt;= 18 and has_license:\n...     print(\"\u904b\u8ee2\u3067\u304d\u307e\u3059\")\n... else:\n...     print(\"\u904b\u8ee2\u3067\u304d\u307e\u305b\u3093\")\n\u904b\u8ee2\u3067\u304d\u307e\u3059\n\n&gt;&gt;&gt; # \u8907\u6570\u306e\u6761\u4ef6\n&gt;&gt;&gt; score = 85\n&gt;&gt;&gt; attendance = 90\n\n&gt;&gt;&gt; if score &gt;= 80 and attendance &gt;= 85:\n...     print(\"\u512a\u79c0\u306a\u6210\u7e3e\u3067\u3059\")\n... else:\n...     print(\"\u3082\u3046\u5c11\u3057\u9811\u5f35\u308a\u307e\u3057\u3087\u3046\")\n\u512a\u79c0\u306a\u6210\u7e3e\u3067\u3059\n</code></pre>"},{"location":"chapter08/#or","title":"or\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u3069\u3061\u3089\u304b\u306e\u6761\u4ef6\u304c\u771f\u306a\u3089\u771f\n&gt;&gt;&gt; day = \"\u571f\u66dc\u65e5\"\n\n&gt;&gt;&gt; if day == \"\u571f\u66dc\u65e5\" or day == \"\u65e5\u66dc\u65e5\":\n...     print(\"\u9031\u672b\u3067\u3059\")\n... else:\n...     print(\"\u5e73\u65e5\u3067\u3059\")\n\u9031\u672b\u3067\u3059\n\n&gt;&gt;&gt; # \u8907\u6570\u306e\u652f\u6255\u3044\u65b9\u6cd5\n&gt;&gt;&gt; payment = \"\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\"\n\n&gt;&gt;&gt; if payment == \"\u73fe\u91d1\" or payment == \"\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\" or payment == \"\u96fb\u5b50\u30de\u30cd\u30fc\":\n...     print(\"\u304a\u652f\u6255\u3044\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\")\n... else:\n...     print(\"\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u652f\u6255\u3044\u65b9\u6cd5\u3067\u3059\")\n\u304a\u652f\u6255\u3044\u3092\u53d7\u3051\u4ed8\u3051\u307e\u3059\n</code></pre>"},{"location":"chapter08/#not","title":"not\u6f14\u7b97\u5b50\u306e\u4f7f\u7528\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u6761\u4ef6\u3092\u53cd\u8ee2\n&gt;&gt;&gt; is_logged_in = False\n\n&gt;&gt;&gt; if not is_logged_in:\n...     print(\"\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\")\n... else:\n...     print(\"\u3088\u3046\u3053\u305d\")\n\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\n\n&gt;&gt;&gt; # \u7a7a\u3067\u306a\u3044\u3053\u3068\u3092\u30c1\u30a7\u30c3\u30af\n&gt;&gt;&gt; user_input = \"\"\n\n&gt;&gt;&gt; if not user_input:\n...     print(\"\u5165\u529b\u304c\u5fc5\u8981\u3067\u3059\")\n... else:\n...     print(f\"\u5165\u529b\u5185\u5bb9: {user_input}\")\n\u5165\u529b\u304c\u5fc5\u8981\u3067\u3059\n</code></pre>"},{"location":"chapter08/#_9","title":"\u8907\u96d1\u306a\u6761\u4ef6\u306e\u7d44\u307f\u5408\u308f\u305b","text":"<pre><code>&gt;&gt;&gt; # \u8907\u96d1\u306a\u4f1a\u54e1\u7279\u5178\u5224\u5b9a\n&gt;&gt;&gt; age = 25\n&gt;&gt;&gt; is_premium = True\n&gt;&gt;&gt; years_member = 3\n&gt;&gt;&gt; purchase_amount = 15000\n\n&gt;&gt;&gt; # \u30d7\u30ec\u30df\u30a2\u30e0\u7279\u5178\u306e\u6761\u4ef6\n&gt;&gt;&gt; if (is_premium and years_member &gt;= 2) or purchase_amount &gt;= 10000:\n...     discount_rate = 0.15\n...     print(\"15%\u5272\u5f15\u304c\u9069\u7528\u3055\u308c\u307e\u3059\")\n... elif age &lt; 25 or age &gt;= 65:\n...     discount_rate = 0.10\n...     print(\"\u5e74\u9f62\u5272\u5f1510%\u304c\u9069\u7528\u3055\u308c\u307e\u3059\")\n... elif years_member &gt;= 1:\n...     discount_rate = 0.05\n...     print(\"\u4f1a\u54e1\u5272\u5f155%\u304c\u9069\u7528\u3055\u308c\u307e\u3059\")\n... else:\n...     discount_rate = 0\n...     print(\"\u5272\u5f15\u306f\u9069\u7528\u3055\u308c\u307e\u305b\u3093\")\n\n15%\u5272\u5f15\u304c\u9069\u7528\u3055\u308c\u307e\u3059\n\n&gt;&gt;&gt; # \u62ec\u5f27\u3092\u4f7f\u3063\u3066\u6761\u4ef6\u3092\u660e\u78ba\u306b\u3059\u308b\n&gt;&gt;&gt; temperature = 28\n&gt;&gt;&gt; humidity = 70\n&gt;&gt;&gt; is_rainy = False\n\n&gt;&gt;&gt; if (temperature &gt;= 25 and humidity &gt;= 60) and not is_rainy:\n...     print(\"\u84b8\u3057\u6691\u3044\u6674\u308c\u306e\u65e5\u3067\u3059\")\n... elif temperature &gt;= 30 or (humidity &gt;= 80 and is_rainy):\n...     print(\"\u4e0d\u5feb\u306a\u5929\u6c17\u3067\u3059\")\n... else:\n...     print(\"\u666e\u901a\u306e\u5929\u6c17\u3067\u3059\")\n\u84b8\u3057\u6691\u3044\u6674\u308c\u306e\u65e5\u3067\u3059\n</code></pre>"},{"location":"chapter08/#_10","title":"\u77ed\u7d61\u8a55\u4fa1","text":"<p>Python\u3067\u306f\u3001\u8ad6\u7406\u6f14\u7b97\u5b50\u306f\u77ed\u7d61\u8a55\u4fa1\u3092\u884c\u3044\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # and \u306e\u77ed\u7d61\u8a55\u4fa1\n&gt;&gt;&gt; def check_positive(x):\n...     print(f\"check_positive({x}) \u304c\u547c\u3070\u308c\u307e\u3057\u305f\")\n...     return x &gt; 0\n... \n\n&gt;&gt;&gt; # \u6700\u521d\u306e\u6761\u4ef6\u304c\u507d\u306a\u3089\u30012\u756a\u76ee\u306f\u8a55\u4fa1\u3055\u308c\u306a\u3044\n&gt;&gt;&gt; result = False and check_positive(5)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}\")\n\u7d50\u679c: False\n\n&gt;&gt;&gt; # \u6700\u521d\u306e\u6761\u4ef6\u304c\u771f\u306a\u3089\u30012\u756a\u76ee\u3082\u8a55\u4fa1\u3055\u308c\u308b\n&gt;&gt;&gt; result = True and check_positive(5)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}\")\ncheck_positive(5) \u304c\u547c\u3070\u308c\u307e\u3057\u305f\n\u7d50\u679c: True\n\n&gt;&gt;&gt; # or \u306e\u77ed\u7d61\u8a55\u4fa1\n&gt;&gt;&gt; # \u6700\u521d\u306e\u6761\u4ef6\u304c\u771f\u306a\u3089\u30012\u756a\u76ee\u306f\u8a55\u4fa1\u3055\u308c\u306a\u3044\n&gt;&gt;&gt; result = True or check_positive(5)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}\")\n\u7d50\u679c: True\n\n&gt;&gt;&gt; # \u6700\u521d\u306e\u6761\u4ef6\u304c\u507d\u306a\u3089\u30012\u756a\u76ee\u3082\u8a55\u4fa1\u3055\u308c\u308b\n&gt;&gt;&gt; result = False or check_positive(5)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}\")\ncheck_positive(5) \u304c\u547c\u3070\u308c\u307e\u3057\u305f\n\u7d50\u679c: True\n</code></pre>"},{"location":"chapter08/#_11","title":"\u307e\u3068\u3081\uff1a\u6761\u4ef6\u5206\u5c90\u306e\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter08/#if_2","title":"if\u6587\u306e\u57fa\u672c\u69cb\u6587","text":"<ul> <li><code>if \u6761\u4ef6:</code> - \u6761\u4ef6\u304c\u771f\u306e\u3068\u304d\u306b\u5b9f\u884c</li> <li><code>if-else</code> - \u771f\u306e\u5834\u5408\u3068\u507d\u306e\u5834\u5408\u306e\u51e6\u7406</li> <li><code>if-elif-else</code> - \u8907\u6570\u306e\u6761\u4ef6\u3092\u9806\u756a\u306b\u5224\u5b9a</li> </ul>"},{"location":"chapter08/#_12","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u5e74\u9f62\u5225\u6599\u91d1\u30b7\u30b9\u30c6\u30e0</li> <li>\u6642\u9593\u5e2f\u5272\u5f15\u306e\u8a08\u7b97</li> <li>\u30d1\u30b9\u30ef\u30fc\u30c9\u5f37\u5ea6\u30c1\u30a7\u30c3\u30af</li> <li>\u4f01\u696d\u30dd\u30ea\u30b7\u30fc\u306e\u9069\u7528</li> </ul>"},{"location":"chapter08/#_13","title":"\u771f\u507d\u5024\u306e\u7406\u89e3","text":"<ul> <li><code>True</code>\u3068<code>False</code>\u306e\u57fa\u672c</li> <li>\u6bd4\u8f03\u6f14\u7b97\u5b50\uff08==, !=, &lt;, &gt;, &lt;=, &gt;=\uff09</li> <li>\u507d\u3068\u307f\u306a\u3055\u308c\u308b\u5024\uff080, \"\", [], {}, None\uff09</li> </ul>"},{"location":"chapter08/#_14","title":"\u8ad6\u7406\u6f14\u7b97\u5b50","text":"<ul> <li><code>and</code>: \u4e21\u65b9\u306e\u6761\u4ef6\u304c\u771f</li> <li><code>or</code>: \u3069\u3061\u3089\u304b\u306e\u6761\u4ef6\u304c\u771f</li> <li><code>not</code>: \u6761\u4ef6\u3092\u53cd\u8ee2</li> <li>\u77ed\u7d61\u8a55\u4fa1\u306b\u3088\u308b\u52b9\u7387\u7684\u306a\u51e6\u7406</li> </ul>"},{"location":"chapter08/#_15","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u8a2d\u8a08\u306e\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u6761\u4ef6\u306f\u5206\u304b\u308a\u3084\u3059\u304f\u66f8\u304f</li> <li>\u8907\u96d1\u306a\u6761\u4ef6\u306f\u62ec\u5f27\u3067\u660e\u78ba\u306b\u3059\u308b</li> <li>\u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\u3092\u5148\u306b\u30c1\u30a7\u30c3\u30af\u3059\u308b</li> <li>\u53ef\u8aad\u6027\u3092\u91cd\u8996\u3057\u305f\u69cb\u9020\u306b\u3059\u308b</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u540c\u3058\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u5b9f\u884c\u3059\u308b\u300c\u30eb\u30fc\u30d7\u300d\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u8caf\u91d1\u76ee\u6a19\u9054\u6210\u307e\u3067\u306e\u8a08\u7b97\u3084\u6210\u7e3e\u8868\u306e\u51e6\u7406\u306a\u3069\u3001\u53cd\u5fa9\u51e6\u7406\u3092\u4f7f\u3063\u305f\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter09/","title":"\u7b2c9\u7ae0\uff1a\u540c\u3058\u3053\u3068\u3092\u7e70\u308a\u8fd4\u305d\u3046","text":"<p>\u524d\u306e\u7ae0\u3067\u306f\u6761\u4ef6\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5206\u5c90\u3055\u305b\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u540c\u3058\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u7e70\u308a\u8fd4\u3059\u30eb\u30fc\u30d7\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u8caf\u91d1\u76ee\u6a19\u9054\u6210\u307e\u3067\u306e\u8a08\u7b97\u3001\u6210\u7e3e\u8868\u306e\u5e73\u5747\u70b9\u8a08\u7b97\u3001\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u51e6\u7406\u306a\u3069\u3001\u5b9f\u969b\u306e\u5834\u9762\u3067\u5fc5\u8981\u306b\u306a\u308b\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u3001\u5b9f\u8df5\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u30de\u30b9\u30bf\u30fc\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter09/#while","title":"\u7e70\u308a\u8fd4\u3057\u306e\u529b\uff08while\u6587\uff09","text":""},{"location":"chapter09/#_1","title":"\u306a\u305c\u7e70\u308a\u8fd4\u3057\u304c\u5fc5\u8981\uff1f","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3044\u3066\u3001\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u975e\u5e38\u306b\u3088\u304f\u3042\u308a\u307e\u3059\uff1a</p> <p>\u65e5\u5e38\u306e\u4f8b\uff1a - \u6bce\u6708\u306e\u8caf\u91d1\u984d\u3092\u8a08\u7b97\u3057\u3066\u3001\u76ee\u6a19\u984d\u306b\u9054\u3059\u308b\u307e\u3067\u7d9a\u3051\u308b - \u5546\u54c1\u306e\u5728\u5eab\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3001\u8db3\u308a\u306a\u304f\u306a\u3063\u305f\u3089\u767a\u6ce8\u3059\u308b - \u554f\u984c\u3092\u89e3\u3044\u3066\u3001\u6e80\u70b9\u3092\u53d6\u308b\u307e\u3067\u52c9\u5f37\u3092\u7d9a\u3051\u308b</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\uff1a - \u30e6\u30fc\u30b6\u30fc\u304c\u6b63\u3057\u3044\u5024\u3092\u5165\u529b\u3059\u308b\u307e\u3067\u5165\u529b\u3092\u6c42\u3081\u308b - \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u30921\u884c\u305a\u3064\u8aad\u307f\u8fbc\u3093\u3067\u51e6\u7406\u3059\u308b - \u6761\u4ef6\u3092\u6e80\u305f\u3059\u307e\u3067\u8a08\u7b97\u3092\u7d9a\u3051\u308b</p>"},{"location":"chapter09/#while_1","title":"while\u6587\u306e\u57fa\u672c\u69cb\u6587","text":"<pre><code>while \u6761\u4ef6:\n    \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406\n</code></pre> <p>\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8\uff1a 1. \u6761\u4ef6\u304c<code>True</code>\u306e\u9593\u3001\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059 2. \u6761\u4ef6\u304c<code>False</code>\u306b\u306a\u308b\u3068\u3001\u30eb\u30fc\u30d7\u3092\u629c\u3051\u308b 3. \u7121\u9650\u30eb\u30fc\u30d7\u306b\u6ce8\u610f\uff08\u6761\u4ef6\u304c\u6c38\u9060\u306b<code>True</code>\u306e\u307e\u307e\uff09</p>"},{"location":"chapter09/#_2","title":"\u7c21\u5358\u306a\u4f8b\u304b\u3089\u59cb\u3081\u3088\u3046","text":"<pre><code>&gt;&gt;&gt; # 1\u304b\u30895\u307e\u3067\u6570\u3048\u308b\n&gt;&gt;&gt; count = 1\n&gt;&gt;&gt; while count &lt;= 5:\n...     print(f\"\u30ab\u30a6\u30f3\u30c8: {count}\")\n...     count += 1  # \u3053\u308c\u3092\u5fd8\u308c\u308b\u3068\u7121\u9650\u30eb\u30fc\u30d7\uff01\n... \n\u30ab\u30a6\u30f3\u30c8: 1\n\u30ab\u30a6\u30f3\u30c8: 2\n\u30ab\u30a6\u30f3\u30c8: 3\n\u30ab\u30a6\u30f3\u30c8: 4\n\u30ab\u30a6\u30f3\u30c8: 5\n\n&gt;&gt;&gt; print(f\"\u30eb\u30fc\u30d7\u7d42\u4e86\u5f8c\u306ecount: {count}\")\n\u30eb\u30fc\u30d7\u7d42\u4e86\u5f8c\u306ecount: 6\n</code></pre>"},{"location":"chapter09/#_3","title":"\u7121\u9650\u30eb\u30fc\u30d7\u306e\u4f8b\u3068\u5bfe\u7b56","text":"<pre><code>&gt;&gt;&gt; # \u5371\u967a\uff1a\u7121\u9650\u30eb\u30fc\u30d7\u306e\u4f8b\uff08\u5b9f\u884c\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\uff09\n&gt;&gt;&gt; # count = 1\n&gt;&gt;&gt; # while count &lt;= 5:\n&gt;&gt;&gt; #     print(f\"\u30ab\u30a6\u30f3\u30c8: {count}\")\n&gt;&gt;&gt; #     # count += 1 \u3092\u5fd8\u308c\u305f\uff01\n&gt;&gt;&gt; # \u6c38\u9060\u306b\u300c\u30ab\u30a6\u30f3\u30c8: 1\u300d\u304c\u8868\u793a\u3055\u308c\u308b\n\n&gt;&gt;&gt; # \u5b89\u5168\u306a\u66f8\u304d\u65b9\n&gt;&gt;&gt; count = 1\n&gt;&gt;&gt; max_iterations = 1000  # \u5b89\u5168\u88c5\u7f6e\n&gt;&gt;&gt; \n&gt;&gt;&gt; while count &lt;= 5 and max_iterations &gt; 0:\n...     print(f\"\u30ab\u30a6\u30f3\u30c8: {count}\")\n...     count += 1\n...     max_iterations -= 1\n... \n&gt;&gt;&gt; \n&gt;&gt;&gt; if max_iterations == 0:\n...     print(\"\u8b66\u544a: \u6700\u5927\u53cd\u5fa9\u56de\u6570\u306b\u9054\u3057\u307e\u3057\u305f\")\n</code></pre>"},{"location":"chapter09/#_4","title":"\u3010\u5b9f\u884c\u3011\u8caf\u91d1\u76ee\u6a19\u9054\u6210\u307e\u3067\u306e\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u5b9f\u969b\u306e\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001while\u6587\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter09/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3","text":"<pre><code>&gt;&gt;&gt; def simulate_savings_basic(goal_amount, monthly_savings):\n...     \"\"\"\u57fa\u672c\u7684\u306a\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     \n...     current_savings = 0\n...     months = 0\n...     \n...     print(f\"\u76ee\u6a19\u91d1\u984d: {goal_amount:,}\u5186\")\n...     print(f\"\u6708\u9593\u8caf\u91d1\u984d: {monthly_savings:,}\u5186\")\n...     print(\"-\" * 30)\n...     \n...     while current_savings &lt; goal_amount:\n...         months += 1\n...         current_savings += monthly_savings\n...         \n...         print(f\"{months}\u30f6\u6708\u76ee: {current_savings:,}\u5186\")\n...         \n...         # \u5b89\u5168\u88c5\u7f6e\uff0810\u5e74\uff1d120\u30f6\u6708\u3067\u6253\u3061\u5207\u308a\uff09\n...         if months &gt;= 120:\n...             print(\"\u26a0\ufe0f 10\u5e74\u3092\u8d85\u3048\u307e\u3057\u305f\u3002\u6761\u4ef6\u3092\u898b\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\n...             break\n...     \n...     if current_savings &gt;= goal_amount:\n...         print(f\"\\n\ud83c\udf89 \u76ee\u6a19\u9054\u6210\uff01\")\n...         print(f\"\u9054\u6210\u671f\u9593: {months}\u30f6\u6708\")\n...         print(f\"\u6700\u7d42\u8caf\u91d1\u984d: {current_savings:,}\u5186\")\n...         \n...         years = months // 12\n...         remaining_months = months % 12\n...         if years &gt; 0:\n...             print(f\"\u671f\u9593: {years}\u5e74{remaining_months}\u30f6\u6708\")\n...         else:\n...             print(f\"\u671f\u9593: {remaining_months}\u30f6\u6708\")\n...     \n...     return months, current_savings\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u5b9f\u884c\n&gt;&gt;&gt; months, final_amount = simulate_savings_basic(1000000, 50000)\n\n\u76ee\u6a19\u91d1\u984d: 1,000,000\u5186\n\u6708\u9593\u8caf\u91d1\u984d: 50,000\u5186\n------------------------------\n1\u30f6\u6708\u76ee: 50,000\u5186\n2\u30f6\u6708\u76ee: 100,000\u5186\n3\u30f6\u6708\u76ee: 150,000\u5186\n4\u30f6\u6708\u76ee: 200,000\u5186\n5\u30f6\u6708\u76ee: 250,000\u5186\n6\u30f6\u6708\u76ee: 300,000\u5186\n7\u30f6\u6708\u76ee: 350,000\u5186\n8\u30f6\u6708\u76ee: 400,000\u5186\n9\u30f6\u6708\u76ee: 450,000\u5186\n10\u30f6\u6708\u76ee: 500,000\u5186\n11\u30f6\u6708\u76ee: 550,000\u5186\n12\u30f6\u6708\u76ee: 600,000\u5186\n13\u30f6\u6708\u76ee: 650,000\u5186\n14\u30f6\u6708\u76ee: 700,000\u5186\n15\u30f6\u6708\u76ee: 750,000\u5186\n16\u30f6\u6708\u76ee: 800,000\u5186\n17\u30f6\u6708\u76ee: 850,000\u5186\n18\u30f6\u6708\u76ee: 900,000\u5186\n19\u30f6\u6708\u76ee: 950,000\u5186\n20\u30f6\u6708\u76ee: 1,000,000\u5186\n\n\ud83c\udf89 \u76ee\u6a19\u9054\u6210\uff01\n\u9054\u6210\u671f\u9593: 20\u30f6\u6708\n\u6700\u7d42\u8caf\u91d1\u984d: 1,000,000\u5186\n\u671f\u9593: 1\u5e748\u30f6\u6708\n</code></pre>"},{"location":"chapter09/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5229\u606f\u3092\u542b\u3080\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3","text":"<pre><code>&gt;&gt;&gt; def simulate_savings_with_interest(goal_amount, monthly_savings, annual_interest_rate=0.01):\n...     \"\"\"\u5229\u606f\u3092\u542b\u3080\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     \n...     current_savings = 0\n...     months = 0\n...     monthly_interest_rate = annual_interest_rate / 12\n...     \n...     print(f\"\u76ee\u6a19\u91d1\u984d: {goal_amount:,}\u5186\")\n...     print(f\"\u6708\u9593\u8caf\u91d1\u984d: {monthly_savings:,}\u5186\")\n...     print(f\"\u5e74\u5229: {annual_interest_rate:.1%}\")\n...     print(\"-\" * 50)\n...     print(\"\u6708 | \u8caf\u91d1\u984d | \u5229\u606f | \u5408\u8a08\u6b8b\u9ad8\")\n...     print(\"-\" * 50)\n...     \n...     while current_savings &lt; goal_amount:\n...         months += 1\n...         \n...         # \u6708\u521d\u306e\u5229\u606f\u8a08\u7b97\n...         interest = current_savings * monthly_interest_rate\n...         \n...         # \u8caf\u91d1\u8ffd\u52a0\n...         current_savings += monthly_savings + interest\n...         \n...         # \u6708\u672b\u6b8b\u9ad8\u8868\u793a\uff08\u6700\u521d\u306e10\u30f6\u6708\u3068\u6700\u5f8c\u306e\u6570\u30f6\u6708\u306e\u307f\uff09\n...         if months &lt;= 10 or current_savings &gt;= goal_amount * 0.9:\n...             print(f\"{months:2d} | {monthly_savings:,}\u5186 | {interest:4.0f}\u5186 | {current_savings:8,.0f}\u5186\")\n...         elif months == 11:\n...             print(\"   ...\uff08\u4e2d\u7565\uff09...\")\n...         \n...         # \u5b89\u5168\u88c5\u7f6e\n...         if months &gt;= 600:  # 50\u5e74\n...             print(\"\u26a0\ufe0f 50\u5e74\u3092\u8d85\u3048\u307e\u3057\u305f\u3002\u76ee\u6a19\u3092\u898b\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\n...             break\n...     \n...     if current_savings &gt;= goal_amount:\n...         print(\"-\" * 50)\n...         print(f\"\ud83c\udf89 \u76ee\u6a19\u9054\u6210\uff01\")\n...         print(f\"\u9054\u6210\u671f\u9593: {months}\u30f6\u6708\")\n...         print(f\"\u6700\u7d42\u8caf\u91d1\u984d: {current_savings:,.0f}\u5186\")\n...         \n...         total_deposits = monthly_savings * months\n...         total_interest = current_savings - total_deposits\n...         \n...         print(f\"\u7dcf\u5165\u91d1\u984d: {total_deposits:,}\u5186\")\n...         print(f\"\u5229\u606f\u5408\u8a08: {total_interest:,.0f}\u5186\")\n...         print(f\"\u5229\u606f\u52b9\u679c: {total_interest/total_deposits:.1%}\")\n...     \n...     return months, current_savings\n... \n\n&gt;&gt;&gt; # \u5229\u606f\u3042\u308a\u3068\u306a\u3057\u306e\u6bd4\u8f03\n&gt;&gt;&gt; print(\"=== \u5229\u606f\u306a\u3057\u306e\u5834\u5408 ===\")\n&gt;&gt;&gt; months1, amount1 = simulate_savings_basic(2000000, 80000)\n\n&gt;&gt;&gt; print(\"\\n=== \u5e74\u52291%\u306e\u5834\u5408 ===\")\n&gt;&gt;&gt; months2, amount2 = simulate_savings_with_interest(2000000, 80000, 0.01)\n\n&gt;&gt;&gt; print(f\"\\n\ud83d\udcca \u6bd4\u8f03\u7d50\u679c:\")\n&gt;&gt;&gt; print(f\"\u5229\u606f\u306a\u3057: {months1}\u30f6\u6708\u3067\u9054\u6210\")\n&gt;&gt;&gt; print(f\"\u5229\u606f\u3042\u308a: {months2}\u30f6\u6708\u3067\u9054\u6210\")\n&gt;&gt;&gt; print(f\"\u77ed\u7e2e\u52b9\u679c: {months1 - months2}\u30f6\u6708\")\n</code></pre>"},{"location":"chapter09/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u76ee\u6a19\u5909\u66f4\u306b\u5bfe\u5fdc\u3057\u305f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3","text":"<pre><code>&gt;&gt;&gt; def flexible_savings_simulation():\n...     \"\"\"\u67d4\u8edf\u306a\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     \n...     print(\"=== \u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc ===\")\n...     \n...     # \u521d\u671f\u8a2d\u5b9a\n...     goal_amount = 1500000\n...     monthly_savings = 70000\n...     current_savings = 0\n...     months = 0\n...     \n...     # \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u5c65\u6b74\n...     history = []\n...     \n...     while current_savings &lt; goal_amount:\n...         months += 1\n...         current_savings += monthly_savings\n...         \n...         # \u5c65\u6b74\u306b\u8a18\u9332\n...         history.append({\n...             \"month\": months,\n...             \"monthly_savings\": monthly_savings,\n...             \"total_savings\": current_savings\n...         })\n...         \n...         # \u9032\u6357\u8868\u793a\uff085\u30f6\u6708\u3054\u3068\uff09\n...         if months % 5 == 0:\n...             progress = (current_savings / goal_amount) * 100\n...             print(f\"{months}\u30f6\u6708\u76ee: {current_savings:,}\u5186 ({progress:.1f}%\u9054\u6210)\")\n...             \n...             # \u6761\u4ef6\u5909\u66f4\u306e\u5224\u5b9a\n...             if months == 10 and current_savings &lt; goal_amount * 0.5:\n...                 print(\"\ud83d\udca1 \u9032\u6357\u304c\u9045\u3044\u305f\u3081\u3001\u6708\u9593\u8caf\u91d1\u984d\u3092\u5897\u984d\u3057\u307e\u3059\")\n...                 monthly_savings += 20000\n...                 print(f\"   \u65b0\u3057\u3044\u6708\u9593\u8caf\u91d1\u984d: {monthly_savings:,}\u5186\")\n...             \n...             if months == 15 and progress &gt; 80:\n...                 print(\"\ud83c\udfaf \u76ee\u6a19\u304c\u8fd1\u3044\u305f\u3081\u3001\u3055\u3089\u306b\u5897\u984d\u3057\u3066\u65e9\u671f\u9054\u6210\u3092\u76ee\u6307\u3057\u307e\u3059\")\n...                 monthly_savings += 10000\n...                 print(f\"   \u65b0\u3057\u3044\u6708\u9593\u8caf\u91d1\u984d: {monthly_savings:,}\u5186\")\n...         \n...         # \u5b89\u5168\u88c5\u7f6e\n...         if months &gt;= 50:\n...             break\n...     \n...     print(f\"\\n\ud83c\udf89 \u76ee\u6a19\u9054\u6210\uff01\")\n...     print(f\"\u6700\u7d42\u7684\u306a\u9054\u6210\u671f\u9593: {months}\u30f6\u6708\")\n...     print(f\"\u6700\u7d42\u8caf\u91d1\u984d: {current_savings:,}\u5186\")\n...     \n...     # \u8a73\u7d30\u5206\u6790\n...     total_deposits = sum(record[\"monthly_savings\"] for record in history)\n...     print(f\"\u7dcf\u5165\u91d1\u984d: {total_deposits:,}\u5186\")\n...     \n...     return history\n... \n\n&gt;&gt;&gt; # \u5b9f\u884c\n&gt;&gt;&gt; history = flexible_savings_simulation()\n\n=== \u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc ===\n5\u30f6\u6708\u76ee: 350,000\u5186 (23.3%\u9054\u6210)\n10\u30f6\u6708\u76ee: 700,000\u5186 (46.7%\u9054\u6210)\n\ud83d\udca1 \u9032\u6357\u304c\u9045\u3044\u305f\u3081\u3001\u6708\u9593\u8caf\u91d1\u984d\u3092\u5897\u984d\u3057\u307e\u3059\n   \u65b0\u3057\u3044\u6708\u9593\u8caf\u91d1\u984d: 90,000\u5186\n15\u30f6\u6708\u76ee: 1,150,000\u5186 (76.7%\u9054\u6210)\n20\u30f6\u6708\u76ee: 1,600,000\u5186 (106.7%\u9054\u6210)\n\n\ud83c\udf89 \u76ee\u6a19\u9054\u6210\uff01\n\u6700\u7d42\u7684\u306a\u9054\u6210\u671f\u9593: 17\u30f6\u6708\n\u6700\u7d42\u8caf\u91d1\u984d: 1,520,000\u5186\n\u7dcf\u5165\u91d1\u984d: 1,520,000\u5186\n</code></pre>"},{"location":"chapter09/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u8907\u6570\u30b7\u30ca\u30ea\u30aa\u306e\u6bd4\u8f03","text":"<pre><code># \u8caf\u91d1\u30b7\u30ca\u30ea\u30aa\u6bd4\u8f03\u30b7\u30b9\u30c6\u30e0\nclass SavingsSimulator:\n    def __init__(self):\n        self.scenarios = []\n\n    def add_scenario(self, name, goal_amount, monthly_savings, annual_interest_rate=0):\n        \"\"\"\u30b7\u30ca\u30ea\u30aa\u3092\u8ffd\u52a0\"\"\"\n        scenario = {\n            \"name\": name,\n            \"goal_amount\": goal_amount,\n            \"monthly_savings\": monthly_savings,\n            \"annual_interest_rate\": annual_interest_rate,\n            \"result\": None\n        }\n        self.scenarios.append(scenario)\n        return len(self.scenarios) - 1\n\n    def simulate_scenario(self, scenario_index):\n        \"\"\"\u6307\u5b9a\u3055\u308c\u305f\u30b7\u30ca\u30ea\u30aa\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n        scenario = self.scenarios[scenario_index]\n\n        goal_amount = scenario[\"goal_amount\"]\n        monthly_savings = scenario[\"monthly_savings\"]\n        annual_interest_rate = scenario[\"annual_interest_rate\"]\n\n        current_savings = 0\n        months = 0\n        monthly_interest_rate = annual_interest_rate / 12\n        total_interest = 0\n\n        while current_savings &lt; goal_amount and months &lt; 600:\n            months += 1\n\n            # \u5229\u606f\u8a08\u7b97\n            interest = current_savings * monthly_interest_rate\n            total_interest += interest\n\n            # \u8caf\u91d1\u8ffd\u52a0\n            current_savings += monthly_savings + interest\n\n        # \u7d50\u679c\u3092\u4fdd\u5b58\n        result = {\n            \"months\": months,\n            \"final_amount\": current_savings,\n            \"total_deposits\": monthly_savings * months,\n            \"total_interest\": total_interest,\n            \"achieved\": current_savings &gt;= goal_amount\n        }\n\n        scenario[\"result\"] = result\n        return result\n\n    def simulate_all(self):\n        \"\"\"\u3059\u3079\u3066\u306e\u30b7\u30ca\u30ea\u30aa\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n        for i in range(len(self.scenarios)):\n            self.simulate_scenario(i)\n\n    def compare_results(self):\n        \"\"\"\u7d50\u679c\u3092\u6bd4\u8f03\u8868\u793a\"\"\"\n        print(\"=\" * 70)\n        print(\"\u30b7\u30ca\u30ea\u30aa\u6bd4\u8f03\u7d50\u679c\")\n        print(\"=\" * 70)\n        print(f\"{'\u30b7\u30ca\u30ea\u30aa':&lt;15} {'\u671f\u9593':&lt;8} {'\u6700\u7d42\u984d':&lt;12} {'\u5229\u606f':&lt;10} {'\u9054\u6210'}\")\n        print(\"-\" * 70)\n\n        for scenario in self.scenarios:\n            if scenario[\"result\"]:\n                result = scenario[\"result\"]\n                name = scenario[\"name\"]\n                months = result[\"months\"]\n                final = result[\"final_amount\"]\n                interest = result[\"total_interest\"]\n                achieved = \"\u2713\" if result[\"achieved\"] else \"\u2717\"\n\n                years = months // 12\n                remaining_months = months % 12\n                if years &gt; 0:\n                    period = f\"{years}\u5e74{remaining_months}\u30f6\u6708\"\n                else:\n                    period = f\"{remaining_months}\u30f6\u6708\"\n\n                print(f\"{name:&lt;15} {period:&lt;8} {final:&gt;8,.0f}\u5186 {interest:&gt;7,.0f}\u5186 {achieved}\")\n\n        print(\"=\" * 70)\n\n    def find_best_scenario(self):\n        \"\"\"\u6700\u9069\u306a\u30b7\u30ca\u30ea\u30aa\u3092\u898b\u3064\u3051\u308b\"\"\"\n        valid_scenarios = [s for s in self.scenarios if s[\"result\"] and s[\"result\"][\"achieved\"]]\n\n        if not valid_scenarios:\n            return None\n\n        # \u6700\u77ed\u671f\u9593\u306e\u30b7\u30ca\u30ea\u30aa\u3092\u898b\u3064\u3051\u308b\n        best_scenario = min(valid_scenarios, key=lambda s: s[\"result\"][\"months\"])\n\n        return best_scenario\n\n# \u4f7f\u7528\u4f8b\nsimulator = SavingsSimulator()\n\n# \u8907\u6570\u306e\u30b7\u30ca\u30ea\u30aa\u3092\u8ffd\u52a0\nsimulator.add_scenario(\"\u57fa\u672c\u30d7\u30e9\u30f3\", 2000000, 80000, 0)\nsimulator.add_scenario(\"\u7a4d\u6975\u30d7\u30e9\u30f3\", 2000000, 100000, 0)\nsimulator.add_scenario(\"\u5229\u606f\u6d3b\u7528\", 2000000, 80000, 0.02)\nsimulator.add_scenario(\"\u9ad8\u91d1\u5229+\u5897\u984d\", 2000000, 100000, 0.03)\nsimulator.add_scenario(\"\u5c11\u984d\u9577\u671f\", 2000000, 60000, 0.01)\n\n# \u3059\u3079\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\nsimulator.simulate_all()\n\n# \u7d50\u679c\u6bd4\u8f03\nsimulator.compare_results()\n\n# \u6700\u9069\u30b7\u30ca\u30ea\u30aa\u306e\u8868\u793a\nbest = simulator.find_best_scenario()\nif best:\n    print(f\"\\n\ud83c\udfc6 \u6700\u77ed\u9054\u6210\u30b7\u30ca\u30ea\u30aa: {best['name']}\")\n    print(f\"\u9054\u6210\u671f\u9593: {best['result']['months']}\u30f6\u6708\")\n</code></pre>"},{"location":"chapter09/#for","title":"for\u6587\u306b\u3088\u308b\u7e70\u308a\u8fd4\u3057","text":"<p>while\u6587\u306f\u6761\u4ef6\u304c\u6e80\u305f\u3055\u308c\u308b\u9593\u7e70\u308a\u8fd4\u3057\u307e\u3059\u304c\u3001for\u6587\u306f\u6c7a\u307e\u3063\u305f\u56de\u6570\u3084\u3001\u6c7a\u307e\u3063\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002</p>"},{"location":"chapter09/#for_1","title":"for\u6587\u306e\u57fa\u672c\u69cb\u6587","text":"<pre><code>for \u5909\u6570 in \u7e70\u308a\u8fd4\u3057\u5bfe\u8c61:\n    \u7e70\u308a\u8fd4\u3057\u305f\u3044\u51e6\u7406\n</code></pre>"},{"location":"chapter09/#range","title":"range()\u95a2\u6570\u3092\u4f7f\u3063\u305f\u57fa\u672c\u7684\u306a\u7e70\u308a\u8fd4\u3057","text":"<pre><code>&gt;&gt;&gt; # 0\u304b\u30894\u307e\u3067\uff085\u56de\uff09\u7e70\u308a\u8fd4\u3057\n&gt;&gt;&gt; for i in range(5):\n...     print(f\"\u56de\u6570: {i}\")\n... \n\u56de\u6570: 0\n\u56de\u6570: 1\n\u56de\u6570: 2\n\u56de\u6570: 3\n\u56de\u6570: 4\n\n&gt;&gt;&gt; # 1\u304b\u30895\u307e\u3067\u7e70\u308a\u8fd4\u3057\n&gt;&gt;&gt; for i in range(1, 6):\n...     print(f\"\u6570\u5024: {i}\")\n... \n\u6570\u5024: 1\n\u6570\u5024: 2\n\u6570\u5024: 3\n\u6570\u5024: 4\n\u6570\u5024: 5\n\n&gt;&gt;&gt; # 2\u3064\u98db\u3070\u3057\u3067\u7e70\u308a\u8fd4\u3057\n&gt;&gt;&gt; for i in range(0, 10, 2):\n...     print(f\"\u5076\u6570: {i}\")\n... \n\u5076\u6570: 0\n\u5076\u6570: 2\n\u5076\u6570: 4\n\u5076\u6570: 6\n\u5076\u6570: 8\n</code></pre>"},{"location":"chapter09/#_5","title":"\u30ea\u30b9\u30c8\u306b\u5bfe\u3059\u308b\u7e70\u308a\u8fd4\u3057","text":"<pre><code>&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u4e00\u3064\u305a\u3064\u51e6\u7406\n&gt;&gt;&gt; fruits = [\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u30aa\u30ec\u30f3\u30b8\", \"\u3076\u3069\u3046\"]\n\n&gt;&gt;&gt; for fruit in fruits:\n...     print(f\"\u679c\u7269: {fruit}\")\n... \n\u679c\u7269: \u308a\u3093\u3054\n\u679c\u7269: \u30d0\u30ca\u30ca\n\u679c\u7269: \u30aa\u30ec\u30f3\u30b8\n\u679c\u7269: \u3076\u3069\u3046\n\n&gt;&gt;&gt; # \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u756a\u53f7\u3082\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\n&gt;&gt;&gt; for index, fruit in enumerate(fruits):\n...     print(f\"{index + 1}\u756a\u76ee: {fruit}\")\n... \n1\u756a\u76ee: \u308a\u3093\u3054\n2\u756a\u76ee: \u30d0\u30ca\u30ca\n3\u756a\u76ee: \u30aa\u30ec\u30f3\u30b8\n4\u756a\u76ee: \u3076\u3069\u3046\n</code></pre>"},{"location":"chapter09/#_6","title":"\u3010\u5b9f\u884c\u3011\u6210\u7e3e\u8868\u306e\u5e73\u5747\u70b9\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u6210\u7e3e\u8868\u51e6\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001for\u6587\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter09/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u6210\u7e3e\u8a08\u7b97","text":"<pre><code>&gt;&gt;&gt; def calculate_class_statistics(scores):\n...     \"\"\"\u30af\u30e9\u30b9\u306e\u6210\u7e3e\u7d71\u8a08\u3092\u8a08\u7b97\"\"\"\n...     \n...     if not scores:\n...         return None\n...     \n...     total = 0\n...     count = 0\n...     max_score = scores[0]\n...     min_score = scores[0]\n...     \n...     for score in scores:\n...         total += score\n...         count += 1\n...         \n...         if score &gt; max_score:\n...             max_score = score\n...         if score &lt; min_score:\n...             min_score = score\n...     \n...     average = total / count\n...     \n...     return {\n...         \"count\": count,\n...         \"total\": total,\n...         \"average\": average,\n...         \"max_score\": max_score,\n...         \"min_score\": min_score,\n...         \"range\": max_score - min_score\n...     }\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n&gt;&gt;&gt; class_scores = [85, 92, 78, 88, 94, 76, 89, 83, 91, 87]\n\n&gt;&gt;&gt; stats = calculate_class_statistics(class_scores)\n&gt;&gt;&gt; print(\"=== \u30af\u30e9\u30b9\u6210\u7e3e\u7d71\u8a08 ===\")\n&gt;&gt;&gt; print(f\"\u4eba\u6570: {stats['count']}\u4eba\")\n&gt;&gt;&gt; print(f\"\u5408\u8a08\u70b9: {stats['total']}\u70b9\")\n&gt;&gt;&gt; print(f\"\u5e73\u5747\u70b9: {stats['average']:.1f}\u70b9\")\n&gt;&gt;&gt; print(f\"\u6700\u9ad8\u70b9: {stats['max_score']}\u70b9\")\n&gt;&gt;&gt; print(f\"\u6700\u4f4e\u70b9: {stats['min_score']}\u70b9\")\n&gt;&gt;&gt; print(f\"\u70b9\u6570\u5e45: {stats['range']}\u70b9\")\n\n=== \u30af\u30e9\u30b9\u6210\u7e3e\u7d71\u8a08 ===\n\u4eba\u6570: 10\u4eba\n\u5408\u8a08\u70b9: 863\u70b9\n\u5e73\u5747\u70b9: 86.3\u70b9\n\u6700\u9ad8\u70b9: 94\u70b9\n\u6700\u4f4e\u70b9: 76\u70b9\n\u70b9\u6570\u5e45: 18\u70b9\n</code></pre>"},{"location":"chapter09/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u500b\u4eba\u5225\u6210\u7e3e\u8868","text":"<pre><code>&gt;&gt;&gt; def process_student_grades():\n...     \"\"\"\u500b\u4eba\u5225\u6210\u7e3e\u8868\u3092\u51e6\u7406\"\"\"\n...     \n...     # \u5b66\u751f\u30c7\u30fc\u30bf\uff08\u540d\u524d\u3068\u5404\u79d1\u76ee\u306e\u70b9\u6570\uff09\n...     students = [\n...         {\"name\": \"\u7530\u4e2d\u592a\u90ce\", \"scores\": {\"\u56fd\u8a9e\": 85, \"\u6570\u5b66\": 92, \"\u82f1\u8a9e\": 78, \"\u7406\u79d1\": 88, \"\u793e\u4f1a\": 84}},\n...         {\"name\": \"\u4f50\u85e4\u82b1\u5b50\", \"scores\": {\"\u56fd\u8a9e\": 92, \"\u6570\u5b66\": 85, \"\u82f1\u8a9e\": 95, \"\u7406\u79d1\": 91, \"\u793e\u4f1a\": 89}},\n...         {\"name\": \"\u9234\u6728\u4e00\u90ce\", \"scores\": {\"\u56fd\u8a9e\": 78, \"\u6570\u5b66\": 88, \"\u82f1\u8a9e\": 82, \"\u7406\u79d1\": 85, \"\u793e\u4f1a\": 80}},\n...         {\"name\": \"\u9ad8\u6a4b\u7f8e\u54b2\", \"scores\": {\"\u56fd\u8a9e\": 88, \"\u6570\u5b66\": 94, \"\u82f1\u8a9e\": 90, \"\u7406\u79d1\": 92, \"\u793e\u4f1a\": 87}},\n...         {\"name\": \"\u5c71\u7530\u5065\u592a\", \"scores\": {\"\u56fd\u8a9e\": 82, \"\u6570\u5b66\": 79, \"\u82f1\u8a9e\": 85, \"\u7406\u79d1\": 83, \"\u793e\u4f1a\": 88}}\n...     ]\n...     \n...     print(\"=== \u500b\u4eba\u5225\u6210\u7e3e\u8868 ===\")\n...     print(f\"{'\u540d\u524d':&lt;10} {'\u5408\u8a08':&lt;6} {'\u5e73\u5747':&lt;6} {'\u9806\u4f4d':&lt;4} \u5404\u79d1\u76ee\")\n...     print(\"-\" * 60)\n...     \n...     # \u5404\u5b66\u751f\u306e\u5408\u8a08\u70b9\u3068\u5e73\u5747\u70b9\u3092\u8a08\u7b97\n...     student_results = []\n...     \n...     for student in students:\n...         name = student[\"name\"]\n...         scores = student[\"scores\"]\n...         \n...         # \u5408\u8a08\u3068\u5e73\u5747\u3092\u8a08\u7b97\n...         total_score = sum(scores.values())\n...         average_score = total_score / len(scores)\n...         \n...         # \u79d1\u76ee\u5225\u6210\u7e3e\u306e\u6587\u5b57\u5217\u3092\u4f5c\u6210\n...         score_details = \" \".join([f\"{subject}:{score}\" for subject, score in scores.items()])\n...         \n...         student_results.append({\n...             \"name\": name,\n...             \"total\": total_score,\n...             \"average\": average_score,\n...             \"details\": score_details\n...         })\n...     \n...     # \u5408\u8a08\u70b9\u3067\u9806\u4f4d\u3092\u6c7a\u5b9a\uff08\u964d\u9806\u30bd\u30fc\u30c8\uff09\n...     student_results.sort(key=lambda x: x[\"total\"], reverse=True)\n...     \n...     # \u7d50\u679c\u8868\u793a\n...     for rank, student in enumerate(student_results, 1):\n...         print(f\"{student['name']:&lt;10} {student['total']:&lt;6} {student['average']:&lt;6.1f} {rank:&lt;4} {student['details']}\")\n...     \n...     return student_results\n... \n\n&gt;&gt;&gt; results = process_student_grades()\n\n=== \u500b\u4eba\u5225\u6210\u7e3e\u8868 ===\n\u540d\u524d       \u5408\u8a08   \u5e73\u5747   \u9806\u4f4d \u5404\u79d1\u76ee\n------------------------------------------------------------\n\u9ad8\u6a4b\u7f8e\u54b2     451    90.2   1    \u56fd\u8a9e:88 \u6570\u5b66:94 \u82f1\u8a9e:90 \u7406\u79d1:92 \u793e\u4f1a:87\n\u4f50\u85e4\u82b1\u5b50     452    90.4   2    \u56fd\u8a9e:92 \u6570\u5b66:85 \u82f1\u8a9e:95 \u7406\u79d1:91 \u793e\u4f1a:89\n\u7530\u4e2d\u592a\u90ce     427    85.4   3    \u56fd\u8a9e:85 \u6570\u5b66:92 \u82f1\u8a9e:78 \u7406\u79d1:88 \u793e\u4f1a:84\n\u5c71\u7530\u5065\u592a     417    83.4   4    \u56fd\u8a9e:82 \u6570\u5b66:79 \u82f1\u8a9e:85 \u7406\u79d1:83 \u793e\u4f1a:88\n\u9234\u6728\u4e00\u90ce     413    82.6   5    \u56fd\u8a9e:78 \u6570\u5b66:88 \u82f1\u8a9e:82 \u7406\u79d1:85 \u793e\u4f1a:80\n</code></pre>"},{"location":"chapter09/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u79d1\u76ee\u5225\u7d71\u8a08","text":"<pre><code>&gt;&gt;&gt; def analyze_subject_performance(students):\n...     \"\"\"\u79d1\u76ee\u5225\u306e\u6210\u7e3e\u5206\u6790\"\"\"\n...     \n...     # \u79d1\u76ee\u540d\u3092\u53d6\u5f97\n...     subjects = list(students[0][\"scores\"].keys())\n...     \n...     print(\"=== \u79d1\u76ee\u5225\u6210\u7e3e\u5206\u6790 ===\")\n...     print(f\"{'\u79d1\u76ee':&lt;6} {'\u5e73\u5747':&lt;6} {'\u6700\u9ad8':&lt;4} {'\u6700\u4f4e':&lt;4} {'\u6a19\u6e96\u504f\u5dee':&lt;8}\")\n...     print(\"-\" * 40)\n...     \n...     subject_stats = {}\n...     \n...     for subject in subjects:\n...         # \u8a72\u5f53\u79d1\u76ee\u306e\u5168\u5b66\u751f\u306e\u70b9\u6570\u3092\u53ce\u96c6\n...         scores = [student[\"scores\"][subject] for student in students]\n...         \n...         # \u7d71\u8a08\u8a08\u7b97\n...         average = sum(scores) / len(scores)\n...         max_score = max(scores)\n...         min_score = min(scores)\n...         \n...         # \u6a19\u6e96\u504f\u5dee\u306e\u8a08\u7b97\n...         variance = sum((score - average) ** 2 for score in scores) / len(scores)\n...         std_deviation = variance ** 0.5\n...         \n...         subject_stats[subject] = {\n...             \"average\": average,\n...             \"max\": max_score,\n...             \"min\": min_score,\n...             \"std_dev\": std_deviation,\n...             \"scores\": scores\n...         }\n...         \n...         print(f\"{subject:&lt;6} {average:&lt;6.1f} {max_score:&lt;4} {min_score:&lt;4} {std_deviation:&lt;8.2f}\")\n...     \n...     # \u6700\u3082\u96e3\u3057\u3044\u79d1\u76ee\u3068\u7c21\u5358\u306a\u79d1\u76ee\u3092\u7279\u5b9a\n...     easiest_subject = max(subject_stats.keys(), key=lambda s: subject_stats[s][\"average\"])\n...     hardest_subject = min(subject_stats.keys(), key=lambda s: subject_stats[s][\"average\"])\n...     \n...     print(f\"\\n\ud83d\udcca \u5206\u6790\u7d50\u679c:\")\n...     print(f\"\u6700\u3082\u5e73\u5747\u70b9\u304c\u9ad8\u3044\u79d1\u76ee: {easiest_subject} ({subject_stats[easiest_subject]['average']:.1f}\u70b9)\")\n...     print(f\"\u6700\u3082\u5e73\u5747\u70b9\u304c\u4f4e\u3044\u79d1\u76ee: {hardest_subject} ({subject_stats[hardest_subject]['average']:.1f}\u70b9)\")\n...     \n...     return subject_stats\n... \n\n&gt;&gt;&gt; # \u524d\u306e\u30b9\u30c6\u30c3\u30d7\u306estudents\u30c7\u30fc\u30bf\u3092\u4f7f\u7528\n&gt;&gt;&gt; students = [\n...     {\"name\": \"\u7530\u4e2d\u592a\u90ce\", \"scores\": {\"\u56fd\u8a9e\": 85, \"\u6570\u5b66\": 92, \"\u82f1\u8a9e\": 78, \"\u7406\u79d1\": 88, \"\u793e\u4f1a\": 84}},\n...     {\"name\": \"\u4f50\u85e4\u82b1\u5b50\", \"scores\": {\"\u56fd\u8a9e\": 92, \"\u6570\u5b66\": 85, \"\u82f1\u8a9e\": 95, \"\u7406\u79d1\": 91, \"\u793e\u4f1a\": 89}},\n...     {\"name\": \"\u9234\u6728\u4e00\u90ce\", \"scores\": {\"\u56fd\u8a9e\": 78, \"\u6570\u5b66\": 88, \"\u82f1\u8a9e\": 82, \"\u7406\u79d1\": 85, \"\u793e\u4f1a\": 80}},\n...     {\"name\": \"\u9ad8\u6a4b\u7f8e\u54b2\", \"scores\": {\"\u56fd\u8a9e\": 88, \"\u6570\u5b66\": 94, \"\u82f1\u8a9e\": 90, \"\u7406\u79d1\": 92, \"\u793e\u4f1a\": 87}},\n...     {\"name\": \"\u5c71\u7530\u5065\u592a\", \"scores\": {\"\u56fd\u8a9e\": 82, \"\u6570\u5b66\": 79, \"\u82f1\u8a9e\": 85, \"\u7406\u79d1\": 83, \"\u793e\u4f1a\": 88}}\n... ]\n\n&gt;&gt;&gt; subject_stats = analyze_subject_performance(students)\n\n=== \u79d1\u76ee\u5225\u6210\u7e3e\u5206\u6790 ===\n\u79d1\u76ee   \u5e73\u5747   \u6700\u9ad8 \u6700\u4f4e \u6a19\u6e96\u504f\u5dee\n----------------------------------------\n\u56fd\u8a9e   85.0   92   78   5.39\n\u6570\u5b66   87.6   94   79   5.94\n\u82f1\u8a9e   86.0   95   78   6.78\n\u7406\u79d1   87.8   92   83   3.90\n\u793e\u4f1a   85.6   89   80   3.78\n\n\ud83d\udcca \u5206\u6790\u7d50\u679c:\n\u6700\u3082\u5e73\u5747\u70b9\u304c\u9ad8\u3044\u79d1\u76ee: \u7406\u79d1 (87.8\u70b9)\n\u6700\u3082\u5e73\u5747\u70b9\u304c\u4f4e\u3044\u79d1\u76ee: \u56fd\u8a9e (85.0\u70b9)\n</code></pre>"},{"location":"chapter09/#4_1","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u6210\u7e3e\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0","text":"<pre><code># \u7dcf\u5408\u6210\u7e3e\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\nclass GradeManager:\n    def __init__(self):\n        self.students = []\n        self.subjects = []\n\n    def add_student(self, name, scores_dict):\n        \"\"\"\u5b66\u751f\u3092\u8ffd\u52a0\"\"\"\n        student = {\n            \"name\": name,\n            \"scores\": scores_dict.copy(),\n            \"id\": len(self.students) + 1\n        }\n        self.students.append(student)\n\n        # \u79d1\u76ee\u30ea\u30b9\u30c8\u3092\u66f4\u65b0\n        for subject in scores_dict.keys():\n            if subject not in self.subjects:\n                self.subjects.append(subject)\n\n    def calculate_student_stats(self, student):\n        \"\"\"\u500b\u4eba\u306e\u7d71\u8a08\u3092\u8a08\u7b97\"\"\"\n        scores = list(student[\"scores\"].values())\n        total = sum(scores)\n        average = total / len(scores)\n\n        return {\n            \"total\": total,\n            \"average\": average,\n            \"max\": max(scores),\n            \"min\": min(scores)\n        }\n\n    def get_class_ranking(self):\n        \"\"\"\u30af\u30e9\u30b9\u9806\u4f4d\u3092\u53d6\u5f97\"\"\"\n        rankings = []\n\n        for student in self.students:\n            stats = self.calculate_student_stats(student)\n            rankings.append({\n                \"name\": student[\"name\"],\n                \"total\": stats[\"total\"],\n                \"average\": stats[\"average\"]\n            })\n\n        # \u5408\u8a08\u70b9\u3067\u964d\u9806\u30bd\u30fc\u30c8\n        rankings.sort(key=lambda x: x[\"total\"], reverse=True)\n\n        return rankings\n\n    def generate_report_card(self, student_name):\n        \"\"\"\u500b\u4eba\u306e\u6210\u7e3e\u8868\u3092\u751f\u6210\"\"\"\n        student = None\n        for s in self.students:\n            if s[\"name\"] == student_name:\n                student = s\n                break\n\n        if not student:\n            return f\"\u5b66\u751f '{student_name}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n\n        stats = self.calculate_student_stats(student)\n        rankings = self.get_class_ranking()\n\n        # \u9806\u4f4d\u3092\u898b\u3064\u3051\u308b\n        rank = None\n        for i, r in enumerate(rankings, 1):\n            if r[\"name\"] == student_name:\n                rank = i\n                break\n\n        report = f\"\"\"\n=== {student['name']} \u3055\u3093\u306e\u6210\u7e3e\u8868 ===\n\u5b66\u7c4d\u756a\u53f7: {student['id']:03d}\n\u30af\u30e9\u30b9\u9806\u4f4d: {rank}/{len(self.students)}\u4f4d\n\n\u3010\u79d1\u76ee\u5225\u6210\u7e3e\u3011\"\"\"\n\n        for subject in self.subjects:\n            if subject in student[\"scores\"]:\n                score = student[\"scores\"][subject]\n                report += f\"\\n{subject}: {score}\u70b9\"\n\n        report += f\"\"\"\n\n\u3010\u7d71\u8a08\u60c5\u5831\u3011\n\u5408\u8a08\u70b9: {stats['total']}\u70b9\n\u5e73\u5747\u70b9: {stats['average']:.1f}\u70b9\n\u6700\u9ad8\u70b9: {stats['max']}\u70b9\n\u6700\u4f4e\u70b9: {stats['min']}\u70b9\n\"\"\"\n\n        return report\n\n    def analyze_class_performance(self):\n        \"\"\"\u30af\u30e9\u30b9\u5168\u4f53\u306e\u6210\u7e3e\u5206\u6790\"\"\"\n        if not self.students:\n            return \"\u5b66\u751f\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093\"\n\n        analysis = \"=== \u30af\u30e9\u30b9\u6210\u7e3e\u5206\u6790 ===\\n\"\n\n        # \u5168\u4f53\u7d71\u8a08\n        all_totals = [self.calculate_student_stats(s)[\"total\"] for s in self.students]\n        class_average = sum(all_totals) / len(all_totals)\n\n        analysis += f\"\u30af\u30e9\u30b9\u4eba\u6570: {len(self.students)}\u4eba\\n\"\n        analysis += f\"\u30af\u30e9\u30b9\u5e73\u5747: {class_average:.1f}\u70b9\\n\\n\"\n\n        # \u79d1\u76ee\u5225\u5206\u6790\n        analysis += \"\u3010\u79d1\u76ee\u5225\u5e73\u5747\u70b9\u3011\\n\"\n        for subject in self.subjects:\n            scores = [s[\"scores\"].get(subject, 0) for s in self.students if subject in s[\"scores\"]]\n            if scores:\n                subject_avg = sum(scores) / len(scores)\n                analysis += f\"{subject}: {subject_avg:.1f}\u70b9\\n\"\n\n        # \u6210\u7e3e\u5206\u5e03\n        analysis += \"\\n\u3010\u6210\u7e3e\u5206\u5e03\u3011\\n\"\n        grade_ranges = [\n            (\"A (90-100\u70b9)\", 90, 100),\n            (\"B (80-89\u70b9)\", 80, 89),\n            (\"C (70-79\u70b9)\", 70, 79),\n            (\"D (60-69\u70b9)\", 60, 69),\n            (\"F (60\u70b9\u672a\u6e80)\", 0, 59)\n        ]\n\n        for grade_name, min_score, max_score in grade_ranges:\n            count = 0\n            for student in self.students:\n                avg = self.calculate_student_stats(student)[\"average\"]\n                if min_score &lt;= avg &lt;= max_score:\n                    count += 1\n            percentage = (count / len(self.students)) * 100\n            analysis += f\"{grade_name}: {count}\u4eba ({percentage:.1f}%)\\n\"\n\n        return analysis\n\n# \u4f7f\u7528\u4f8b\ngrade_manager = GradeManager()\n\n# \u5b66\u751f\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\nstudents_data = [\n    (\"\u7530\u4e2d\u592a\u90ce\", {\"\u56fd\u8a9e\": 85, \"\u6570\u5b66\": 92, \"\u82f1\u8a9e\": 78, \"\u7406\u79d1\": 88, \"\u793e\u4f1a\": 84}),\n    (\"\u4f50\u85e4\u82b1\u5b50\", {\"\u56fd\u8a9e\": 92, \"\u6570\u5b66\": 85, \"\u82f1\u8a9e\": 95, \"\u7406\u79d1\": 91, \"\u793e\u4f1a\": 89}),\n    (\"\u9234\u6728\u4e00\u90ce\", {\"\u56fd\u8a9e\": 78, \"\u6570\u5b66\": 88, \"\u82f1\u8a9e\": 82, \"\u7406\u79d1\": 85, \"\u793e\u4f1a\": 80}),\n    (\"\u9ad8\u6a4b\u7f8e\u54b2\", {\"\u56fd\u8a9e\": 88, \"\u6570\u5b66\": 94, \"\u82f1\u8a9e\": 90, \"\u7406\u79d1\": 92, \"\u793e\u4f1a\": 87}),\n    (\"\u5c71\u7530\u5065\u592a\", {\"\u56fd\u8a9e\": 82, \"\u6570\u5b66\": 79, \"\u82f1\u8a9e\": 85, \"\u7406\u79d1\": 83, \"\u793e\u4f1a\": 88})\n]\n\nfor name, scores in students_data:\n    grade_manager.add_student(name, scores)\n\n# \u500b\u4eba\u6210\u7e3e\u8868\nprint(grade_manager.generate_report_card(\"\u4f50\u85e4\u82b1\u5b50\"))\n\n# \u30af\u30e9\u30b9\u5206\u6790\nprint(grade_manager.analyze_class_performance())\n\n# \u9806\u4f4d\u8868\u793a\nrankings = grade_manager.get_class_ranking()\nprint(\"\\n=== \u30af\u30e9\u30b9\u9806\u4f4d ===\")\nfor i, student in enumerate(rankings, 1):\n    print(f\"{i}\u4f4d: {student['name']} ({student['total']}\u70b9)\")\n</code></pre>"},{"location":"chapter09/#break-continue","title":"\u7e70\u308a\u8fd4\u3057\u306e\u5236\u5fa1\uff08break, continue\uff09","text":"<p>\u30eb\u30fc\u30d7\u306e\u5b9f\u884c\u4e2d\u306b\u3001\u7279\u5b9a\u306e\u6761\u4ef6\u3067\u30eb\u30fc\u30d7\u3092\u629c\u3051\u305f\u308a\u3001\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3057\u305f\u308a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002</p>"},{"location":"chapter09/#break","title":"break\u6587\uff1a\u30eb\u30fc\u30d7\u3092\u9014\u4e2d\u3067\u629c\u3051\u308b","text":"<pre><code>&gt;&gt;&gt; # \u7279\u5b9a\u306e\u6761\u4ef6\u3067\u30eb\u30fc\u30d7\u3092\u7d42\u4e86\n&gt;&gt;&gt; numbers = [1, 3, 7, 2, 9, 4, 6]\n&gt;&gt;&gt; target = 9\n\n&gt;&gt;&gt; for i, number in enumerate(numbers):\n...     print(f\"\u30c1\u30a7\u30c3\u30af\u4e2d: {number}\")\n...     if number == target:\n...         print(f\"\u76ee\u6a19\u306e\u6570\u5024 {target} \u3092 {i} \u756a\u76ee\u3067\u767a\u898b\uff01\")\n...         break\n... else:\n...     print(f\"\u76ee\u6a19\u306e\u6570\u5024 {target} \u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\")\n\n\u30c1\u30a7\u30c3\u30af\u4e2d: 1\n\u30c1\u30a7\u30c3\u30af\u4e2d: 3\n\u30c1\u30a7\u30c3\u30af\u4e2d: 7\n\u30c1\u30a7\u30c3\u30af\u4e2d: 2\n\u30c1\u30a7\u30c3\u30af\u4e2d: 9\n\u76ee\u6a19\u306e\u6570\u5024 9 \u3092 4 \u756a\u76ee\u3067\u767a\u898b\uff01\n</code></pre>"},{"location":"chapter09/#continue","title":"continue\u6587\uff1a\u73fe\u5728\u306e\u5468\u671f\u3092\u30b9\u30ad\u30c3\u30d7","text":"<pre><code>&gt;&gt;&gt; # \u5076\u6570\u306e\u307f\u3092\u51e6\u7406\n&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n&gt;&gt;&gt; print(\"\u5076\u6570\u306e\u307f\u3092\u8868\u793a:\")\n&gt;&gt;&gt; for number in numbers:\n...     if number % 2 != 0:  # \u5947\u6570\u306e\u5834\u5408\n...         continue  # \u3053\u306e\u5468\u671f\u3092\u30b9\u30ad\u30c3\u30d7\n...     print(f\"\u5076\u6570: {number}\")\n\n\u5076\u6570\u306e\u307f\u3092\u8868\u793a:\n\u5076\u6570: 2\n\u5076\u6570: 4\n\u5076\u6570: 6\n\u5076\u6570: 8\n\u5076\u6570: 10\n</code></pre>"},{"location":"chapter09/#_7","title":"\u5b9f\u7528\u7684\u306a\u4f8b\uff1a\u30c7\u30fc\u30bf\u691c\u8a3c\u51e6\u7406","text":"<pre><code>&gt;&gt;&gt; def process_student_data(raw_data):\n...     \"\"\"\u5b66\u751f\u30c7\u30fc\u30bf\u3092\u691c\u8a3c\u3057\u306a\u304c\u3089\u51e6\u7406\"\"\"\n...     \n...     processed_students = []\n...     error_count = 0\n...     \n...     print(\"=== \u5b66\u751f\u30c7\u30fc\u30bf\u51e6\u7406 ===\")\n...     \n...     for i, data in enumerate(raw_data):\n...         print(f\"\u51e6\u7406\u4e2d: \u5b66\u751f {i+1}\")\n...         \n...         # \u5fc5\u8981\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u78ba\u8a8d\n...         if \"name\" not in data:\n...             print(f\"  \u274c \u30a8\u30e9\u30fc: \u540d\u524d\u304c\u4e0d\u660e\")\n...             error_count += 1\n...             continue\n...         \n...         if \"age\" not in data:\n...             print(f\"  \u274c \u30a8\u30e9\u30fc: {data['name']} \u306e\u5e74\u9f62\u304c\u4e0d\u660e\")\n...             error_count += 1\n...             continue\n...         \n...         # \u5e74\u9f62\u306e\u7bc4\u56f2\u30c1\u30a7\u30c3\u30af\n...         age = data[\"age\"]\n...         if age &lt; 15 or age &gt; 25:\n...             print(f\"  \u26a0\ufe0f \u8b66\u544a: {data['name']} \u306e\u5e74\u9f62 ({age}) \u304c\u7bc4\u56f2\u5916\")\n...             # continue\u305b\u305a\u306b\u51e6\u7406\u7d99\u7d9a\n...         \n...         # \u30c7\u30fc\u30bf\u304c\u5b8c\u5168\u306b\u4e0d\u6b63\u306a\u5834\u5408\u306f\u51e6\u7406\u3092\u4e2d\u65ad\n...         if age &lt; 0:\n...             print(f\"  \ud83d\uded1 \u81f4\u547d\u7684\u30a8\u30e9\u30fc: \u8ca0\u306e\u5e74\u9f62 ({age})\")\n...             print(\"  \u51e6\u7406\u3092\u4e2d\u65ad\u3057\u307e\u3059\")\n...             break\n...         \n...         # \u6b63\u5e38\u306a\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\n...         processed_students.append({\n...             \"name\": data[\"name\"],\n...             \"age\": age,\n...             \"grade\": data.get(\"grade\", \"\u672a\u8a2d\u5b9a\")\n...         })\n...         print(f\"  \u2705 {data['name']} \u306e\u51e6\u7406\u5b8c\u4e86\")\n...     \n...     print(f\"\\n\u51e6\u7406\u7d50\u679c:\")\n...     print(f\"  \u6b63\u5e38\u51e6\u7406: {len(processed_students)}\u4ef6\")\n...     print(f\"  \u30a8\u30e9\u30fc: {error_count}\u4ef6\")\n...     \n...     return processed_students\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n&gt;&gt;&gt; test_data = [\n...     {\"name\": \"\u7530\u4e2d\u592a\u90ce\", \"age\": 18, \"grade\": \"A\"},\n...     {\"age\": 19, \"grade\": \"B\"},  # \u540d\u524d\u306a\u3057\n...     {\"name\": \"\u4f50\u85e4\u82b1\u5b50\", \"age\": 30, \"grade\": \"A\"},  # \u5e74\u9f62\u7bc4\u56f2\u5916\n...     {\"name\": \"\u9234\u6728\u4e00\u90ce\"},  # \u5e74\u9f62\u306a\u3057\n...     {\"name\": \"\u5c71\u7530\u5065\u592a\", \"age\": 20, \"grade\": \"C\"},\n...     {\"name\": \"\u9ad8\u6a4b\u7f8e\u54b2\", \"age\": 17, \"grade\": \"B\"}\n... ]\n\n&gt;&gt;&gt; processed = process_student_data(test_data)\n\n=== \u5b66\u751f\u30c7\u30fc\u30bf\u51e6\u7406 ===\n\u51e6\u7406\u4e2d: \u5b66\u751f 1\n  \u2705 \u7530\u4e2d\u592a\u90ce \u306e\u51e6\u7406\u5b8c\u4e86\n\u51e6\u7406\u4e2d: \u5b66\u751f 2\n  \u274c \u30a8\u30e9\u30fc: \u540d\u524d\u304c\u4e0d\u660e\n\u51e6\u7406\u4e2d: \u5b66\u751f 3\n  \u26a0\ufe0f \u8b66\u544a: \u4f50\u85e4\u82b1\u5b50 \u306e\u5e74\u9f62 (30) \u304c\u7bc4\u56f2\u5916\n  \u2705 \u4f50\u85e4\u82b1\u5b50 \u306e\u51e6\u7406\u5b8c\u4e86\n\u51e6\u7406\u4e2d: \u5b66\u751f 4\n  \u274c \u30a8\u30e9\u30fc: \u9234\u6728\u4e00\u90ce \u306e\u5e74\u9f62\u304c\u4e0d\u660e\n\u51e6\u7406\u4e2d: \u5b66\u751f 5\n  \u2705 \u5c71\u7530\u5065\u592a \u306e\u51e6\u7406\u5b8c\u4e86\n\u51e6\u7406\u4e2d: \u5b66\u751f 6\n  \u2705 \u9ad8\u6a4b\u7f8e\u54b2 \u306e\u51e6\u7406\u5b8c\u4e86\n\n\u51e6\u7406\u7d50\u679c:\n  \u6b63\u5e38\u51e6\u7406: 4\u4ef6\n  \u30a8\u30e9\u30fc: 2\u4ef6\n</code></pre>"},{"location":"chapter09/#_8","title":"\u30cd\u30b9\u30c8\u3057\u305f\u30eb\u30fc\u30d7\uff08\u30eb\u30fc\u30d7\u306e\u5165\u308c\u5b50\uff09","text":"<p>\u30eb\u30fc\u30d7\u306e\u4e2d\u306b\u3055\u3089\u306b\u30eb\u30fc\u30d7\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3092\u30cd\u30b9\u30c8\u3057\u305f\u30eb\u30fc\u30d7\u3068\u8a00\u3044\u307e\u3059\u3002</p>"},{"location":"chapter09/#_9","title":"\u4e8c\u91cd\u30eb\u30fc\u30d7\u306e\u57fa\u672c\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u4e5d\u4e5d\u306e\u8868\u3092\u4f5c\u6210\n&gt;&gt;&gt; print(\"=== \u4e5d\u4e5d\u306e\u8868 ===\")\n&gt;&gt;&gt; for i in range(1, 10):\n...     for j in range(1, 10):\n...         result = i * j\n...         print(f\"{result:3d}\", end=\"\")\n...     print()  # \u6539\u884c\n\n=== \u4e5d\u4e5d\u306e\u8868 ===\n  1  2  3  4  5  6  7  8  9\n  2  4  6  8 10 12 14 16 18\n  3  6  9 12 15 18 21 24 27\n  4  8 12 16 20 24 28 32 36\n  5 10 15 20 25 30 35 40 45\n  6 12 18 24 30 36 42 48 54\n  7 14 21 28 35 42 49 56 63\n  8 16 24 32 40 48 56 64 72\n  9 18 27 36 45 54 63 72 81\n</code></pre>"},{"location":"chapter09/#_10","title":"\u5b9f\u7528\u7684\u306a\u4f8b\uff1a\u5ea7\u5e2d\u8868\u306e\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; def create_seating_chart(rows, cols, occupied_seats=None):\n...     \"\"\"\u5ea7\u5e2d\u8868\u3092\u4f5c\u6210\u3057\u3066\u8868\u793a\"\"\"\n...     \n...     if occupied_seats is None:\n...         occupied_seats = []\n...     \n...     print(\"=== \u5ea7\u5e2d\u8868 ===\")\n...     print(\"  \", end=\"\")\n...     \n...     # \u5217\u756a\u53f7\u306e\u30d8\u30c3\u30c0\u30fc\n...     for col in range(1, cols + 1):\n...         print(f\"{col:2d}\", end=\"\")\n...     print()\n...     \n...     # \u5404\u884c\u306e\u5ea7\u5e2d\n...     for row in range(1, rows + 1):\n...         print(f\"{row} \", end=\"\")  # \u884c\u756a\u53f7\n...         \n...         for col in range(1, cols + 1):\n...             seat_id = f\"{row}-{col}\"\n...             \n...             if seat_id in occupied_seats:\n...                 print(\" X\", end=\"\")  # \u5360\u6709\u6e08\u307f\n...             else:\n...                 print(\" O\", end=\"\")  # \u7a7a\u5e2d\n...         \n...         print()  # \u6539\u884c\n...     \n...     # \u7a7a\u5e2d\u6570\u3092\u30ab\u30a6\u30f3\u30c8\n...     total_seats = rows * cols\n...     occupied_count = len(occupied_seats)\n...     available_count = total_seats - occupied_count\n...     \n...     print(f\"\\n\u5ea7\u5e2d\u60c5\u5831:\")\n...     print(f\"  \u7dcf\u5ea7\u5e2d\u6570: {total_seats}\")\n...     print(f\"  \u5360\u6709\u6e08\u307f: {occupied_count}\")\n...     print(f\"  \u7a7a\u5e2d: {available_count}\")\n...     \n...     return available_count\n... \n\n&gt;&gt;&gt; # \u5ea7\u5e2d\u8868\u306e\u4f5c\u6210\n&gt;&gt;&gt; occupied = [\"1-1\", \"1-3\", \"2-2\", \"3-1\", \"3-3\", \"4-4\"]\n&gt;&gt;&gt; available = create_seating_chart(5, 6, occupied)\n\n=== \u5ea7\u5e2d\u8868 ===\n   1 2 3 4 5 6\n1  X O X O O O\n2  O X O O O O\n3  X O X O O O\n4  O O O X O O\n5  O O O O O O\n\n\u5ea7\u5e2d\u60c5\u5831:\n  \u7dcf\u5ea7\u5e2d\u6570: 30\n  \u5360\u6709\u6e08\u307f: 6\n  \u7a7a\u5e2d: 24\n</code></pre>"},{"location":"chapter09/#_11","title":"\u307e\u3068\u3081\uff1a\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306e\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter09/#while_2","title":"while\u6587\u306e\u7279\u5fb4","text":"<ul> <li>\u6761\u4ef6\u304c\u771f\u306e\u9593\u3001\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3059</li> <li>\u6761\u4ef6\u3092\u6e80\u305f\u3059\u307e\u3067\u51e6\u7406\u3092\u7d9a\u3051\u308b\u5834\u5408\u306b\u9069\u3057\u3066\u3044\u308b</li> <li>\u7121\u9650\u30eb\u30fc\u30d7\u306b\u6ce8\u610f\u304c\u5fc5\u8981</li> <li>\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u306a\u3069\u306e\u6761\u4ef6\u9054\u6210\u578b\u51e6\u7406\u306b\u6700\u9069</li> </ul>"},{"location":"chapter09/#for_2","title":"for\u6587\u306e\u7279\u5fb4","text":"<ul> <li>\u6c7a\u307e\u3063\u305f\u56de\u6570\u3084\u6c7a\u307e\u3063\u305f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u7e70\u308a\u8fd4\u3059</li> <li>\u30ea\u30b9\u30c8\u3084range()\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528</li> <li>enumerate()\u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3082\u540c\u6642\u306b\u53d6\u5f97\u53ef\u80fd</li> <li>\u6210\u7e3e\u51e6\u7406\u306a\u3069\u306e\u30c7\u30fc\u30bf\u51e6\u7406\u306b\u6700\u9069</li> </ul>"},{"location":"chapter09/#_12","title":"\u30eb\u30fc\u30d7\u5236\u5fa1","text":"<ul> <li><code>break</code>: \u30eb\u30fc\u30d7\u3092\u9014\u4e2d\u3067\u7d42\u4e86</li> <li><code>continue</code>: \u73fe\u5728\u306e\u5468\u671f\u3092\u30b9\u30ad\u30c3\u30d7</li> <li>\u30c7\u30fc\u30bf\u691c\u8a3c\u3084\u4f8b\u5916\u51e6\u7406\u3067\u6d3b\u7528</li> </ul>"},{"location":"chapter09/#_13","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u8caf\u91d1\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff08while\u6587\uff09</li> <li>\u6210\u7e3e\u8868\u51e6\u7406\uff08for\u6587\uff09</li> <li>\u30c7\u30fc\u30bf\u691c\u8a3c\u51e6\u7406\uff08break/continue\uff09</li> <li>\u5ea7\u5e2d\u8868\u7ba1\u7406\uff08\u30cd\u30b9\u30c8\u3057\u305f\u30eb\u30fc\u30d7\uff09</li> </ul>"},{"location":"chapter09/#_14","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u8a2d\u8a08\u306e\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u30eb\u30fc\u30d7\u306e\u7d42\u4e86\u6761\u4ef6\u3092\u660e\u78ba\u306b\u3059\u308b</li> <li>\u7121\u9650\u30eb\u30fc\u30d7\u3092\u907f\u3051\u308b\u5b89\u5168\u88c5\u7f6e\u3092\u8a2d\u3051\u308b</li> <li>\u51e6\u7406\u306e\u9032\u6357\u3092\u9069\u5207\u306b\u8868\u793a\u3059\u308b</li> <li>\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u7d44\u307f\u8fbc\u3080</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u6574\u7406\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u7ba1\u7406\u3084\u9023\u7d61\u5148\u5e33\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30ea\u30b9\u30c8\u3001\u8f9e\u66f8\u3001\u30bb\u30c3\u30c8\u306a\u3069\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u6d3b\u7528\u3057\u305f\u52b9\u7387\u7684\u306a\u30c7\u30fc\u30bf\u7ba1\u7406\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter10/","title":"\u7b2c10\u7ae0\uff1a\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u6574\u7406\u3057\u3088\u3046","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u306f\u3001\u6570\u5024\u3084\u6587\u5b57\u5217\u3068\u3044\u3063\u305f\u5358\u7d14\u306a\u30c7\u30fc\u30bf\u3092\u6271\u3063\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30ea\u30b9\u30c8\u3001\u8f9e\u66f8\u3001\u30bb\u30c3\u30c8\u3068\u3044\u3046Python\u306e\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b66\u3073\u3001\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3084\u9023\u7d61\u5148\u5e33\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u52b9\u7387\u7684\u306a\u30c7\u30fc\u30bf\u7ba1\u7406\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter10/#-","title":"\u30ea\u30b9\u30c8 - \u30c7\u30fc\u30bf\u306e\u96c6\u307e\u308a","text":""},{"location":"chapter10/#_1","title":"\u30ea\u30b9\u30c8\u3068\u306f","text":"<p>\u30ea\u30b9\u30c8\u306f\u3001\u8907\u6570\u306e\u30c7\u30fc\u30bf\u3092\u9806\u756a\u306b\u4e26\u3079\u3066\u4fdd\u5b58\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\u73fe\u5b9f\u4e16\u754c\u306e\u300c\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u300d\u3084\u300c\u3084\u308b\u3053\u3068\u30ea\u30b9\u30c8\u300d\u3068\u540c\u3058\u6982\u5ff5\u3067\u3059\u3002</p> <pre><code>&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u306e\u4f5c\u6210\n&gt;&gt;&gt; fruits = [\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u30aa\u30ec\u30f3\u30b8\"]\n&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; mixed_list = [\"\u6587\u5b57\u5217\", 42, True, 3.14]\n\n&gt;&gt;&gt; print(f\"\u679c\u7269\u30ea\u30b9\u30c8: {fruits}\")\n&gt;&gt;&gt; print(f\"\u6570\u5024\u30ea\u30b9\u30c8: {numbers}\")\n&gt;&gt;&gt; print(f\"\u6df7\u5408\u30ea\u30b9\u30c8: {mixed_list}\")\n\n\u679c\u7269\u30ea\u30b9\u30c8: ['\u308a\u3093\u3054', '\u30d0\u30ca\u30ca', '\u30aa\u30ec\u30f3\u30b8']\n\u6570\u5024\u30ea\u30b9\u30c8: [1, 2, 3, 4, 5]\n\u6df7\u5408\u30ea\u30b9\u30c8: ['\u6587\u5b57\u5217', 42, True, 3.14]\n</code></pre>"},{"location":"chapter10/#_2","title":"\u30ea\u30b9\u30c8\u306e\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u7a7a\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\n&gt;&gt;&gt; shopping_list = []\n\n&gt;&gt;&gt; # \u8981\u7d20\u306e\u8ffd\u52a0\n&gt;&gt;&gt; shopping_list.append(\"\u725b\u4e73\")\n&gt;&gt;&gt; shopping_list.append(\"\u30d1\u30f3\")\n&gt;&gt;&gt; shopping_list.append(\"\u5375\")\n\n&gt;&gt;&gt; print(f\"\u73fe\u5728\u306e\u30ea\u30b9\u30c8: {shopping_list}\")\n\u73fe\u5728\u306e\u30ea\u30b9\u30c8: ['\u725b\u4e73', '\u30d1\u30f3', '\u5375']\n\n&gt;&gt;&gt; # \u8981\u7d20\u306e\u53d6\u5f97\uff08\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306f0\u304b\u3089\u59cb\u307e\u308b\uff09\n&gt;&gt;&gt; first_item = shopping_list[0]\n&gt;&gt;&gt; last_item = shopping_list[-1]  # \u6700\u5f8c\u306e\u8981\u7d20\n\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e\u9805\u76ee: {first_item}\")\n&gt;&gt;&gt; print(f\"\u6700\u5f8c\u306e\u9805\u76ee: {last_item}\")\n\n\u6700\u521d\u306e\u9805\u76ee: \u725b\u4e73\n\u6700\u5f8c\u306e\u9805\u76ee: \u5375\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u306e\u9577\u3055\n&gt;&gt;&gt; list_length = len(shopping_list)\n&gt;&gt;&gt; print(f\"\u30ea\u30b9\u30c8\u306e\u9577\u3055: {list_length}\")\n\u30ea\u30b9\u30c8\u306e\u9577\u3055: 3\n</code></pre>"},{"location":"chapter10/#_3","title":"\u30ea\u30b9\u30c8\u306e\u8a73\u7d30\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u8907\u6570\u8981\u7d20\u306e\u8ffd\u52a0\n&gt;&gt;&gt; additional_items = [\"\u30c1\u30fc\u30ba\", \"\u30c8\u30de\u30c8\", \"\u30ec\u30bf\u30b9\"]\n&gt;&gt;&gt; shopping_list.extend(additional_items)\n&gt;&gt;&gt; print(f\"\u8ffd\u52a0\u5f8c: {shopping_list}\")\n\u8ffd\u52a0\u5f8c: ['\u725b\u4e73', '\u30d1\u30f3', '\u5375', '\u30c1\u30fc\u30ba', '\u30c8\u30de\u30c8', '\u30ec\u30bf\u30b9']\n\n&gt;&gt;&gt; # \u7279\u5b9a\u4f4d\u7f6e\u3078\u306e\u633f\u5165\n&gt;&gt;&gt; shopping_list.insert(1, \"\u30d0\u30bf\u30fc\")  # 1\u756a\u76ee\u306b\u633f\u5165\n&gt;&gt;&gt; print(f\"\u633f\u5165\u5f8c: {shopping_list}\")\n\u633f\u5165\u5f8c: ['\u725b\u4e73', '\u30d0\u30bf\u30fc', '\u30d1\u30f3', '\u5375', '\u30c1\u30fc\u30ba', '\u30c8\u30de\u30c8', '\u30ec\u30bf\u30b9']\n\n&gt;&gt;&gt; # \u8981\u7d20\u306e\u524a\u9664\n&gt;&gt;&gt; removed_item = shopping_list.pop()  # \u6700\u5f8c\u3092\u524a\u9664\n&gt;&gt;&gt; print(f\"\u524a\u9664\u3055\u308c\u305f\u9805\u76ee: {removed_item}\")\n&gt;&gt;&gt; print(f\"\u524a\u9664\u5f8c: {shopping_list}\")\n\n\u524a\u9664\u3055\u308c\u305f\u9805\u76ee: \u30ec\u30bf\u30b9\n\u524a\u9664\u5f8c: ['\u725b\u4e73', '\u30d0\u30bf\u30fc', '\u30d1\u30f3', '\u5375', '\u30c1\u30fc\u30ba', '\u30c8\u30de\u30c8']\n\n&gt;&gt;&gt; # \u5024\u306b\u3088\u308b\u524a\u9664\n&gt;&gt;&gt; shopping_list.remove(\"\u30d0\u30bf\u30fc\")\n&gt;&gt;&gt; print(f\"\u30d0\u30bf\u30fc\u524a\u9664\u5f8c: {shopping_list}\")\n\u30d0\u30bf\u30fc\u524a\u9664\u5f8c: ['\u725b\u4e73', '\u30d1\u30f3', '\u5375', '\u30c1\u30fc\u30ba', '\u30c8\u30de\u30c8']\n\n&gt;&gt;&gt; # \u8981\u7d20\u306e\u5b58\u5728\u78ba\u8a8d\n&gt;&gt;&gt; if \"\u725b\u4e73\" in shopping_list:\n...     print(\"\u725b\u4e73\u306f\u30ea\u30b9\u30c8\u306b\u3042\u308a\u307e\u3059\")\n... else:\n...     print(\"\u725b\u4e73\u306f\u30ea\u30b9\u30c8\u306b\u3042\u308a\u307e\u305b\u3093\")\n\u725b\u4e73\u306f\u30ea\u30b9\u30c8\u306b\u3042\u308a\u307e\u3059\n</code></pre>"},{"location":"chapter10/#_4","title":"\u3010\u5b9f\u884c\u3011\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<p>\u5b9f\u7528\u7684\u306a\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u30ea\u30b9\u30c8\u306e\u6d3b\u7528\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter10/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u8cb7\u3044\u7269\u30ea\u30b9\u30c8","text":"<pre><code>&gt;&gt;&gt; class ShoppingList:\n...     def __init__(self):\n...         self.items = []\n...         self.completed_items = []\n...     \n...     def add_item(self, item, quantity=1):\n...         \"\"\"\u5546\u54c1\u3092\u8ffd\u52a0\"\"\"\n...         shopping_item = {\n...             \"name\": item,\n...             \"quantity\": quantity,\n...             \"completed\": False\n...         }\n...         self.items.append(shopping_item)\n...         print(f\"\u2705 '{item}' \u3092 {quantity}\u500b \u8ffd\u52a0\u3057\u307e\u3057\u305f\")\n...     \n...     def mark_completed(self, item_name):\n...         \"\"\"\u5546\u54c1\u3092\u8cfc\u5165\u6e08\u307f\u306b\u30de\u30fc\u30af\"\"\"\n...         for item in self.items:\n...             if item[\"name\"] == item_name and not item[\"completed\"]:\n...                 item[\"completed\"] = True\n...                 self.completed_items.append(item)\n...                 print(f\"\u2705 '{item_name}' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\")\n...                 return True\n...         print(f\"\u274c '{item_name}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         return False\n...     \n...     def remove_item(self, item_name):\n...         \"\"\"\u5546\u54c1\u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\"\"\"\n...         for i, item in enumerate(self.items):\n...             if item[\"name\"] == item_name:\n...                 removed = self.items.pop(i)\n...                 print(f\"\ud83d\uddd1\ufe0f '{item_name}' \u3092\u30ea\u30b9\u30c8\u304b\u3089\u524a\u9664\u3057\u307e\u3057\u305f\")\n...                 return removed\n...         print(f\"\u274c '{item_name}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         return None\n...     \n...     def display_list(self):\n...         \"\"\"\u30ea\u30b9\u30c8\u3092\u8868\u793a\"\"\"\n...         if not self.items:\n...             print(\"\ud83d\udcdd \u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u306f\u7a7a\u3067\u3059\")\n...             return\n...         \n...         print(\"\\n\ud83d\udcdd === \u8cb7\u3044\u7269\u30ea\u30b9\u30c8 ===\")\n...         pending_items = [item for item in self.items if not item[\"completed\"]]\n...         completed_items = [item for item in self.items if item[\"completed\"]]\n...         \n...         if pending_items:\n...             print(\"\u3010\u672a\u8cfc\u5165\u3011\")\n...             for i, item in enumerate(pending_items, 1):\n...                 print(f\"  {i}. {item['name']} \u00d7 {item['quantity']}\")\n...         \n...         if completed_items:\n...             print(\"\u3010\u8cfc\u5165\u6e08\u307f\u3011\")\n...             for i, item in enumerate(completed_items, 1):\n...                 print(f\"  \u2713 {item['name']} \u00d7 {item['quantity']}\")\n...         \n...         print(f\"\\n\ud83d\udcca \u9032\u6357: {len(completed_items)}/{len(self.items)} \u5b8c\u4e86\")\n...     \n...     def get_summary(self):\n...         \"\"\"\u8cb7\u3044\u7269\u306e\u6982\u8981\u3092\u53d6\u5f97\"\"\"\n...         total_items = len(self.items)\n...         completed_count = len([item for item in self.items if item[\"completed\"]])\n...         pending_count = total_items - completed_count\n...         \n...         return {\n...             \"total\": total_items,\n...             \"completed\": completed_count,\n...             \"pending\": pending_count,\n...             \"completion_rate\": (completed_count / total_items * 100) if total_items &gt; 0 else 0\n...         }\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; my_shopping = ShoppingList()\n\n&gt;&gt;&gt; # \u5546\u54c1\u8ffd\u52a0\n&gt;&gt;&gt; my_shopping.add_item(\"\u725b\u4e73\", 2)\n&gt;&gt;&gt; my_shopping.add_item(\"\u30d1\u30f3\", 1)\n&gt;&gt;&gt; my_shopping.add_item(\"\u5375\", 12)\n&gt;&gt;&gt; my_shopping.add_item(\"\u308a\u3093\u3054\", 5)\n\n\u2705 '\u725b\u4e73' \u3092 2\u500b \u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 '\u30d1\u30f3' \u3092 1\u500b \u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 '\u5375' \u3092 12\u500b \u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 '\u308a\u3093\u3054' \u3092 5\u500b \u8ffd\u52a0\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u8868\u793a\n&gt;&gt;&gt; my_shopping.display_list()\n\n\ud83d\udcdd === \u8cb7\u3044\u7269\u30ea\u30b9\u30c8 ===\n\u3010\u672a\u8cfc\u5165\u3011\n  1. \u725b\u4e73 \u00d7 2\n  2. \u30d1\u30f3 \u00d7 1\n  3. \u5375 \u00d7 12\n  4. \u308a\u3093\u3054 \u00d7 5\n\n\ud83d\udcca \u9032\u6357: 0/4 \u5b8c\u4e86\n\n&gt;&gt;&gt; # \u8cfc\u5165\u6e08\u307f\u30de\u30fc\u30af\n&gt;&gt;&gt; my_shopping.mark_completed(\"\u725b\u4e73\")\n&gt;&gt;&gt; my_shopping.mark_completed(\"\u30d1\u30f3\")\n\n\u2705 '\u725b\u4e73' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\n\u2705 '\u30d1\u30f3' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; my_shopping.display_list()\n\n\ud83d\udcdd === \u8cb7\u3044\u7269\u30ea\u30b9\u30c8 ===\n\u3010\u672a\u8cfc\u5165\u3011\n  1. \u5375 \u00d7 12\n  2. \u308a\u3093\u3054 \u00d7 5\n\u3010\u8cfc\u5165\u6e08\u307f\u3011\n  \u2713 \u725b\u4e73 \u00d7 2\n  \u2713 \u30d1\u30f3 \u00d7 1\n\n\ud83d\udcca \u9032\u6357: 2/4 \u5b8c\u4e86\n</code></pre>"},{"location":"chapter10/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30ab\u30c6\u30b4\u30ea\u5225\u7ba1\u7406\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; class AdvancedShoppingList:\n...     def __init__(self):\n...         self.categories = {\n...             \"\u8089\u30fb\u9b5a\": [],\n...             \"\u91ce\u83dc\u30fb\u679c\u7269\": [],\n...             \"\u4e73\u88fd\u54c1\": [],\n...             \"\u30d1\u30f3\u30fb\u7c73\": [],\n...             \"\u8abf\u5473\u6599\": [],\n...             \"\u305d\u306e\u4ed6\": []\n...         }\n...         self.budget = 0\n...         self.total_cost = 0\n...     \n...     def set_budget(self, amount):\n...         \"\"\"\u4e88\u7b97\u3092\u8a2d\u5b9a\"\"\"\n...         self.budget = amount\n...         print(f\"\ud83d\udcb0 \u4e88\u7b97\u3092 {amount}\u5186 \u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\")\n...     \n...     def add_item(self, name, quantity=1, category=\"\u305d\u306e\u4ed6\", estimated_price=0):\n...         \"\"\"\u5546\u54c1\u3092\u8ffd\u52a0\uff08\u30ab\u30c6\u30b4\u30ea\u5225\uff09\"\"\"\n...         if category not in self.categories:\n...             category = \"\u305d\u306e\u4ed6\"\n...         \n...         item = {\n...             \"name\": name,\n...             \"quantity\": quantity,\n...             \"estimated_price\": estimated_price,\n...             \"actual_price\": 0,\n...             \"completed\": False\n...         }\n...         \n...         self.categories[category].append(item)\n...         print(f\"\u2705 '{name}' \u3092 {category} \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\")\n...         \n...         if estimated_price &gt; 0:\n...             print(f\"   \u4e88\u60f3\u4fa1\u683c: {estimated_price}\u5186\")\n...     \n...     def mark_purchased(self, name, actual_price=None, category=None):\n...         \"\"\"\u5546\u54c1\u3092\u8cfc\u5165\u6e08\u307f\u306b\u30de\u30fc\u30af\"\"\"\n...         categories_to_search = [category] if category else self.categories.keys()\n...         \n...         for cat in categories_to_search:\n...             for item in self.categories[cat]:\n...                 if item[\"name\"] == name and not item[\"completed\"]:\n...                     item[\"completed\"] = True\n...                     if actual_price is not None:\n...                         item[\"actual_price\"] = actual_price\n...                         self.total_cost += actual_price\n...                     print(f\"\u2705 '{name}' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\")\n...                     if actual_price:\n...                         print(f\"   \u5b9f\u969b\u306e\u4fa1\u683c: {actual_price}\u5186\")\n...                     return True\n...         \n...         print(f\"\u274c '{name}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         return False\n...     \n...     def display_by_category(self):\n...         \"\"\"\u30ab\u30c6\u30b4\u30ea\u5225\u306b\u30ea\u30b9\u30c8\u3092\u8868\u793a\"\"\"\n...         print(\"\\n\ud83d\uded2 === \u30ab\u30c6\u30b4\u30ea\u5225\u8cb7\u3044\u7269\u30ea\u30b9\u30c8 ===\")\n...         \n...         total_items = 0\n...         completed_items = 0\n...         estimated_total = 0\n...         \n...         for category, items in self.categories.items():\n...             if items:  # \u7a7a\u3067\u306a\u3044\u30ab\u30c6\u30b4\u30ea\u306e\u307f\u8868\u793a\n...                 print(f\"\\n\ud83d\udcc2 {category}\")\n...                 for item in items:\n...                     status = \"\u2713\" if item[\"completed\"] else \"\u25cb\"\n...                     price_info = \"\"\n...                     if item[\"estimated_price\"] &gt; 0:\n...                         price_info = f\" (\u4e88\u60f3: {item['estimated_price']}\u5186)\"\n...                     if item[\"actual_price\"] &gt; 0:\n...                         price_info += f\" [\u5b9f\u969b: {item['actual_price']}\u5186]\"\n...                     \n...                     print(f\"  {status} {item['name']} \u00d7 {item['quantity']}{price_info}\")\n...                     \n...                     total_items += 1\n...                     if item[\"completed\"]:\n...                         completed_items += 1\n...                     estimated_total += item[\"estimated_price\"] * item[\"quantity\"]\n...         \n...         # \u30b5\u30de\u30ea\u30fc\u8868\u793a\n...         print(f\"\\n\ud83d\udcca === \u30b5\u30de\u30ea\u30fc ===\")\n...         print(f\"\u9032\u6357: {completed_items}/{total_items} \u5b8c\u4e86\")\n...         print(f\"\u4e88\u60f3\u7dcf\u984d: {estimated_total}\u5186\")\n...         if self.budget &gt; 0:\n...             print(f\"\u4e88\u7b97: {self.budget}\u5186\")\n...             remaining = self.budget - estimated_total\n...             if remaining &gt;= 0:\n...                 print(f\"\u4e88\u7b97\u6b8b\u308a: {remaining}\u5186\")\n...             else:\n...                 print(f\"\u4e88\u7b97\u30aa\u30fc\u30d0\u30fc: {-remaining}\u5186\")\n...         print(f\"\u5b9f\u969b\u306e\u652f\u6255\u3044: {self.total_cost}\u5186\")\n...     \n...     def get_shopping_route(self):\n...         \"\"\"\u52b9\u7387\u7684\u306a\u8cb7\u3044\u7269\u30eb\u30fc\u30c8\u3092\u63d0\u6848\"\"\"\n...         # \u4e00\u822c\u7684\u306a\u30b9\u30fc\u30d1\u30fc\u30de\u30fc\u30b1\u30c3\u30c8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u9806\n...         route_order = [\"\u91ce\u83dc\u30fb\u679c\u7269\", \"\u8089\u30fb\u9b5a\", \"\u4e73\u88fd\u54c1\", \"\u30d1\u30f3\u30fb\u7c73\", \"\u8abf\u5473\u6599\", \"\u305d\u306e\u4ed6\"]\n...         \n...         print(\"\\n\ud83d\uddfa\ufe0f === \u52b9\u7387\u7684\u306a\u8cb7\u3044\u7269\u30eb\u30fc\u30c8 ===\")\n...         route_number = 1\n...         \n...         for category in route_order:\n...             pending_items = [item for item in self.categories[category] if not item[\"completed\"]]\n...             if pending_items:\n...                 print(f\"{route_number}. {category} \u30b3\u30fc\u30ca\u30fc\")\n...                 for item in pending_items:\n...                     print(f\"   \u2022 {item['name']} \u00d7 {item['quantity']}\")\n...                 route_number += 1\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; advanced_list = AdvancedShoppingList()\n\n&gt;&gt;&gt; # \u4e88\u7b97\u8a2d\u5b9a\n&gt;&gt;&gt; advanced_list.set_budget(3000)\n\n\ud83d\udcb0 \u4e88\u7b97\u3092 3000\u5186 \u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u30ab\u30c6\u30b4\u30ea\u5225\u306b\u5546\u54c1\u8ffd\u52a0\n&gt;&gt;&gt; advanced_list.add_item(\"\u725b\u4e73\", 1, \"\u4e73\u88fd\u54c1\", 200)\n&gt;&gt;&gt; advanced_list.add_item(\"\u98df\u30d1\u30f3\", 1, \"\u30d1\u30f3\u30fb\u7c73\", 150)\n&gt;&gt;&gt; advanced_list.add_item(\"\u308a\u3093\u3054\", 3, \"\u91ce\u83dc\u30fb\u679c\u7269\", 300)\n&gt;&gt;&gt; advanced_list.add_item(\"\u9d8f\u8089\", 1, \"\u8089\u30fb\u9b5a\", 400)\n&gt;&gt;&gt; advanced_list.add_item(\"\u91a4\u6cb9\", 1, \"\u8abf\u5473\u6599\", 250)\n\n\u2705 '\u725b\u4e73' \u3092 \u4e73\u88fd\u54c1 \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\n   \u4e88\u60f3\u4fa1\u683c: 200\u5186\n\u2705 '\u98df\u30d1\u30f3' \u3092 \u30d1\u30f3\u30fb\u7c73 \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\n   \u4e88\u60f3\u4fa1\u683c: 150\u5186\n\u2705 '\u308a\u3093\u3054' \u3092 \u91ce\u83dc\u30fb\u679c\u7269 \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\n   \u4e88\u60f3\u4fa1\u683c: 300\u5186\n\u2705 '\u9d8f\u8089' \u3092 \u8089\u30fb\u9b5a \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\n   \u4e88\u60f3\u4fa1\u683c: 400\u5186\n\u2705 '\u91a4\u6cb9' \u3092 \u8abf\u5473\u6599 \u30ab\u30c6\u30b4\u30ea\u306b\u8ffd\u52a0\n   \u4e88\u60f3\u4fa1\u683c: 250\u5186\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u8868\u793a\n&gt;&gt;&gt; advanced_list.display_by_category()\n\n\ud83d\uded2 === \u30ab\u30c6\u30b4\u30ea\u5225\u8cb7\u3044\u7269\u30ea\u30b9\u30c8 ===\n\n\ud83d\udcc2 \u8089\u30fb\u9b5a\n  \u25cb \u9d8f\u8089 \u00d7 1 (\u4e88\u60f3: 400\u5186)\n\n\ud83d\udcc2 \u91ce\u83dc\u30fb\u679c\u7269\n  \u25cb \u308a\u3093\u3054 \u00d7 3 (\u4e88\u60f3: 300\u5186)\n\n\ud83d\udcc2 \u4e73\u88fd\u54c1\n  \u25cb \u725b\u4e73 \u00d7 1 (\u4e88\u60f3: 200\u5186)\n\n\ud83d\udcc2 \u30d1\u30f3\u30fb\u7c73\n  \u25cb \u98df\u30d1\u30f3 \u00d7 1 (\u4e88\u60f3: 150\u5186)\n\n\ud83d\udcc2 \u8abf\u5473\u6599\n  \u25cb \u91a4\u6cb9 \u00d7 1 (\u4e88\u60f3: 250\u5186)\n\n\ud83d\udcca === \u30b5\u30de\u30ea\u30fc ===\n\u9032\u6357: 0/5 \u5b8c\u4e86\n\u4e88\u60f3\u7dcf\u984d: 1300\u5186\n\u4e88\u7b97: 3000\u5186\n\u4e88\u7b97\u6b8b\u308a: 1700\u5186\n\u5b9f\u969b\u306e\u652f\u6255\u3044: 0\u5186\n\n&gt;&gt;&gt; # \u8cb7\u3044\u7269\u30eb\u30fc\u30c8\u8868\u793a\n&gt;&gt;&gt; advanced_list.get_shopping_route()\n\n\ud83d\uddfa\ufe0f === \u52b9\u7387\u7684\u306a\u8cb7\u3044\u7269\u30eb\u30fc\u30c8 ===\n1. \u91ce\u83dc\u30fb\u679c\u7269 \u30b3\u30fc\u30ca\u30fc\n   \u2022 \u308a\u3093\u3054 \u00d7 3\n2. \u8089\u30fb\u9b5a \u30b3\u30fc\u30ca\u30fc\n   \u2022 \u9d8f\u8089 \u00d7 1\n3. \u4e73\u88fd\u54c1 \u30b3\u30fc\u30ca\u30fc\n   \u2022 \u725b\u4e73 \u00d7 1\n4. \u30d1\u30f3\u30fb\u7c73 \u30b3\u30fc\u30ca\u30fc\n   \u2022 \u98df\u30d1\u30f3 \u00d7 1\n5. \u8abf\u5473\u6599 \u30b3\u30fc\u30ca\u30fc\n   \u2022 \u91a4\u6cb9 \u00d7 1\n\n&gt;&gt;&gt; # \u3044\u304f\u3064\u304b\u8cfc\u5165\n&gt;&gt;&gt; advanced_list.mark_purchased(\"\u725b\u4e73\", 180)\n&gt;&gt;&gt; advanced_list.mark_purchased(\"\u308a\u3093\u3054\", 280)\n\n\u2705 '\u725b\u4e73' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\n   \u5b9f\u969b\u306e\u4fa1\u683c: 180\u5186\n\u2705 '\u308a\u3093\u3054' \u3092\u8cfc\u5165\u6e08\u307f\u306b\u3057\u307e\u3057\u305f\n   \u5b9f\u969b\u306e\u4fa1\u683c: 280\u5186\n</code></pre>"},{"location":"chapter10/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u30ea\u30b9\u30c8\u306e\u9ad8\u5ea6\u306a\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u306e\u4e26\u3073\u66ff\u3048\u3068\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n&gt;&gt;&gt; numbers = [64, 34, 25, 12, 22, 11, 90]\n\n&gt;&gt;&gt; # \u5143\u306e\u30ea\u30b9\u30c8\u3092\u5909\u66f4\u305b\u305a\u306b\u30bd\u30fc\u30c8\n&gt;&gt;&gt; sorted_numbers = sorted(numbers)\n&gt;&gt;&gt; print(f\"\u5143\u306e\u30ea\u30b9\u30c8: {numbers}\")\n&gt;&gt;&gt; print(f\"\u30bd\u30fc\u30c8\u6e08\u307f: {sorted_numbers}\")\n\n\u5143\u306e\u30ea\u30b9\u30c8: [64, 34, 25, 12, 22, 11, 90]\n\u30bd\u30fc\u30c8\u6e08\u307f: [11, 12, 22, 25, 34, 64, 90]\n\n&gt;&gt;&gt; # \u5143\u306e\u30ea\u30b9\u30c8\u3092\u76f4\u63a5\u5909\u66f4\n&gt;&gt;&gt; numbers.sort(reverse=True)  # \u964d\u9806\n&gt;&gt;&gt; print(f\"\u964d\u9806\u30bd\u30fc\u30c8: {numbers}\")\n\n\u964d\u9806\u30bd\u30fc\u30c8: [90, 64, 34, 25, 22, 12, 11]\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\uff08\u57fa\u672c\uff09\n&gt;&gt;&gt; squares = [x ** 2 for x in range(1, 6)]\n&gt;&gt;&gt; print(f\"\u5e73\u65b9\u6570: {squares}\")\n\n\u5e73\u65b9\u6570: [1, 4, 9, 16, 25]\n\n&gt;&gt;&gt; # \u6761\u4ef6\u4ed8\u304d\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\n&gt;&gt;&gt; even_squares = [x ** 2 for x in range(1, 11) if x % 2 == 0]\n&gt;&gt;&gt; print(f\"\u5076\u6570\u306e\u5e73\u65b9: {even_squares}\")\n\n\u5076\u6570\u306e\u5e73\u65b9: [4, 16, 36, 64, 100]\n\n&gt;&gt;&gt; # \u5b9f\u7528\u7684\u306a\u4f8b\uff1a\u4fa1\u683c\u30ea\u30b9\u30c8\u306e\u51e6\u7406\n&gt;&gt;&gt; products = [\n...     {\"name\": \"\u30ce\u30fc\u30c8PC\", \"price\": 80000},\n...     {\"name\": \"\u30de\u30a6\u30b9\", \"price\": 2000},\n...     {\"name\": \"\u30ad\u30fc\u30dc\u30fc\u30c9\", \"price\": 5000},\n...     {\"name\": \"\u30e2\u30cb\u30bf\u30fc\", \"price\": 25000}\n... ]\n\n&gt;&gt;&gt; # 10000\u5186\u4ee5\u4e0b\u306e\u5546\u54c1\u540d\u3092\u53d6\u5f97\n&gt;&gt;&gt; affordable_products = [p[\"name\"] for p in products if p[\"price\"] &lt;= 10000]\n&gt;&gt;&gt; print(f\"10000\u5186\u4ee5\u4e0b: {affordable_products}\")\n\n10000\u5186\u4ee5\u4e0b: ['\u30de\u30a6\u30b9', '\u30ad\u30fc\u30dc\u30fc\u30c9']\n\n&gt;&gt;&gt; # \u4fa1\u683c\u306b\u6d88\u8cbb\u7a0e\u3092\u8ffd\u52a0\n&gt;&gt;&gt; prices_with_tax = [p[\"price\"] * 1.1 for p in products]\n&gt;&gt;&gt; print(f\"\u7a0e\u8fbc\u4fa1\u683c: {prices_with_tax}\")\n\n\u7a0e\u8fbc\u4fa1\u683c: [88000.0, 2200.0, 5500.0, 27500.0]\n</code></pre>"},{"location":"chapter10/#-_1","title":"\u8f9e\u66f8 - \u540d\u524d\u3092\u3064\u3051\u3066\u6574\u7406","text":""},{"location":"chapter10/#_5","title":"\u8f9e\u66f8\u3068\u306f","text":"<p>\u8f9e\u66f8\u306f\u3001\u30ad\u30fc\u3068\u5024\u306e\u30da\u30a2\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\u3002\u73fe\u5b9f\u4e16\u754c\u306e\u8f9e\u66f8\u3067\u300c\u5358\u8a9e\u300d\u304b\u3089\u300c\u610f\u5473\u300d\u3092\u8abf\u3079\u308b\u3088\u3046\u306b\u3001\u300c\u30ad\u30fc\u300d\u304b\u3089\u300c\u5024\u300d\u3092\u52b9\u7387\u7684\u306b\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p> <pre><code>&gt;&gt;&gt; # \u8f9e\u66f8\u306e\u4f5c\u6210\n&gt;&gt;&gt; student = {\n...     \"name\": \"\u7530\u4e2d\u592a\u90ce\",\n...     \"age\": 20,\n...     \"grade\": \"A\",\n...     \"subjects\": [\"\u6570\u5b66\", \"\u82f1\u8a9e\", \"\u7406\u79d1\"]\n... }\n\n&gt;&gt;&gt; print(f\"\u5b66\u751f\u60c5\u5831: {student}\")\n\u5b66\u751f\u60c5\u5831: {'name': '\u7530\u4e2d\u592a\u90ce', 'age': 20, 'grade': 'A', 'subjects': ['\u6570\u5b66', '\u82f1\u8a9e', '\u7406\u79d1']}\n\n&gt;&gt;&gt; # \u5024\u306e\u53d6\u5f97\n&gt;&gt;&gt; name = student[\"name\"]\n&gt;&gt;&gt; age = student[\"age\"]\n&gt;&gt;&gt; print(f\"\u540d\u524d: {name}, \u5e74\u9f62: {age}\")\n\n\u540d\u524d: \u7530\u4e2d\u592a\u90ce, \u5e74\u9f62: 20\n\n&gt;&gt;&gt; # \u5b89\u5168\u306a\u5024\u306e\u53d6\u5f97\uff08\u30ad\u30fc\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff09\n&gt;&gt;&gt; email = student.get(\"email\", \"\u672a\u767b\u9332\")\n&gt;&gt;&gt; print(f\"\u30e1\u30fc\u30eb: {email}\")\n\n\u30e1\u30fc\u30eb: \u672a\u767b\u9332\n</code></pre>"},{"location":"chapter10/#_6","title":"\u8f9e\u66f8\u306e\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u7a7a\u306e\u8f9e\u66f8\u304b\u3089\u59cb\u3081\u308b\n&gt;&gt;&gt; contact = {}\n\n&gt;&gt;&gt; # \u5024\u306e\u8ffd\u52a0\u30fb\u66f4\u65b0\n&gt;&gt;&gt; contact[\"name\"] = \"\u4f50\u85e4\u82b1\u5b50\"\n&gt;&gt;&gt; contact[\"phone\"] = \"090-1234-5678\"\n&gt;&gt;&gt; contact[\"email\"] = \"sato@example.com\"\n\n&gt;&gt;&gt; print(f\"\u9023\u7d61\u5148: {contact}\")\n\u9023\u7d61\u5148: {'name': '\u4f50\u85e4\u82b1\u5b50', 'phone': '090-1234-5678', 'email': 'sato@example.com'}\n\n&gt;&gt;&gt; # \u8907\u6570\u306e\u5024\u3092\u4e00\u5ea6\u306b\u66f4\u65b0\n&gt;&gt;&gt; contact.update({\n...     \"address\": \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\",\n...     \"company\": \"ABC\u682a\u5f0f\u4f1a\u793e\"\n... })\n\n&gt;&gt;&gt; print(f\"\u66f4\u65b0\u5f8c: {contact}\")\n\u66f4\u65b0\u5f8c: {'name': '\u4f50\u85e4\u82b1\u5b50', 'phone': '090-1234-5678', 'email': 'sato@example.com', 'address': '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a', 'company': 'ABC\u682a\u5f0f\u4f1a\u793e'}\n\n&gt;&gt;&gt; # \u30ad\u30fc\u306e\u5b58\u5728\u78ba\u8a8d\n&gt;&gt;&gt; if \"phone\" in contact:\n...     print(f\"\u96fb\u8a71\u756a\u53f7: {contact['phone']}\")\n\n\u96fb\u8a71\u756a\u53f7: 090-1234-5678\n\n&gt;&gt;&gt; # \u30ad\u30fc\u3001\u5024\u3001\u30da\u30a2\u306e\u53d6\u5f97\n&gt;&gt;&gt; print(\"\u30ad\u30fc\u4e00\u89a7:\", list(contact.keys()))\n&gt;&gt;&gt; print(\"\u5024\u4e00\u89a7:\", list(contact.values()))\n&gt;&gt;&gt; print(\"\u30da\u30a2\u4e00\u89a7:\", list(contact.items()))\n\n\u30ad\u30fc\u4e00\u89a7: ['name', 'phone', 'email', 'address', 'company']\n\u5024\u4e00\u89a7: ['\u4f50\u85e4\u82b1\u5b50', '090-1234-5678', 'sato@example.com', '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a', 'ABC\u682a\u5f0f\u4f1a\u793e']\n\u30da\u30a2\u4e00\u89a7: [('name', '\u4f50\u85e4\u82b1\u5b50'), ('phone', '090-1234-5678'), ('email', 'sato@example.com'), ('address', '\u6771\u4eac\u90fd\u6e0b\u8c37\u533a'), ('company', 'ABC\u682a\u5f0f\u4f1a\u793e')]\n</code></pre>"},{"location":"chapter10/#_7","title":"\u3010\u5b9f\u884c\u3011\u9023\u7d61\u5148\u5e33\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u540d\u524d\u2192\u96fb\u8a71\u756a\u53f7\uff09","text":"<p>\u5b9f\u7528\u7684\u306a\u9023\u7d61\u5148\u5e33\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u8f9e\u66f8\u306e\u6d3b\u7528\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter10/#1_1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u9023\u7d61\u5148\u5e33","text":"<pre><code>&gt;&gt;&gt; class ContactBook:\n...     def __init__(self):\n...         self.contacts = {}\n...     \n...     def add_contact(self, name, phone, email=None, address=None):\n...         \"\"\"\u9023\u7d61\u5148\u3092\u8ffd\u52a0\"\"\"\n...         contact_info = {\n...             \"phone\": phone,\n...             \"email\": email,\n...             \"address\": address,\n...             \"created_date\": \"2024-01-01\"  # \u5b9f\u969b\u306f\u73fe\u5728\u65e5\u6642\n...         }\n...         \n...         self.contacts[name] = contact_info\n...         print(f\"\u2705 {name} \u306e\u9023\u7d61\u5148\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\")\n...     \n...     def search_contact(self, name):\n...         \"\"\"\u9023\u7d61\u5148\u3092\u691c\u7d22\"\"\"\n...         if name in self.contacts:\n...             contact = self.contacts[name]\n...             print(f\"\\n\ud83d\udcde === {name} \u306e\u9023\u7d61\u5148 ===\")\n...             print(f\"\u96fb\u8a71\u756a\u53f7: {contact['phone']}\")\n...             if contact['email']:\n...                 print(f\"\u30e1\u30fc\u30eb: {contact['email']}\")\n...             if contact['address']:\n...                 print(f\"\u4f4f\u6240: {contact['address']}\")\n...             return contact\n...         else:\n...             print(f\"\u274c {name} \u306e\u9023\u7d61\u5148\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             return None\n...     \n...     def update_contact(self, name, **kwargs):\n...         \"\"\"\u9023\u7d61\u5148\u3092\u66f4\u65b0\"\"\"\n...         if name in self.contacts:\n...             for key, value in kwargs.items():\n...                 if key in [\"phone\", \"email\", \"address\"]:\n...                     self.contacts[name][key] = value\n...                     print(f\"\u2705 {name} \u306e {key} \u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\")\n...         else:\n...             print(f\"\u274c {name} \u306e\u9023\u7d61\u5148\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...     \n...     def delete_contact(self, name):\n...         \"\"\"\u9023\u7d61\u5148\u3092\u524a\u9664\"\"\"\n...         if name in self.contacts:\n...             del self.contacts[name]\n...             print(f\"\ud83d\uddd1\ufe0f {name} \u306e\u9023\u7d61\u5148\u3092\u524a\u9664\u3057\u307e\u3057\u305f\")\n...             return True\n...         else:\n...             print(f\"\u274c {name} \u306e\u9023\u7d61\u5148\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             return False\n...     \n...     def list_all_contacts(self):\n...         \"\"\"\u5168\u9023\u7d61\u5148\u3092\u4e00\u89a7\u8868\u793a\"\"\"\n...         if not self.contacts:\n...             print(\"\ud83d\udcd5 \u9023\u7d61\u5148\u5e33\u306f\u7a7a\u3067\u3059\")\n...             return\n...         \n...         print(f\"\\n\ud83d\udcd5 === \u9023\u7d61\u5148\u5e33 ({len(self.contacts)}\u4ef6) ===\")\n...         for name, info in sorted(self.contacts.items()):\n...             print(f\"\ud83d\udc64 {name}: {info['phone']}\")\n...     \n...     def search_by_phone(self, phone):\n...         \"\"\"\u96fb\u8a71\u756a\u53f7\u3067\u9006\u5f15\u304d\u691c\u7d22\"\"\"\n...         for name, info in self.contacts.items():\n...             if info['phone'] == phone:\n...                 print(f\"\ud83d\udcde {phone} \u306f {name} \u306e\u756a\u53f7\u3067\u3059\")\n...                 return name\n...         print(f\"\u274c {phone} \u306e\u767b\u9332\u8005\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         return None\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; contacts = ContactBook()\n\n&gt;&gt;&gt; # \u9023\u7d61\u5148\u8ffd\u52a0\n&gt;&gt;&gt; contacts.add_contact(\"\u7530\u4e2d\u592a\u90ce\", \"090-1234-5678\", \"tanaka@example.com\", \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a1-1-1\")\n&gt;&gt;&gt; contacts.add_contact(\"\u4f50\u85e4\u82b1\u5b50\", \"080-9876-5432\", \"sato@example.com\")\n&gt;&gt;&gt; contacts.add_contact(\"\u9234\u6728\u4e00\u90ce\", \"070-1111-2222\")\n\n\u2705 \u7530\u4e2d\u592a\u90ce \u306e\u9023\u7d61\u5148\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 \u4f50\u85e4\u82b1\u5b50 \u306e\u9023\u7d61\u5148\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 \u9234\u6728\u4e00\u90ce \u306e\u9023\u7d61\u5148\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u9023\u7d61\u5148\u4e00\u89a7\n&gt;&gt;&gt; contacts.list_all_contacts()\n\n\ud83d\udcd5 === \u9023\u7d61\u5148\u5e33 (3\u4ef6) ===\n\ud83d\udc64 \u4f50\u85e4\u82b1\u5b50: 080-9876-5432\n\ud83d\udc64 \u7530\u4e2d\u592a\u90ce: 090-1234-5678\n\ud83d\udc64 \u9234\u6728\u4e00\u90ce: 070-1111-2222\n\n&gt;&gt;&gt; # \u691c\u7d22\n&gt;&gt;&gt; contacts.search_contact(\"\u7530\u4e2d\u592a\u90ce\")\n\n\ud83d\udcde === \u7530\u4e2d\u592a\u90ce \u306e\u9023\u7d61\u5148 ===\n\u96fb\u8a71\u756a\u53f7: 090-1234-5678\n\u30e1\u30fc\u30eb: tanaka@example.com\n\u4f4f\u6240: \u6771\u4eac\u90fd\u6e0b\u8c37\u533a1-1-1\n\n&gt;&gt;&gt; # \u66f4\u65b0\n&gt;&gt;&gt; contacts.update_contact(\"\u4f50\u85e4\u82b1\u5b50\", address=\"\u5927\u962a\u5e9c\u5927\u962a\u5e02\u5317\u533a2-2-2\")\n\n\u2705 \u4f50\u85e4\u82b1\u5b50 \u306e address \u3092\u66f4\u65b0\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u9006\u5f15\u304d\u691c\u7d22\n&gt;&gt;&gt; contacts.search_by_phone(\"070-1111-2222\")\n\n\ud83d\udcde 070-1111-2222 \u306f \u9234\u6728\u4e00\u90ce \u306e\u756a\u53f7\u3067\u3059\n</code></pre>"},{"location":"chapter10/#2_1","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u9ad8\u5ea6\u306a\u691c\u7d22\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; class AdvancedContactBook(ContactBook):\n...     def __init__(self):\n...         super().__init__()\n...         self.groups = {}  # \u30b0\u30eb\u30fc\u30d7\u7ba1\u7406\n...     \n...     def add_contact(self, name, phone, email=None, address=None, company=None, group=\"\u4e00\u822c\"):\n...         \"\"\"\u62e1\u5f35\u3055\u308c\u305f\u9023\u7d61\u5148\u8ffd\u52a0\"\"\"\n...         contact_info = {\n...             \"phone\": phone,\n...             \"email\": email,\n...             \"address\": address,\n...             \"company\": company,\n...             \"group\": group,\n...             \"created_date\": \"2024-01-01\",\n...             \"notes\": \"\"\n...         }\n...         \n...         self.contacts[name] = contact_info\n...         \n...         # \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\n...         if group not in self.groups:\n...             self.groups[group] = []\n...         if name not in self.groups[group]:\n...             self.groups[group].append(name)\n...         \n...         print(f\"\u2705 {name} \u3092 {group} \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\")\n...     \n...     def search_by_keyword(self, keyword):\n...         \"\"\"\u30ad\u30fc\u30ef\u30fc\u30c9\u3067\u691c\u7d22\"\"\"\n...         results = []\n...         keyword_lower = keyword.lower()\n...         \n...         for name, info in self.contacts.items():\n...             # \u540d\u524d\u3001\u4f1a\u793e\u540d\u3001\u4f4f\u6240\u3001\u30e1\u30fc\u30eb\u3067\u691c\u7d22\n...             search_fields = [\n...                 name.lower(),\n...                 (info.get('company') or '').lower(),\n...                 (info.get('address') or '').lower(),\n...                 (info.get('email') or '').lower()\n...             ]\n...             \n...             if any(keyword_lower in field for field in search_fields):\n...                 results.append(name)\n...         \n...         if results:\n...             print(f\"\\n\ud83d\udd0d '{keyword}' \u306e\u691c\u7d22\u7d50\u679c ({len(results)}\u4ef6):\")\n...             for name in results:\n...                 info = self.contacts[name]\n...                 print(f\"\ud83d\udc64 {name} ({info['group']}) - {info['phone']}\")\n...         else:\n...             print(f\"\u274c '{keyword}' \u306b\u4e00\u81f4\u3059\u308b\u9023\u7d61\u5148\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         \n...         return results\n...     \n...     def list_by_group(self, group=None):\n...         \"\"\"\u30b0\u30eb\u30fc\u30d7\u5225\u306b\u8868\u793a\"\"\"\n...         if group:\n...             if group in self.groups:\n...                 print(f\"\\n\ud83d\udc65 === {group} \u30b0\u30eb\u30fc\u30d7 ===\")\n...                 for name in sorted(self.groups[group]):\n...                     info = self.contacts[name]\n...                     print(f\"\ud83d\udc64 {name}: {info['phone']}\")\n...             else:\n...                 print(f\"\u274c '{group}' \u30b0\u30eb\u30fc\u30d7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         else:\n...             print(\"\\n\ud83d\udc65 === \u5168\u30b0\u30eb\u30fc\u30d7 ===\")\n...             for group_name in sorted(self.groups.keys()):\n...                 print(f\"\\n\ud83d\udcc2 {group_name} ({len(self.groups[group_name])}\u4eba)\")\n...                 for name in sorted(self.groups[group_name]):\n...                     info = self.contacts[name]\n...                     print(f\"  \ud83d\udc64 {name}: {info['phone']}\")\n...     \n...     def export_to_csv_format(self):\n...         \"\"\"CSV\u5f62\u5f0f\u3067\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\"\"\"\n...         print(\"\\n\ud83d\udcc4 === CSV\u5f62\u5f0f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 ===\")\n...         print(\"\u540d\u524d,\u96fb\u8a71\u756a\u53f7,\u30e1\u30fc\u30eb,\u4f4f\u6240,\u4f1a\u793e,\u30b0\u30eb\u30fc\u30d7\")\n...         \n...         for name in sorted(self.contacts.keys()):\n...             info = self.contacts[name]\n...             csv_line = f\"{name},{info['phone']},{info.get('email', '')},{info.get('address', '')},{info.get('company', '')},{info['group']}\"\n...             print(csv_line)\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; advanced_contacts = AdvancedContactBook()\n\n&gt;&gt;&gt; # \u69d8\u3005\u306a\u30b0\u30eb\u30fc\u30d7\u3067\u9023\u7d61\u5148\u8ffd\u52a0\n&gt;&gt;&gt; advanced_contacts.add_contact(\"\u7530\u4e2d\u592a\u90ce\", \"090-1234-5678\", \"tanaka@abc.com\", \"\u6771\u4eac\u90fd\u6e0b\u8c37\u533a\", \"ABC\u682a\u5f0f\u4f1a\u793e\", \"\u4ed5\u4e8b\")\n&gt;&gt;&gt; advanced_contacts.add_contact(\"\u4f50\u85e4\u82b1\u5b50\", \"080-9876-5432\", \"sato@def.com\", \"\u5927\u962a\u5e9c\u5927\u962a\u5e02\", \"DEF\u5546\u4e8b\", \"\u4ed5\u4e8b\")\n&gt;&gt;&gt; advanced_contacts.add_contact(\"\u9234\u6728\u4e00\u90ce\", \"070-1111-2222\", \"suzuki@personal.com\", \"\u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02\", \"\", \"\u53cb\u4eba\")\n&gt;&gt;&gt; advanced_contacts.add_contact(\"\u5c71\u7530\u5065\u592a\", \"060-3333-4444\", \"\", \"\", \"GHI\u5efa\u8a2d\", \"\u4ed5\u4e8b\")\n\n\u2705 \u7530\u4e2d\u592a\u90ce \u3092 \u4ed5\u4e8b \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 \u4f50\u85e4\u82b1\u5b50 \u3092 \u4ed5\u4e8b \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 \u9234\u6728\u4e00\u90ce \u3092 \u53cb\u4eba \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\u2705 \u5c71\u7530\u5065\u592a \u3092 \u4ed5\u4e8b \u30b0\u30eb\u30fc\u30d7\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u30b0\u30eb\u30fc\u30d7\u5225\u8868\u793a\n&gt;&gt;&gt; advanced_contacts.list_by_group()\n\n\ud83d\udc65 === \u5168\u30b0\u30eb\u30fc\u30d7 ===\n\n\ud83d\udcc2 \u4ed5\u4e8b (3\u4eba)\n  \ud83d\udc64 \u4f50\u85e4\u82b1\u5b50: 080-9876-5432\n  \ud83d\udc64 \u7530\u4e2d\u592a\u90ce: 090-1234-5678\n  \ud83d\udc64 \u5c71\u7530\u5065\u592a: 060-3333-4444\n\n\ud83d\udcc2 \u53cb\u4eba (1\u4eba)\n  \ud83d\udc64 \u9234\u6728\u4e00\u90ce: 070-1111-2222\n\n&gt;&gt;&gt; # \u30ad\u30fc\u30ef\u30fc\u30c9\u691c\u7d22\n&gt;&gt;&gt; advanced_contacts.search_by_keyword(\"ABC\")\n\n\ud83d\udd0d 'ABC' \u306e\u691c\u7d22\u7d50\u679c (1\u4ef6):\n\ud83d\udc64 \u7530\u4e2d\u592a\u90ce (\u4ed5\u4e8b) - 090-1234-5678\n\n&gt;&gt;&gt; advanced_contacts.search_by_keyword(\"\u6771\u4eac\")\n\n\ud83d\udd0d '\u6771\u4eac' \u306e\u691c\u7d22\u7d50\u679c (1\u4ef6):\n\ud83d\udc64 \u7530\u4e2d\u592a\u90ce (\u4ed5\u4e8b) - 090-1234-5678\n\n&gt;&gt;&gt; # CSV\u5f62\u5f0f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n&gt;&gt;&gt; advanced_contacts.export_to_csv_format()\n\n\ud83d\udcc4 === CSV\u5f62\u5f0f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 ===\n\u540d\u524d,\u96fb\u8a71\u756a\u53f7,\u30e1\u30fc\u30eb,\u4f4f\u6240,\u4f1a\u793e,\u30b0\u30eb\u30fc\u30d7\n\u4f50\u85e4\u82b1\u5b50,080-9876-5432,sato@def.com,\u5927\u962a\u5e9c\u5927\u962a\u5e02,DEF\u5546\u4e8b,\u4ed5\u4e8b\n\u7530\u4e2d\u592a\u90ce,090-1234-5678,tanaka@abc.com,\u6771\u4eac\u90fd\u6e0b\u8c37\u533a,ABC\u682a\u5f0f\u4f1a\u793e,\u4ed5\u4e8b\n\u5c71\u7530\u5065\u592a,060-3333-4444,,,GHI\u5efa\u8a2d,\u4ed5\u4e8b\n\u9234\u6728\u4e00\u90ce,070-1111-2222,suzuki@personal.com,\u611b\u77e5\u770c\u540d\u53e4\u5c4b\u5e02,,\u53cb\u4eba\n</code></pre>"},{"location":"chapter10/#-_2","title":"\u30bb\u30c3\u30c8 - \u91cd\u8907\u306e\u306a\u3044\u96c6\u5408","text":""},{"location":"chapter10/#_8","title":"\u30bb\u30c3\u30c8\u3068\u306f","text":"<p>\u30bb\u30c3\u30c8\u306f\u3001\u91cd\u8907\u3092\u8a31\u3055\u306a\u3044\u8981\u7d20\u306e\u96c6\u5408\u3067\u3059\u3002\u6570\u5b66\u306e\u300c\u96c6\u5408\u300d\u3068\u540c\u3058\u6982\u5ff5\u3067\u3001\u540c\u3058\u8981\u7d20\u306f\u4e00\u3064\u3057\u304b\u5b58\u5728\u3067\u304d\u307e\u305b\u3093\u3002</p> <pre><code>&gt;&gt;&gt; # \u30bb\u30c3\u30c8\u306e\u4f5c\u6210\n&gt;&gt;&gt; fruits = {\"\u308a\u3093\u3054\", \"\u30d0\u30ca\u30ca\", \"\u30aa\u30ec\u30f3\u30b8\", \"\u308a\u3093\u3054\"}  # \u308a\u3093\u3054\u304c\u91cd\u8907\n&gt;&gt;&gt; print(f\"\u679c\u7269\u30bb\u30c3\u30c8: {fruits}\")\n\n\u679c\u7269\u30bb\u30c3\u30c8: {'\u30aa\u30ec\u30f3\u30b8', '\u308a\u3093\u3054', '\u30d0\u30ca\u30ca'}  # \u91cd\u8907\u304c\u81ea\u52d5\u3067\u524a\u9664\u3055\u308c\u308b\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u304b\u3089\u91cd\u8907\u3092\u9664\u53bb\n&gt;&gt;&gt; numbers_list = [1, 2, 2, 3, 3, 3, 4, 5]\n&gt;&gt;&gt; unique_numbers = set(numbers_list)\n&gt;&gt;&gt; print(f\"\u5143\u306e\u30ea\u30b9\u30c8: {numbers_list}\")\n&gt;&gt;&gt; print(f\"\u91cd\u8907\u9664\u53bb\u5f8c: {unique_numbers}\")\n\n\u5143\u306e\u30ea\u30b9\u30c8: [1, 2, 2, 3, 3, 3, 4, 5]\n\u91cd\u8907\u9664\u53bb\u5f8c: {1, 2, 3, 4, 5}\n\n&gt;&gt;&gt; # \u7a7a\u306e\u30bb\u30c3\u30c8\n&gt;&gt;&gt; empty_set = set()  # {}\u306f\u8f9e\u66f8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\n&gt;&gt;&gt; print(f\"\u7a7a\u306e\u30bb\u30c3\u30c8: {empty_set}\")\n\n\u7a7a\u306e\u30bb\u30c3\u30c8: set()\n</code></pre>"},{"location":"chapter10/#_9","title":"\u30bb\u30c3\u30c8\u306e\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; # \u30bb\u30c3\u30c8\u306e\u57fa\u672c\u64cd\u4f5c\n&gt;&gt;&gt; set1 = {1, 2, 3, 4, 5}\n&gt;&gt;&gt; set2 = {4, 5, 6, 7, 8}\n\n&gt;&gt;&gt; # \u548c\u96c6\u5408\uff08\u3069\u3061\u3089\u304b\u306b\u542b\u307e\u308c\u308b\u8981\u7d20\uff09\n&gt;&gt;&gt; union_set = set1 | set2\n&gt;&gt;&gt; print(f\"\u548c\u96c6\u5408: {union_set}\")\n\n\u548c\u96c6\u5408: {1, 2, 3, 4, 5, 6, 7, 8}\n\n&gt;&gt;&gt; # \u7a4d\u96c6\u5408\uff08\u4e21\u65b9\u306b\u542b\u307e\u308c\u308b\u8981\u7d20\uff09\n&gt;&gt;&gt; intersection_set = set1 &amp; set2\n&gt;&gt;&gt; print(f\"\u7a4d\u96c6\u5408: {intersection_set}\")\n\n\u7a4d\u96c6\u5408: {4, 5}\n\n&gt;&gt;&gt; # \u5dee\u96c6\u5408\uff08set1\u306b\u3042\u3063\u3066set2\u306b\u306a\u3044\u8981\u7d20\uff09\n&gt;&gt;&gt; difference_set = set1 - set2\n&gt;&gt;&gt; print(f\"\u5dee\u96c6\u5408: {difference_set}\")\n\n\u5dee\u96c6\u5408: {1, 2, 3}\n\n&gt;&gt;&gt; # \u5bfe\u79f0\u5dee\u96c6\u5408\uff08\u3069\u3061\u3089\u304b\u4e00\u65b9\u306b\u306e\u307f\u542b\u307e\u308c\u308b\u8981\u7d20\uff09\n&gt;&gt;&gt; symmetric_difference = set1 ^ set2\n&gt;&gt;&gt; print(f\"\u5bfe\u79f0\u5dee\u96c6\u5408: {symmetric_difference}\")\n\n\u5bfe\u79f0\u5dee\u96c6\u5408: {1, 2, 3, 6, 7, 8}\n</code></pre>"},{"location":"chapter10/#_10","title":"\u5b9f\u7528\u7684\u306a\u30bb\u30c3\u30c8\u306e\u6d3b\u7528\u4f8b","text":"<pre><code>&gt;&gt;&gt; def analyze_survey_data():\n...     \"\"\"\u30a2\u30f3\u30b1\u30fc\u30c8\u30c7\u30fc\u30bf\u306e\u5206\u6790\"\"\"\n...     \n...     # \u8907\u6570\u306e\u8cea\u554f\u306b\u5bfe\u3059\u308b\u56de\u7b54\u8005\n...     question1_respondents = {\"\u7530\u4e2d\", \"\u4f50\u85e4\", \"\u9234\u6728\", \"\u5c71\u7530\", \"\u9ad8\u6a4b\"}\n...     question2_respondents = {\"\u4f50\u85e4\", \"\u9234\u6728\", \"\u4f0a\u85e4\", \"\u6e21\u8fba\", \"\u9ad8\u6a4b\"}\n...     question3_respondents = {\"\u7530\u4e2d\", \"\u9234\u6728\", \"\u5c71\u7530\", \"\u4f0a\u85e4\", \"\u6728\u6751\"}\n...     \n...     print(\"=== \u30a2\u30f3\u30b1\u30fc\u30c8\u5206\u6790 ===\")\n...     print(f\"\u8cea\u554f1\u56de\u7b54\u8005: {question1_respondents}\")\n...     print(f\"\u8cea\u554f2\u56de\u7b54\u8005: {question2_respondents}\")\n...     print(f\"\u8cea\u554f3\u56de\u7b54\u8005: {question3_respondents}\")\n...     \n...     # \u5168\u8cea\u554f\u306b\u56de\u7b54\u3057\u305f\u4eba\n...     all_answered = question1_respondents &amp; question2_respondents &amp; question3_respondents\n...     print(f\"\\n\u5168\u8cea\u554f\u56de\u7b54\u8005: {all_answered}\")\n...     \n...     # \u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u8cea\u554f\u306b\u56de\u7b54\u3057\u305f\u4eba\n...     any_answered = question1_respondents | question2_respondents | question3_respondents\n...     print(f\"\u56de\u7b54\u8005\u7dcf\u6570: {len(any_answered)}\u4eba\")\n...     print(f\"\u56de\u7b54\u8005\u4e00\u89a7: {any_answered}\")\n...     \n...     # \u8cea\u554f1\u306e\u307f\u306b\u56de\u7b54\u3057\u305f\u4eba\n...     only_q1 = question1_respondents - question2_respondents - question3_respondents\n...     print(f\"\u8cea\u554f1\u306e\u307f\u56de\u7b54: {only_q1}\")\n...     \n...     # \u8cea\u554f1\u30682\u306b\u306f\u56de\u7b54\u3057\u305f\u304c\u8cea\u554f3\u306b\u306f\u56de\u7b54\u3057\u306a\u304b\u3063\u305f\u4eba\n...     q1_and_q2_but_not_q3 = (question1_respondents &amp; question2_respondents) - question3_respondents\n...     print(f\"\u8cea\u554f1,2\u56de\u7b54\u3001\u8cea\u554f3\u672a\u56de\u7b54: {q1_and_q2_but_not_q3}\")\n... \n\n&gt;&gt;&gt; analyze_survey_data()\n\n=== \u30a2\u30f3\u30b1\u30fc\u30c8\u5206\u6790 ===\n\u8cea\u554f1\u56de\u7b54\u8005: {'\u5c71\u7530', '\u9ad8\u6a4b', '\u4f50\u85e4', '\u9234\u6728', '\u7530\u4e2d'}\n\u8cea\u554f2\u56de\u7b54\u8005: {'\u6e21\u8fba', '\u9ad8\u6a4b', '\u4f50\u85e4', '\u9234\u6728', '\u4f0a\u85e4'}\n\u8cea\u554f3\u56de\u7b54\u8005: {'\u5c71\u7530', '\u6728\u6751', '\u4f0a\u85e4', '\u9234\u6728', '\u7530\u4e2d'}\n\n\u5168\u8cea\u554f\u56de\u7b54\u8005: {'\u9234\u6728'}\n\u56de\u7b54\u8005\u7dcf\u6570: 8\u4eba\n\u56de\u7b54\u8005\u4e00\u89a7: {'\u5c71\u7530', '\u6e21\u8fba', '\u9ad8\u6a4b', '\u4f50\u85e4', '\u9234\u6728', '\u7530\u4e2d', '\u6728\u6751', '\u4f0a\u85e4'}\n\u8cea\u554f1\u306e\u307f\u56de\u7b54: set()\n\u8cea\u554f1,2\u56de\u7b54\u3001\u8cea\u554f3\u672a\u56de\u7b54: {'\u9ad8\u6a4b', '\u4f50\u85e4'}\n\n&gt;&gt;&gt; # \u91cd\u8907\u30c7\u30fc\u30bf\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\n&gt;&gt;&gt; def clean_email_list(email_list):\n...     \"\"\"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u30ea\u30b9\u30c8\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\"\"\"\n...     \n...     print(\"=== \u30e1\u30fc\u30eb\u30ea\u30b9\u30c8\u30af\u30ea\u30fc\u30cb\u30f3\u30b0 ===\")\n...     print(f\"\u5143\u306e\u30ea\u30b9\u30c8\u4ef6\u6570: {len(email_list)}\")\n...     \n...     # \u30bb\u30c3\u30c8\u3067\u91cd\u8907\u9664\u53bb\n...     unique_emails = set(email_list)\n...     print(f\"\u91cd\u8907\u9664\u53bb\u5f8c: {len(unique_emails)}\")\n...     \n...     # \u6709\u52b9\u306a\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u307f\u30d5\u30a3\u30eb\u30bf\n...     valid_emails = set()\n...     for email in unique_emails:\n...         if \"@\" in email and \".\" in email.split(\"@\")[1]:\n...             valid_emails.add(email.lower())  # \u5c0f\u6587\u5b57\u306b\u6b63\u898f\u5316\n...     \n...     print(f\"\u6709\u52b9\u306a\u30e1\u30fc\u30eb: {len(valid_emails)}\")\n...     return sorted(valid_emails)\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n&gt;&gt;&gt; test_emails = [\n...     \"user1@example.com\",\n...     \"USER1@EXAMPLE.COM\",  # \u5927\u6587\u5b57\u5c0f\u6587\u5b57\u9055\u3044\n...     \"user2@test.co.jp\",\n...     \"user1@example.com\",  # \u5b8c\u5168\u306a\u91cd\u8907\n...     \"invalid-email\",      # \u7121\u52b9\u306a\u30e1\u30fc\u30eb\n...     \"user3@domain\",       # \u30c9\u30e1\u30a4\u30f3\u304c\u4e0d\u5b8c\u5168\n...     \"user4@valid.org\"\n... ]\n\n&gt;&gt;&gt; cleaned_emails = clean_email_list(test_emails)\n&gt;&gt;&gt; print(f\"\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u7d50\u679c: {cleaned_emails}\")\n\n=== \u30e1\u30fc\u30eb\u30ea\u30b9\u30c8\u30af\u30ea\u30fc\u30cb\u30f3\u30b0 ===\n\u5143\u306e\u30ea\u30b9\u30c8\u4ef6\u6570: 7\n\u91cd\u8907\u9664\u53bb\u5f8c: 6\n\u6709\u52b9\u306a\u30e1\u30fc\u30eb: 3\n\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u7d50\u679c: ['user1@example.com', 'user2@test.co.jp', 'user4@valid.org']\n</code></pre>"},{"location":"chapter10/#_11","title":"\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4f7f\u3044\u5206\u3051","text":""},{"location":"chapter10/#_12","title":"\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3068\u9069\u7528\u5834\u9762","text":"<pre><code>&gt;&gt;&gt; def demonstrate_data_structures():\n...     \"\"\"\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u4f7f\u3044\u5206\u3051\u30c7\u30e2\"\"\"\n...     \n...     print(\"=== \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u6bd4\u8f03 ===\\n\")\n...     \n...     # \u30ea\u30b9\u30c8\uff1a\u9806\u5e8f\u304c\u91cd\u8981\u3001\u91cd\u8907\u3042\u308a\u3001\u5909\u66f4\u53ef\u80fd\n...     print(\"\ud83d\udcdd \u30ea\u30b9\u30c8\uff08\u9806\u5e8f\u3042\u308a\u3001\u91cd\u8907\u3042\u308a\u3001\u5909\u66f4\u53ef\u80fd\uff09\")\n...     shopping_list = [\"\u725b\u4e73\", \"\u30d1\u30f3\", \"\u5375\", \"\u725b\u4e73\"]  # \u91cd\u8907\u3042\u308a\n...     print(f\"\u8cb7\u3044\u7269\u30ea\u30b9\u30c8: {shopping_list}\")\n...     print(f\"\u6700\u521d\u306e\u9805\u76ee: {shopping_list[0]}\")\n...     shopping_list.append(\"\u30c1\u30fc\u30ba\")\n...     print(f\"\u8ffd\u52a0\u5f8c: {shopping_list}\")\n...     print()\n...     \n...     # \u8f9e\u66f8\uff1a\u30ad\u30fc\u5024\u30da\u30a2\u3001\u9ad8\u901f\u691c\u7d22\n...     print(\"\ud83d\udcd6 \u8f9e\u66f8\uff08\u30ad\u30fc\u5024\u30da\u30a2\u3001\u9ad8\u901f\u691c\u7d22\uff09\")\n...     student_grades = {\n...         \"\u7530\u4e2d\": 85,\n...         \"\u4f50\u85e4\": 92,\n...         \"\u9234\u6728\": 78\n...     }\n...     print(f\"\u6210\u7e3e\u8868: {student_grades}\")\n...     print(f\"\u7530\u4e2d\u306e\u6210\u7e3e: {student_grades['\u7530\u4e2d']}\")\n...     student_grades[\"\u5c71\u7530\"] = 88\n...     print(f\"\u8ffd\u52a0\u5f8c: {student_grades}\")\n...     print()\n...     \n...     # \u30bb\u30c3\u30c8\uff1a\u91cd\u8907\u306a\u3057\u3001\u96c6\u5408\u6f14\u7b97\n...     print(\"\ud83d\udd22 \u30bb\u30c3\u30c8\uff08\u91cd\u8907\u306a\u3057\u3001\u96c6\u5408\u6f14\u7b97\uff09\")\n...     class_a = {\"\u7530\u4e2d\", \"\u4f50\u85e4\", \"\u9234\u6728\", \"\u5c71\u7530\"}\n...     class_b = {\"\u4f50\u85e4\", \"\u5c71\u7530\", \"\u9ad8\u6a4b\", \"\u4f0a\u85e4\"}\n...     print(f\"\u30af\u30e9\u30b9A: {class_a}\")\n...     print(f\"\u30af\u30e9\u30b9B: {class_b}\")\n...     print(f\"\u4e21\u30af\u30e9\u30b9\u5171\u901a: {class_a &amp; class_b}\")\n...     print(f\"\u5168\u53c2\u52a0\u8005: {class_a | class_b}\")\n...     print()\n...     \n...     # \u9069\u5207\u306a\u9078\u629e\u306e\u4f8b\n...     print(\"\ud83d\udca1 \u4f7f\u3044\u5206\u3051\u306e\u4f8b:\")\n...     print(\"\u2022 \u9806\u756a\u304c\u91cd\u8981\u306a\u4f5c\u696d\u624b\u9806 \u2192 \u30ea\u30b9\u30c8\")\n...     print(\"\u2022 \u540d\u524d\u304b\u3089\u60c5\u5831\u3092\u691c\u7d22 \u2192 \u8f9e\u66f8\") \n...     print(\"\u2022 \u91cd\u8907\u6392\u9664\u3084\u96c6\u5408\u6f14\u7b97 \u2192 \u30bb\u30c3\u30c8\")\n... \n\n&gt;&gt;&gt; demonstrate_data_structures()\n\n=== \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u6bd4\u8f03 ===\n\n\ud83d\udcdd \u30ea\u30b9\u30c8\uff08\u9806\u5e8f\u3042\u308a\u3001\u91cd\u8907\u3042\u308a\u3001\u5909\u66f4\u53ef\u80fd\uff09\n\u8cb7\u3044\u7269\u30ea\u30b9\u30c8: ['\u725b\u4e73', '\u30d1\u30f3', '\u5375', '\u725b\u4e73']\n\u6700\u521d\u306e\u9805\u76ee: \u725b\u4e73\n\u8ffd\u52a0\u5f8c: ['\u725b\u4e73', '\u30d1\u30f3', '\u5375', '\u725b\u4e73', '\u30c1\u30fc\u30ba']\n\n\ud83d\udcd6 \u8f9e\u66f8\uff08\u30ad\u30fc\u5024\u30da\u30a2\u3001\u9ad8\u901f\u691c\u7d22\uff09\n\u6210\u7e3e\u8868: {'\u7530\u4e2d': 85, '\u4f50\u85e4': 92, '\u9234\u6728': 78}\n\u7530\u4e2d\u306e\u6210\u7e3e: 85\n\u8ffd\u52a0\u5f8c: {'\u7530\u4e2d': 85, '\u4f50\u85e4': 92, '\u9234\u6728': 78, '\u5c71\u7530': 88}\n\n\ud83d\udd22 \u30bb\u30c3\u30c8\uff08\u91cd\u8907\u306a\u3057\u3001\u96c6\u5408\u6f14\u7b97\uff09\n\u30af\u30e9\u30b9A: {'\u5c71\u7530', '\u4f50\u85e4', '\u9234\u6728', '\u7530\u4e2d'}\n\u30af\u30e9\u30b9B: {'\u5c71\u7530', '\u9ad8\u6a4b', '\u4f50\u85e4', '\u4f0a\u85e4'}\n\u4e21\u30af\u30e9\u30b9\u5171\u901a: {'\u5c71\u7530', '\u4f50\u85e4'}\n\u5168\u53c2\u52a0\u8005: {'\u5c71\u7530', '\u9ad8\u6a4b', '\u4f50\u85e4', '\u9234\u6728', '\u7530\u4e2d', '\u4f0a\u85e4'}\n\n\ud83d\udca1 \u4f7f\u3044\u5206\u3051\u306e\u4f8b:\n\u2022 \u9806\u756a\u304c\u91cd\u8981\u306a\u4f5c\u696d\u624b\u9806 \u2192 \u30ea\u30b9\u30c8\n\u2022 \u540d\u524d\u304b\u3089\u60c5\u5831\u3092\u691c\u7d22 \u2192 \u8f9e\u66f8\n\u2022 \u91cd\u8907\u6392\u9664\u3084\u96c6\u5408\u6f14\u7b97 \u2192 \u30bb\u30c3\u30c8\n</code></pre>"},{"location":"chapter10/#_13","title":"\u307e\u3068\u3081\uff1a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u52b9\u679c\u7684\u306a\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter10/#list","title":"\u30ea\u30b9\u30c8\uff08list\uff09","text":"<ul> <li>\u7279\u5fb4: \u9806\u5e8f\u3042\u308a\u3001\u91cd\u8907\u3042\u308a\u3001\u5909\u66f4\u53ef\u80fd</li> <li>\u7528\u9014: \u9806\u756a\u304c\u91cd\u8981\u306a\u30c7\u30fc\u30bf\u3001\u540c\u3058\u5024\u306e\u91cd\u8907\u304c\u5fc5\u8981</li> <li>\u4f8b: \u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u3001\u4f5c\u696d\u624b\u9806\u3001\u6642\u7cfb\u5217\u30c7\u30fc\u30bf</li> <li>\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9: append(), extend(), insert(), remove(), pop()</li> </ul>"},{"location":"chapter10/#dict","title":"\u8f9e\u66f8\uff08dict\uff09","text":"<ul> <li>\u7279\u5fb4: \u30ad\u30fc\u5024\u30da\u30a2\u3001\u9ad8\u901f\u691c\u7d22\u3001\u9806\u5e8f\u4fdd\u6301\uff08Python 3.7+\uff09</li> <li>\u7528\u9014: \u540d\u524d\u304b\u3089\u60c5\u5831\u3092\u691c\u7d22\u3001\u8a2d\u5b9a\u5024\u306e\u7ba1\u7406</li> <li>\u4f8b: \u9023\u7d61\u5148\u5e33\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7684\u306a\u7528\u9014</li> <li>\u4e3b\u8981\u30e1\u30bd\u30c3\u30c9: get(), keys(), values(), items(), update()</li> </ul>"},{"location":"chapter10/#set","title":"\u30bb\u30c3\u30c8\uff08set\uff09","text":"<ul> <li>\u7279\u5fb4: \u91cd\u8907\u306a\u3057\u3001\u9806\u5e8f\u306a\u3057\u3001\u96c6\u5408\u6f14\u7b97\u53ef\u80fd</li> <li>\u7528\u9014: \u91cd\u8907\u6392\u9664\u3001\u96c6\u5408\u6f14\u7b97\u3001\u30e1\u30f3\u30d0\u30fc\u30b7\u30c3\u30d7\u30c6\u30b9\u30c8</li> <li>\u4f8b: \u30e6\u30cb\u30fc\u30af\u306a\u5024\u306e\u7ba1\u7406\u3001\u5171\u901a\u8981\u7d20\u306e\u62bd\u51fa</li> <li>\u4e3b\u8981\u6f14\u7b97: |\uff08\u548c\u96c6\u5408\uff09\u3001&amp;\uff08\u7a4d\u96c6\u5408\uff09\u3001-\uff08\u5dee\u96c6\u5408\uff09</li> </ul>"},{"location":"chapter10/#_14","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u8cb7\u3044\u7269\u30ea\u30b9\u30c8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\uff08\u30ea\u30b9\u30c8\uff09</li> <li>\u9023\u7d61\u5148\u5e33\u30b7\u30b9\u30c6\u30e0\uff08\u8f9e\u66f8\uff09</li> <li>\u30a2\u30f3\u30b1\u30fc\u30c8\u5206\u6790\u30b7\u30b9\u30c6\u30e0\uff08\u30bb\u30c3\u30c8\uff09</li> <li>\u30c7\u30fc\u30bf\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\u51e6\u7406</li> </ul>"},{"location":"chapter10/#_15","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u8a2d\u8a08\u306e\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u30c7\u30fc\u30bf\u306e\u6027\u8cea\u306b\u5fdc\u3058\u305f\u9069\u5207\u306a\u69cb\u9020\u306e\u9078\u629e</li> <li>\u52b9\u7387\u7684\u306a\u691c\u7d22\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u64cd\u4f5c</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u5b9f\u88c5</li> <li>\u30e6\u30fc\u30b6\u30d3\u30ea\u30c6\u30a3\u306e\u5411\u4e0a</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u518d\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\u300c\u95a2\u6570\u300d\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002BMI\u8a08\u7b97\u95a2\u6570\u3084\u5272\u5f15\u4fa1\u683c\u8a08\u7b97\u95a2\u6570\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3088\u308a\u69cb\u9020\u5316\u3057\u3001\u4fdd\u5b88\u3057\u3084\u3059\u304f\u3059\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter11/","title":"\u7b2c11\u7ae0\uff1a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u9806\u756a\u306b\u66f8\u3044\u3066\u5b9f\u884c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u66f8\u304f\u306e\u306f\u52b9\u7387\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u95a2\u6570\u3092\u4f7f\u3063\u3066\u51e6\u7406\u3092\u307e\u3068\u3081\u3001\u518d\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002BMI\u8a08\u7b97\u95a2\u6570\u3084\u5272\u5f15\u4fa1\u683c\u8a08\u7b97\u95a2\u6570\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u3088\u308a\u69cb\u9020\u5316\u3057\u3001\u4fdd\u5b88\u3057\u3084\u3059\u304f\u3059\u308b\u6280\u8853\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter11/#_1","title":"\u95a2\u6570\u3063\u3066\u306a\u306b\uff1f\u306a\u305c\u4fbf\u5229\uff1f","text":""},{"location":"chapter11/#_2","title":"\u95a2\u6570\u306e\u57fa\u672c\u6982\u5ff5","text":"<p>\u95a2\u6570\u3068\u306f\u3001\u7279\u5b9a\u306e\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u540d\u524d\u3092\u4ed8\u3051\u305f\u3082\u306e\u3067\u3059\u3002\u73fe\u5b9f\u4e16\u754c\u306e\u300c\u9053\u5177\u300d\u3084\u300c\u6a5f\u68b0\u300d\u3068\u540c\u3058\u3088\u3046\u306a\u6982\u5ff5\u3067\u3059\u3002</p> <p>\u73fe\u5b9f\u4e16\u754c\u306e\u4f8b\uff1a - \u96fb\u5353\uff1a\u6570\u5024\u3092\u5165\u529b\u3059\u308b\u3068\u8a08\u7b97\u7d50\u679c\u3092\u8fd4\u3059 - \u81ea\u52d5\u8ca9\u58f2\u6a5f\uff1a\u304a\u91d1\u3092\u5165\u308c\u3066\u5546\u54c1\u3092\u9078\u3076\u3068\u5546\u54c1\u304c\u51fa\u3066\u304f\u308b - \u6d17\u6fef\u6a5f\uff1a\u6d17\u6fef\u7269\u3068\u6d17\u5264\u3092\u5165\u308c\u308b\u3068\u6d17\u6fef\u3055\u308c\u305f\u8863\u670d\u304c\u51fa\u3066\u304f\u308b</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u95a2\u6570\uff1a - BMI\u8a08\u7b97\u95a2\u6570\uff1a\u8eab\u9577\u3068\u4f53\u91cd\u3092\u5165\u529b\u3059\u308b\u3068BMI\u5024\u3092\u8fd4\u3059 - \u6d88\u8cbb\u7a0e\u8a08\u7b97\u95a2\u6570\uff1a\u4fa1\u683c\u3092\u5165\u529b\u3059\u308b\u3068\u7a0e\u8fbc\u4fa1\u683c\u3092\u8fd4\u3059 - \u5272\u5f15\u8a08\u7b97\u95a2\u6570\uff1a\u5143\u4fa1\u683c\u3068\u5272\u5f15\u7387\u3092\u5165\u529b\u3059\u308b\u3068\u5272\u5f15\u5f8c\u4fa1\u683c\u3092\u8fd4\u3059</p>"},{"location":"chapter11/#_3","title":"\u95a2\u6570\u3092\u4f7f\u3046\u7406\u7531","text":"<pre><code>&gt;&gt;&gt; # \u95a2\u6570\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\uff08\u60aa\u3044\u4f8b\uff09\n&gt;&gt;&gt; # \u7530\u4e2d\u3055\u3093\u306eBMI\u8a08\u7b97\n&gt;&gt;&gt; tanaka_height = 170  # cm\n&gt;&gt;&gt; tanaka_weight = 65   # kg\n&gt;&gt;&gt; tanaka_bmi = tanaka_weight / (tanaka_height / 100) ** 2\n&gt;&gt;&gt; print(f\"\u7530\u4e2d\u3055\u3093\u306eBMI: {tanaka_bmi:.1f}\")\n\n\u7530\u4e2d\u3055\u3093\u306eBMI: 22.5\n\n&gt;&gt;&gt; # \u4f50\u85e4\u3055\u3093\u306eBMI\u8a08\u7b97\n&gt;&gt;&gt; sato_height = 160\n&gt;&gt;&gt; sato_weight = 55\n&gt;&gt;&gt; sato_bmi = sato_weight / (sato_height / 100) ** 2\n&gt;&gt;&gt; print(f\"\u4f50\u85e4\u3055\u3093\u306eBMI: {sato_bmi:.1f}\")\n\n\u4f50\u85e4\u3055\u3093\u306eBMI: 21.5\n\n&gt;&gt;&gt; # \u9234\u6728\u3055\u3093\u306eBMI\u8a08\u7b97\n&gt;&gt;&gt; suzuki_height = 175\n&gt;&gt;&gt; suzuki_weight = 70\n&gt;&gt;&gt; suzuki_bmi = suzuki_weight / (suzuki_height / 100) ** 2\n&gt;&gt;&gt; print(f\"\u9234\u6728\u3055\u3093\u306eBMI: {suzuki_bmi:.1f}\")\n\n\u9234\u6728\u3055\u3093\u306eBMI: 22.9\n</code></pre> <p>\u3053\u306e\u4f8b\u306e\u554f\u984c\u70b9\uff1a 1. \u91cd\u8907\u30b3\u30fc\u30c9\uff1a\u540c\u3058\u8a08\u7b97\u5f0f\u3092\u4f55\u5ea6\u3082\u66f8\u3044\u3066\u3044\u308b 2. \u9593\u9055\u3044\u3084\u3059\u3044\uff1a\u8a08\u7b97\u5f0f\u3092\u9593\u9055\u3048\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b 3. \u4fee\u6b63\u304c\u5927\u5909\uff1a\u8a08\u7b97\u5f0f\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u3001\u3059\u3079\u3066\u306e\u7b87\u6240\u3092\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b</p>"},{"location":"chapter11/#_4","title":"\u95a2\u6570\u3092\u4f7f\u3063\u305f\u5834\u5408\uff08\u826f\u3044\u4f8b\uff09","text":"<pre><code>&gt;&gt;&gt; def calculate_bmi(height_cm, weight_kg):\n...     \"\"\"BMI\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     height_m = height_cm / 100  # cm\u3092m\u306b\u5909\u63db\n...     bmi = weight_kg / (height_m ** 2)\n...     return bmi\n... \n\n&gt;&gt;&gt; # \u5404\u4eba\u306eBMI\u8a08\u7b97\n&gt;&gt;&gt; tanaka_bmi = calculate_bmi(170, 65)\n&gt;&gt;&gt; sato_bmi = calculate_bmi(160, 55)\n&gt;&gt;&gt; suzuki_bmi = calculate_bmi(175, 70)\n\n&gt;&gt;&gt; print(f\"\u7530\u4e2d\u3055\u3093\u306eBMI: {tanaka_bmi:.1f}\")\n&gt;&gt;&gt; print(f\"\u4f50\u85e4\u3055\u3093\u306eBMI: {sato_bmi:.1f}\")\n&gt;&gt;&gt; print(f\"\u9234\u6728\u3055\u3093\u306eBMI: {suzuki_bmi:.1f}\")\n\n\u7530\u4e2d\u3055\u3093\u306eBMI: 22.5\n\u4f50\u85e4\u3055\u3093\u306eBMI: 21.5\n\u9234\u6728\u3055\u3093\u306eBMI: 22.9\n</code></pre> <p>\u95a2\u6570\u3092\u4f7f\u3046\u30e1\u30ea\u30c3\u30c8\uff1a 1. \u518d\u5229\u7528\u6027\uff1a\u4e00\u5ea6\u4f5c\u308c\u3070\u4f55\u5ea6\u3067\u3082\u4f7f\u3048\u308b 2. \u4fdd\u5b88\u6027\uff1a\u4fee\u6b63\u306f\u4e00\u7b87\u6240\u3060\u3051\u3067OK 3. \u53ef\u8aad\u6027\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u610f\u56f3\u304c\u5206\u304b\u308a\u3084\u3059\u3044 4. \u30c6\u30b9\u30c8\u6027\uff1a\u95a2\u6570\u5358\u4f53\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b</p>"},{"location":"chapter11/#bmi","title":"\u3010\u5b9f\u884c\u3011BMI\u8a08\u7b97\u95a2\u6570\u3092\u4f5c\u308d\u3046","text":"<p>BMI\u8a08\u7b97\u3092\u4f8b\u306b\u3001\u95a2\u6570\u306e\u4f5c\u308a\u65b9\u3068\u4f7f\u3044\u65b9\u3092\u8a73\u3057\u304f\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter11/#1bmi","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306aBMI\u8a08\u7b97\u95a2\u6570","text":"<pre><code>&gt;&gt;&gt; def calculate_bmi(height_cm, weight_kg):\n...     \"\"\"\n...     BMI\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\n...     \n...     Args:\n...         height_cm (float): \u8eab\u9577\uff08\u30bb\u30f3\u30c1\u30e1\u30fc\u30c8\u30eb\uff09\n...         weight_kg (float): \u4f53\u91cd\uff08\u30ad\u30ed\u30b0\u30e9\u30e0\uff09\n...     \n...     Returns:\n...         float: BMI\u5024\n...     \"\"\"\n...     height_m = height_cm / 100\n...     bmi = weight_kg / (height_m ** 2)\n...     return bmi\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; my_bmi = calculate_bmi(170, 65)\n&gt;&gt;&gt; print(f\"BMI: {my_bmi:.2f}\")\n\nBMI: 22.49\n\n&gt;&gt;&gt; # \u8907\u6570\u4eba\u306e\u30c7\u30fc\u30bf\u3067\u691c\u8a3c\n&gt;&gt;&gt; people = [\n...     (\"\u7530\u4e2d\u592a\u90ce\", 170, 65),\n...     (\"\u4f50\u85e4\u82b1\u5b50\", 160, 55),\n...     (\"\u9234\u6728\u4e00\u90ce\", 175, 70),\n...     (\"\u5c71\u7530\u7f8e\u54b2\", 165, 58)\n... ]\n\n&gt;&gt;&gt; print(\"=== BMI\u8a08\u7b97\u7d50\u679c ===\")\n&gt;&gt;&gt; for name, height, weight in people:\n...     bmi = calculate_bmi(height, weight)\n...     print(f\"{name}: BMI {bmi:.1f}\")\n\n=== BMI\u8a08\u7b97\u7d50\u679c ===\n\u7530\u4e2d\u592a\u90ce: BMI 22.5\n\u4f50\u85e4\u82b1\u5b50: BMI 21.5\n\u9234\u6728\u4e00\u90ce: BMI 22.9\n\u5c71\u7530\u7f8e\u54b2: BMI 21.3\n</code></pre>"},{"location":"chapter11/#2bmi","title":"\u30b9\u30c6\u30c3\u30d72\uff1aBMI\u5224\u5b9a\u6a5f\u80fd\u4ed8\u304d\u95a2\u6570","text":"<pre><code>&gt;&gt;&gt; def calculate_bmi_with_category(height_cm, weight_kg):\n...     \"\"\"BMI\u8a08\u7b97\u3068\u5224\u5b9a\u3092\u884c\u3046\u95a2\u6570\"\"\"\n...     \n...     # BMI\u8a08\u7b97\n...     height_m = height_cm / 100\n...     bmi = weight_kg / (height_m ** 2)\n...     \n...     # BMI\u5224\u5b9a\n...     if bmi &lt; 18.5:\n...         category = \"\u4f4e\u4f53\u91cd\"\n...         advice = \"\u4f53\u91cd\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     elif bmi &lt; 25.0:\n...         category = \"\u666e\u901a\u4f53\u91cd\"\n...         advice = \"\u7406\u60f3\u7684\u306a\u4f53\u91cd\u3067\u3059\"\n...     elif bmi &lt; 30.0:\n...         category = \"\u80a5\u6e80\uff081\u5ea6\uff09\"\n...         advice = \"\u6e1b\u91cf\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     elif bmi &lt; 35.0:\n...         category = \"\u80a5\u6e80\uff082\u5ea6\uff09\"\n...         advice = \"\u533b\u5e2b\u306b\u76f8\u8ac7\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\"\n...     else:\n...         category = \"\u80a5\u6e80\uff083\u5ea6\uff09\"\n...         advice = \"\u65e9\u6025\u306b\u533b\u5e2b\u306b\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     \n...     return {\n...         \"bmi\": bmi,\n...         \"category\": category,\n...         \"advice\": advice\n...     }\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; result = calculate_bmi_with_category(170, 65)\n&gt;&gt;&gt; print(f\"BMI: {result['bmi']:.1f}\")\n&gt;&gt;&gt; print(f\"\u5224\u5b9a: {result['category']}\")\n&gt;&gt;&gt; print(f\"\u30a2\u30c9\u30d0\u30a4\u30b9: {result['advice']}\")\n\nBMI: 22.5\n\u5224\u5b9a: \u666e\u901a\u4f53\u91cd\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u7406\u60f3\u7684\u306a\u4f53\u91cd\u3067\u3059\n\n&gt;&gt;&gt; # \u8907\u6570\u306e\u30b1\u30fc\u30b9\u3067\u78ba\u8a8d\n&gt;&gt;&gt; test_cases = [\n...     (\"\u4f4e\u4f53\u91cd\u306e\u4f8b\", 170, 50),\n...     (\"\u666e\u901a\u4f53\u91cd\u306e\u4f8b\", 170, 65),\n...     (\"\u80a5\u6e801\u5ea6\u306e\u4f8b\", 170, 75),\n...     (\"\u80a5\u6e802\u5ea6\u306e\u4f8b\", 170, 90)\n... ]\n\n&gt;&gt;&gt; print(\"\\n=== BMI\u5224\u5b9a\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; for description, height, weight in test_cases:\n...     result = calculate_bmi_with_category(height, weight)\n...     print(f\"\\n{description}\")\n...     print(f\"\u8eab\u9577: {height}cm, \u4f53\u91cd: {weight}kg\")\n...     print(f\"BMI: {result['bmi']:.1f} ({result['category']})\")\n...     print(f\"\u30a2\u30c9\u30d0\u30a4\u30b9: {result['advice']}\")\n\n=== BMI\u5224\u5b9a\u30c6\u30b9\u30c8 ===\n\n\u4f4e\u4f53\u91cd\u306e\u4f8b\n\u8eab\u9577: 170cm, \u4f53\u91cd: 50kg\nBMI: 17.3 (\u4f4e\u4f53\u91cd)\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u4f53\u91cd\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u666e\u901a\u4f53\u91cd\u306e\u4f8b\n\u8eab\u9577: 170cm, \u4f53\u91cd: 65kg\nBMI: 22.5 (\u666e\u901a\u4f53\u91cd)\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u7406\u60f3\u7684\u306a\u4f53\u91cd\u3067\u3059\n\n\u80a5\u6e801\u5ea6\u306e\u4f8b\n\u8eab\u9577: 170cm, \u4f53\u91cd: 75kg\nBMI: 26.0 (\u80a5\u6e80\uff081\u5ea6\uff09)\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u6e1b\u91cf\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\n\n\u80a5\u6e802\u5ea6\u306e\u4f8b\n\u8eab\u9577: 170cm, \u4f53\u91cd: 90kg\nBMI: 31.1 (\u80a5\u6e80\uff082\u5ea6\uff09)\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u533b\u5e2b\u306b\u76f8\u8ac7\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\n</code></pre>"},{"location":"chapter11/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u7406\u60f3\u4f53\u91cd\u8a08\u7b97\u6a5f\u80fd","text":"<pre><code>&gt;&gt;&gt; def calculate_ideal_weight_range(height_cm):\n...     \"\"\"\u7406\u60f3\u4f53\u91cd\u306e\u7bc4\u56f2\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     height_m = height_cm / 100\n...     \n...     # BMI 18.5-24.9\u304c\u666e\u901a\u4f53\u91cd\u7bc4\u56f2\n...     min_weight = 18.5 * (height_m ** 2)\n...     max_weight = 24.9 * (height_m ** 2)\n...     \n...     # BMI 22\u304c\u7406\u60f3\u3068\u3055\u308c\u308b\n...     ideal_weight = 22.0 * (height_m ** 2)\n...     \n...     return {\n...         \"min_weight\": min_weight,\n...         \"max_weight\": max_weight,\n...         \"ideal_weight\": ideal_weight\n...     }\n... \n\n&gt;&gt;&gt; def comprehensive_health_check(height_cm, weight_kg):\n...     \"\"\"\u7dcf\u5408\u7684\u306a\u5065\u5eb7\u30c1\u30a7\u30c3\u30af\u95a2\u6570\"\"\"\n...     \n...     # BMI\u8a08\u7b97\u3068\u5224\u5b9a\n...     bmi_result = calculate_bmi_with_category(height_cm, weight_kg)\n...     \n...     # \u7406\u60f3\u4f53\u91cd\u7bc4\u56f2\n...     ideal_range = calculate_ideal_weight_range(height_cm)\n...     \n...     # \u73fe\u5728\u4f53\u91cd\u3068\u7406\u60f3\u4f53\u91cd\u306e\u5dee\n...     weight_diff = weight_kg - ideal_range[\"ideal_weight\"]\n...     \n...     # \u76ee\u6a19\u8a2d\u5b9a\n...     if weight_diff &gt; 5:\n...         goal = f\"{abs(weight_diff):.1f}kg \u306e\u6e1b\u91cf\"\n...         target_weight = ideal_range[\"ideal_weight\"]\n...     elif weight_diff &lt; -5:\n...         goal = f\"{abs(weight_diff):.1f}kg \u306e\u5897\u91cf\"\n...         target_weight = ideal_range[\"ideal_weight\"]\n...     else:\n...         goal = \"\u73fe\u5728\u306e\u4f53\u91cd\u3092\u7dad\u6301\"\n...         target_weight = weight_kg\n...     \n...     return {\n...         \"current_bmi\": bmi_result[\"bmi\"],\n...         \"category\": bmi_result[\"category\"],\n...         \"advice\": bmi_result[\"advice\"],\n...         \"ideal_weight_range\": f\"{ideal_range['min_weight']:.1f} - {ideal_range['max_weight']:.1f} kg\",\n...         \"ideal_weight\": ideal_range[\"ideal_weight\"],\n...         \"weight_difference\": weight_diff,\n...         \"goal\": goal,\n...         \"target_weight\": target_weight\n...     }\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; health_check = comprehensive_health_check(170, 75)\n\n&gt;&gt;&gt; print(\"=== \u7dcf\u5408\u5065\u5eb7\u30c1\u30a7\u30c3\u30af\u7d50\u679c ===\")\n&gt;&gt;&gt; print(f\"\u73fe\u5728\u306eBMI: {health_check['current_bmi']:.1f}\")\n&gt;&gt;&gt; print(f\"\u5224\u5b9a: {health_check['category']}\")\n&gt;&gt;&gt; print(f\"\u7406\u60f3\u4f53\u91cd\u7bc4\u56f2: {health_check['ideal_weight_range']}\")\n&gt;&gt;&gt; print(f\"\u7406\u60f3\u4f53\u91cd: {health_check['ideal_weight']:.1f}kg\")\n&gt;&gt;&gt; print(f\"\u73fe\u5728\u3068\u306e\u5dee: {health_check['weight_difference']:+.1f}kg\")\n&gt;&gt;&gt; print(f\"\u76ee\u6a19: {health_check['goal']}\")\n&gt;&gt;&gt; print(f\"\u30a2\u30c9\u30d0\u30a4\u30b9: {health_check['advice']}\")\n\n=== \u7dcf\u5408\u5065\u5eb7\u30c1\u30a7\u30c3\u30af\u7d50\u679c ===\n\u73fe\u5728\u306eBMI: 26.0\n\u5224\u5b9a: \u80a5\u6e80\uff081\u5ea6\uff09\n\u7406\u60f3\u4f53\u91cd\u7bc4\u56f2: 53.5 - 72.0 kg\n\u7406\u60f3\u4f53\u91cd: 63.6kg\n\u73fe\u5728\u3068\u306e\u5dee: +11.4kg\n\u76ee\u6a19: 11.4kg \u306e\u6e1b\u91cf\n\u30a2\u30c9\u30d0\u30a4\u30b9: \u6e1b\u91cf\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\n</code></pre>"},{"location":"chapter11/#4bmi","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5b8c\u5168\u7248BMI\u8a08\u7b97\u30c4\u30fc\u30eb","text":"<pre><code># \u5b8c\u5168\u7248BMI\u8a08\u7b97\u30c4\u30fc\u30eb\nclass BMICalculator:\n    \"\"\"BMI\u8a08\u7b97\u3068\u5065\u5eb7\u7ba1\u7406\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\"\"\"\n\n    def __init__(self):\n        self.history = []  # \u904e\u53bb\u306e\u8a18\u9332\u3092\u4fdd\u5b58\n\n    def calculate_bmi(self, height_cm, weight_kg):\n        \"\"\"\u57fa\u672c\u7684\u306aBMI\u8a08\u7b97\"\"\"\n        height_m = height_cm / 100\n        return weight_kg / (height_m ** 2)\n\n    def get_bmi_category(self, bmi):\n        \"\"\"BMI\u5024\u304b\u3089\u5224\u5b9a\u30ab\u30c6\u30b4\u30ea\u3092\u53d6\u5f97\"\"\"\n        if bmi &lt; 18.5:\n            return \"\u4f4e\u4f53\u91cd\", \"\u4f53\u91cd\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\"\n        elif bmi &lt; 25.0:\n            return \"\u666e\u901a\u4f53\u91cd\", \"\u7406\u60f3\u7684\u306a\u4f53\u91cd\u3067\u3059\"\n        elif bmi &lt; 30.0:\n            return \"\u80a5\u6e80\uff081\u5ea6\uff09\", \"\u6e1b\u91cf\u3092\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\"\n        elif bmi &lt; 35.0:\n            return \"\u80a5\u6e80\uff082\u5ea6\uff09\", \"\u533b\u5e2b\u306b\u76f8\u8ac7\u3059\u308b\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\"\n        else:\n            return \"\u80a5\u6e80\uff083\u5ea6\uff09\", \"\u65e9\u6025\u306b\u533b\u5e2b\u306b\u76f8\u8ac7\u3057\u3066\u304f\u3060\u3055\u3044\"\n\n    def calculate_ideal_weight(self, height_cm, target_bmi=22.0):\n        \"\"\"\u7406\u60f3\u4f53\u91cd\u3092\u8a08\u7b97\"\"\"\n        height_m = height_cm / 100\n        return target_bmi * (height_m ** 2)\n\n    def add_record(self, height_cm, weight_kg, date=None):\n        \"\"\"\u8a18\u9332\u3092\u8ffd\u52a0\"\"\"\n        if date is None:\n            from datetime import datetime\n            date = datetime.now().strftime(\"%Y-%m-%d\")\n\n        bmi = self.calculate_bmi(height_cm, weight_kg)\n        category, advice = self.get_bmi_category(bmi)\n\n        record = {\n            \"date\": date,\n            \"height\": height_cm,\n            \"weight\": weight_kg,\n            \"bmi\": bmi,\n            \"category\": category,\n            \"advice\": advice\n        }\n\n        self.history.append(record)\n        return record\n\n    def get_progress_report(self):\n        \"\"\"\u9032\u6357\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n        if len(self.history) &lt; 2:\n            return \"\u9032\u6357\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u6700\u4f4e2\u56de\u306e\u8a18\u9332\u304c\u5fc5\u8981\u3067\u3059\"\n\n        latest = self.history[-1]\n        previous = self.history[-2]\n\n        weight_change = latest[\"weight\"] - previous[\"weight\"]\n        bmi_change = latest[\"bmi\"] - previous[\"bmi\"]\n\n        report = f\"\"\"\n=== \u9032\u6357\u30ec\u30dd\u30fc\u30c8 ===\n\u524d\u56de: {previous['date']} - \u4f53\u91cd: {previous['weight']}kg, BMI: {previous['bmi']:.1f}\n\u4eca\u56de: {latest['date']} - \u4f53\u91cd: {latest['weight']}kg, BMI: {latest['bmi']:.1f}\n\n\u5909\u5316: \u4f53\u91cd {weight_change:+.1f}kg, BMI {bmi_change:+.1f}\n\n\u73fe\u5728\u306e\u72b6\u6cc1: {latest['category']}\n\u30a2\u30c9\u30d0\u30a4\u30b9: {latest['advice']}\n\"\"\"\n\n        return report\n\n    def generate_health_plan(self, height_cm, current_weight_kg, target_bmi=22.0):\n        \"\"\"\u5065\u5eb7\u7ba1\u7406\u30d7\u30e9\u30f3\u3092\u751f\u6210\"\"\"\n        current_bmi = self.calculate_bmi(height_cm, current_weight_kg)\n        target_weight = self.calculate_ideal_weight(height_cm, target_bmi)\n        weight_diff = current_weight_kg - target_weight\n\n        plan = {\n            \"current_status\": {\n                \"bmi\": current_bmi,\n                \"weight\": current_weight_kg,\n                \"category\": self.get_bmi_category(current_bmi)[0]\n            },\n            \"target\": {\n                \"bmi\": target_bmi,\n                \"weight\": target_weight\n            },\n            \"plan\": self._create_weight_plan(weight_diff)\n        }\n\n        return plan\n\n    def _create_weight_plan(self, weight_diff):\n        \"\"\"\u4f53\u91cd\u5909\u66f4\u30d7\u30e9\u30f3\u3092\u4f5c\u6210\"\"\"\n        if abs(weight_diff) &lt; 2:\n            return {\n                \"goal\": \"\u73fe\u5728\u306e\u4f53\u91cd\u3092\u7dad\u6301\",\n                \"period\": \"\u7d99\u7d9a\u7684\",\n                \"weekly_target\": 0,\n                \"advice\": \"\u30d0\u30e9\u30f3\u30b9\u306e\u826f\u3044\u98df\u4e8b\u3068\u9069\u5ea6\u306a\u904b\u52d5\u3092\u7d99\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\"\n            }\n        elif weight_diff &gt; 0:  # \u6e1b\u91cf\u304c\u5fc5\u8981\n            weekly_target = min(weight_diff / 10, 0.5)  # \u90310.5kg\u4ee5\u4e0b\u306e\u6e1b\u91cf\n            period_weeks = int(weight_diff / weekly_target)\n            return {\n                \"goal\": f\"{weight_diff:.1f}kg \u306e\u6e1b\u91cf\",\n                \"period\": f\"\u7d04{period_weeks}\u9031\u9593\",\n                \"weekly_target\": -weekly_target,\n                \"advice\": \"\u30ab\u30ed\u30ea\u30fc\u5236\u9650\u3068\u6709\u9178\u7d20\u904b\u52d5\u3092\u7d44\u307f\u5408\u308f\u305b\u307e\u3057\u3087\u3046\"\n            }\n        else:  # \u5897\u91cf\u304c\u5fc5\u8981\n            weekly_target = min(abs(weight_diff) / 10, 0.3)  # \u90310.3kg\u4ee5\u4e0b\u306e\u5897\u91cf\n            period_weeks = int(abs(weight_diff) / weekly_target)\n            return {\n                \"goal\": f\"{abs(weight_diff):.1f}kg \u306e\u5897\u91cf\",\n                \"period\": f\"\u7d04{period_weeks}\u9031\u9593\",\n                \"weekly_target\": weekly_target,\n                \"advice\": \"\u6804\u990a\u4fa1\u306e\u9ad8\u3044\u98df\u4e8b\u3068\u7b4b\u529b\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u3087\u3046\"\n            }\n\n# \u4f7f\u7528\u4f8b\nbmi_calculator = BMICalculator()\n\n# \u8a18\u9332\u8ffd\u52a0\nrecord1 = bmi_calculator.add_record(170, 75, \"2024-01-01\")\nrecord2 = bmi_calculator.add_record(170, 73, \"2024-01-15\")\nrecord3 = bmi_calculator.add_record(170, 71, \"2024-02-01\")\n\nprint(\"=== \u6700\u65b0\u8a18\u9332 ===\")\nlatest = bmi_calculator.history[-1]\nprint(f\"\u65e5\u4ed8: {latest['date']}\")\nprint(f\"\u8eab\u9577: {latest['height']}cm\")\nprint(f\"\u4f53\u91cd: {latest['weight']}kg\")\nprint(f\"BMI: {latest['bmi']:.1f}\")\nprint(f\"\u5224\u5b9a: {latest['category']}\")\n\n# \u9032\u6357\u30ec\u30dd\u30fc\u30c8\nprint(bmi_calculator.get_progress_report())\n\n# \u5065\u5eb7\u7ba1\u7406\u30d7\u30e9\u30f3\nhealth_plan = bmi_calculator.generate_health_plan(170, 71)\nprint(\"=== \u5065\u5eb7\u7ba1\u7406\u30d7\u30e9\u30f3 ===\")\nprint(f\"\u76ee\u6a19: {health_plan['plan']['goal']}\")\nprint(f\"\u671f\u9593: {health_plan['plan']['period']}\")\nprint(f\"\u9031\u9593\u76ee\u6a19: {health_plan['plan']['weekly_target']:+.1f}kg\")\nprint(f\"\u30a2\u30c9\u30d0\u30a4\u30b9: {health_plan['plan']['advice']}\")\n</code></pre>"},{"location":"chapter11/#_5","title":"\u5f15\u6570\u3068\u623b\u308a\u5024","text":""},{"location":"chapter11/#_6","title":"\u5f15\u6570\uff08\u30d1\u30e9\u30e1\u30fc\u30bf\uff09\u306e\u7a2e\u985e","text":"<p>\u95a2\u6570\u306b\u306f\u69d8\u3005\u306a\u65b9\u6cd5\u3067\u5024\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p> <pre><code>&gt;&gt;&gt; # \u4f4d\u7f6e\u5f15\u6570\uff08\u9806\u756a\u304c\u91cd\u8981\uff09\n&gt;&gt;&gt; def greet_person(name, age, city):\n...     return f\"{name}\u3055\u3093\uff08{age}\u6b73\u3001{city}\u5728\u4f4f\uff09\u3053\u3093\u306b\u3061\u306f\uff01\"\n... \n\n&gt;&gt;&gt; message = greet_person(\"\u7530\u4e2d\", 25, \"\u6771\u4eac\")\n&gt;&gt;&gt; print(message)\n\n\u7530\u4e2d\u3055\u3093\uff0825\u6b73\u3001\u6771\u4eac\u5728\u4f4f\uff09\u3053\u3093\u306b\u3061\u306f\uff01\n\n&gt;&gt;&gt; # \u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\uff08\u9806\u756a\u306f\u81ea\u7531\uff09\n&gt;&gt;&gt; message = greet_person(age=30, city=\"\u5927\u962a\", name=\"\u4f50\u85e4\")\n&gt;&gt;&gt; print(message)\n\n\u4f50\u85e4\u3055\u3093\uff0830\u6b73\u3001\u5927\u962a\u5728\u4f4f\uff09\u3053\u3093\u306b\u3061\u306f\uff01\n\n&gt;&gt;&gt; # \u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570\n&gt;&gt;&gt; def create_user_profile(name, age, city=\"\u672a\u8a2d\u5b9a\", premium=False):\n...     profile = {\n...         \"name\": name,\n...         \"age\": age,\n...         \"city\": city,\n...         \"premium\": premium\n...     }\n...     return profile\n... \n\n&gt;&gt;&gt; # \u4e00\u90e8\u306e\u5f15\u6570\u3060\u3051\u6307\u5b9a\n&gt;&gt;&gt; profile1 = create_user_profile(\"\u7530\u4e2d\", 25)\n&gt;&gt;&gt; print(profile1)\n\n{'name': '\u7530\u4e2d', 'age': 25, 'city': '\u672a\u8a2d\u5b9a', 'premium': False}\n\n&gt;&gt;&gt; # \u4e00\u90e8\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u4e0a\u66f8\u304d\n&gt;&gt;&gt; profile2 = create_user_profile(\"\u4f50\u85e4\", 30, premium=True)\n&gt;&gt;&gt; print(profile2)\n\n{'name': '\u4f50\u85e4', 'age': 30, 'city': '\u672a\u8a2d\u5b9a', 'premium': True}\n</code></pre>"},{"location":"chapter11/#_7","title":"\u53ef\u5909\u9577\u5f15\u6570","text":"<pre><code>&gt;&gt;&gt; # *args: \u8907\u6570\u306e\u4f4d\u7f6e\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\n&gt;&gt;&gt; def calculate_total(*numbers):\n...     \"\"\"\u8907\u6570\u306e\u6570\u5024\u306e\u5408\u8a08\u3092\u8a08\u7b97\"\"\"\n...     total = 0\n...     for num in numbers:\n...         total += num\n...     return total\n... \n\n&gt;&gt;&gt; result1 = calculate_total(10, 20, 30)\n&gt;&gt;&gt; result2 = calculate_total(5, 15, 25, 35, 45)\n&gt;&gt;&gt; print(f\"3\u3064\u306e\u6570\u306e\u5408\u8a08: {result1}\")\n&gt;&gt;&gt; print(f\"5\u3064\u306e\u6570\u306e\u5408\u8a08: {result2}\")\n\n3\u3064\u306e\u6570\u306e\u5408\u8a08: 60\n5\u3064\u306e\u6570\u306e\u5408\u8a08: 125\n\n&gt;&gt;&gt; # **kwargs: \u8907\u6570\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\n&gt;&gt;&gt; def create_product(**details):\n...     \"\"\"\u5546\u54c1\u60c5\u5831\u3092\u4f5c\u6210\"\"\"\n...     product = {\"created\": \"2024-01-01\"}\n...     \n...     for key, value in details.items():\n...         product[key] = value\n...     \n...     return product\n... \n\n&gt;&gt;&gt; product1 = create_product(name=\"\u30ce\u30fc\u30c8PC\", price=80000, category=\"\u96fb\u5b50\u6a5f\u5668\")\n&gt;&gt;&gt; product2 = create_product(name=\"\u30b3\u30fc\u30d2\u30fc\", price=500, origin=\"\u30d6\u30e9\u30b8\u30eb\", roast=\"\u4e2d\u714e\u308a\")\n\n&gt;&gt;&gt; print(\"\u5546\u54c11:\", product1)\n&gt;&gt;&gt; print(\"\u5546\u54c12:\", product2)\n\n\u5546\u54c11: {'created': '2024-01-01', 'name': '\u30ce\u30fc\u30c8PC', 'price': 80000, 'category': '\u96fb\u5b50\u6a5f\u5668'}\n\u5546\u54c12: {'created': '2024-01-01', 'name': '\u30b3\u30fc\u30d2\u30fc', 'price': 500, 'origin': '\u30d6\u30e9\u30b8\u30eb', 'roast': '\u4e2d\u714e\u308a'}\n</code></pre>"},{"location":"chapter11/#_8","title":"\u3010\u5b9f\u884c\u3011\u5272\u5f15\u4fa1\u683c\u8a08\u7b97\u95a2\u6570\uff08\u901a\u5e38\u30fb\u5b66\u5272\u30fb\u30b7\u30cb\u30a2\u5272\uff09","text":"<p>\u5b9f\u7528\u7684\u306a\u5272\u5f15\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u5f15\u6570\u306e\u6d3b\u7528\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter11/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u5272\u5f15\u8a08\u7b97\u95a2\u6570","text":"<pre><code>&gt;&gt;&gt; def calculate_discount_price(original_price, discount_rate):\n...     \"\"\"\u57fa\u672c\u7684\u306a\u5272\u5f15\u4fa1\u683c\u8a08\u7b97\"\"\"\n...     discount_amount = original_price * discount_rate\n...     final_price = original_price - discount_amount\n...     \n...     return {\n...         \"original_price\": original_price,\n...         \"discount_rate\": discount_rate,\n...         \"discount_amount\": discount_amount,\n...         \"final_price\": final_price\n...     }\n... \n\n&gt;&gt;&gt; # \u4f7f\u7528\u4f8b\n&gt;&gt;&gt; result = calculate_discount_price(10000, 0.1)  # 10%\u5272\u5f15\n&gt;&gt;&gt; print(f\"\u5143\u4fa1\u683c: {result['original_price']}\u5186\")\n&gt;&gt;&gt; print(f\"\u5272\u5f15\u7387: {result['discount_rate']:.0%}\")\n&gt;&gt;&gt; print(f\"\u5272\u5f15\u984d: {result['discount_amount']}\u5186\")\n&gt;&gt;&gt; print(f\"\u6700\u7d42\u4fa1\u683c: {result['final_price']}\u5186\")\n\n\u5143\u4fa1\u683c: 10000\u5186\n\u5272\u5f15\u7387: 10%\n\u5272\u5f15\u984d: 1000.0\u5186\n\u6700\u7d42\u4fa1\u683c: 9000.0\u5186\n</code></pre>"},{"location":"chapter11/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5e74\u9f62\u5225\u5272\u5f15\u30b7\u30b9\u30c6\u30e0","text":"<pre><code>&gt;&gt;&gt; def calculate_age_based_discount(original_price, age, is_student=False):\n...     \"\"\"\u5e74\u9f62\u30d9\u30fc\u30b9\u306e\u5272\u5f15\u8a08\u7b97\"\"\"\n...     \n...     # \u57fa\u672c\u5272\u5f15\u7387\u306e\u6c7a\u5b9a\n...     if age &lt; 12:\n...         discount_rate = 0.5  # \u5b50\u4f9b50%\u5272\u5f15\n...         discount_type = \"\u5b50\u4f9b\u5272\u5f15\"\n...     elif age &gt;= 65:\n...         discount_rate = 0.3  # \u30b7\u30cb\u30a230%\u5272\u5f15\n...         discount_type = \"\u30b7\u30cb\u30a2\u5272\u5f15\"\n...     elif is_student and 12 &lt;= age &lt;= 25:\n...         discount_rate = 0.2  # \u5b66\u751f20%\u5272\u5f15\n...         discount_type = \"\u5b66\u751f\u5272\u5f15\"\n...     else:\n...         discount_rate = 0.0  # \u5272\u5f15\u306a\u3057\n...         discount_type = \"\u901a\u5e38\u6599\u91d1\"\n...     \n...     # \u8a08\u7b97\n...     discount_amount = original_price * discount_rate\n...     final_price = original_price - discount_amount\n...     \n...     return {\n...         \"original_price\": original_price,\n...         \"discount_type\": discount_type,\n...         \"discount_rate\": discount_rate,\n...         \"discount_amount\": discount_amount,\n...         \"final_price\": final_price,\n...         \"age\": age,\n...         \"is_student\": is_student\n...     }\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n&gt;&gt;&gt; test_cases = [\n...     (\"\u5b50\u4f9b\", 8, False),\n...     (\"\u5b66\u751f\", 20, True),\n...     (\"\u4e00\u822c\u6210\u4eba\", 30, False),\n...     (\"\u30b7\u30cb\u30a2\", 70, False),\n...     (\"\u6210\u4eba\u5b66\u751f\", 22, True)\n... ]\n\n&gt;&gt;&gt; original_price = 5000\n\n&gt;&gt;&gt; print(\"=== \u5e74\u9f62\u5225\u5272\u5f15\u8a08\u7b97 ===\")\n&gt;&gt;&gt; for description, age, is_student in test_cases:\n...     result = calculate_age_based_discount(original_price, age, is_student)\n...     print(f\"\\n{description} ({age}\u6b73, \u5b66\u751f: {is_student})\")\n...     print(f\"\u5272\u5f15\u30bf\u30a4\u30d7: {result['discount_type']}\")\n...     print(f\"\u5272\u5f15\u7387: {result['discount_rate']:.0%}\")\n...     print(f\"\u6700\u7d42\u4fa1\u683c: {result['final_price']:,.0f}\u5186\")\n\n=== \u5e74\u9f62\u5225\u5272\u5f15\u8a08\u7b97 ===\n\n\u5b50\u4f9b (8\u6b73, \u5b66\u751f: False)\n\u5272\u5f15\u30bf\u30a4\u30d7: \u5b50\u4f9b\u5272\u5f15\n\u5272\u5f15\u7387: 50%\n\u6700\u7d42\u4fa1\u683c: 2,500\u5186\n\n\u5b66\u751f (20\u6b73, \u5b66\u751f: True)\n\u5272\u5f15\u30bf\u30a4\u30d7: \u5b66\u751f\u5272\u5f15\n\u5272\u5f15\u7387: 20%\n\u6700\u7d42\u4fa1\u683c: 4,000\u5186\n\n\u4e00\u822c\u6210\u4eba (30\u6b73, \u5b66\u751f: False)\n\u5272\u5f15\u30bf\u30a4\u30d7: \u901a\u5e38\u6599\u91d1\n\u5272\u5f15\u7387: 0%\n\u6700\u7d42\u4fa1\u683c: 5,000\u5186\n\n\u30b7\u30cb\u30a2 (70\u6b73, \u5b66\u751f: False)\n\u5272\u5f15\u30bf\u30a4\u30d7: \u30b7\u30cb\u30a2\u5272\u5f15\n\u5272\u5f15\u7387: 30%\n\u6700\u7d42\u4fa1\u683c: 3,500\u5186\n\n\u6210\u4eba\u5b66\u751f (22\u6b73, \u5b66\u751f: True)\n\u5272\u5f15\u30bf\u30a4\u30d7: \u5b66\u751f\u5272\u5f15\n\u5272\u5f15\u7387: 20%\n\u6700\u7d42\u4fa1\u683c: 4,000\u5186\n</code></pre>"},{"location":"chapter11/#3_1","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8907\u6570\u5272\u5f15\u5bfe\u5fdc\u30b7\u30b9\u30c6\u30e0","text":"<pre><code>&gt;&gt;&gt; def calculate_multiple_discounts(original_price, age=None, is_student=False, \n...                                  is_member=False, member_level=\"\u30d6\u30ed\u30f3\u30ba\", \n...                                  coupon_rate=0.0, **additional_discounts):\n...     \"\"\"\u8907\u6570\u306e\u5272\u5f15\u3092\u9069\u7528\u3059\u308b\u9ad8\u5ea6\u306a\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     discounts_applied = []\n...     current_price = original_price\n...     \n...     # 1. \u5e74\u9f62\u5225\u5272\u5f15\uff08\u6700\u521d\u306b\u9069\u7528\uff09\n...     if age is not None:\n...         if age &lt; 12:\n...             age_discount = 0.5\n...             discount_name = \"\u5b50\u4f9b\u5272\u5f15\"\n...         elif age &gt;= 65:\n...             age_discount = 0.3\n...             discount_name = \"\u30b7\u30cb\u30a2\u5272\u5f15\"\n...         elif is_student and 12 &lt;= age &lt;= 25:\n...             age_discount = 0.2\n...             discount_name = \"\u5b66\u751f\u5272\u5f15\"\n...         else:\n...             age_discount = 0.0\n...             discount_name = None\n...         \n...         if age_discount &gt; 0:\n...             discount_amount = current_price * age_discount\n...             current_price -= discount_amount\n...             discounts_applied.append({\n...                 \"type\": discount_name,\n...                 \"rate\": age_discount,\n...                 \"amount\": discount_amount,\n...                 \"price_after\": current_price\n...             })\n...     \n...     # 2. \u4f1a\u54e1\u5272\u5f15\n...     if is_member:\n...         member_discounts = {\n...             \"\u30d6\u30ed\u30f3\u30ba\": 0.05,\n...             \"\u30b7\u30eb\u30d0\u30fc\": 0.10,\n...             \"\u30b4\u30fc\u30eb\u30c9\": 0.15,\n...             \"\u30d7\u30e9\u30c1\u30ca\": 0.20\n...         }\n...         \n...         member_rate = member_discounts.get(member_level, 0.05)\n...         discount_amount = current_price * member_rate\n...         current_price -= discount_amount\n...         \n...         discounts_applied.append({\n...             \"type\": f\"{member_level}\u4f1a\u54e1\u5272\u5f15\",\n...             \"rate\": member_rate,\n...             \"amount\": discount_amount,\n...             \"price_after\": current_price\n...         })\n...     \n...     # 3. \u30af\u30fc\u30dd\u30f3\u5272\u5f15\n...     if coupon_rate &gt; 0:\n...         discount_amount = current_price * coupon_rate\n...         current_price -= discount_amount\n...         \n...         discounts_applied.append({\n...             \"type\": \"\u30af\u30fc\u30dd\u30f3\u5272\u5f15\",\n...             \"rate\": coupon_rate,\n...             \"amount\": discount_amount,\n...             \"price_after\": current_price\n...         })\n...     \n...     # 4. \u305d\u306e\u4ed6\u306e\u5272\u5f15\n...     for discount_name, discount_rate in additional_discounts.items():\n...         if discount_rate &gt; 0:\n...             discount_amount = current_price * discount_rate\n...             current_price -= discount_amount\n...             \n...             discounts_applied.append({\n...                 \"type\": discount_name,\n...                 \"rate\": discount_rate,\n...                 \"amount\": discount_amount,\n...                 \"price_after\": current_price\n...             })\n...     \n...     # \u7dcf\u5272\u5f15\u984d\u3068\u5272\u5f15\u7387\u3092\u8a08\u7b97\n...     total_discount = original_price - current_price\n...     total_discount_rate = total_discount / original_price if original_price &gt; 0 else 0\n...     \n...     return {\n...         \"original_price\": original_price,\n...         \"final_price\": current_price,\n...         \"total_discount\": total_discount,\n...         \"total_discount_rate\": total_discount_rate,\n...         \"discounts_applied\": discounts_applied\n...     }\n... \n\n&gt;&gt;&gt; # \u8907\u96d1\u306a\u5272\u5f15\u8a08\u7b97\u306e\u4f8b\n&gt;&gt;&gt; result = calculate_multiple_discounts(\n...     original_price=20000,\n...     age=22,\n...     is_student=True,\n...     is_member=True,\n...     member_level=\"\u30b4\u30fc\u30eb\u30c9\",\n...     coupon_rate=0.05,\n...     \u30bf\u30a4\u30e0\u30bb\u30fc\u30eb=0.10\n... )\n\n&gt;&gt;&gt; print(\"=== \u8907\u6570\u5272\u5f15\u9069\u7528\u7d50\u679c ===\")\n&gt;&gt;&gt; print(f\"\u5143\u4fa1\u683c: {result['original_price']:,}\u5186\")\n&gt;&gt;&gt; print(f\"\u6700\u7d42\u4fa1\u683c: {result['final_price']:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u7dcf\u5272\u5f15\u984d: {result['total_discount']:,.0f}\u5186\")\n&gt;&gt;&gt; print(f\"\u7dcf\u5272\u5f15\u7387: {result['total_discount_rate']:.1%}\")\n\n&gt;&gt;&gt; print(\"\\n=== \u9069\u7528\u3055\u308c\u305f\u5272\u5f15 ===\")\n&gt;&gt;&gt; for i, discount in enumerate(result['discounts_applied'], 1):\n...     print(f\"{i}. {discount['type']}: {discount['rate']:.0%}\u5272\u5f15 (-{discount['amount']:,.0f}\u5186)\")\n...     print(f\"   \u9069\u7528\u5f8c\u4fa1\u683c: {discount['price_after']:,.0f}\u5186\")\n\n=== \u8907\u6570\u5272\u5f15\u9069\u7528\u7d50\u679c ===\n\u5143\u4fa1\u683c: 20,000\u5186\n\u6700\u7d42\u4fa1\u683c: 10,404\u5186\n\u7dcf\u5272\u5f15\u984d: 9,596\u5186\n\u7dcf\u5272\u5f15\u7387: 48.0%\n\n=== \u9069\u7528\u3055\u308c\u305f\u5272\u5f15 ===\n1. \u5b66\u751f\u5272\u5f15: 20%\u5272\u5f15 (-4,000\u5186)\n   \u9069\u7528\u5f8c\u4fa1\u683c: 16,000\u5186\n2. \u30b4\u30fc\u30eb\u30c9\u4f1a\u54e1\u5272\u5f15: 15%\u5272\u5f15 (-2,400\u5186)\n   \u9069\u7528\u5f8c\u4fa1\u683c: 13,600\u5186\n3. \u30af\u30fc\u30dd\u30f3\u5272\u5f15: 5%\u5272\u5f15 (-680\u5186)\n   \u9069\u7528\u5f8c\u4fa1\u683c: 12,920\u5186\n4. \u30bf\u30a4\u30e0\u30bb\u30fc\u30eb: 10%\u5272\u5f15 (-1,292\u5186)\n   \u9069\u7528\u5f8c\u4fa1\u683c: 11,628\u5186\n</code></pre>"},{"location":"chapter11/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u5272\u5f15\u8a08\u7b97\u30c4\u30fc\u30eb\u30af\u30e9\u30b9","text":"<pre><code># \u7dcf\u5408\u5272\u5f15\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\nclass DiscountCalculator:\n    def __init__(self):\n        self.discount_rules = {\n            \"age_based\": {\n                \"child\": {\"min_age\": 0, \"max_age\": 11, \"rate\": 0.5, \"name\": \"\u5b50\u4f9b\u5272\u5f15\"},\n                \"student\": {\"min_age\": 12, \"max_age\": 25, \"rate\": 0.2, \"name\": \"\u5b66\u751f\u5272\u5f15\", \"requires_student_status\": True},\n                \"senior\": {\"min_age\": 65, \"max_age\": 120, \"rate\": 0.3, \"name\": \"\u30b7\u30cb\u30a2\u5272\u5f15\"}\n            },\n            \"membership\": {\n                \"\u30d6\u30ed\u30f3\u30ba\": 0.05,\n                \"\u30b7\u30eb\u30d0\u30fc\": 0.10,\n                \"\u30b4\u30fc\u30eb\u30c9\": 0.15,\n                \"\u30d7\u30e9\u30c1\u30ca\": 0.20\n            }\n        }\n\n    def add_discount_rule(self, category, name, rate, conditions=None):\n        \"\"\"\u65b0\u3057\u3044\u5272\u5f15\u30eb\u30fc\u30eb\u3092\u8ffd\u52a0\"\"\"\n        if category not in self.discount_rules:\n            self.discount_rules[category] = {}\n\n        rule = {\"rate\": rate, \"name\": name}\n        if conditions:\n            rule.update(conditions)\n\n        self.discount_rules[category][name] = rule\n\n    def calculate_final_price(self, original_price, customer_info, coupons=None):\n        \"\"\"\u9867\u5ba2\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u6700\u7d42\u4fa1\u683c\u3092\u8a08\u7b97\"\"\"\n        if coupons is None:\n            coupons = []\n\n        calculation_steps = []\n        current_price = original_price\n\n        # Step 1: \u5e74\u9f62\u30d9\u30fc\u30b9\u5272\u5f15\n        age_discount = self._get_age_discount(customer_info.get(\"age\"), \n                                              customer_info.get(\"is_student\", False))\n        if age_discount:\n            discount_amount = current_price * age_discount[\"rate\"]\n            current_price -= discount_amount\n            calculation_steps.append({\n                \"step\": \"\u5e74\u9f62\u30d9\u30fc\u30b9\u5272\u5f15\",\n                \"discount_name\": age_discount[\"name\"],\n                \"rate\": age_discount[\"rate\"],\n                \"amount\": discount_amount,\n                \"price_after\": current_price\n            })\n\n        # Step 2: \u4f1a\u54e1\u5272\u5f15\n        if customer_info.get(\"is_member\") and customer_info.get(\"member_level\"):\n            member_level = customer_info[\"member_level\"]\n            if member_level in self.discount_rules[\"membership\"]:\n                member_rate = self.discount_rules[\"membership\"][member_level]\n                discount_amount = current_price * member_rate\n                current_price -= discount_amount\n                calculation_steps.append({\n                    \"step\": \"\u4f1a\u54e1\u5272\u5f15\",\n                    \"discount_name\": f\"{member_level}\u4f1a\u54e1\",\n                    \"rate\": member_rate,\n                    \"amount\": discount_amount,\n                    \"price_after\": current_price\n                })\n\n        # Step 3: \u30af\u30fc\u30dd\u30f3\u9069\u7528\n        for coupon in coupons:\n            coupon_rate = coupon.get(\"rate\", 0)\n            if coupon_rate &gt; 0:\n                discount_amount = current_price * coupon_rate\n                current_price -= discount_amount\n                calculation_steps.append({\n                    \"step\": \"\u30af\u30fc\u30dd\u30f3\u9069\u7528\",\n                    \"discount_name\": coupon.get(\"name\", \"\u30af\u30fc\u30dd\u30f3\"),\n                    \"rate\": coupon_rate,\n                    \"amount\": discount_amount,\n                    \"price_after\": current_price\n                })\n\n        return {\n            \"original_price\": original_price,\n            \"final_price\": current_price,\n            \"total_savings\": original_price - current_price,\n            \"total_discount_rate\": (original_price - current_price) / original_price,\n            \"calculation_steps\": calculation_steps\n        }\n\n    def _get_age_discount(self, age, is_student):\n        \"\"\"\u5e74\u9f62\u306b\u57fa\u3065\u304f\u5272\u5f15\u3092\u53d6\u5f97\"\"\"\n        if age is None:\n            return None\n\n        for rule_name, rule in self.discount_rules[\"age_based\"].items():\n            if rule[\"min_age\"] &lt;= age &lt;= rule[\"max_age\"]:\n                # \u5b66\u751f\u30b9\u30c6\u30fc\u30bf\u30b9\u304c\u5fc5\u8981\u306a\u5272\u5f15\u306e\u5834\u5408\n                if rule.get(\"requires_student_status\") and not is_student:\n                    continue\n                return rule\n\n        return None\n\n    def generate_discount_report(self, original_price, customer_info, coupons=None):\n        \"\"\"\u5272\u5f15\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n        result = self.calculate_final_price(original_price, customer_info, coupons)\n\n        report = f\"\"\"\n=== \u5272\u5f15\u8a08\u7b97\u30ec\u30dd\u30fc\u30c8 ===\n\u304a\u5ba2\u69d8\u60c5\u5831:\n  \u5e74\u9f62: {customer_info.get('age', '\u4e0d\u660e')}\u6b73\n  \u5b66\u751f: {'\u306f\u3044' if customer_info.get('is_student') else '\u3044\u3044\u3048'}\n  \u4f1a\u54e1: {'\u306f\u3044' if customer_info.get('is_member') else '\u3044\u3044\u3048'}\"\"\"\n\n        if customer_info.get('is_member'):\n            report += f\" ({customer_info.get('member_level', '\u4e0d\u660e')})\"\n\n        report += f\"\"\"\n\n\u4fa1\u683c\u8a08\u7b97:\n  \u5143\u4fa1\u683c: {result['original_price']:,}\u5186\"\"\"\n\n        for step in result['calculation_steps']:\n            report += f\"\"\"\n  {step['discount_name']}: -{step['amount']:,.0f}\u5186 ({step['rate']:.0%})\n    \u2192 {step['price_after']:,.0f}\u5186\"\"\"\n\n        report += f\"\"\"\n\n\u6700\u7d42\u7d50\u679c:\n  \u304a\u652f\u6255\u3044\u91d1\u984d: {result['final_price']:,.0f}\u5186\n  \u7dcf\u5272\u5f15\u984d: {result['total_savings']:,.0f}\u5186\n  \u7dcf\u5272\u5f15\u7387: {result['total_discount_rate']:.1%}\n\"\"\"\n\n        return report\n\n# \u4f7f\u7528\u4f8b\ncalculator = DiscountCalculator()\n\n# \u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\ncustomers = [\n    {\n        \"name\": \"\u7530\u4e2d\u592a\u90ce\",\n        \"info\": {\"age\": 8, \"is_student\": False, \"is_member\": False},\n        \"coupons\": []\n    },\n    {\n        \"name\": \"\u4f50\u85e4\u82b1\u5b50\", \n        \"info\": {\"age\": 20, \"is_student\": True, \"is_member\": True, \"member_level\": \"\u30b7\u30eb\u30d0\u30fc\"},\n        \"coupons\": [{\"name\": \"\u521d\u56de\u30af\u30fc\u30dd\u30f3\", \"rate\": 0.05}]\n    },\n    {\n        \"name\": \"\u9234\u6728\u4e00\u90ce\",\n        \"info\": {\"age\": 70, \"is_member\": True, \"member_level\": \"\u30b4\u30fc\u30eb\u30c9\"},\n        \"coupons\": [{\"name\": \"\u30bf\u30a4\u30e0\u30bb\u30fc\u30eb\", \"rate\": 0.1}]\n    }\n]\n\noriginal_price = 15000\n\nfor customer in customers:\n    print(f\"\\n{'='*50}\")\n    print(f\"\u9867\u5ba2: {customer['name']}\")\n    report = calculator.generate_discount_report(\n        original_price, \n        customer['info'], \n        customer['coupons']\n    )\n    print(report)\n</code></pre>"},{"location":"chapter11/#_9","title":"\u95a2\u6570\u306e\u4e2d\u306e\u5909\u6570\uff08\u30b9\u30b3\u30fc\u30d7\uff09","text":""},{"location":"chapter11/#_10","title":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u3068\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570","text":"<pre><code>&gt;&gt;&gt; # \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\n&gt;&gt;&gt; global_counter = 0\n\n&gt;&gt;&gt; def increment_counter():\n...     # \u30ed\u30fc\u30ab\u30eb\u5909\u6570\n...     local_temp = global_counter\n...     global global_counter  # \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u5909\u66f4\u3059\u308b\u5ba3\u8a00\n...     global_counter += 1\n...     print(f\"\u30ed\u30fc\u30ab\u30eb\u5909\u6570 local_temp: {local_temp}\")\n...     print(f\"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 global_counter: {global_counter}\")\n... \n\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u547c\u3073\u51fa\u3057\u524d: {global_counter}\")\n&gt;&gt;&gt; increment_counter()\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u547c\u3073\u51fa\u3057\u5f8c: {global_counter}\")\n\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u524d: 0\n\u30ed\u30fc\u30ab\u30eb\u5909\u6570 local_temp: 0\n\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 global_counter: 1\n\u95a2\u6570\u547c\u3073\u51fa\u3057\u5f8c: 1\n\n&gt;&gt;&gt; # \u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306f\u30b9\u30b3\u30fc\u30d7\u5916\u3067\u306f\u898b\u3048\u306a\u3044\n&gt;&gt;&gt; # print(local_temp)  # NameError: name 'local_temp' is not defined\n</code></pre>"},{"location":"chapter11/#_11","title":"\u5b9f\u7528\u7684\u306a\u30b9\u30b3\u30fc\u30d7\u306e\u4f8b","text":"<pre><code>&gt;&gt;&gt; # \u8a2d\u5b9a\u5024\u3092\u7ba1\u7406\u3059\u308b\u4f8b\n&gt;&gt;&gt; DEFAULT_TAX_RATE = 0.1  # \u30b0\u30ed\u30fc\u30d0\u30eb\u8a2d\u5b9a\n\n&gt;&gt;&gt; def calculate_price_with_tax(price, tax_rate=None):\n...     \"\"\"\u7a0e\u8fbc\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     if tax_rate is None:\n...         tax_rate = DEFAULT_TAX_RATE  # \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3092\u4f7f\u7528\n...     \n...     tax_amount = price * tax_rate\n...     total_price = price + tax_amount\n...     \n...     return {\n...         \"base_price\": price,\n...         \"tax_rate\": tax_rate,\n...         \"tax_amount\": tax_amount,\n...         \"total_price\": total_price\n...     }\n... \n\n&gt;&gt;&gt; # \u30c7\u30d5\u30a9\u30eb\u30c8\u7a0e\u7387\u3092\u4f7f\u7528\n&gt;&gt;&gt; result1 = calculate_price_with_tax(1000)\n&gt;&gt;&gt; print(f\"\u901a\u5e38\u7a0e\u7387: {result1['total_price']}\u5186\")\n\n\u901a\u5e38\u7a0e\u7387: 1100.0\u5186\n\n&gt;&gt;&gt; # \u30ab\u30b9\u30bf\u30e0\u7a0e\u7387\u3092\u4f7f\u7528\n&gt;&gt;&gt; result2 = calculate_price_with_tax(1000, 0.08)\n&gt;&gt;&gt; print(f\"\u8efd\u6e1b\u7a0e\u7387: {result2['total_price']}\u5186\")\n\n\u8efd\u6e1b\u7a0e\u7387: 1080.0\u5186\n</code></pre>"},{"location":"chapter11/#_12","title":"\u307e\u3068\u3081\uff1a\u95a2\u6570\u306e\u52b9\u679c\u7684\u306a\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter11/#_13","title":"\u95a2\u6570\u306e\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u518d\u5229\u7528\u6027: \u4e00\u5ea6\u4f5c\u308c\u3070\u4f55\u5ea6\u3067\u3082\u4f7f\u3048\u308b</li> <li>\u4fdd\u5b88\u6027: \u4fee\u6b63\u306f\u4e00\u7b87\u6240\u3060\u3051\u3067OK</li> <li>\u53ef\u8aad\u6027: \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u610f\u56f3\u304c\u5206\u304b\u308a\u3084\u3059\u3044</li> <li>\u30c6\u30b9\u30c8\u6027: \u95a2\u6570\u5358\u4f53\u3067\u30c6\u30b9\u30c8\u3067\u304d\u308b</li> </ul>"},{"location":"chapter11/#_14","title":"\u5f15\u6570\u306e\u7a2e\u985e","text":"<ul> <li>\u4f4d\u7f6e\u5f15\u6570: \u9806\u756a\u304c\u91cd\u8981</li> <li>\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570: \u540d\u524d\u3067\u6307\u5b9a\u3001\u9806\u756a\u81ea\u7531</li> <li>\u30c7\u30d5\u30a9\u30eb\u30c8\u5f15\u6570: \u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570</li> <li>\u53ef\u5909\u9577\u5f15\u6570: args\uff08\u8907\u6570\u306e\u4f4d\u7f6e\u5f15\u6570\uff09\u3001*kwargs\uff08\u8907\u6570\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\uff09</li> </ul>"},{"location":"chapter11/#_15","title":"\u623b\u308a\u5024\u306e\u6d3b\u7528","text":"<ul> <li>\u5358\u4e00\u306e\u5024\u3092\u8fd4\u3059</li> <li>\u8f9e\u66f8\u3084\u30ea\u30b9\u30c8\u3067\u8907\u6570\u306e\u5024\u3092\u8fd4\u3059</li> <li>\u8a08\u7b97\u7d50\u679c\u3068\u72b6\u614b\u60c5\u5831\u3092\u540c\u6642\u306b\u8fd4\u3059</li> </ul>"},{"location":"chapter11/#_16","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>BMI\u8a08\u7b97\u3068\u5065\u5eb7\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0</li> <li>\u8907\u6570\u5272\u5f15\u5bfe\u5fdc\u306e\u4fa1\u683c\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0</li> <li>\u8a2d\u5b9a\u5024\u3092\u6d3b\u7528\u3057\u305f\u67d4\u8edf\u306a\u51e6\u7406</li> </ul>"},{"location":"chapter11/#_17","title":"\u30b9\u30b3\u30fc\u30d7\u306e\u7406\u89e3","text":"<ul> <li>\u30ed\u30fc\u30ab\u30eb\u5909\u6570: \u95a2\u6570\u5185\u3067\u306e\u307f\u6709\u52b9</li> <li>\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570: \u30d7\u30ed\u30b0\u30e9\u30e0\u5168\u4f53\u3067\u6709\u52b9</li> <li>\u9069\u5207\u306a\u30b9\u30b3\u30fc\u30d7\u306e\u4f7f\u3044\u5206\u3051\u3067\u4fdd\u5b88\u6027\u5411\u4e0a</li> </ul>"},{"location":"chapter11/#_18","title":"\u95a2\u6570\u8a2d\u8a08\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ul> <li>\u4e00\u3064\u306e\u95a2\u6570\u306f\u4e00\u3064\u306e\u8cac\u4efb\u3092\u6301\u3064</li> <li>\u95a2\u6570\u540d\u306f\u51e6\u7406\u5185\u5bb9\u3092\u660e\u78ba\u306b\u8868\u73fe</li> <li>\u5f15\u6570\u3068\u623b\u308a\u5024\u3092\u660e\u78ba\u306b\u5b9a\u7fa9</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u6587\u5b57\u5217\uff08docstring\uff09\u3067\u8aac\u660e\u3092\u8a18\u8f09</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3066\u7ba1\u7406\u3059\u308b\u65b9\u6cd5\u3068\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u6a5f\u80fd\u3092\u5206\u3051\u3066\u6574\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u5bb6\u8a08\u7c3f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3001\u3088\u308a\u672c\u683c\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u3092\u4f53\u9a13\u3057\u307e\u3057\u3087\u3046\uff01</p>"},{"location":"chapter12/","title":"\u7b2c12\u7ae0\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3088\u3046","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u306f\u3001Python\u306e\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u9577\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6bce\u56de\u624b\u3067\u5165\u529b\u3059\u308b\u306e\u306f\u975e\u52b9\u7387\u7684\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u6574\u7406\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3001\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u5b9f\u969b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u958b\u767a\u306e\u6d41\u308c\u3092\u4f53\u9a13\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter12/#pythonpy","title":"Python\u30d5\u30a1\u30a4\u30eb\uff08.py\uff09\u3068\u306f","text":""},{"location":"chapter12/#_1","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u7406\u7531","text":"<p>\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306f\u5b66\u7fd2\u3084\u5b9f\u9a13\u306b\u306f\u4fbf\u5229\u3067\u3059\u304c\u3001\u5b9f\u969b\u306e\u958b\u767a\u3067\u306f\u4ee5\u4e0b\u306e\u7406\u7531\u3067\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\uff1a</p> <p>\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u9650\u754c\uff1a - \u9577\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6bce\u56de\u624b\u3067\u5165\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b - \u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3092\u518d\u8d77\u52d5\u3059\u308b\u3068\u6d88\u3048\u3066\u3057\u307e\u3046 - \u4ed6\u306e\u4eba\u3068\u5171\u6709\u3059\u308b\u306e\u304c\u96e3\u3057\u3044 - \u4fee\u6b63\u3084\u6539\u826f\u304c\u56f0\u96e3</p> <p>\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u30e1\u30ea\u30c3\u30c8\uff1a - \u4e00\u5ea6\u66f8\u3051\u3070\u4f55\u5ea6\u3067\u3082\u5b9f\u884c\u3067\u304d\u308b - \u4fee\u6b63\u3084\u6539\u826f\u304c\u7c21\u5358 - \u4ed6\u306e\u4eba\u3068\u7c21\u5358\u306b\u5171\u6709\u3067\u304d\u308b - \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304c\u53d6\u308c\u308b - \u90e8\u54c1\u3068\u3057\u3066\u518d\u5229\u7528\u3067\u304d\u308b</p>"},{"location":"chapter12/#python","title":"\u306f\u3058\u3081\u3066\u306ePython\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308d\u3046","text":"<pre><code># calculator.py\n\"\"\"\n\u7c21\u5358\u306a\u96fb\u5353\u30d7\u30ed\u30b0\u30e9\u30e0\n\"\"\"\n\ndef add(a, b):\n    \"\"\"\u4e8c\u3064\u306e\u6570\u3092\u8db3\u3059\"\"\"\n    return a + b\n\ndef subtract(a, b):\n    \"\"\"\u4e8c\u3064\u306e\u6570\u3092\u5f15\u304f\"\"\"\n    return a - b\n\ndef multiply(a, b):\n    \"\"\"\u4e8c\u3064\u306e\u6570\u3092\u639b\u3051\u308b\"\"\"\n    return a * b\n\ndef divide(a, b):\n    \"\"\"\u4e8c\u3064\u306e\u6570\u3092\u5272\u308b\"\"\"\n    if b == 0:\n        return \"\u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\"\n    return a / b\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u76f4\u63a5\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306e\u30c6\u30b9\u30c8\nif __name__ == \"__main__\":\n    print(\"=== \u7c21\u5358\u306a\u96fb\u5353 ===\")\n\n    # \u8a08\u7b97\u4f8b\n    num1 = 10\n    num2 = 3\n\n    print(f\"{num1} + {num2} = {add(num1, num2)}\")\n    print(f\"{num1} - {num2} = {subtract(num1, num2)}\")\n    print(f\"{num1} \u00d7 {num2} = {multiply(num1, num2)}\")\n    print(f\"{num1} \u00f7 {num2} = {divide(num1, num2):.2f}\")\n\n    # \u30bc\u30ed\u9664\u7b97\u306e\u30c6\u30b9\u30c8\n    print(f\"{num1} \u00f7 0 = {divide(num1, 0)}\")\n</code></pre>"},{"location":"chapter12/#_2","title":"\u30d5\u30a1\u30a4\u30eb\u306e\u5b9f\u884c\u65b9\u6cd5","text":"<pre><code># \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u5b9f\u884c\npython calculator.py\n\n# \u51fa\u529b\uff1a\n=== \u7c21\u5358\u306a\u96fb\u5353 ===\n10 + 3 = 13\n10 - 3 = 7\n10 \u00d7 3 = 30\n10 \u00f7 3 = 3.33\n10 \u00f7 0 = \u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\n</code></pre>"},{"location":"chapter12/#_3","title":"\u3010\u5b9f\u884c\u3011\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3057\u3088\u3046","text":"<p>\u5b9f\u7528\u7684\u306a\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter12/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306a\u5bb6\u8a08\u7c3f\u30d5\u30a1\u30a4\u30eb","text":"<pre><code># household_budget.py\n\"\"\"\n\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\n\u6bce\u6708\u306e\u53ce\u5165\u3068\u652f\u51fa\u3092\u7ba1\u7406\u3059\u308b\n\"\"\"\n\nimport datetime\n\nclass HouseholdBudget:\n    def __init__(self, initial_balance=0):\n        \"\"\"\u5bb6\u8a08\u7c3f\u306e\u521d\u671f\u5316\"\"\"\n        self.balance = initial_balance\n        self.transactions = []\n        self.monthly_budget = {}\n        self.categories = {\n            \"income\": [\"\u7d66\u6599\", \"\u526f\u696d\", \"\u305d\u306e\u4ed6\u53ce\u5165\"],\n            \"expense\": [\"\u98df\u8cbb\", \"\u4ea4\u901a\u8cbb\", \"\u5149\u71b1\u8cbb\", \"\u5bb6\u8cc3\", \"\u5a2f\u697d\", \"\u305d\u306e\u4ed6\u652f\u51fa\"]\n        }\n\n    def add_transaction(self, amount, category, description=\"\"):\n        \"\"\"\u53d6\u5f15\u3092\u8ffd\u52a0\"\"\"\n        if category in self.categories[\"income\"]:\n            transaction_type = \"\u53ce\u5165\"\n            self.balance += amount\n        elif category in self.categories[\"expense\"]:\n            transaction_type = \"\u652f\u51fa\"\n            self.balance -= amount\n        else:\n            return False, f\"\u4e0d\u660e\u306a\u30ab\u30c6\u30b4\u30ea: {category}\"\n\n        transaction = {\n            \"date\": datetime.datetime.now(),\n            \"type\": transaction_type,\n            \"amount\": amount,\n            \"category\": category,\n            \"description\": description,\n            \"balance_after\": self.balance\n        }\n\n        self.transactions.append(transaction)\n        return True, f\"{transaction_type}\u3092\u8a18\u9332\u3057\u307e\u3057\u305f: {amount:,}\u5186\"\n\n    def get_monthly_summary(self, year=None, month=None):\n        \"\"\"\u6708\u6b21\u30b5\u30de\u30ea\u30fc\u3092\u53d6\u5f97\"\"\"\n        if year is None:\n            year = datetime.datetime.now().year\n        if month is None:\n            month = datetime.datetime.now().month\n\n        monthly_income = 0\n        monthly_expense = 0\n        monthly_transactions = []\n\n        for transaction in self.transactions:\n            if (transaction[\"date\"].year == year and \n                transaction[\"date\"].month == month):\n                monthly_transactions.append(transaction)\n\n                if transaction[\"type\"] == \"\u53ce\u5165\":\n                    monthly_income += transaction[\"amount\"]\n                else:\n                    monthly_expense += transaction[\"amount\"]\n\n        return {\n            \"year\": year,\n            \"month\": month,\n            \"income\": monthly_income,\n            \"expense\": monthly_expense,\n            \"net\": monthly_income - monthly_expense,\n            \"transactions\": monthly_transactions\n        }\n\n    def set_monthly_budget(self, category, amount):\n        \"\"\"\u6708\u9593\u4e88\u7b97\u3092\u8a2d\u5b9a\"\"\"\n        self.monthly_budget[category] = amount\n        return f\"{category}\u306e\u6708\u9593\u4e88\u7b97\u3092{amount:,}\u5186\u306b\u8a2d\u5b9a\u3057\u307e\u3057\u305f\"\n\n    def check_budget_status(self):\n        \"\"\"\u4e88\u7b97\u306e\u4f7f\u7528\u72b6\u6cc1\u3092\u30c1\u30a7\u30c3\u30af\"\"\"\n        current_month = self.get_monthly_summary()\n        status = {}\n\n        for category, budget_amount in self.monthly_budget.items():\n            spent = 0\n            for transaction in current_month[\"transactions\"]:\n                if transaction[\"category\"] == category and transaction[\"type\"] == \"\u652f\u51fa\":\n                    spent += transaction[\"amount\"]\n\n            remaining = budget_amount - spent\n            percentage = (spent / budget_amount) * 100 if budget_amount &gt; 0 else 0\n\n            status[category] = {\n                \"budget\": budget_amount,\n                \"spent\": spent,\n                \"remaining\": remaining,\n                \"percentage\": percentage,\n                \"over_budget\": spent &gt; budget_amount\n            }\n\n        return status\n\n    def generate_report(self):\n        \"\"\"\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n        summary = self.get_monthly_summary()\n        budget_status = self.check_budget_status()\n\n        report = f\"\"\"\n=== \u5bb6\u8a08\u7c3f\u30ec\u30dd\u30fc\u30c8 ({summary['year']}\u5e74{summary['month']}\u6708) ===\n\u73fe\u5728\u306e\u6b8b\u9ad8: {self.balance:,}\u5186\n\n\u3010\u4eca\u6708\u306e\u53ce\u652f\u3011\n\u53ce\u5165: {summary['income']:,}\u5186\n\u652f\u51fa: {summary['expense']:,}\u5186\n\u5dee\u984d: {summary['net']:,}\u5186\n\n\u3010\u4e88\u7b97\u4f7f\u7528\u72b6\u6cc1\u3011\n\"\"\"\n\n        for category, status in budget_status.items():\n            over_text = \" \u26a0\ufe0f \u4e88\u7b97\u8d85\u904e\" if status[\"over_budget\"] else \"\"\n            report += f\"{category}: {status['spent']:,}\u5186 / {status['budget']:,}\u5186 ({status['percentage']:.1f}%){over_text}\\n\"\n\n        report += f\"\\n\u3010\u6700\u8fd1\u306e\u53d6\u5f15\u5c65\u6b74\u3011\\n\"\n        recent_transactions = sorted(self.transactions, \n                                   key=lambda x: x[\"date\"], \n                                   reverse=True)[:5]\n\n        for transaction in recent_transactions:\n            date_str = transaction[\"date\"].strftime(\"%m/%d\")\n            report += f\"{date_str} {transaction['type']} {transaction['amount']:,}\u5186 ({transaction['category']})\\n\"\n\n        return report\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u76f4\u63a5\u5b9f\u884c\u3055\u308c\u305f\u5834\u5408\u306e\u30c6\u30b9\u30c8\nif __name__ == \"__main__\":\n    # \u5bb6\u8a08\u7c3f\u306e\u4f5c\u6210\n    budget = HouseholdBudget(50000)  # \u521d\u671f\u6b8b\u9ad85\u4e07\u5186\n\n    # \u6708\u9593\u4e88\u7b97\u306e\u8a2d\u5b9a\n    budget.set_monthly_budget(\"\u98df\u8cbb\", 30000)\n    budget.set_monthly_budget(\"\u4ea4\u901a\u8cbb\", 10000)\n    budget.set_monthly_budget(\"\u5a2f\u697d\", 15000)\n\n    # \u53d6\u5f15\u306e\u8ffd\u52a0\n    budget.add_transaction(250000, \"\u7d66\u6599\", \"12\u6708\u5206\u7d66\u6599\")\n    budget.add_transaction(3500, \"\u98df\u8cbb\", \"\u30b9\u30fc\u30d1\u30fc\u3067\u8cb7\u3044\u7269\")\n    budget.add_transaction(580, \"\u4ea4\u901a\u8cbb\", \"\u96fb\u8eca\u4ee3\")\n    budget.add_transaction(1200, \"\u98df\u8cbb\", \"\u663c\u98df\")\n    budget.add_transaction(8000, \"\u5a2f\u697d\", \"\u6620\u753b\u9451\u8cde\")\n    budget.add_transaction(25000, \"\u526f\u696d\", \"\u30d5\u30ea\u30fc\u30e9\u30f3\u30b9\u53ce\u5165\")\n    budget.add_transaction(2800, \"\u98df\u8cbb\", \"\u5915\u98df\u306e\u6750\u6599\")\n\n    # \u30ec\u30dd\u30fc\u30c8\u8868\u793a\n    print(budget.generate_report())\n</code></pre>"},{"location":"chapter12/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u6a5f\u80fd","text":"<pre><code># budget_with_file.py\n\"\"\"\n\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6a5f\u80fd\u4ed8\u304d\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\n\"\"\"\n\nimport datetime\nimport json\nimport os\n\nclass FileBudgetManager:\n    def __init__(self, filename=\"budget_data.json\", initial_balance=0):\n        \"\"\"\u30d5\u30a1\u30a4\u30eb\u4ed8\u304d\u5bb6\u8a08\u7c3f\u306e\u521d\u671f\u5316\"\"\"\n        self.filename = filename\n        self.balance = initial_balance\n        self.transactions = []\n        self.monthly_budget = {}\n        self.categories = {\n            \"income\": [\"\u7d66\u6599\", \"\u526f\u696d\", \"\u305d\u306e\u4ed6\u53ce\u5165\"],\n            \"expense\": [\"\u98df\u8cbb\", \"\u4ea4\u901a\u8cbb\", \"\u5149\u71b1\u8cbb\", \"\u5bb6\u8cc3\", \"\u5a2f\u697d\", \"\u305d\u306e\u4ed6\u652f\u51fa\"]\n        }\n\n        # \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u65e2\u5b58\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\n        self.load_from_file()\n\n    def save_to_file(self):\n        \"\"\"\u30c7\u30fc\u30bf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\"\"\"\n        # \u65e5\u4ed8\u30c7\u30fc\u30bf\u3092JSON\u5bfe\u5fdc\u5f62\u5f0f\u306b\u5909\u63db\n        transactions_for_json = []\n        for transaction in self.transactions:\n            transaction_copy = transaction.copy()\n            transaction_copy[\"date\"] = transaction[\"date\"].isoformat()\n            transactions_for_json.append(transaction_copy)\n\n        data = {\n            \"balance\": self.balance,\n            \"transactions\": transactions_for_json,\n            \"monthly_budget\": self.monthly_budget,\n            \"categories\": self.categories,\n            \"last_updated\": datetime.datetime.now().isoformat()\n        }\n\n        try:\n            with open(self.filename, 'w', encoding='utf-8') as file:\n                json.dump(data, file, ensure_ascii=False, indent=2)\n            return True, f\"\u30c7\u30fc\u30bf\u3092{self.filename}\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\"\n        except Exception as e:\n            return False, f\"\u4fdd\u5b58\u30a8\u30e9\u30fc: {e}\"\n\n    def load_from_file(self):\n        \"\"\"\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\"\"\"\n        if not os.path.exists(self.filename):\n            return False, \"\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\"\n\n        try:\n            with open(self.filename, 'r', encoding='utf-8') as file:\n                data = json.load(file)\n\n            self.balance = data.get(\"balance\", 0)\n            self.monthly_budget = data.get(\"monthly_budget\", {})\n            self.categories = data.get(\"categories\", self.categories)\n\n            # \u53d6\u5f15\u30c7\u30fc\u30bf\u306e\u5fa9\u5143\uff08\u65e5\u4ed8\u3092\u6b63\u3057\u3044\u5f62\u5f0f\u306b\u623b\u3059\uff09\n            self.transactions = []\n            for transaction in data.get(\"transactions\", []):\n                transaction_copy = transaction.copy()\n                transaction_copy[\"date\"] = datetime.datetime.fromisoformat(transaction[\"date\"])\n                self.transactions.append(transaction_copy)\n\n            return True, f\"{self.filename}\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\"\n        except Exception as e:\n            return False, f\"\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc: {e}\"\n\n    def add_transaction(self, amount, category, description=\"\"):\n        \"\"\"\u53d6\u5f15\u3092\u8ffd\u52a0\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\"\"\"\n        if category in self.categories[\"income\"]:\n            transaction_type = \"\u53ce\u5165\"\n            self.balance += amount\n        elif category in self.categories[\"expense\"]:\n            transaction_type = \"\u652f\u51fa\"\n            self.balance -= amount\n        else:\n            return False, f\"\u4e0d\u660e\u306a\u30ab\u30c6\u30b4\u30ea: {category}\"\n\n        transaction = {\n            \"date\": datetime.datetime.now(),\n            \"type\": transaction_type,\n            \"amount\": amount,\n            \"category\": category,\n            \"description\": description,\n            \"balance_after\": self.balance\n        }\n\n        self.transactions.append(transaction)\n\n        # \u30d5\u30a1\u30a4\u30eb\u306b\u81ea\u52d5\u4fdd\u5b58\n        save_success, save_message = self.save_to_file()\n        if save_success:\n            return True, f\"{transaction_type}\u3092\u8a18\u9332\u3057\u307e\u3057\u305f: {amount:,}\u5186\"\n        else:\n            return False, f\"\u53d6\u5f15\u306f\u8a18\u9332\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u4fdd\u5b58\u306b\u5931\u6557: {save_message}\"\n\n    def export_to_csv(self, output_filename=None):\n        \"\"\"\u53d6\u5f15\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\"\"\"\n        if output_filename is None:\n            current_date = datetime.datetime.now().strftime(\"%Y%m%d\")\n            output_filename = f\"budget_export_{current_date}.csv\"\n\n        try:\n            with open(output_filename, 'w', encoding='utf-8') as file:\n                # \u30d8\u30c3\u30c0\u30fc\u884c\n                file.write(\"\u65e5\u4ed8,\u7a2e\u5225,\u91d1\u984d,\u30ab\u30c6\u30b4\u30ea,\u8aac\u660e,\u6b8b\u9ad8\\n\")\n\n                # \u30c7\u30fc\u30bf\u884c\n                for transaction in self.transactions:\n                    date_str = transaction[\"date\"].strftime(\"%Y-%m-%d %H:%M:%S\")\n                    line = f\"{date_str},{transaction['type']},{transaction['amount']},{transaction['category']},{transaction['description']},{transaction['balance_after']}\\n\"\n                    file.write(line)\n\n            return True, f\"CSV\u30d5\u30a1\u30a4\u30eb '{output_filename}' \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\"\n        except Exception as e:\n            return False, f\"\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30a8\u30e9\u30fc: {e}\"\n\n    def backup_data(self, backup_filename=None):\n        \"\"\"\u30c7\u30fc\u30bf\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u4f5c\u6210\"\"\"\n        if backup_filename is None:\n            current_date = datetime.datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n            backup_filename = f\"budget_backup_{current_date}.json\"\n\n        # \u5143\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u4e00\u6642\u7684\u306b\u5909\u66f4\u3057\u3066\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n        original_filename = self.filename\n        self.filename = backup_filename\n        success, message = self.save_to_file()\n        self.filename = original_filename\n\n        return success, message\n\n# \u4f7f\u7528\u4f8b\u3068\u30c6\u30b9\u30c8\nif __name__ == \"__main__\":\n    # \u30d5\u30a1\u30a4\u30eb\u4ed8\u304d\u5bb6\u8a08\u7c3f\u306e\u4f5c\u6210\n    budget = FileBudgetManager(\"my_budget.json\", 50000)\n\n    print(\"=== \u30d5\u30a1\u30a4\u30eb\u4ed8\u304d\u5bb6\u8a08\u7c3f\u30b7\u30b9\u30c6\u30e0 ===\")\n\n    # \u6708\u9593\u4e88\u7b97\u306e\u8a2d\u5b9a\n    budget.monthly_budget[\"\u98df\u8cbb\"] = 30000\n    budget.monthly_budget[\"\u4ea4\u901a\u8cbb\"] = 10000\n    budget.monthly_budget[\"\u5a2f\u697d\"] = 15000\n\n    # \u53d6\u5f15\u306e\u8ffd\u52a0\uff08\u81ea\u52d5\u3067\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3055\u308c\u308b\uff09\n    transactions_to_add = [\n        (250000, \"\u7d66\u6599\", \"12\u6708\u5206\u7d66\u6599\"),\n        (3500, \"\u98df\u8cbb\", \"\u30b9\u30fc\u30d1\u30fc\u3067\u8cb7\u3044\u7269\"),\n        (580, \"\u4ea4\u901a\u8cbb\", \"\u96fb\u8eca\u4ee3\"),\n        (1200, \"\u98df\u8cbb\", \"\u663c\u98df\"),\n        (8000, \"\u5a2f\u697d\", \"\u6620\u753b\u9451\u8cde\"),\n        (25000, \"\u526f\u696d\", \"\u30d5\u30ea\u30fc\u30e9\u30f3\u30b9\u53ce\u5165\"),\n        (2800, \"\u98df\u8cbb\", \"\u5915\u98df\u306e\u6750\u6599\")\n    ]\n\n    for amount, category, description in transactions_to_add:\n        success, message = budget.add_transaction(amount, category, description)\n        print(message)\n\n    # \u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u78ba\u8a8d\n    save_success, save_message = budget.save_to_file()\n    print(f\"\\n{save_message}\")\n\n    # CSV\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n    csv_success, csv_message = budget.export_to_csv()\n    print(csv_message)\n\n    # \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u4f5c\u6210\n    backup_success, backup_message = budget.backup_data()\n    print(backup_message)\n\n    print(f\"\\n\u73fe\u5728\u306e\u6b8b\u9ad8: {budget.balance:,}\u5186\")\n    print(f\"\u53d6\u5f15\u5c65\u6b74\u4ef6\u6570: {len(budget.transactions)}\u4ef6\")\n</code></pre>"},{"location":"chapter12/#_4","title":"\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u6574\u7406\u3057\u3088\u3046","text":""},{"location":"chapter12/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f5c\u6210","text":"<pre><code># math_utils.py\n\"\"\"\n\u6570\u5b66\u8a08\u7b97\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e2\u30b8\u30e5\u30fc\u30eb\n\u5bb6\u8a08\u7c3f\u3067\u4f7f\u7528\u3059\u308b\u8a08\u7b97\u6a5f\u80fd\u3092\u307e\u3068\u3081\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\n\"\"\"\n\nimport math\nfrom typing import List, Tuple, Dict\n\ndef calculate_tax(amount: float, tax_rate: float = 0.1) -&gt; float:\n    \"\"\"\u6d88\u8cbb\u7a0e\u3092\u8a08\u7b97\"\"\"\n    return amount * tax_rate\n\ndef calculate_total_with_tax(amount: float, tax_rate: float = 0.1) -&gt; float:\n    \"\"\"\u7a0e\u8fbc\u307f\u91d1\u984d\u3092\u8a08\u7b97\"\"\"\n    return amount + calculate_tax(amount, tax_rate)\n\ndef calculate_percentage(part: float, whole: float) -&gt; float:\n    \"\"\"\u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u3092\u8a08\u7b97\"\"\"\n    if whole == 0:\n        return 0\n    return (part / whole) * 100\n\ndef calculate_average(numbers: List[float]) -&gt; float:\n    \"\"\"\u5e73\u5747\u5024\u3092\u8a08\u7b97\"\"\"\n    if not numbers:\n        return 0\n    return sum(numbers) / len(numbers)\n\ndef calculate_median(numbers: List[float]) -&gt; float:\n    \"\"\"\u4e2d\u592e\u5024\u3092\u8a08\u7b97\"\"\"\n    if not numbers:\n        return 0\n\n    sorted_numbers = sorted(numbers)\n    n = len(sorted_numbers)\n\n    if n % 2 == 0:\n        # \u5076\u6570\u500b\u306e\u5834\u5408\u306f\u4e2d\u592e2\u3064\u306e\u5e73\u5747\n        return (sorted_numbers[n//2 - 1] + sorted_numbers[n//2]) / 2\n    else:\n        # \u5947\u6570\u500b\u306e\u5834\u5408\u306f\u4e2d\u592e\u5024\n        return sorted_numbers[n//2]\n\ndef calculate_standard_deviation(numbers: List[float]) -&gt; float:\n    \"\"\"\u6a19\u6e96\u504f\u5dee\u3092\u8a08\u7b97\"\"\"\n    if len(numbers) &lt; 2:\n        return 0\n\n    average = calculate_average(numbers)\n    variance = sum((x - average) ** 2 for x in numbers) / (len(numbers) - 1)\n    return math.sqrt(variance)\n\ndef calculate_compound_interest(principal: float, rate: float, years: int) -&gt; float:\n    \"\"\"\u8907\u5229\u8a08\u7b97\"\"\"\n    return principal * (1 + rate) ** years\n\ndef calculate_loan_payment(principal: float, annual_rate: float, years: int) -&gt; float:\n    \"\"\"\u30ed\u30fc\u30f3\u306e\u6708\u984d\u8fd4\u6e08\u984d\u3092\u8a08\u7b97\"\"\"\n    monthly_rate = annual_rate / 12\n    num_payments = years * 12\n\n    if monthly_rate == 0:\n        return principal / num_payments\n\n    return principal * (monthly_rate * (1 + monthly_rate) ** num_payments) / \\\n           ((1 + monthly_rate) ** num_payments - 1)\n\nclass BudgetCalculator:\n    \"\"\"\u5bb6\u8a08\u7c3f\u8a08\u7b97\u5c02\u7528\u30af\u30e9\u30b9\"\"\"\n\n    @staticmethod\n    def calculate_savings_goal(current_amount: float, target_amount: float, \n                             monthly_savings: float) -&gt; Dict:\n        \"\"\"\u8caf\u91d1\u76ee\u6a19\u306e\u8a08\u7b97\"\"\"\n        if monthly_savings &lt;= 0:\n            return {\"error\": \"\u6708\u9593\u8caf\u91d1\u984d\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"}\n\n        remaining = target_amount - current_amount\n        if remaining &lt;= 0:\n            return {\n                \"months_needed\": 0,\n                \"already_achieved\": True,\n                \"excess_amount\": abs(remaining)\n            }\n\n        months_needed = math.ceil(remaining / monthly_savings)\n        return {\n            \"months_needed\": months_needed,\n            \"years_and_months\": (months_needed // 12, months_needed % 12),\n            \"total_savings_needed\": remaining,\n            \"already_achieved\": False\n        }\n\n    @staticmethod\n    def calculate_budget_allocation(income: float, allocation_ratios: Dict[str, float]) -&gt; Dict:\n        \"\"\"\u4e88\u7b97\u914d\u5206\u306e\u8a08\u7b97\"\"\"\n        if sum(allocation_ratios.values()) != 1.0:\n            return {\"error\": \"\u914d\u5206\u6bd4\u7387\u306e\u5408\u8a08\u306f1.0\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"}\n\n        allocation = {}\n        for category, ratio in allocation_ratios.items():\n            allocation[category] = income * ratio\n\n        return allocation\n\n    @staticmethod\n    def analyze_spending_pattern(transactions: List[Dict]) -&gt; Dict:\n        \"\"\"\u652f\u51fa\u30d1\u30bf\u30fc\u30f3\u306e\u5206\u6790\"\"\"\n        if not transactions:\n            return {\"error\": \"\u53d6\u5f15\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093\"}\n\n        # \u30ab\u30c6\u30b4\u30ea\u5225\u96c6\u8a08\n        category_totals = {}\n        monthly_totals = {}\n\n        for transaction in transactions:\n            if transaction[\"type\"] == \"\u652f\u51fa\":\n                category = transaction[\"category\"]\n                amount = transaction[\"amount\"]\n                date = transaction[\"date\"]\n                month_key = f\"{date.year}-{date.month:02d}\"\n\n                # \u30ab\u30c6\u30b4\u30ea\u5225\u96c6\u8a08\n                category_totals[category] = category_totals.get(category, 0) + amount\n\n                # \u6708\u5225\u96c6\u8a08\n                monthly_totals[month_key] = monthly_totals.get(month_key, 0) + amount\n\n        total_spending = sum(category_totals.values())\n\n        # \u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u8a08\u7b97\n        category_percentages = {}\n        for category, amount in category_totals.items():\n            category_percentages[category] = calculate_percentage(amount, total_spending)\n\n        return {\n            \"total_spending\": total_spending,\n            \"category_totals\": category_totals,\n            \"category_percentages\": category_percentages,\n            \"monthly_totals\": monthly_totals,\n            \"average_monthly_spending\": calculate_average(list(monthly_totals.values()))\n        }\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u30c6\u30b9\u30c8\nif __name__ == \"__main__\":\n    print(\"=== \u6570\u5b66\u8a08\u7b97\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u306e\u30c6\u30b9\u30c8 ===\")\n\n    # \u57fa\u672c\u8a08\u7b97\u306e\u30c6\u30b9\u30c8\n    price = 1000\n    tax = calculate_tax(price)\n    total = calculate_total_with_tax(price)\n    print(f\"\u4fa1\u683c: {price}\u5186, \u6d88\u8cbb\u7a0e: {tax}\u5186, \u7a0e\u8fbc\u307f: {total}\u5186\")\n\n    # \u7d71\u8a08\u8a08\u7b97\u306e\u30c6\u30b9\u30c8\n    test_numbers = [100, 200, 150, 300, 250]\n    print(f\"\\\\n\u6570\u5024: {test_numbers}\")\n    print(f\"\u5e73\u5747: {calculate_average(test_numbers):.2f}\")\n    print(f\"\u4e2d\u592e\u5024: {calculate_median(test_numbers):.2f}\")\n    print(f\"\u6a19\u6e96\u504f\u5dee: {calculate_standard_deviation(test_numbers):.2f}\")\n\n    # \u8907\u5229\u8a08\u7b97\u306e\u30c6\u30b9\u30c8\n    principal = 100000\n    rate = 0.03\n    years = 5\n    future_value = calculate_compound_interest(principal, rate, years)\n    print(f\"\\\\n\u8907\u5229\u8a08\u7b97: {principal:,}\u5186\u3092\u5e74\u5229{rate:.1%}\u3067{years}\u5e74\u904b\u7528 \u2192 {future_value:,.0f}\u5186\")\n\n    # \u5bb6\u8a08\u7c3f\u8a08\u7b97\u306e\u30c6\u30b9\u30c8\n    print(\"\\\\n=== \u5bb6\u8a08\u7c3f\u8a08\u7b97\u306e\u30c6\u30b9\u30c8 ===\")\n\n    # \u8caf\u91d1\u76ee\u6a19\n    goal_result = BudgetCalculator.calculate_savings_goal(50000, 500000, 30000)\n    print(f\"\u8caf\u91d1\u76ee\u6a19: {goal_result}\")\n\n    # \u4e88\u7b97\u914d\u5206\n    allocation_ratios = {\n        \"\u751f\u6d3b\u8cbb\": 0.6,\n        \"\u8caf\u91d1\": 0.2,\n        \"\u5a2f\u697d\": 0.1,\n        \"\u6295\u8cc7\": 0.1\n    }\n    allocation = BudgetCalculator.calculate_budget_allocation(300000, allocation_ratios)\n    print(f\"\u4e88\u7b97\u914d\u5206: {allocation}\")\n</code></pre>"},{"location":"chapter12/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528","text":"<pre><code># main_budget_app.py\n\"\"\"\n\u30e1\u30a4\u30f3\u5bb6\u8a08\u7c3f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\u4f5c\u6210\u3057\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u5b8c\u5168\u306a\u5bb6\u8a08\u7c3f\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\n\"\"\"\n\n# \u81ea\u4f5c\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom budget_with_file import FileBudgetManager\nfrom math_utils import BudgetCalculator, calculate_percentage, calculate_average\n\nimport datetime\nfrom typing import Dict, List\n\nclass AdvancedBudgetApp:\n    def __init__(self, data_filename=\"advanced_budget.json\"):\n        \"\"\"\u9ad8\u5ea6\u306a\u5bb6\u8a08\u7c3f\u30a2\u30d7\u30ea\u306e\u521d\u671f\u5316\"\"\"\n        self.budget_manager = FileBudgetManager(data_filename)\n        self.calculator = BudgetCalculator()\n\n    def setup_recommended_budget(self, monthly_income: float) -&gt; Dict:\n        \"\"\"\u63a8\u5968\u4e88\u7b97\u914d\u5206\u306e\u8a2d\u5b9a\uff0850/30/20\u30eb\u30fc\u30eb\uff09\"\"\"\n        recommended_allocation = {\n            \"\u5fc5\u9700\u54c1\": 0.50,  # \u5bb6\u8cc3\u3001\u98df\u8cbb\u3001\u5149\u71b1\u8cbb\u306a\u3069\n            \"\u5a2f\u697d\": 0.30,    # \u5916\u98df\u3001\u8da3\u5473\u306a\u3069\n            \"\u8caf\u91d1\": 0.20     # \u8caf\u91d1\u3001\u6295\u8cc7\u306a\u3069\n        }\n\n        allocation = self.calculator.calculate_budget_allocation(\n            monthly_income, recommended_allocation\n        )\n\n        if \"error\" in allocation:\n            return allocation\n\n        # \u8a73\u7d30\u306a\u30ab\u30c6\u30b4\u30ea\u5225\u4e88\u7b97\u8a2d\u5b9a\n        detailed_budget = {\n            # \u5fc5\u9700\u54c1\u30ab\u30c6\u30b4\u30ea\n            \"\u5bb6\u8cc3\": allocation[\"\u5fc5\u9700\u54c1\"] * 0.4,\n            \"\u98df\u8cbb\": allocation[\"\u5fc5\u9700\u54c1\"] * 0.3,\n            \"\u5149\u71b1\u8cbb\": allocation[\"\u5fc5\u9700\u54c1\"] * 0.15,\n            \"\u4ea4\u901a\u8cbb\": allocation[\"\u5fc5\u9700\u54c1\"] * 0.15,\n\n            # \u5a2f\u697d\u30ab\u30c6\u30b4\u30ea\n            \"\u5a2f\u697d\": allocation[\"\u5a2f\u697d\"],\n\n            # \u8caf\u91d1\u30ab\u30c6\u30b4\u30ea\n            \"\u8caf\u91d1\": allocation[\"\u8caf\u91d1\"]\n        }\n\n        # \u4e88\u7b97\u3092\u30b7\u30b9\u30c6\u30e0\u306b\u8a2d\u5b9a\n        for category, amount in detailed_budget.items():\n            if category != \"\u8caf\u91d1\":  # \u8caf\u91d1\u306f\u652f\u51fa\u30ab\u30c6\u30b4\u30ea\u3067\u306f\u306a\u3044\n                self.budget_manager.monthly_budget[category] = amount\n\n        return {\n            \"monthly_income\": monthly_income,\n            \"allocation\": allocation,\n            \"detailed_budget\": detailed_budget,\n            \"setup_complete\": True\n        }\n\n    def analyze_financial_health(self) -&gt; Dict:\n        \"\"\"\u5bb6\u8a08\u306e\u5065\u5eb7\u72b6\u614b\u3092\u5206\u6790\"\"\"\n        current_summary = self.budget_manager.get_monthly_summary()\n        spending_analysis = self.calculator.analyze_spending_pattern(\n            self.budget_manager.transactions\n        )\n\n        # \u53ce\u652f\u30d0\u30e9\u30f3\u30b9\u306e\u8a55\u4fa1\n        income = current_summary[\"income\"]\n        expense = current_summary[\"expense\"]\n        savings_rate = (current_summary[\"net\"] / income * 100) if income &gt; 0 else 0\n\n        # \u5065\u5eb7\u5ea6\u306e\u5224\u5b9a\n        if savings_rate &gt;= 20:\n            health_status = \"\u512a\u79c0\"\n            health_color = \"\ud83d\udfe2\"\n        elif savings_rate &gt;= 10:\n            health_status = \"\u826f\u597d\"\n            health_color = \"\ud83d\udfe1\"\n        elif savings_rate &gt;= 0:\n            health_status = \"\u8981\u6ce8\u610f\"\n            health_color = \"\ud83d\udfe0\"\n        else:\n            health_status = \"\u5371\u967a\"\n            health_color = \"\ud83d\udd34\"\n\n        return {\n            \"health_status\": health_status,\n            \"health_color\": health_color,\n            \"savings_rate\": savings_rate,\n            \"monthly_summary\": current_summary,\n            \"spending_analysis\": spending_analysis,\n            \"recommendations\": self._generate_recommendations(savings_rate, spending_analysis)\n        }\n\n    def _generate_recommendations(self, savings_rate: float, spending_analysis: Dict) -&gt; List[str]:\n        \"\"\"\u5bb6\u8a08\u6539\u5584\u306e\u63a8\u5968\u4e8b\u9805\u3092\u751f\u6210\"\"\"\n        recommendations = []\n\n        if savings_rate &lt; 10:\n            recommendations.append(\"\u8caf\u91d1\u7387\u304c\u4f4e\u3044\u3067\u3059\u3002\u652f\u51fa\u3092\u898b\u76f4\u3057\u3066\u6700\u4f4e\u3067\u3082\u53ce\u5165\u306e10%\u306f\u8caf\u91d1\u3057\u307e\u3057\u3087\u3046\u3002\")\n\n        if \"category_percentages\" in spending_analysis:\n            percentages = spending_analysis[\"category_percentages\"]\n\n            if percentages.get(\"\u98df\u8cbb\", 0) &gt; 30:\n                recommendations.append(\"\u98df\u8cbb\u306e\u5272\u5408\u304c\u9ad8\u3044\u3067\u3059\u3002\u5916\u98df\u3092\u63a7\u3048\u3066\u81ea\u708a\u3092\u5897\u3084\u3059\u3053\u3068\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\")\n\n            if percentages.get(\"\u5a2f\u697d\", 0) &gt; 20:\n                recommendations.append(\"\u5a2f\u697d\u8cbb\u306e\u5272\u5408\u304c\u9ad8\u3044\u3067\u3059\u3002\u6708\u9593\u4e88\u7b97\u3092\u8a2d\u5b9a\u3057\u3066\u7ba1\u7406\u3057\u307e\u3057\u3087\u3046\u3002\")\n\n        if not recommendations:\n            recommendations.append(\"\u5bb6\u8a08\u7ba1\u7406\u304c\u826f\u597d\u3067\u3059\uff01\u3053\u306e\u8abf\u5b50\u3067\u7d99\u7d9a\u3057\u307e\u3057\u3087\u3046\u3002\")\n\n        return recommendations\n\n    def plan_savings_goal(self, target_amount: float, target_months: int = None) -&gt; Dict:\n        \"\"\"\u8caf\u91d1\u76ee\u6a19\u306e\u8a08\u753b\"\"\"\n        current_balance = self.budget_manager.balance\n\n        if target_months:\n            # \u671f\u9650\u6307\u5b9a\u306e\u5834\u5408\n            monthly_savings_needed = (target_amount - current_balance) / target_months\n            result = {\n                \"target_amount\": target_amount,\n                \"current_balance\": current_balance,\n                \"target_months\": target_months,\n                \"monthly_savings_needed\": monthly_savings_needed,\n                \"plan_type\": \"\u671f\u9650\u6307\u5b9a\"\n            }\n        else:\n            # \u73fe\u5728\u306e\u53ce\u652f\u304b\u3089\u63a8\u5b9a\n            recent_summary = self.budget_manager.get_monthly_summary()\n            estimated_monthly_savings = recent_summary[\"net\"]\n\n            if estimated_monthly_savings &lt;= 0:\n                return {\"error\": \"\u73fe\u5728\u306e\u53ce\u652f\u3067\u306f\u8caf\u91d1\u3067\u304d\u307e\u305b\u3093\u3002\u652f\u51fa\u3092\u898b\u76f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\"}\n\n            result = self.calculator.calculate_savings_goal(\n                current_balance, target_amount, estimated_monthly_savings\n            )\n            result.update({\n                \"target_amount\": target_amount,\n                \"current_balance\": current_balance,\n                \"estimated_monthly_savings\": estimated_monthly_savings,\n                \"plan_type\": \"\u73fe\u5728\u306e\u53ce\u652f\u30d9\u30fc\u30b9\"\n            })\n\n        return result\n\n    def generate_comprehensive_report(self) -&gt; str:\n        \"\"\"\u7dcf\u5408\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\"\"\"\n        health_analysis = self.analyze_financial_health()\n        budget_status = self.budget_manager.check_budget_status()\n\n        report = f\"\"\"\n=== \u7dcf\u5408\u5bb6\u8a08\u30ec\u30dd\u30fc\u30c8 ===\n\u751f\u6210\u65e5\u6642: {datetime.datetime.now().strftime('%Y\u5e74%m\u6708%d\u65e5 %H:%M')}\n\n\u3010\u5bb6\u8a08\u5065\u5eb7\u5ea6\u3011 {health_analysis['health_color']} {health_analysis['health_status']}\n\u8caf\u91d1\u7387: {health_analysis['savings_rate']:.1f}%\n\u73fe\u5728\u306e\u6b8b\u9ad8: {self.budget_manager.balance:,}\u5186\n\n\u3010\u4eca\u6708\u306e\u53ce\u652f\u3011\n\u53ce\u5165: {health_analysis['monthly_summary']['income']:,}\u5186\n\u652f\u51fa: {health_analysis['monthly_summary']['expense']:,}\u5186\n\u53ce\u652f: {health_analysis['monthly_summary']['net']:,}\u5186\n\n\u3010\u30ab\u30c6\u30b4\u30ea\u5225\u652f\u51fa\u5206\u6790\u3011\n\"\"\"\n\n        if \"category_percentages\" in health_analysis['spending_analysis']:\n            for category, percentage in health_analysis['spending_analysis']['category_percentages'].items():\n                amount = health_analysis['spending_analysis']['category_totals'][category]\n                report += f\"{category}: {amount:,}\u5186 ({percentage:.1f}%)\\n\"\n\n        report += \"\\n\u3010\u4e88\u7b97\u4f7f\u7528\u72b6\u6cc1\u3011\\n\"\n        for category, status in budget_status.items():\n            over_text = \" \u26a0\ufe0f \u4e88\u7b97\u8d85\u904e\" if status[\"over_budget\"] else \"\"\n            report += f\"{category}: {status['spent']:,}\u5186 / {status['budget']:,}\u5186 ({status['percentage']:.1f}%){over_text}\\n\"\n\n        report += \"\\n\u3010\u6539\u5584\u63a8\u5968\u4e8b\u9805\u3011\\n\"\n        for i, recommendation in enumerate(health_analysis['recommendations'], 1):\n            report += f\"{i}. {recommendation}\\n\"\n\n        return report\n\n# \u4f7f\u7528\u4f8b\u3068\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\nif __name__ == \"__main__\":\n    print(\"=== \u9ad8\u5ea6\u306a\u5bb6\u8a08\u7c3f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 ===\")\n\n    # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u521d\u671f\u5316\n    app = AdvancedBudgetApp(\"demo_budget.json\")\n\n    # \u63a8\u5968\u4e88\u7b97\u306e\u8a2d\u5b9a\uff08\u6708\u53ce30\u4e07\u5186\u306e\u5834\u5408\uff09\n    monthly_income = 300000\n    budget_setup = app.setup_recommended_budget(monthly_income)\n    print(f\"\u6708\u53ce {monthly_income:,}\u5186\u3067\u306e\u63a8\u5968\u4e88\u7b97\u8a2d\u5b9a\u5b8c\u4e86\")\n\n    # \u30b5\u30f3\u30d7\u30eb\u53d6\u5f15\u30c7\u30fc\u30bf\u306e\u8ffd\u52a0\n    sample_transactions = [\n        (300000, \"\u7d66\u6599\", \"12\u6708\u5206\u7d66\u6599\"),\n        (80000, \"\u5bb6\u8cc3\", \"12\u6708\u5206\u5bb6\u8cc3\"),\n        (25000, \"\u98df\u8cbb\", \"\u98df\u6750\u8cbb\"),\n        (15000, \"\u98df\u8cbb\", \"\u5916\u98df\u8cbb\"),\n        (8000, \"\u5149\u71b1\u8cbb\", \"\u96fb\u6c17\u4ee3\"),\n        (5000, \"\u4ea4\u901a\u8cbb\", \"\u5b9a\u671f\u5238\"),\n        (12000, \"\u5a2f\u697d\", \"\u6620\u753b\u30fb\u672c\"),\n        (30000, \"\u526f\u696d\", \"\u30d5\u30ea\u30fc\u30e9\u30f3\u30b9\"),\n        (3500, \"\u98df\u8cbb\", \"\u30b3\u30f3\u30d3\u30cb\"),\n        (6000, \"\u5a2f\u697d\", \"\u53cb\u4eba\u3068\u306e\u98df\u4e8b\")\n    ]\n\n    print(\"\\n\u30b5\u30f3\u30d7\u30eb\u53d6\u5f15\u3092\u8ffd\u52a0\u4e2d...\")\n    for amount, category, description in sample_transactions:\n        success, message = app.budget_manager.add_transaction(amount, category, description)\n        if not success:\n            print(f\"\u30a8\u30e9\u30fc: {message}\")\n\n    # \u5bb6\u8a08\u5065\u5eb7\u5ea6\u306e\u5206\u6790\n    health_analysis = app.analyze_financial_health()\n    print(f\"\\n\u5bb6\u8a08\u5065\u5eb7\u5ea6: {health_analysis['health_color']} {health_analysis['health_status']}\")\n    print(f\"\u8caf\u91d1\u7387: {health_analysis['savings_rate']:.1f}%\")\n\n    # \u8caf\u91d1\u76ee\u6a19\u306e\u8a08\u753b\n    savings_goal = app.plan_savings_goal(1000000)  # 100\u4e07\u5186\u76ee\u6a19\n    if \"error\" not in savings_goal:\n        print(f\"\\n\u8caf\u91d1\u76ee\u6a19: {savings_goal['months_needed']}\u30f6\u6708\u3067\u9054\u6210\u4e88\u5b9a\")\n\n    # \u7dcf\u5408\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\n    comprehensive_report = app.generate_comprehensive_report()\n    print(comprehensive_report)\n\n    # \u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3068\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n    app.budget_manager.save_to_file()\n    app.budget_manager.backup_data()\n    app.budget_manager.export_to_csv()\n\n    print(\"\\n\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3001CSV\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3002\")\n</code></pre>"},{"location":"chapter12/#_5","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u6982\u5ff5","text":""},{"location":"chapter12/#5","title":"\u30b9\u30c6\u30c3\u30d75\uff1a\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u6574\u7406","text":"<pre><code>budget_system/\n\u251c\u2500\u2500 __init__.py              # \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u521d\u671f\u5316\u30d5\u30a1\u30a4\u30eb\n\u251c\u2500\u2500 core/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 budget_manager.py    # \u57fa\u672c\u7684\u306a\u5bb6\u8a08\u7c3f\u7ba1\u7406\u6a5f\u80fd\n\u2502   \u2514\u2500\u2500 file_operations.py   # \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u6a5f\u80fd\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 math_utils.py       # \u6570\u5b66\u8a08\u7b97\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\u2502   \u2514\u2500\u2500 date_utils.py       # \u65e5\u4ed8\u64cd\u4f5c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\u2514\u2500\u2500 apps/\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 cli_app.py          # \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u7248\u30a2\u30d7\u30ea\n    \u2514\u2500\u2500 gui_app.py          # GUI\u7248\u30a2\u30d7\u30ea\uff08\u5c06\u6765\u7528\uff09\n</code></pre> <pre><code># budget_system/__init__.py\n\"\"\"\n\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u30d1\u30c3\u30b1\u30fc\u30b8\n\"\"\"\n\nfrom .core.budget_manager import BudgetManager\nfrom .core.file_operations import FileOperations\nfrom .utils.math_utils import BudgetCalculator\nfrom .apps.cli_app import BudgetApp\n\n__version__ = \"1.0.0\"\n__author__ = \"Python\u5b66\u7fd2\u8005\"\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u30ec\u30d9\u30eb\u3067\u7c21\u5358\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30af\u30e9\u30b9\nBudget = BudgetManager\nCalculator = BudgetCalculator\nApp = BudgetApp\n\n# \u4f7f\u3044\u3084\u3059\u3044\u95a2\u6570\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\ndef create_budget(filename=None):\n    \"\"\"\u65b0\u3057\u3044\u5bb6\u8a08\u7c3f\u3092\u4f5c\u6210\"\"\"\n    return BudgetManager(filename)\n\ndef load_budget(filename):\n    \"\"\"\u65e2\u5b58\u306e\u5bb6\u8a08\u7c3f\u3092\u8aad\u307f\u8fbc\u307f\"\"\"\n    budget = BudgetManager(filename)\n    budget.load_from_file()\n    return budget\n</code></pre> <pre><code># budget_system/utils/date_utils.py\n\"\"\"\n\u65e5\u4ed8\u64cd\u4f5c\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n\"\"\"\n\nimport datetime\nfrom typing import List, Tuple\n\ndef get_month_range(year: int, month: int) -&gt; Tuple[datetime.datetime, datetime.datetime]:\n    \"\"\"\u6307\u5b9a\u3057\u305f\u6708\u306e\u958b\u59cb\u65e5\u3068\u7d42\u4e86\u65e5\u3092\u53d6\u5f97\"\"\"\n    start_date = datetime.datetime(year, month, 1)\n\n    if month == 12:\n        end_date = datetime.datetime(year + 1, 1, 1) - datetime.timedelta(days=1)\n    else:\n        end_date = datetime.datetime(year, month + 1, 1) - datetime.timedelta(days=1)\n\n    return start_date, end_date\n\ndef get_weekday_name(date: datetime.datetime) -&gt; str:\n    \"\"\"\u66dc\u65e5\u540d\u3092\u53d6\u5f97\uff08\u65e5\u672c\u8a9e\uff09\"\"\"\n    weekdays = [\"\u6708\", \"\u706b\", \"\u6c34\", \"\u6728\", \"\u91d1\", \"\u571f\", \"\u65e5\"]\n    return weekdays[date.weekday()]\n\ndef format_date_japanese(date: datetime.datetime) -&gt; str:\n    \"\"\"\u65e5\u672c\u8a9e\u5f62\u5f0f\u3067\u65e5\u4ed8\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\"\"\"\n    weekday = get_weekday_name(date)\n    return f\"{date.year}\u5e74{date.month}\u6708{date.day}\u65e5({weekday})\"\n\ndef get_business_days_in_month(year: int, month: int) -&gt; int:\n    \"\"\"\u6307\u5b9a\u3057\u305f\u6708\u306e\u55b6\u696d\u65e5\u6570\u3092\u53d6\u5f97\"\"\"\n    start_date, end_date = get_month_range(year, month)\n\n    business_days = 0\n    current_date = start_date\n\n    while current_date &lt;= end_date:\n        # \u6708\u66dc\u65e5=0, \u65e5\u66dc\u65e5=6\n        if current_date.weekday() &lt; 5:  # \u5e73\u65e5\n            business_days += 1\n        current_date += datetime.timedelta(days=1)\n\n    return business_days\n\ndef get_payday_dates(year: int, payday: int = 25) -&gt; List[datetime.datetime]:\n    \"\"\"\u5e74\u9593\u306e\u7d66\u6599\u65e5\u4e00\u89a7\u3092\u53d6\u5f97\"\"\"\n    paydays = []\n\n    for month in range(1, 13):\n        try:\n            payday_date = datetime.datetime(year, month, payday)\n\n            # \u571f\u65e5\u306e\u5834\u5408\u306f\u524d\u55b6\u696d\u65e5\u306b\u8abf\u6574\n            while payday_date.weekday() &gt;= 5:  # \u571f\u65e5\n                payday_date -= datetime.timedelta(days=1)\n\n            paydays.append(payday_date)\n        except ValueError:\n            # \u6708\u306b\u8a72\u5f53\u65e5\u304c\u306a\u3044\u5834\u5408\uff082\u670830\u65e5\u306a\u3069\uff09\u306f\u6708\u672b\n            if month == 2:\n                last_day = 28 if year % 4 != 0 else 29\n            elif month in [4, 6, 9, 11]:\n                last_day = 30\n            else:\n                last_day = 31\n\n            payday_date = datetime.datetime(year, month, last_day)\n            paydays.append(payday_date)\n\n    return paydays\n\n# \u4f7f\u7528\u4f8b\nif __name__ == \"__main__\":\n    print(\"=== \u65e5\u4ed8\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u306e\u30c6\u30b9\u30c8 ===\")\n\n    # \u4eca\u6708\u306e\u7bc4\u56f2\n    now = datetime.datetime.now()\n    start, end = get_month_range(now.year, now.month)\n    print(f\"\u4eca\u6708\u306e\u7bc4\u56f2: {format_date_japanese(start)} \uff5e {format_date_japanese(end)}\")\n\n    # \u55b6\u696d\u65e5\u6570\n    business_days = get_business_days_in_month(now.year, now.month)\n    print(f\"\u4eca\u6708\u306e\u55b6\u696d\u65e5\u6570: {business_days}\u65e5\")\n\n    # \u4eca\u5e74\u306e\u7d66\u6599\u65e5\n    paydays = get_payday_dates(now.year)\n    print(f\"\u4eca\u5e74\u306e\u7d66\u6599\u65e5\uff08\u6700\u521d\u306e3\u56de\uff09:\")\n    for payday in paydays[:3]:\n        print(f\"  {format_date_japanese(payday)}\")\n</code></pre>"},{"location":"chapter12/#_6","title":"\u307e\u3068\u3081\uff1a\u30d5\u30a1\u30a4\u30eb\u3068\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter12/#_7","title":"\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u5229\u70b9","text":"<ul> <li>\u6c38\u7d9a\u6027\uff1a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\u3057\u3066\u3082\u30c7\u30fc\u30bf\u304c\u6b8b\u308b</li> <li>\u518d\u5229\u7528\u6027\uff1a\u4f55\u5ea6\u3067\u3082\u5b9f\u884c\u3067\u304d\u308b</li> <li>\u5171\u6709\u6027\uff1a\u4ed6\u306e\u4eba\u3068\u7c21\u5358\u306b\u5171\u6709\u3067\u304d\u308b</li> <li>\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\uff1a\u30c7\u30fc\u30bf\u3092\u5b89\u5168\u306b\u4fdd\u7ba1\u3067\u304d\u308b</li> </ul>"},{"location":"chapter12/#_8","title":"\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5229\u70b9","text":"<ul> <li>\u5206\u96e2\uff1a\u6a5f\u80fd\u3054\u3068\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u5206\u3051\u3066\u6574\u7406</li> <li>\u518d\u5229\u7528\uff1a\u4ed6\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u3082\u4f7f\u3048\u308b</li> <li>\u4fdd\u5b88\u6027\uff1a\u4fee\u6b63\u3084\u6539\u826f\u304c\u7c21\u5358</li> <li>\u5354\u696d\uff1a\u30c1\u30fc\u30e0\u3067\u306e\u958b\u767a\u304c\u3057\u3084\u3059\u3044</li> </ul>"},{"location":"chapter12/#_9","title":"\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u5229\u70b9","text":"<ul> <li>\u6574\u7406\uff1a\u95a2\u9023\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u307e\u3068\u3081\u3066\u7ba1\u7406</li> <li>\u540d\u524d\u7a7a\u9593\uff1a\u540d\u524d\u306e\u885d\u7a81\u3092\u907f\u3051\u3089\u308c\u308b</li> <li>\u914d\u5e03\uff1a\u30b7\u30b9\u30c6\u30e0\u5168\u4f53\u3092\u4e00\u3064\u306e\u5358\u4f4d\u3068\u3057\u3066\u914d\u5e03</li> </ul>"},{"location":"chapter12/#_10","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528","text":"<ul> <li>\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u5b8c\u5168\u7248</li> <li>\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f5c\u6210</li> <li>\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u3068\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316</li> <li>\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u306b\u3088\u308b\u4fdd\u5b88\u6027\u5411\u4e0a</li> <li>\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u306b\u3088\u308b\u518d\u5229\u7528\u6027\u5411\u4e0a</li> </ul>"},{"location":"chapter12/#_11","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u4ed8\u304d\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\ntry:\n    with open(filename, 'r', encoding='utf-8') as file:\n        data = json.load(file)\nexcept FileNotFoundError:\n    print(f\"\u30d5\u30a1\u30a4\u30eb {filename} \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\nexcept json.JSONDecodeError:\n    print(\"\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\")\nexcept Exception as e:\n    print(f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\")\n</code></pre> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u4f8b\u5916\u51e6\u7406\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u5b66\u3073\u307e\u3059\u3002\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3068\u304d\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u306a\u3044\u3088\u3046\u9069\u5207\u306b\u5bfe\u51e6\u3059\u308b\u65b9\u6cd5\u3092\u3001\u5b9f\u8df5\u7684\u306a\u4f8b\u3092\u901a\u3058\u3066\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c12\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c12\u7ae0\u3067\u306fPython\u30d5\u30a1\u30a4\u30eb\uff08.py\uff09\u306e\u6982\u5ff5\u304b\u3089\u59cb\u307e\u308a\u3001\u5b9f\u7528\u7684\u306a\u5bb6\u8a08\u7c3f\u7ba1\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u7fd2\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u306b\u3088\u308b\u6a5f\u80fd\u5206\u96e2\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3088\u308b\u6574\u7406\u307e\u3067\u6bb5\u968e\u7684\u306b\u69cb\u7bc9\u3002\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3001\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u3001\u65e5\u4ed8\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u306a\u3069\u5b9f\u7528\u7684\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3001\u6700\u7d42\u7684\u306b\u7dcf\u5408\u7684\u306a\u5bb6\u8a08\u7c3f\u30b7\u30b9\u30c6\u30e0\u3068\u3057\u3066\u7d71\u5408\u3002\u6b21\u306f\u7b2c13\u7ae0\u306e\u4f8b\u5916\u51e6\u7406\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter13/","title":"\u7b2c13\u7ae0\uff1a\u30a8\u30e9\u30fc\u3068\u4e0a\u624b\u306b\u4ed8\u304d\u5408\u304a\u3046","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u3068\u3001\u5fc5\u305a\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u3067\u304d\u306a\u3044\u3001\u30e6\u30fc\u30b6\u30fc\u304c\u4e88\u671f\u3057\u306a\u3044\u5024\u3092\u5165\u529b\u3059\u308b\u306a\u3069\u3001\u69d8\u3005\u306a\u554f\u984c\u304c\u8d77\u3053\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u3063\u3066\u30a8\u30e9\u30fc\u306b\u9069\u5207\u306b\u5bfe\u51e6\u3057\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7a81\u7136\u505c\u6b62\u3057\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3059\u3002\u9280\u884cATM\u30b7\u30b9\u30c6\u30e0\u3084\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u5b89\u5168\u3067\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u65b9\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter13/#_1","title":"\u30a8\u30e9\u30fc\u3063\u3066\u306a\u306b\uff1f\u306a\u305c\u8d77\u3053\u308b\uff1f","text":""},{"location":"chapter13/#_2","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8d77\u3053\u308b\u30a8\u30e9\u30fc\u306e\u7a2e\u985e","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30a8\u30e9\u30fc\u306f\u3001\u73fe\u5b9f\u4e16\u754c\u306e\u300c\u4e88\u671f\u3057\u306a\u3044\u51fa\u6765\u4e8b\u300d\u3068\u540c\u3058\u3067\u3059\uff1a</p> <p>\u73fe\u5b9f\u4e16\u754c\u306e\u4f8b\uff1a - ATM\u3067\u304a\u91d1\u3092\u5f15\u304d\u51fa\u305d\u3046\u3068\u3057\u305f\u3089\u6b8b\u9ad8\u4e0d\u8db3\u3060\u3063\u305f - \u96fb\u8eca\u306b\u4e57\u308d\u3046\u3068\u3057\u305f\u3089\u904b\u884c\u505c\u6b62\u3057\u3066\u3044\u305f - \u30ec\u30b9\u30c8\u30e9\u30f3\u3067\u6ce8\u6587\u3057\u305f\u6599\u7406\u304c\u58f2\u308a\u5207\u308c\u3060\u3063\u305f</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\uff1a - \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3053\u3046\u3068\u3057\u305f\u3089\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u306a\u304b\u3063\u305f - \u6570\u5024\u3092\u671f\u5f85\u3057\u3066\u3044\u305f\u306e\u306b\u6587\u5b57\u5217\u304c\u5165\u529b\u3055\u308c\u305f - \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u304c\u5207\u65ad\u3055\u308c\u305f</p>"},{"location":"chapter13/#_3","title":"\u4f8b\u5916\u51e6\u7406\u304c\u306a\u3044\u5834\u5408\u306e\u554f\u984c","text":"<pre><code>&gt;&gt;&gt; # \u4f8b\u5916\u51e6\u7406\u306a\u3057\u306e\u5371\u967a\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\n&gt;&gt;&gt; def divide_numbers(a, b):\n...     result = a / b\n...     return result\n... \n\n&gt;&gt;&gt; # \u6b63\u5e38\u306a\u30b1\u30fc\u30b9\n&gt;&gt;&gt; print(divide_numbers(10, 2))\n5.0\n\n&gt;&gt;&gt; # \u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc\uff08\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u505c\u6b62\uff09\n&gt;&gt;&gt; print(divide_numbers(10, 0))\nTraceback (most recent call last):\n  File \"&lt;stdin&gt;\", line 1, in &lt;module&gt;\n  File \"&lt;stdin&gt;\", line 2, in divide_numbers\nZeroDivisionError: division by zero\n\n&gt;&gt;&gt; # \u30a8\u30e9\u30fc\u5f8c\u306f\u7d9a\u884c\u3067\u304d\u306a\u3044\n&gt;&gt;&gt; print(\"\u3053\u306e\u884c\u306f\u5b9f\u884c\u3055\u308c\u307e\u305b\u3093\")\n</code></pre> <p>\u554f\u984c\u70b9\uff1a 1. \u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u7a81\u7136\u505c\u6b62\u3059\u308b 2. \u30e6\u30fc\u30b6\u30fc\u306b\u306f\u610f\u5473\u4e0d\u660e\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 3. \u5f8c\u7d9a\u306e\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044 4. \u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b</p>"},{"location":"chapter13/#_4","title":"\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u3063\u305f\u5b89\u5168\u306a\u30d7\u30ed\u30b0\u30e9\u30e0","text":"<pre><code>&gt;&gt;&gt; def safe_divide_numbers(a, b):\n...     try:\n...         result = a / b\n...         return result, \"\u6210\u529f\"\n...     except ZeroDivisionError:\n...         return None, \"\u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\"\n...     except TypeError:\n...         return None, \"\u30a8\u30e9\u30fc: \u6570\u5024\u4ee5\u5916\u306f\u8a08\u7b97\u3067\u304d\u307e\u305b\u3093\"\n... \n\n&gt;&gt;&gt; # \u6b63\u5e38\u306a\u30b1\u30fc\u30b9\n&gt;&gt;&gt; result, message = safe_divide_numbers(10, 2)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}, \u30e1\u30c3\u30bb\u30fc\u30b8: {message}\")\n\u7d50\u679c: 5.0, \u30e1\u30c3\u30bb\u30fc\u30b8: \u6210\u529f\n\n&gt;&gt;&gt; # \u30bc\u30ed\u9664\u7b97\uff08\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d9a\u884c\uff09\n&gt;&gt;&gt; result, message = safe_divide_numbers(10, 0)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}, \u30e1\u30c3\u30bb\u30fc\u30b8: {message}\")\n\u7d50\u679c: None, \u30e1\u30c3\u30bb\u30fc\u30b8: \u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\n\n&gt;&gt;&gt; # \u578b\u30a8\u30e9\u30fc\n&gt;&gt;&gt; result, message = safe_divide_numbers(\"10\", 2)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {result}, \u30e1\u30c3\u30bb\u30fc\u30b8: {message}\")\n\u7d50\u679c: None, \u30e1\u30c3\u30bb\u30fc\u30b8: \u30a8\u30e9\u30fc: \u6570\u5024\u4ee5\u5916\u306f\u8a08\u7b97\u3067\u304d\u307e\u305b\u3093\n\n&gt;&gt;&gt; # \u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u7d9a\u884c\u3055\u308c\u308b\n&gt;&gt;&gt; print(\"\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\")\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u307e\u3059\n</code></pre>"},{"location":"chapter13/#try-except","title":"try-except\u6587\u306e\u57fa\u672c","text":""},{"location":"chapter13/#_5","title":"\u57fa\u672c\u7684\u306a\u69cb\u6587","text":"<pre><code>try:\n    # \u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\u53ef\u80fd\u6027\u306e\u3042\u308b\u51e6\u7406\n    \u5371\u967a\u306a\u51e6\u7406()\nexcept \u30a8\u30e9\u30fc\u306e\u7a2e\u985e:\n    # \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u305f\u3068\u304d\u306e\u51e6\u7406\n    \u30a8\u30e9\u30fc\u5bfe\u5fdc()\n</code></pre>"},{"location":"chapter13/#_6","title":"\u3088\u304f\u4f7f\u308f\u308c\u308b\u4f8b\u5916\u306e\u7a2e\u985e","text":"<pre><code>&gt;&gt;&gt; # \u30d5\u30a1\u30a4\u30eb\u95a2\u9023\u306e\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     with open(\"\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt\", \"r\") as file:\n...         content = file.read()\n... except FileNotFoundError:\n...     print(\"\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\")\n\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\n\n&gt;&gt;&gt; # \u578b\u5909\u63db\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     number = int(\"abc\")\n... except ValueError:\n...     print(\"\u6570\u5024\u306b\u5909\u63db\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\")\n\u6570\u5024\u306b\u5909\u63db\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\n\n&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     my_list = [1, 2, 3]\n...     value = my_list[10]\n... except IndexError:\n...     print(\"\u30ea\u30b9\u30c8\u306e\u7bc4\u56f2\u5916\u3067\u3059\")\n\u30ea\u30b9\u30c8\u306e\u7bc4\u56f2\u5916\u3067\u3059\n\n&gt;&gt;&gt; # \u8f9e\u66f8\u306e\u30ad\u30fc\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     my_dict = {\"name\": \"\u7530\u4e2d\", \"age\": 30}\n...     value = my_dict[\"address\"]\n... except KeyError:\n...     print(\"\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\")\n\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\n\n&gt;&gt;&gt; # \u5c5e\u6027\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     text = \"Hello\"\n...     result = text.non_existent_method()\n... except AttributeError:\n...     print(\"\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\")\n\u6307\u5b9a\u3055\u308c\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\n</code></pre>"},{"location":"chapter13/#_7","title":"\u8907\u6570\u306e\u4f8b\u5916\u3092\u51e6\u7406","text":"<pre><code>&gt;&gt;&gt; def process_user_input(user_input):\n...     try:\n...         # \u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\n...         number = int(user_input)\n...         \n...         # \u30ea\u30b9\u30c8\u304b\u3089\u5024\u3092\u53d6\u5f97\n...         data_list = [10, 20, 30]\n...         result = data_list[number]\n...         \n...         # \u8a08\u7b97\u3092\u5b9f\u884c\n...         final_result = 100 / result\n...         \n...         return final_result, \"\u6210\u529f\"\n...         \n...     except ValueError:\n...         return None, \"\u30a8\u30e9\u30fc: \u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     except IndexError:\n...         return None, \"\u30a8\u30e9\u30fc: 0\u304b\u30892\u306e\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n...     except ZeroDivisionError:\n...         return None, \"\u30a8\u30e9\u30fc: \u30bc\u30ed\u9664\u7b97\u304c\u767a\u751f\u3057\u307e\u3057\u305f\"\n...     except Exception as e:\n...         return None, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u4f8b\n&gt;&gt;&gt; test_inputs = [\"1\", \"abc\", \"10\", \"0\"]\n&gt;&gt;&gt; for input_value in test_inputs:\n...     result, message = process_user_input(input_value)\n...     print(f\"\u5165\u529b: '{input_value}' \u2192 \u7d50\u679c: {result}, \u30e1\u30c3\u30bb\u30fc\u30b8: {message}\")\n\u5165\u529b: '1' \u2192 \u7d50\u679c: 5.0, \u30e1\u30c3\u30bb\u30fc\u30b8: \u6210\u529f\n\u5165\u529b: 'abc' \u2192 \u7d50\u679c: None, \u30e1\u30c3\u30bb\u30fc\u30b8: \u30a8\u30e9\u30fc: \u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n\u5165\u529b: '10' \u2192 \u7d50\u679c: None, \u30e1\u30c3\u30bb\u30fc\u30b8: \u30a8\u30e9\u30fc: 0\u304b\u30892\u306e\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n\u5165\u529b: '0' \u2192 \u7d50\u679c: None, \u30e1\u30c3\u30bb\u30fc\u30b8: \u30a8\u30e9\u30fc: \u30bc\u30ed\u9664\u7b97\u304c\u767a\u751f\u3057\u307e\u3057\u305f\n</code></pre>"},{"location":"chapter13/#atm","title":"\u3010\u5b9f\u884c\u3011\u9280\u884cATM\u30b7\u30b9\u30c6\u30e0\u306e\u4f8b\u5916\u51e6\u7406","text":"<p>\u5b9f\u969b\u306e\u9280\u884cATM\u30b7\u30b9\u30c6\u30e0\u3092\u60f3\u5b9a\u3057\u305f\u4f8b\u5916\u51e6\u7406\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter13/#1atm","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u57fa\u672c\u7684\u306aATM\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; class BankATM:\n...     def __init__(self):\n...         # \u4eee\u60f3\u7684\u306a\u53e3\u5ea7\u30c7\u30fc\u30bf\n...         self.accounts = {\n...             \"1234\": {\"name\": \"\u7530\u4e2d\u592a\u90ce\", \"balance\": 150000, \"pin\": \"5678\"},\n...             \"2345\": {\"name\": \"\u4f50\u85e4\u82b1\u5b50\", \"balance\": 80000, \"pin\": \"9012\"},\n...             \"3456\": {\"name\": \"\u9234\u6728\u4e00\u90ce\", \"balance\": 200000, \"pin\": \"3456\"}\n...         }\n...         self.daily_limit = 100000  # 1\u65e5\u306e\u51fa\u91d1\u9650\u5ea6\u984d\n...         self.transaction_log = []\n...     \n...     def authenticate(self, account_number, pin):\n...         \"\"\"\u53e3\u5ea7\u8a8d\u8a3c\"\"\"\n...         try:\n...             if account_number not in self.accounts:\n...                 raise KeyError(\"\u53e3\u5ea7\u756a\u53f7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             if self.accounts[account_number][\"pin\"] != pin:\n...                 raise ValueError(\"PIN\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\")\n...             \n...             return True, \"\u8a8d\u8a3c\u6210\u529f\"\n...             \n...         except KeyError as e:\n...             return False, f\"\u8a8d\u8a3c\u30a8\u30e9\u30fc: {e}\"\n...         except ValueError as e:\n...             return False, f\"\u8a8d\u8a3c\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             return False, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def check_balance(self, account_number):\n...         \"\"\"\u6b8b\u9ad8\u7167\u4f1a\"\"\"\n...         try:\n...             if account_number not in self.accounts:\n...                 raise KeyError(\"\u53e3\u5ea7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             balance = self.accounts[account_number][\"balance\"]\n...             name = self.accounts[account_number][\"name\"]\n...             \n...             return True, f\"{name}\u69d8\u306e\u6b8b\u9ad8: {balance:,}\u5186\"\n...             \n...         except KeyError as e:\n...             return False, f\"\u6b8b\u9ad8\u7167\u4f1a\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             return False, f\"\u30b7\u30b9\u30c6\u30e0\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def withdraw_money(self, account_number, amount):\n...         \"\"\"\u51fa\u91d1\u51e6\u7406\"\"\"\n...         try:\n...             # \u5165\u529b\u5024\u306e\u691c\u8a3c\n...             if not isinstance(amount, (int, float)):\n...                 raise TypeError(\"\u91d1\u984d\u306f\u6570\u5024\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             \n...             if amount &lt;= 0:\n...                 raise ValueError(\"\u91d1\u984d\u306f\u6b63\u306e\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             \n...             if amount % 1000 != 0:\n...                 raise ValueError(\"1000\u5186\u5358\u4f4d\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             \n...             # \u53e3\u5ea7\u306e\u5b58\u5728\u78ba\u8a8d\n...             if account_number not in self.accounts:\n...                 raise KeyError(\"\u53e3\u5ea7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             account = self.accounts[account_number]\n...             \n...             # \u6b8b\u9ad8\u78ba\u8a8d\n...             if account[\"balance\"] &lt; amount:\n...                 raise ValueError(f\"\u6b8b\u9ad8\u4e0d\u8db3\u3067\u3059\uff08\u6b8b\u9ad8: {account['balance']:,}\u5186\uff09\")\n...             \n...             # \u65e5\u6b21\u9650\u5ea6\u984d\u78ba\u8a8d\n...             if amount &gt; self.daily_limit:\n...                 raise ValueError(f\"1\u65e5\u306e\u51fa\u91d1\u9650\u5ea6\u984d\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\uff08\u9650\u5ea6\u984d: {self.daily_limit:,}\u5186\uff09\")\n...             \n...             # \u51fa\u91d1\u5b9f\u884c\n...             account[\"balance\"] -= amount\n...             \n...             # \u53d6\u5f15\u30ed\u30b0\u306b\u8a18\u9332\n...             transaction = {\n...                 \"account\": account_number,\n...                 \"type\": \"\u51fa\u91d1\",\n...                 \"amount\": amount,\n...                 \"balance_after\": account[\"balance\"],\n...                 \"timestamp\": \"2024-01-15 14:30:00\"  # \u5b9f\u969b\u306f\u73fe\u5728\u6642\u523b\n...             }\n...             self.transaction_log.append(transaction)\n...             \n...             return True, f\"\u51fa\u91d1\u5b8c\u4e86: {amount:,}\u5186\uff08\u6b8b\u9ad8: {account['balance']:,}\u5186\uff09\"\n...             \n...         except TypeError as e:\n...             return False, f\"\u5165\u529b\u30a8\u30e9\u30fc: {e}\"\n...         except ValueError as e:\n...             return False, f\"\u51fa\u91d1\u30a8\u30e9\u30fc: {e}\"\n...         except KeyError as e:\n...             return False, f\"\u53e3\u5ea7\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             return False, f\"\u30b7\u30b9\u30c6\u30e0\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def deposit_money(self, account_number, amount):\n...         \"\"\"\u5165\u91d1\u51e6\u7406\"\"\"\n...         try:\n...             # \u5165\u529b\u5024\u306e\u691c\u8a3c\n...             if not isinstance(amount, (int, float)):\n...                 raise TypeError(\"\u91d1\u984d\u306f\u6570\u5024\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             \n...             if amount &lt;= 0:\n...                 raise ValueError(\"\u91d1\u984d\u306f\u6b63\u306e\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             \n...             if amount &gt; 1000000:\n...                 raise ValueError(\"1\u56de\u306e\u5165\u91d1\u9650\u5ea6\u984d\u306f100\u4e07\u5186\u3067\u3059\")\n...             \n...             # \u53e3\u5ea7\u306e\u5b58\u5728\u78ba\u8a8d\n...             if account_number not in self.accounts:\n...                 raise KeyError(\"\u53e3\u5ea7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             # \u5165\u91d1\u5b9f\u884c\n...             account = self.accounts[account_number]\n...             account[\"balance\"] += amount\n...             \n...             # \u53d6\u5f15\u30ed\u30b0\u306b\u8a18\u9332\n...             transaction = {\n...                 \"account\": account_number,\n...                 \"type\": \"\u5165\u91d1\",\n...                 \"amount\": amount,\n...                 \"balance_after\": account[\"balance\"],\n...                 \"timestamp\": \"2024-01-15 14:35:00\"\n...             }\n...             self.transaction_log.append(transaction)\n...             \n...             return True, f\"\u5165\u91d1\u5b8c\u4e86: {amount:,}\u5186\uff08\u6b8b\u9ad8: {account['balance']:,}\u5186\uff09\"\n...             \n...         except TypeError as e:\n...             return False, f\"\u5165\u529b\u30a8\u30e9\u30fc: {e}\"\n...         except ValueError as e:\n...             return False, f\"\u5165\u91d1\u30a8\u30e9\u30fc: {e}\"\n...         except KeyError as e:\n...             return False, f\"\u53e3\u5ea7\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             return False, f\"\u30b7\u30b9\u30c6\u30e0\u30a8\u30e9\u30fc: {e}\"\n... \n\n&gt;&gt;&gt; # ATM\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; atm = BankATM()\n\n&gt;&gt;&gt; # \u8a8d\u8a3c\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u8a8d\u8a3c\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; success, message = atm.authenticate(\"1234\", \"5678\")\n&gt;&gt;&gt; print(f\"\u6b63\u3057\u3044\u8a8d\u8a3c: {message}\")\n\n&gt;&gt;&gt; success, message = atm.authenticate(\"1234\", \"0000\")\n&gt;&gt;&gt; print(f\"\u9593\u9055\u3063\u305fPIN: {message}\")\n\n&gt;&gt;&gt; success, message = atm.authenticate(\"9999\", \"5678\")\n&gt;&gt;&gt; print(f\"\u5b58\u5728\u3057\u306a\u3044\u53e3\u5ea7: {message}\")\n\n=== \u8a8d\u8a3c\u30c6\u30b9\u30c8 ===\n\u6b63\u3057\u3044\u8a8d\u8a3c: \u8a8d\u8a3c\u6210\u529f\n\u9593\u9055\u3063\u305fPIN: \u8a8d\u8a3c\u30a8\u30e9\u30fc: PIN\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\n\u5b58\u5728\u3057\u306a\u3044\u53e3\u5ea7: \u8a8d\u8a3c\u30a8\u30e9\u30fc: \u53e3\u5ea7\u756a\u53f7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\n&gt;&gt;&gt; # \u6b8b\u9ad8\u7167\u4f1a\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"\\\\n=== \u6b8b\u9ad8\u7167\u4f1a\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; success, message = atm.check_balance(\"1234\")\n&gt;&gt;&gt; print(message)\n\n&gt;&gt;&gt; success, message = atm.check_balance(\"9999\")\n&gt;&gt;&gt; print(message)\n\n=== \u6b8b\u9ad8\u7167\u4f1a\u30c6\u30b9\u30c8 ===\n\u7530\u4e2d\u592a\u90ce\u69d8\u306e\u6b8b\u9ad8: 150,000\u5186\n\u6b8b\u9ad8\u7167\u4f1a\u30a8\u30e9\u30fc: \u53e3\u5ea7\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\n&gt;&gt;&gt; # \u51fa\u91d1\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"\\\\n=== \u51fa\u91d1\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; test_cases = [\n...     (\"1234\", 10000),   # \u6b63\u5e38\n...     (\"1234\", 5500),    # 1000\u5186\u5358\u4f4d\u3067\u306a\u3044\n...     (\"1234\", 200000),  # \u6b8b\u9ad8\u4e0d\u8db3\n...     (\"1234\", 150000),  # \u9650\u5ea6\u984d\u8d85\u904e\n...     (\"1234\", -1000),   # \u8ca0\u306e\u6570\n...     (\"1234\", \"abc\"),   # \u6587\u5b57\u5217\n... ]\n\n&gt;&gt;&gt; for account, amount in test_cases:\n...     success, message = atm.withdraw_money(account, amount)\n...     print(f\"\u51fa\u91d1 {amount}: {message}\")\n\n=== \u51fa\u91d1\u30c6\u30b9\u30c8 ===\n\u51fa\u91d1 10000: \u51fa\u91d1\u5b8c\u4e86: 10,000\u5186\uff08\u6b8b\u9ad8: 140,000\u5186\uff09\n\u51fa\u91d1 5500: \u51fa\u91d1\u30a8\u30e9\u30fc: 1000\u5186\u5358\u4f4d\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n\u51fa\u91d1 200000: \u51fa\u91d1\u30a8\u30e9\u30fc: \u6b8b\u9ad8\u4e0d\u8db3\u3067\u3059\uff08\u6b8b\u9ad8: 140,000\u5186\uff09\n\u51fa\u91d1 150000: \u51fa\u91d1\u30a8\u30e9\u30fc: 1\u65e5\u306e\u51fa\u91d1\u9650\u5ea6\u984d\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\uff08\u9650\u5ea6\u984d: 100,000\u5186\uff09\n\u51fa\u91d1 -1000: \u51fa\u91d1\u30a8\u30e9\u30fc: \u91d1\u984d\u306f\u6b63\u306e\u6570\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n\u51fa\u91d1 abc: \u5165\u529b\u30a8\u30e9\u30fc: \u91d1\u984d\u306f\u6570\u5024\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\n</code></pre>"},{"location":"chapter13/#2atm","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30e6\u30fc\u30b6\u30fc\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u4ed8\u304dATM","text":"<pre><code>&gt;&gt;&gt; class InteractiveATM(BankATM):\n...     def __init__(self):\n...         super().__init__()\n...         self.current_user = None\n...         self.login_attempts = 0\n...         self.max_login_attempts = 3\n...     \n...     def safe_input(self, prompt, input_type=str, validator=None):\n...         \"\"\"\u5b89\u5168\u306a\u5165\u529b\u51e6\u7406\"\"\"\n...         while True:\n...             try:\n...                 user_input = input(prompt).strip()\n...                 \n...                 if input_type == int:\n...                     converted_value = int(user_input)\n...                 elif input_type == float:\n...                     converted_value = float(user_input)\n...                 else:\n...                     converted_value = user_input\n...                 \n...                 # \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u95a2\u6570\u304c\u3042\u308b\u5834\u5408\u306f\u5b9f\u884c\n...                 if validator:\n...                     validator(converted_value)\n...                 \n...                 return converted_value\n...                 \n...             except ValueError as e:\n...                 print(f\"\u5165\u529b\u30a8\u30e9\u30fc: \u6b63\u3057\u3044\u5f62\u5f0f\u3067\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n...             except Exception as e:\n...                 print(f\"\u5165\u529b\u30a8\u30e9\u30fc: {e}\")\n...     \n...     def login(self):\n...         \"\"\"\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\"\"\"\n...         print(\"=== ATM\u306b\u3088\u3046\u3053\u305d ===\")\n...         \n...         while self.login_attempts &lt; self.max_login_attempts:\n...             try:\n...                 account_number = self.safe_input(\"\u53e3\u5ea7\u756a\u53f7\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \")\n...                 pin = self.safe_input(\"PIN\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \")\n...                 \n...                 success, message = self.authenticate(account_number, pin)\n...                 \n...                 if success:\n...                     self.current_user = account_number\n...                     user_name = self.accounts[account_number][\"name\"]\n...                     print(f\"\\\\n{user_name}\u69d8\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f\u3002\")\n...                     return True\n...                 else:\n...                     self.login_attempts += 1\n...                     remaining = self.max_login_attempts - self.login_attempts\n...                     print(f\"{message}\")\n...                     if remaining &gt; 0:\n...                         print(f\"\u6b8b\u308a\u8a66\u884c\u56de\u6570: {remaining}\u56de\")\n...                     \n...             except KeyboardInterrupt:\n...                 print(\"\\\\n\u51e6\u7406\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f\u3002\")\n...                 return False\n...             except Exception as e:\n...                 print(f\"\u30ed\u30b0\u30a4\u30f3\u30a8\u30e9\u30fc: {e}\")\n...         \n...         print(\"\u30ed\u30b0\u30a4\u30f3\u8a66\u884c\u56de\u6570\u3092\u8d85\u3048\u307e\u3057\u305f\u3002\u30ab\u30fc\u30c9\u3092\u56de\u53ce\u3057\u307e\u3059\u3002\")\n...         return False\n...     \n...     def main_menu(self):\n...         \"\"\"\u30e1\u30a4\u30f3\u30e1\u30cb\u30e5\u30fc\"\"\"\n...         if not self.current_user:\n...             print(\"\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\n...             return\n...         \n...         while True:\n...             try:\n...                 print(\"\\\\n=== \u30e1\u30cb\u30e5\u30fc ===\")\n...                 print(\"1. \u6b8b\u9ad8\u7167\u4f1a\")\n...                 print(\"2. \u51fa\u91d1\")\n...                 print(\"3. \u5165\u91d1\")\n...                 print(\"4. \u53d6\u5f15\u5c65\u6b74\")\n...                 print(\"5. \u30ed\u30b0\u30a2\u30a6\u30c8\")\n...                 \n...                 choice = self.safe_input(\"\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044 (1-5): \", int)\n...                 \n...                 if choice == 1:\n...                     self.handle_balance_inquiry()\n...                 elif choice == 2:\n...                     self.handle_withdrawal()\n...                 elif choice == 3:\n...                     self.handle_deposit()\n...                 elif choice == 4:\n...                     self.handle_transaction_history()\n...                 elif choice == 5:\n...                     print(\"\u3054\u5229\u7528\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\")\n...                     self.current_user = None\n...                     break\n...                 else:\n...                     print(\"1\u304b\u30895\u306e\u6570\u5b57\u3092\u9078\u629e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\")\n...                     \n...             except KeyboardInterrupt:\n...                 print(\"\\\\n\u51e6\u7406\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f\u3002\")\n...                 break\n...             except Exception as e:\n...                 print(f\"\u30e1\u30cb\u30e5\u30fc\u30a8\u30e9\u30fc: {e}\")\n...     \n...     def handle_balance_inquiry(self):\n...         \"\"\"\u6b8b\u9ad8\u7167\u4f1a\u306e\u51e6\u7406\"\"\"\n...         try:\n...             success, message = self.check_balance(self.current_user)\n...             print(f\"\\\\n{message}\")\n...         except Exception as e:\n...             print(f\"\u6b8b\u9ad8\u7167\u4f1a\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n...     \n...     def handle_withdrawal(self):\n...         \"\"\"\u51fa\u91d1\u306e\u51e6\u7406\"\"\"\n...         try:\n...             print(\"\\\\n=== \u51fa\u91d1 ===\")\n...             amount = self.safe_input(\"\u51fa\u91d1\u984d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044 (1000\u5186\u5358\u4f4d): \", int,\n...                                    lambda x: x &gt; 0 and x % 1000 == 0)\n...             \n...             success, message = self.withdraw_money(self.current_user, amount)\n...             print(f\"\\\\n{message}\")\n...             \n...             if success:\n...                 print(\"\u7d19\u5e63\u3092\u53d7\u3051\u53d6\u3063\u3066\u304f\u3060\u3055\u3044\u3002\")\n...                 \n...         except Exception as e:\n...             print(f\"\u51fa\u91d1\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n...     \n...     def handle_deposit(self):\n...         \"\"\"\u5165\u91d1\u306e\u51e6\u7406\"\"\"\n...         try:\n...             print(\"\\\\n=== \u5165\u91d1 ===\")\n...             amount = self.safe_input(\"\u5165\u91d1\u984d\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044: \", int,\n...                                    lambda x: x &gt; 0)\n...             \n...             success, message = self.deposit_money(self.current_user, amount)\n...             print(f\"\\\\n{message}\")\n...             \n...         except Exception as e:\n...             print(f\"\u5165\u91d1\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n...     \n...     def handle_transaction_history(self):\n...         \"\"\"\u53d6\u5f15\u5c65\u6b74\u306e\u8868\u793a\"\"\"\n...         try:\n...             print(\"\\\\n=== \u53d6\u5f15\u5c65\u6b74 ===\")\n...             user_transactions = [t for t in self.transaction_log \n...                                if t[\"account\"] == self.current_user]\n...             \n...             if not user_transactions:\n...                 print(\"\u53d6\u5f15\u5c65\u6b74\u304c\u3042\u308a\u307e\u305b\u3093\u3002\")\n...                 return\n...             \n...             for i, transaction in enumerate(user_transactions[-5:], 1):\n...                 print(f\"{i}. {transaction['timestamp']} \"\n...                       f\"{transaction['type']} {transaction['amount']:,}\u5186 \"\n...                       f\"(\u6b8b\u9ad8: {transaction['balance_after']:,}\u5186)\")\n...                       \n...         except Exception as e:\n...             print(f\"\u53d6\u5f15\u5c65\u6b74\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n... \n\n&gt;&gt;&gt; # \u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6ATM\u306e\u30c7\u30e2\uff08\u5b9f\u969b\u306e\u5165\u529b\u306f\u6a21\u64ec\uff09\n&gt;&gt;&gt; def demo_atm():\n...     \"\"\"ATM\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     atm = InteractiveATM()\n...     \n...     # \u6b63\u5e38\u306a\u30ed\u30b0\u30a4\u30f3\u64cd\u4f5c\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...     print(\"=== ATM\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 ===\")\n...     print(\"\u53e3\u5ea7\u756a\u53f7: 1234, PIN: 5678 \u3067\u30ed\u30b0\u30a4\u30f3\")\n...     \n...     # \u624b\u52d5\u3067\u30ed\u30b0\u30a4\u30f3\u72b6\u614b\u3092\u8a2d\u5b9a\uff08\u30c7\u30e2\u7528\uff09\n...     atm.current_user = \"1234\"\n...     user_name = atm.accounts[\"1234\"][\"name\"]\n...     print(f\"{user_name}\u69d8\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f\u3002\")\n...     \n...     # \u5404\u7a2e\u64cd\u4f5c\u306e\u30c6\u30b9\u30c8\n...     print(\"\\\\n1. \u6b8b\u9ad8\u7167\u4f1a\")\n...     atm.handle_balance_inquiry()\n...     \n...     print(\"\\\\n2. \u51fa\u91d1\u30c6\u30b9\u30c8 (10,000\u5186)\")\n...     success, message = atm.withdraw_money(\"1234\", 10000)\n...     print(message)\n...     \n...     print(\"\\\\n3. \u5165\u91d1\u30c6\u30b9\u30c8 (5,000\u5186)\")\n...     success, message = atm.deposit_money(\"1234\", 5000)\n...     print(message)\n...     \n...     print(\"\\\\n4. \u53d6\u5f15\u5c65\u6b74\")\n...     atm.handle_transaction_history()\n\n&gt;&gt;&gt; demo_atm()\n\n=== ATM\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 ===\n\u53e3\u5ea7\u756a\u53f7: 1234, PIN: 5678 \u3067\u30ed\u30b0\u30a4\u30f3\n\u7530\u4e2d\u592a\u90ce\u69d8\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u307e\u3057\u305f\u3002\n\n1. \u6b8b\u9ad8\u7167\u4f1a\n\n\u7530\u4e2d\u592a\u90ce\u69d8\u306e\u6b8b\u9ad8: 140,000\u5186\n\n2. \u51fa\u91d1\u30c6\u30b9\u30c8 (10,000\u5186)\n\u51fa\u91d1\u5b8c\u4e86: 10,000\u5186\uff08\u6b8b\u9ad8: 130,000\u5186\uff09\n\n3. \u5165\u91d1\u30c6\u30b9\u30c8 (5,000\u5186)\n\u5165\u91d1\u5b8c\u4e86: 5,000\u5186\uff08\u6b8b\u9ad8: 135,000\u5186\uff09\n\n4. \u53d6\u5f15\u5c65\u6b74\n=== \u53d6\u5f15\u5c65\u6b74 ===\n1. 2024-01-15 14:30:00 \u51fa\u91d1 10,000\u5186 (\u6b8b\u9ad8: 140,000\u5186)\n2. 2024-01-15 14:35:00 \u5165\u91d1 5,000\u5186 (\u6b8b\u9ad8: 135,000\u5186)\n3. 2024-01-15 14:35:00 \u51fa\u91d1 10,000\u5186 (\u6b8b\u9ad8: 130,000\u5186)\n4. 2024-01-15 14:35:00 \u5165\u91d1 5,000\u5186 (\u6b8b\u9ad8: 135,000\u5186)\n</code></pre>"},{"location":"chapter13/#elsefinally","title":"else\u7bc0\u3068finally\u7bc0","text":""},{"location":"chapter13/#else","title":"else\u7bc0\uff1a\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306e\u51e6\u7406","text":"<pre><code>&gt;&gt;&gt; def process_file(filename):\n...     try:\n...         with open(filename, 'r', encoding='utf-8') as file:\n...             content = file.read()\n...     except FileNotFoundError:\n...         print(f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         return None\n...     except PermissionError:\n...         print(f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u306e\u8aad\u307f\u53d6\u308a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\")\n...         return None\n...     else:\n...         # \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u304b\u3063\u305f\u5834\u5408\u306e\u307f\u5b9f\u884c\u3055\u308c\u308b\n...         print(f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\")\n...         print(f\"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba: {len(content)} \u6587\u5b57\")\n...         return content\n...     finally:\n...         # \u30a8\u30e9\u30fc\u306e\u6709\u7121\u306b\u95a2\u308f\u3089\u305a\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b\n...         print(f\"\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\")\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u7528\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n&gt;&gt;&gt; with open(\"test_file.txt\", \"w\", encoding=\"utf-8\") as f:\n...     f.write(\"\u3053\u308c\u306f\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\\\\nPython\u306e\u4f8b\u5916\u51e6\u7406\u3092\u5b66\u3093\u3067\u3044\u307e\u3059\u3002\")\n\n&gt;&gt;&gt; # \u6b63\u5e38\u30b1\u30fc\u30b9\n&gt;&gt;&gt; content = process_file(\"test_file.txt\")\n\u30d5\u30a1\u30a4\u30eb 'test_file.txt' \u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\n\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba: 44 \u6587\u5b57\n\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # \u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\n&gt;&gt;&gt; content = process_file(\"\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt\")\n\u30d5\u30a1\u30a4\u30eb '\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\n</code></pre>"},{"location":"chapter13/#finally","title":"finally\u7bc0\uff1a\u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406","text":"<pre><code>&gt;&gt;&gt; class DatabaseConnection:\n...     def __init__(self, database_name):\n...         self.database_name = database_name\n...         self.is_connected = False\n...         print(f\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 '{database_name}' \u306b\u63a5\u7d9a\u3092\u8a66\u884c\u4e2d...\")\n...     \n...     def connect(self):\n...         # \u4eee\u60f3\u7684\u306a\u63a5\u7d9a\u51e6\u7406\n...         if self.database_name == \"test_db\":\n...             self.is_connected = True\n...             print(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6210\u529f\")\n...         else:\n...             raise ConnectionError(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u5931\u6557\")\n...     \n...     def execute_query(self, query):\n...         if not self.is_connected:\n...             raise RuntimeError(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\")\n...         print(f\"\u30af\u30a8\u30ea\u5b9f\u884c: {query}\")\n...         return f\"\u7d50\u679c: {query} \u306e\u5b9f\u884c\u5b8c\u4e86\"\n...     \n...     def disconnect(self):\n...         if self.is_connected:\n...             self.is_connected = False\n...             print(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u5207\u65ad\u3057\u307e\u3057\u305f\")\n... \n\n&gt;&gt;&gt; def database_operation(db_name, query):\n...     db = None\n...     try:\n...         # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\n...         db = DatabaseConnection(db_name)\n...         db.connect()\n...         \n...         # \u30af\u30a8\u30ea\u5b9f\u884c\n...         result = db.execute_query(query)\n...         return result\n...         \n...     except ConnectionError as e:\n...         print(f\"\u63a5\u7d9a\u30a8\u30e9\u30fc: {e}\")\n...         return None\n...     except RuntimeError as e:\n...         print(f\"\u5b9f\u884c\u30a8\u30e9\u30fc: {e}\")\n...         return None\n...     except Exception as e:\n...         print(f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\")\n...         return None\n...     else:\n...         print(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u307e\u3057\u305f\")\n...     finally:\n...         # \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u3066\u3082\u8d77\u304d\u306a\u304f\u3066\u3082\u5fc5\u305a\u5b9f\u884c\n...         if db and db.is_connected:\n...             db.disconnect()\n...         print(\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u51e6\u7406\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u5b8c\u4e86\")\n... \n\n&gt;&gt;&gt; # \u6b63\u5e38\u306a\u30b1\u30fc\u30b9\n&gt;&gt;&gt; result = database_operation(\"test_db\", \"SELECT * FROM users\")\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 'test_db' \u306b\u63a5\u7d9a\u3092\u8a66\u884c\u4e2d...\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u6210\u529f\n\u30af\u30a8\u30ea\u5b9f\u884c: SELECT * FROM users\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u304c\u6b63\u5e38\u306b\u5b8c\u4e86\u3057\u307e\u3057\u305f\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u5207\u65ad\u3057\u307e\u3057\u305f\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u51e6\u7406\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u5b8c\u4e86\n\n&gt;&gt;&gt; # \u63a5\u7d9a\u30a8\u30e9\u30fc\u306e\u30b1\u30fc\u30b9\n&gt;&gt;&gt; result = database_operation(\"invalid_db\", \"SELECT * FROM users\")\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 'invalid_db' \u306b\u63a5\u7d9a\u3092\u8a66\u884c\u4e2d...\n\u63a5\u7d9a\u30a8\u30e9\u30fc: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u5931\u6557\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u51e6\u7406\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u5b8c\u4e86\n</code></pre>"},{"location":"chapter13/#_8","title":"\u3010\u5b9f\u884c\u3011\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u4f8b\u5916\u51e6\u7406","text":"<p>\u5b9f\u7528\u7684\u306a\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u5305\u62ec\u7684\u306a\u4f8b\u5916\u51e6\u7406\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter13/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; import json\n&gt;&gt;&gt; import csv\n&gt;&gt;&gt; from datetime import datetime\n\n&gt;&gt;&gt; class FileProcessor:\n...     def __init__(self, base_directory=\"./data\"):\n...         self.base_directory = base_directory\n...         self.ensure_directory_exists()\n...         self.operation_log = []\n...     \n...     def ensure_directory_exists(self):\n...         \"\"\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5b58\u5728\u78ba\u8a8d\u3068\u4f5c\u6210\"\"\"\n...         try:\n...             if not os.path.exists(self.base_directory):\n...                 os.makedirs(self.base_directory)\n...                 print(f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea '{self.base_directory}' \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\")\n...         except PermissionError:\n...             raise PermissionError(f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea '{self.base_directory}' \u306e\u4f5c\u6210\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\")\n...         except Exception as e:\n...             raise Exception(f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\")\n...     \n...     def log_operation(self, operation, filename, status, error_message=None):\n...         \"\"\"\u64cd\u4f5c\u30ed\u30b0\u306e\u8a18\u9332\"\"\"\n...         log_entry = {\n...             \"timestamp\": datetime.now().isoformat(),\n...             \"operation\": operation,\n...             \"filename\": filename,\n...             \"status\": status,\n...             \"error_message\": error_message\n...         }\n...         self.operation_log.append(log_entry)\n...     \n...     def safe_read_text_file(self, filename, encoding='utf-8'):\n...         \"\"\"\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5b89\u5168\u306a\u8aad\u307f\u8fbc\u307f\"\"\"\n...         filepath = os.path.join(self.base_directory, filename)\n...         \n...         try:\n...             # \u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u78ba\u8a8d\n...             if not os.path.exists(filepath):\n...                 raise FileNotFoundError(f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             # \u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u306e\u78ba\u8a8d\uff08\u5927\u304d\u3059\u304e\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u5bfe\u7b56\uff09\n...             file_size = os.path.getsize(filepath)\n...             max_size = 10 * 1024 * 1024  # 10MB\n...             if file_size &gt; max_size:\n...                 raise ValueError(f\"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u304c\u5927\u304d\u3059\u304e\u307e\u3059 ({file_size:,} bytes &gt; {max_size:,} bytes)\")\n...             \n...             # \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\n...             with open(filepath, 'r', encoding=encoding) as file:\n...                 content = file.read()\n...             \n...             self.log_operation(\"read_text\", filename, \"success\")\n...             return content, \"\u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\"\n...             \n...         except FileNotFoundError as e:\n...             self.log_operation(\"read_text\", filename, \"error\", str(e))\n...             return None, f\"\u30d5\u30a1\u30a4\u30eb\u30a8\u30e9\u30fc: {e}\"\n...         except PermissionError as e:\n...             self.log_operation(\"read_text\", filename, \"error\", str(e))\n...             return None, f\"\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u53d6\u308a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         except UnicodeDecodeError as e:\n...             self.log_operation(\"read_text\", filename, \"error\", str(e))\n...             return None, f\"\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30a8\u30e9\u30fc: {encoding} \u3067\u8aad\u307f\u53d6\u308c\u307e\u305b\u3093\"\n...         except ValueError as e:\n...             self.log_operation(\"read_text\", filename, \"error\", str(e))\n...             return None, f\"\u30d5\u30a1\u30a4\u30eb\u691c\u8a3c\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             self.log_operation(\"read_text\", filename, \"error\", str(e))\n...             return None, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def safe_write_text_file(self, filename, content, encoding='utf-8', backup=True):\n...         \"\"\"\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5b89\u5168\u306a\u66f8\u304d\u8fbc\u307f\"\"\"\n...         filepath = os.path.join(self.base_directory, filename)\n...         backup_filepath = filepath + \".backup\"\n...         \n...         try:\n...             # \u65e2\u5b58\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u4f5c\u6210\n...             if backup and os.path.exists(filepath):\n...                 with open(filepath, 'r', encoding=encoding) as original:\n...                     with open(backup_filepath, 'w', encoding=encoding) as backup_file:\n...                         backup_file.write(original.read())\n...                 print(f\"\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb '{filename}.backup' \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\")\n...             \n...             # \u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u8fbc\u307f\n...             with open(filepath, 'w', encoding=encoding) as file:\n...                 file.write(content)\n...             \n...             # \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\uff08\u6b63\u5e38\u306b\u66f8\u304d\u8fbc\u3081\u305f\u5834\u5408\uff09\n...             if backup and os.path.exists(backup_filepath):\n...                 os.remove(backup_filepath)\n...             \n...             self.log_operation(\"write_text\", filename, \"success\")\n...             return True, f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u3092\u6b63\u5e38\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\"\n...             \n...         except PermissionError as e:\n...             self.log_operation(\"write_text\", filename, \"error\", str(e))\n...             return False, f\"\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         except UnicodeEncodeError as e:\n...             self.log_operation(\"write_text\", filename, \"error\", str(e))\n...             return False, f\"\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30a8\u30e9\u30fc: {encoding} \u3067\u66f8\u304d\u8fbc\u3081\u307e\u305b\u3093\"\n...         except OSError as e:\n...             # \u30c7\u30a3\u30b9\u30af\u5bb9\u91cf\u4e0d\u8db3\u306a\u3069\n...             self.log_operation(\"write_text\", filename, \"error\", str(e))\n...             \n...             # \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304b\u3089\u5fa9\u65e7\u3092\u8a66\u884c\n...             if backup and os.path.exists(backup_filepath):\n...                 try:\n...                     os.rename(backup_filepath, filepath)\n...                     return False, f\"\u66f8\u304d\u8fbc\u307f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u304c\u3001\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u304b\u3089\u5fa9\u65e7\u3057\u307e\u3057\u305f: {e}\"\n...                 except:\n...                     pass\n...             \n...             return False, f\"\u66f8\u304d\u8fbc\u307f\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             self.log_operation(\"write_text\", filename, \"error\", str(e))\n...             return False, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def safe_read_json_file(self, filename):\n...         \"\"\"JSON\u30d5\u30a1\u30a4\u30eb\u306e\u5b89\u5168\u306a\u8aad\u307f\u8fbc\u307f\"\"\"\n...         try:\n...             content, message = self.safe_read_text_file(filename)\n...             if content is None:\n...                 return None, message\n...             \n...             # JSON\u89e3\u6790\n...             data = json.loads(content)\n...             \n...             self.log_operation(\"read_json\", filename, \"success\")\n...             return data, \"JSON\u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\"\n...             \n...         except json.JSONDecodeError as e:\n...             self.log_operation(\"read_json\", filename, \"error\", str(e))\n...             return None, f\"JSON\u89e3\u6790\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093 ({e})\"\n...         except Exception as e:\n...             self.log_operation(\"read_json\", filename, \"error\", str(e))\n...             return None, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def safe_write_json_file(self, filename, data, backup=True):\n...         \"\"\"JSON\u30d5\u30a1\u30a4\u30eb\u306e\u5b89\u5168\u306a\u66f8\u304d\u8fbc\u307f\"\"\"\n...         try:\n...             # \u30c7\u30fc\u30bf\u306e\u691c\u8a3c\n...             if not isinstance(data, (dict, list)):\n...                 raise TypeError(\"JSON\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3067\u304d\u308b\u306e\u306f\u8f9e\u66f8\u307e\u305f\u306f\u30ea\u30b9\u30c8\u306e\u307f\u3067\u3059\")\n...             \n...             # JSON\u6587\u5b57\u5217\u306b\u5909\u63db\n...             json_content = json.dumps(data, ensure_ascii=False, indent=2)\n...             \n...             # \u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u307f\n...             success, message = self.safe_write_text_file(filename, json_content, backup=backup)\n...             \n...             if success:\n...                 self.log_operation(\"write_json\", filename, \"success\")\n...             else:\n...                 self.log_operation(\"write_json\", filename, \"error\", message)\n...             \n...             return success, message\n...             \n...         except TypeError as e:\n...             self.log_operation(\"write_json\", filename, \"error\", str(e))\n...             return False, f\"\u30c7\u30fc\u30bf\u578b\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             self.log_operation(\"write_json\", filename, \"error\", str(e))\n...             return False, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def safe_read_csv_file(self, filename, encoding='utf-8'):\n...         \"\"\"CSV\u30d5\u30a1\u30a4\u30eb\u306e\u5b89\u5168\u306a\u8aad\u307f\u8fbc\u307f\"\"\"\n...         filepath = os.path.join(self.base_directory, filename)\n...         \n...         try:\n...             if not os.path.exists(filepath):\n...                 raise FileNotFoundError(f\"\u30d5\u30a1\u30a4\u30eb '{filename}' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...             \n...             rows = []\n...             with open(filepath, 'r', encoding=encoding, newline='') as file:\n...                 csv_reader = csv.reader(file)\n...                 for row_num, row in enumerate(csv_reader, 1):\n...                     if len(row) == 0:\n...                         continue  # \u7a7a\u884c\u3092\u30b9\u30ad\u30c3\u30d7\n...                     rows.append(row)\n...             \n...             self.log_operation(\"read_csv\", filename, \"success\")\n...             return rows, f\"CSV\u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f ({len(rows)}\u884c)\"\n...             \n...         except FileNotFoundError as e:\n...             self.log_operation(\"read_csv\", filename, \"error\", str(e))\n...             return None, f\"\u30d5\u30a1\u30a4\u30eb\u30a8\u30e9\u30fc: {e}\"\n...         except PermissionError as e:\n...             self.log_operation(\"read_csv\", filename, \"error\", str(e))\n...             return None, f\"\u30a2\u30af\u30bb\u30b9\u6a29\u9650\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u53d6\u308a\u6a29\u9650\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         except UnicodeDecodeError as e:\n...             self.log_operation(\"read_csv\", filename, \"error\", str(e))\n...             return None, f\"\u6587\u5b57\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30a8\u30e9\u30fc: {encoding} \u3067\u8aad\u307f\u53d6\u308c\u307e\u305b\u3093\"\n...         except csv.Error as e:\n...             self.log_operation(\"read_csv\", filename, \"error\", str(e))\n...             return None, f\"CSV\u89e3\u6790\u30a8\u30e9\u30fc: {e}\"\n...         except Exception as e:\n...             self.log_operation(\"read_csv\", filename, \"error\", str(e))\n...             return None, f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def get_operation_log(self):\n...         \"\"\"\u64cd\u4f5c\u30ed\u30b0\u306e\u53d6\u5f97\"\"\"\n...         return self.operation_log.copy()\n...     \n...     def generate_error_report(self):\n...         \"\"\"\u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\"\"\"\n...         error_operations = [op for op in self.operation_log if op[\"status\"] == \"error\"]\n...         \n...         if not error_operations:\n...             return \"\u30a8\u30e9\u30fc\u306f\u767a\u751f\u3057\u3066\u3044\u307e\u305b\u3093\u3002\"\n...         \n...         report = f\"=== \u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8 ===\\\\n\"\n...         report += f\"\u7dcf\u64cd\u4f5c\u6570: {len(self.operation_log)}\\\\n\"\n...         report += f\"\u30a8\u30e9\u30fc\u6570: {len(error_operations)}\\\\n\"\n...         report += f\"\u6210\u529f\u7387: {(len(self.operation_log) - len(error_operations)) / len(self.operation_log) * 100:.1f}%\\\\n\\\\n\"\n...         \n...         for i, error_op in enumerate(error_operations, 1):\n...             report += f\"{i}. {error_op['timestamp']} - {error_op['operation']} '{error_op['filename']}'\\\\n\"\n...             report += f\"   \u30a8\u30e9\u30fc: {error_op['error_message']}\\\\n\\\\n\"\n...         \n...         return report\n... \n\n&gt;&gt;&gt; # \u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; processor = FileProcessor(\"test_data\")\n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u3068\u8aad\u307f\u8fbc\u307f\n&gt;&gt;&gt; print(\"=== \u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\u3068\u8aad\u307f\u8fbc\u307f\n&gt;&gt;&gt; test_content = \"\u3053\u308c\u306f\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\\\\n\u4f8b\u5916\u51e6\u7406\u306e\u5b66\u7fd2\u4e2d\u3067\u3059\u3002\\\\n\u65e5\u672c\u8a9e\u3082\u6b63\u5e38\u306b\u51e6\u7406\u3055\u308c\u307e\u3059\u3002\"\n&gt;&gt;&gt; success, message = processor.safe_write_text_file(\"test.txt\", test_content)\n&gt;&gt;&gt; print(f\"\u66f8\u304d\u8fbc\u307f: {message}\")\n\n&gt;&gt;&gt; content, message = processor.safe_read_text_file(\"test.txt\")\n&gt;&gt;&gt; print(f\"\u8aad\u307f\u8fbc\u307f: {message}\")\n&gt;&gt;&gt; print(f\"\u5185\u5bb9: {content[:30]}...\" if content else \"\u306a\u3057\")\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea 'test_data' \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\n=== \u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30c6\u30b9\u30c8 ===\n\u66f8\u304d\u8fbc\u307f: \u30d5\u30a1\u30a4\u30eb 'test.txt' \u3092\u6b63\u5e38\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\n\u8aad\u307f\u8fbc\u307f: \u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\n\u5185\u5bb9: \u3053\u308c\u306f\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\u4f8b\u5916\u51e6\u7406\u306e\u5b66\u7fd2\u4e2d\u3067\u3059\u3002\n\u65e5\u672c\u8a9e\u3082\u6b63\u5e38\u306b\u51e6\u7406...\n\n&gt;&gt;&gt; # JSON\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\n&gt;&gt;&gt; test_data = {\n...     \"name\": \"\u7530\u4e2d\u592a\u90ce\",\n...     \"age\": 30,\n...     \"hobbies\": [\"\u8aad\u66f8\", \"\u6620\u753b\u9451\u8cde\", \"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\"],\n...     \"scores\": {\"math\": 85, \"english\": 92, \"science\": 78}\n... }\n\n&gt;&gt;&gt; success, message = processor.safe_write_json_file(\"test_data.json\", test_data)\n&gt;&gt;&gt; print(f\"\\\\nJSON\u66f8\u304d\u8fbc\u307f: {message}\")\n\n&gt;&gt;&gt; data, message = processor.safe_read_json_file(\"test_data.json\")\n&gt;&gt;&gt; print(f\"JSON\u8aad\u307f\u8fbc\u307f: {message}\")\n&gt;&gt;&gt; print(f\"\u30c7\u30fc\u30bf: {data['name']}\u3055\u3093, \u5e74\u9f62: {data['age']}\u6b73\" if data else \"\u306a\u3057\")\n\nJSON\u66f8\u304d\u8fbc\u307f: \u30d5\u30a1\u30a4\u30eb 'test_data.json' \u3092\u6b63\u5e38\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\nJSON\u8aad\u307f\u8fbc\u307f: JSON\u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f\n\u30c7\u30fc\u30bf: \u7530\u4e2d\u592a\u90ce\u3055\u3093, \u5e74\u9f62: 30\u6b73\n\n&gt;&gt;&gt; # CSV\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\n&gt;&gt;&gt; import tempfile\n&gt;&gt;&gt; import os\n\n&gt;&gt;&gt; # \u4e00\u6642\u7684\u306bCSV\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n&gt;&gt;&gt; csv_content = \"\"\"\u540d\u524d,\u5e74\u9f62,\u90fd\u5e02\n\u7530\u4e2d\u592a\u90ce,30,\u6771\u4eac\n\u4f50\u85e4\u82b1\u5b50,25,\u5927\u962a\n\u9234\u6728\u4e00\u90ce,35,\u540d\u53e4\u5c4b\"\"\"\n\n&gt;&gt;&gt; success, message = processor.safe_write_text_file(\"test_data.csv\", csv_content)\n&gt;&gt;&gt; print(f\"\\\\nCSV\u4f5c\u6210: {message}\")\n\n&gt;&gt;&gt; rows, message = processor.safe_read_csv_file(\"test_data.csv\")\n&gt;&gt;&gt; print(f\"CSV\u8aad\u307f\u8fbc\u307f: {message}\")\n&gt;&gt;&gt; if rows:\n...     print(\"CSV\u30c7\u30fc\u30bf:\")\n...     for i, row in enumerate(rows):\n...         print(f\"  {i+1}: {row}\")\n\nCSV\u4f5c\u6210: \u30d5\u30a1\u30a4\u30eb 'test_data.csv' \u3092\u6b63\u5e38\u306b\u4fdd\u5b58\u3057\u307e\u3057\u305f\nCSV\u8aad\u307f\u8fbc\u307f: CSV\u30d5\u30a1\u30a4\u30eb\u3092\u6b63\u5e38\u306b\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f (4\u884c)\nCSV\u30c7\u30fc\u30bf:\n  1: ['\u540d\u524d', '\u5e74\u9f62', '\u90fd\u5e02']\n  2: ['\u7530\u4e2d\u592a\u90ce', '30', '\u6771\u4eac']\n  3: ['\u4f50\u85e4\u82b1\u5b50', '25', '\u5927\u962a']\n  4: ['\u9234\u6728\u4e00\u90ce', '35', '\u540d\u53e4\u5c4b']\n\n&gt;&gt;&gt; # \u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"\\\\n=== \u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n&gt;&gt;&gt; content, message = processor.safe_read_text_file(\"\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt\")\n&gt;&gt;&gt; print(f\"\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb: {message}\")\n\n&gt;&gt;&gt; # \u4e0d\u6b63\u306aJSON\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n&gt;&gt;&gt; processor.safe_write_text_file(\"invalid.json\", \"{ invalid json content\")\n&gt;&gt;&gt; data, message = processor.safe_read_json_file(\"invalid.json\")\n&gt;&gt;&gt; print(f\"\u4e0d\u6b63\u306aJSON: {message}\")\n\n&gt;&gt;&gt; # \u64cd\u4f5c\u30ed\u30b0\u3068\u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8\n&gt;&gt;&gt; print(\"\\\\n=== \u64cd\u4f5c\u30ed\u30b0 ===\")\n&gt;&gt;&gt; log = processor.get_operation_log()\n&gt;&gt;&gt; print(f\"\u7dcf\u64cd\u4f5c\u6570: {len(log)}\")\n\n&gt;&gt;&gt; error_report = processor.generate_error_report()\n&gt;&gt;&gt; print(\"\\\\n\" + error_report)\n\n=== \u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\u30c6\u30b9\u30c8 ===\n\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb: \u30d5\u30a1\u30a4\u30eb\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb '\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\u4e0d\u6b63\u306aJSON: JSON\u89e3\u6790\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093 (Expecting property name enclosed in double quotes: line 1 column 3 (char 2))\n\n=== \u64cd\u4f5c\u30ed\u30b0 ===\n\u7dcf\u64cd\u4f5c\u6570: 8\n\n=== \u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8 ===\n\u7dcf\u64cd\u4f5c\u6570: 8\n\u30a8\u30e9\u30fc\u6570: 2\n\u6210\u529f\u7387: 75.0%\n\n1. 2024-12-19T11:15:32.123456 - read_text '\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt'\n   \u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb '\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb.txt' \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\n2. 2024-12-19T11:15:32.345678 - read_json 'invalid.json'\n   \u30a8\u30e9\u30fc: JSON\u89e3\u6790\u30a8\u30e9\u30fc: \u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093 (Expecting property name enclosed in double quotes: line 1 column 3 (char 2))\n</code></pre>"},{"location":"chapter13/#_9","title":"\u307e\u3068\u3081\uff1a\u4f8b\u5916\u51e6\u7406\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter13/#_10","title":"\u4f8b\u5916\u51e6\u7406\u306e\u57fa\u672c\u539f\u5247","text":"<ol> <li>\u4e88\u6e2c\u53ef\u80fd\u306a\u30a8\u30e9\u30fc\u306b\u306f\u5fc5\u305a\u5bfe\u51e6\u3059\u308b</li> <li>\u30e6\u30fc\u30b6\u30fc\u30d5\u30ec\u30f3\u30c9\u30ea\u30fc\u306a\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u63d0\u4f9b\u3059\u308b</li> <li>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7d99\u7d9a\u6027\u3092\u4fdd\u3064</li> <li>\u30ea\u30bd\u30fc\u30b9\u306e\u9069\u5207\u306a\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\u3092\u884c\u3046</li> </ol>"},{"location":"chapter13/#try-except_1","title":"try-except\u6587\u306e\u4f7f\u3044\u65b9","text":"<pre><code>try:\n    # \u5371\u967a\u306a\u51e6\u7406\n    risky_operation()\nexcept SpecificError as e:\n    # \u7279\u5b9a\u306e\u30a8\u30e9\u30fc\u3078\u306e\u5bfe\u51e6\n    handle_specific_error(e)\nexcept Exception as e:\n    # \u305d\u306e\u4ed6\u306e\u30a8\u30e9\u30fc\u3078\u306e\u5bfe\u51e6\n    handle_general_error(e)\nelse:\n    # \u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u304b\u3063\u305f\u5834\u5408\n    success_operation()\nfinally:\n    # \u5fc5\u305a\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\n    cleanup_resources()\n</code></pre>"},{"location":"chapter13/#_11","title":"\u3088\u304f\u4f7f\u308f\u308c\u308b\u4f8b\u5916\u30bf\u30a4\u30d7","text":"<ul> <li>FileNotFoundError: \u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u3044</li> <li>PermissionError: \u30a2\u30af\u30bb\u30b9\u6a29\u9650\u304c\u306a\u3044</li> <li>ValueError: \u4e0d\u6b63\u306a\u5024</li> <li>TypeError: \u4e0d\u6b63\u306a\u578b</li> <li>KeyError: \u8f9e\u66f8\u306e\u30ad\u30fc\u304c\u5b58\u5728\u3057\u306a\u3044</li> <li>IndexError: \u30ea\u30b9\u30c8\u306e\u7bc4\u56f2\u5916\u30a2\u30af\u30bb\u30b9</li> <li>ZeroDivisionError: \u30bc\u30ed\u9664\u7b97</li> </ul>"},{"location":"chapter13/#_12","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u9280\u884cATM\u30b7\u30b9\u30c6\u30e0\u306e\u5b89\u5168\u306a\u53d6\u5f15\u51e6\u7406</li> <li>\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u306e\u5305\u62ec\u7684\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0</li> <li>\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u306e\u691c\u8a3c\u3068\u5b89\u5168\u306a\u51e6\u7406</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li>\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306e\u969c\u5bb3\u5bfe\u5fdc</li> </ul>"},{"location":"chapter13/#_13","title":"\u30a8\u30e9\u30fc\u30ed\u30b0\u3068\u30c7\u30d0\u30c3\u30b0","text":"<pre><code>import logging\n\n# \u30ed\u30b0\u8a2d\u5b9a\nlogging.basicConfig(level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\ntry:\n    dangerous_operation()\nexcept Exception as e:\n    logger.error(f\"\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f: {e}\", exc_info=True)\n</code></pre> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u3053\u308c\u307e\u3067\u5b66\u3093\u3060\u6a5f\u80fd\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u3088\u308a\u5927\u898f\u6a21\u3067\u4fdd\u5b88\u3057\u3084\u3059\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c13\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c13\u7ae0\u3067\u306f\u4f8b\u5916\u51e6\u7406\u306e\u6982\u5ff5\u304b\u3089\u5b9f\u88c5\u307e\u3067\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u7406\u7531\u3001try-except\u6587\u306e\u57fa\u672c\u69cb\u6587\u3001\u8907\u6570\u4f8b\u5916\u306e\u51e6\u7406\u3001else\u7bc0\u3068finally\u7bc0\u306e\u6d3b\u7528\u3092\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u9280\u884cATM\u30b7\u30b9\u30c6\u30e0\u3068\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3001\u73fe\u5b9f\u7684\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u65b9\u6cd5\u3092\u7fd2\u5f97\u3002\u30ed\u30b0\u6a5f\u80fd\u3084\u30a8\u30e9\u30fc\u30ec\u30dd\u30fc\u30c8\u751f\u6210\u307e\u3067\u542b\u3080\u5b8c\u5168\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u5b9f\u88c5\u3002\u6b21\u306f\u7b2c14\u7ae0\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter14/","title":"\u7b2c14\u7ae0\uff1a\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":"<p>\u3053\u308c\u307e\u3067\u306e\u7ae0\u3067\u306f\u3001\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u6574\u7406\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u3082\u3063\u3068\u5927\u304d\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3068\u51e6\u7406\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u305f\u300c\u8a2d\u8a08\u56f3\u300d\u304c\u3042\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3073\u307e\u3059\u3002\u56f3\u66f8\u9928\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3084\u30b2\u30fc\u30e0\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u73fe\u5b9f\u4e16\u754c\u306e\u3082\u306e\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u8868\u73fe\u3059\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter14/#_1","title":"\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3063\u3066\u4f55\uff1f","text":""},{"location":"chapter14/#_2","title":"\u73fe\u5b9f\u4e16\u754c\u3068\u306e\u5bfe\u5fdc","text":"<p>\u30af\u30e9\u30b9\u306f\u300c\u8a2d\u8a08\u56f3\u300d\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u300c\u8a2d\u8a08\u56f3\u304b\u3089\u4f5c\u3089\u308c\u305f\u5b9f\u969b\u306e\u3082\u306e\u300d\u3068\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff1a</p> <p>\u73fe\u5b9f\u4e16\u754c\u306e\u4f8b\uff1a - \u8a2d\u8a08\u56f3\uff08\u30af\u30e9\u30b9\uff09: \u8eca\u306e\u8a2d\u8a08\u56f3 - \u5b9f\u969b\u306e\u3082\u306e\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09: \u30c8\u30e8\u30bf\u306e\u30d7\u30ea\u30a6\u30b9\u3001\u30db\u30f3\u30c0\u306e\u30b7\u30d3\u30c3\u30af</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f8b\uff1a - \u8a2d\u8a08\u56f3\uff08\u30af\u30e9\u30b9\uff09: \u300c\u4eba\u300d\u30af\u30e9\u30b9 - \u5b9f\u969b\u306e\u3082\u306e\uff08\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09: \u7530\u4e2d\u592a\u90ce\u3055\u3093\u3001\u4f50\u85e4\u82b1\u5b50\u3055\u3093</p>"},{"location":"chapter14/#_3","title":"\u30af\u30e9\u30b9\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306e\u554f\u984c","text":"<pre><code>&gt;&gt;&gt; # \u30af\u30e9\u30b9\u3092\u4f7f\u308f\u306a\u3044\u4eba\u7269\u7ba1\u7406\uff08\u60aa\u3044\u4f8b\uff09\n&gt;&gt;&gt; # \u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u60c5\u5831\n&gt;&gt;&gt; tanaka_name = \"\u7530\u4e2d\u592a\u90ce\"\n&gt;&gt;&gt; tanaka_age = 30\n&gt;&gt;&gt; tanaka_email = \"tanaka@example.com\"\n&gt;&gt;&gt; tanaka_skills = [\"Python\", \"Java\", \"HTML\"]\n\n&gt;&gt;&gt; # \u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306e\u60c5\u5831\n&gt;&gt;&gt; sato_name = \"\u4f50\u85e4\u82b1\u5b50\"\n&gt;&gt;&gt; sato_age = 25\n&gt;&gt;&gt; sato_email = \"sato@example.com\"\n&gt;&gt;&gt; sato_skills = [\"JavaScript\", \"CSS\", \"React\"]\n\n&gt;&gt;&gt; # \u5e74\u9f62\u30921\u3064\u5897\u3084\u3059\u51e6\u7406\n&gt;&gt;&gt; def increase_age_tanaka():\n...     global tanaka_age\n...     tanaka_age += 1\n...     print(f\"{tanaka_name}\u3055\u3093\u306e\u5e74\u9f62: {tanaka_age}\u6b73\")\n\n&gt;&gt;&gt; def increase_age_sato():\n...     global sato_age\n...     sato_age += 1\n...     print(f\"{sato_name}\u3055\u3093\u306e\u5e74\u9f62: {sato_age}\u6b73\")\n\n&gt;&gt;&gt; # \u30b9\u30ad\u30eb\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\n&gt;&gt;&gt; def add_skill_tanaka(skill):\n...     tanaka_skills.append(skill)\n...     print(f\"{tanaka_name}\u3055\u3093\u306e\u30b9\u30ad\u30eb: {tanaka_skills}\")\n\n&gt;&gt;&gt; def add_skill_sato(skill):\n...     sato_skills.append(skill)\n...     print(f\"{sato_name}\u3055\u3093\u306e\u30b9\u30ad\u30eb: {sato_skills}\")\n</code></pre> <p>\u554f\u984c\u70b9\uff1a 1. \u4eba\u304c\u5897\u3048\u308b\u305f\u3073\u306b\u5909\u6570\u3068\u95a2\u6570\u304c\u500d\u5897\u3059\u308b 2. \u540c\u3058\u3088\u3046\u306a\u51e6\u7406\u3092\u4f55\u5ea6\u3082\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b 3. \u30c7\u30fc\u30bf\u3068\u51e6\u7406\u304c\u30d0\u30e9\u30d0\u30e9\u3067\u7ba1\u7406\u3057\u306b\u304f\u3044 4. \u9593\u9055\u3063\u305f\u4eba\u306e\u60c5\u5831\u3092\u5909\u66f4\u3057\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308b</p>"},{"location":"chapter14/#_4","title":"\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u89e3\u6c7a\u7b56","text":"<pre><code>&gt;&gt;&gt; class Person:\n...     \"\"\"\u4eba\u3092\u8868\u3059\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, name, age, email):\n...         \"\"\"\u521d\u671f\u5316\u30e1\u30bd\u30c3\u30c9\uff08\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\uff09\"\"\"\n...         self.name = name\n...         self.age = age\n...         self.email = email\n...         self.skills = []\n...     \n...     def increase_age(self):\n...         \"\"\"\u5e74\u9f62\u30921\u3064\u5897\u3084\u3059\"\"\"\n...         self.age += 1\n...         print(f\"{self.name}\u3055\u3093\u306e\u5e74\u9f62: {self.age}\u6b73\")\n...     \n...     def add_skill(self, skill):\n...         \"\"\"\u30b9\u30ad\u30eb\u3092\u8ffd\u52a0\"\"\"\n...         self.skills.append(skill)\n...         print(f\"{self.name}\u3055\u3093\u306e\u30b9\u30ad\u30eb: {self.skills}\")\n...     \n...     def get_info(self):\n...         \"\"\"\u4eba\u7269\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         return f\"\u540d\u524d: {self.name}, \u5e74\u9f62: {self.age}\u6b73, \u30e1\u30fc\u30eb: {self.email}, \u30b9\u30ad\u30eb: {self.skills}\"\n... \n\n&gt;&gt;&gt; # \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n&gt;&gt;&gt; tanaka = Person(\"\u7530\u4e2d\u592a\u90ce\", 30, \"tanaka@example.com\")\n&gt;&gt;&gt; sato = Person(\"\u4f50\u85e4\u82b1\u5b50\", 25, \"sato@example.com\")\n\n&gt;&gt;&gt; # \u521d\u671f\u30b9\u30ad\u30eb\u306e\u8a2d\u5b9a\n&gt;&gt;&gt; tanaka.add_skill(\"Python\")\n&gt;&gt;&gt; tanaka.add_skill(\"Java\")\n&gt;&gt;&gt; sato.add_skill(\"JavaScript\")\n&gt;&gt;&gt; sato.add_skill(\"CSS\")\n\n\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u30b9\u30ad\u30eb: ['Python']\n\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u30b9\u30ad\u30eb: ['Python', 'Java']\n\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306e\u30b9\u30ad\u30eb: ['JavaScript']\n\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306e\u30b9\u30ad\u30eb: ['JavaScript', 'CSS']\n\n&gt;&gt;&gt; # \u5e74\u9f62\u3092\u5897\u3084\u3059\n&gt;&gt;&gt; tanaka.increase_age()\n&gt;&gt;&gt; sato.increase_age()\n\n\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u5e74\u9f62: 31\u6b73\n\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306e\u5e74\u9f62: 26\u6b73\n\n&gt;&gt;&gt; # \u60c5\u5831\u8868\u793a\n&gt;&gt;&gt; print(tanaka.get_info())\n&gt;&gt;&gt; print(sato.get_info())\n\n\u540d\u524d: \u7530\u4e2d\u592a\u90ce, \u5e74\u9f62: 31\u6b73, \u30e1\u30fc\u30eb: tanaka@example.com, \u30b9\u30ad\u30eb: ['Python', 'Java']\n\u540d\u524d: \u4f50\u85e4\u82b1\u5b50, \u5e74\u9f62: 26\u6b73, \u30e1\u30fc\u30eb: sato@example.com, \u30b9\u30ad\u30eb: ['JavaScript', 'CSS']\n</code></pre> <p>\u30af\u30e9\u30b9\u306e\u30e1\u30ea\u30c3\u30c8\uff1a 1. \u518d\u5229\u7528\u6027: \u4e00\u3064\u306e\u8a2d\u8a08\u56f3\u3067\u4f55\u500b\u3067\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308c\u308b 2. \u6574\u7406: \u30c7\u30fc\u30bf\u3068\u51e6\u7406\u304c\u307e\u3068\u307e\u3063\u3066\u7ba1\u7406\u3057\u3084\u3059\u3044 3. \u5b89\u5168\u6027: \u4ed6\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u60c5\u5831\u3092\u9593\u9055\u3063\u3066\u5909\u66f4\u3059\u308b\u5fc3\u914d\u304c\u306a\u3044 4. \u62e1\u5f35\u6027: \u65b0\u3057\u3044\u6a5f\u80fd\u3092\u7c21\u5358\u306b\u8ffd\u52a0\u3067\u304d\u308b</p>"},{"location":"chapter14/#_5","title":"\u3010\u5b9f\u884c\u3011\u56f3\u66f8\u9928\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046","text":"<p>\u5b9f\u7528\u7684\u306a\u56f3\u66f8\u9928\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u30af\u30e9\u30b9\u306e\u4f7f\u3044\u65b9\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter14/#1book","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u672c\uff08Book\uff09\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; from datetime import datetime, timedelta\n\n&gt;&gt;&gt; class Book:\n...     \"\"\"\u56f3\u66f8\u9928\u306e\u672c\u3092\u8868\u3059\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, isbn, title, author, genre, published_year):\n...         \"\"\"\u672c\u306e\u521d\u671f\u5316\"\"\"\n...         self.isbn = isbn\n...         self.title = title\n...         self.author = author\n...         self.genre = genre\n...         self.published_year = published_year\n...         self.is_available = True  # \u8cb8\u51fa\u53ef\u80fd\u304b\u3069\u3046\u304b\n...         self.borrower = None      # \u501f\u308a\u3066\u3044\u308b\u4eba\n...         self.borrowed_date = None # \u501f\u308a\u305f\u65e5\n...         self.due_date = None      # \u8fd4\u5374\u671f\u9650\n...         self.borrow_history = []  # \u8cb8\u51fa\u5c65\u6b74\n...     \n...     def borrow(self, borrower_name, loan_period_days=14):\n...         \"\"\"\u672c\u3092\u8cb8\u3057\u51fa\u3059\"\"\"\n...         if not self.is_available:\n...             return False, f\"'{self.title}'\u306f\u65e2\u306b\u8cb8\u51fa\u4e2d\u3067\u3059\"\n...         \n...         self.is_available = False\n...         self.borrower = borrower_name\n...         self.borrowed_date = datetime.now()\n...         self.due_date = self.borrowed_date + timedelta(days=loan_period_days)\n...         \n...         # \u8cb8\u51fa\u5c65\u6b74\u306b\u8a18\u9332\n...         borrow_record = {\n...             \"borrower\": borrower_name,\n...             \"borrowed_date\": self.borrowed_date,\n...             \"due_date\": self.due_date,\n...             \"returned_date\": None\n...         }\n...         self.borrow_history.append(borrow_record)\n...         \n...         return True, f\"'{self.title}'\u3092{borrower_name}\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: {self.due_date.strftime('%Y-%m-%d')}\uff09\"\n...     \n...     def return_book(self):\n...         \"\"\"\u672c\u3092\u8fd4\u5374\u3059\u308b\"\"\"\n...         if self.is_available:\n...             return False, f\"'{self.title}'\u306f\u8cb8\u51fa\u3055\u308c\u3066\u3044\u307e\u305b\u3093\"\n...         \n...         return_date = datetime.now()\n...         borrower_name = self.borrower\n...         \n...         # \u5ef6\u6ede\u30c1\u30a7\u30c3\u30af\n...         is_overdue = return_date &gt; self.due_date\n...         overdue_days = (return_date - self.due_date).days if is_overdue else 0\n...         \n...         # \u8cb8\u51fa\u5c65\u6b74\u3092\u66f4\u65b0\n...         if self.borrow_history:\n...             self.borrow_history[-1][\"returned_date\"] = return_date\n...         \n...         # \u672c\u306e\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\n...         self.is_available = True\n...         self.borrower = None\n...         self.borrowed_date = None\n...         self.due_date = None\n...         \n...         if is_overdue:\n...             return True, f\"'{self.title}'\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\uff08{overdue_days}\u65e5\u5ef6\u6ede\uff09\"\n...         else:\n...             return True, f\"'{self.title}'\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\"\n...     \n...     def is_overdue(self):\n...         \"\"\"\u5ef6\u6ede\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n...         if self.is_available or self.due_date is None:\n...             return False\n...         return datetime.now() &gt; self.due_date\n...     \n...     def get_status(self):\n...         \"\"\"\u672c\u306e\u72b6\u614b\u3092\u53d6\u5f97\"\"\"\n...         if self.is_available:\n...             return \"\u8cb8\u51fa\u53ef\u80fd\"\n...         else:\n...             status = f\"\u8cb8\u51fa\u4e2d\uff08\u501f\u308a\u624b: {self.borrower}\uff09\"\n...             if self.is_overdue():\n...                 overdue_days = (datetime.now() - self.due_date).days\n...                 status += f\" \u26a0\ufe0f {overdue_days}\u65e5\u5ef6\u6ede\"\n...             return status\n...     \n...     def get_info(self):\n...         \"\"\"\u672c\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         return {\n...             \"ISBN\": self.isbn,\n...             \"\u30bf\u30a4\u30c8\u30eb\": self.title,\n...             \"\u8457\u8005\": self.author,\n...             \"\u30b8\u30e3\u30f3\u30eb\": self.genre,\n...             \"\u51fa\u7248\u5e74\": self.published_year,\n...             \"\u72b6\u614b\": self.get_status(),\n...             \"\u8cb8\u51fa\u56de\u6570\": len(self.borrow_history)\n...         }\n... \n\n&gt;&gt;&gt; # \u672c\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n&gt;&gt;&gt; book1 = Book(\"978-4-12-345678-9\", \"Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\", \"\u5c71\u7530\u592a\u90ce\", \"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\", 2023)\n&gt;&gt;&gt; book2 = Book(\"978-4-98-765432-1\", \"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e\", \"\u7530\u4e2d\u82b1\u5b50\", \"\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\", 2022)\n&gt;&gt;&gt; book3 = Book(\"978-4-55-123456-7\", \"\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\", \"\u9234\u6728\u4e00\u90ce\", \"AI\u30fb\u6a5f\u68b0\u5b66\u7fd2\", 2024)\n\n&gt;&gt;&gt; # \u672c\u306e\u60c5\u5831\u3092\u8868\u793a\n&gt;&gt;&gt; print(\"=== \u56f3\u66f8\u9928\u306e\u8535\u66f8 ===\")\n&gt;&gt;&gt; for book in [book1, book2, book3]:\n...     info = book.get_info()\n...     print(f\"\u300e{info['\u30bf\u30a4\u30c8\u30eb\u300f}\u300f- {info['\u8457\u8005']} ({info['\u72b6\u614b']})\")\n\n=== \u56f3\u66f8\u9928\u306e\u8535\u66f8 ===\n\u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f- \u5c71\u7530\u592a\u90ce (\u8cb8\u51fa\u53ef\u80fd)\n\u300e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e\u300f- \u7530\u4e2d\u82b1\u5b50 (\u8cb8\u51fa\u53ef\u80fd)\n\u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f- \u9234\u6728\u4e00\u90ce (\u8cb8\u51fa\u53ef\u80fd)\n\n&gt;&gt;&gt; # \u672c\u306e\u8cb8\u51fa\n&gt;&gt;&gt; success, message = book1.borrow(\"\u7530\u4e2d\u592a\u90ce\")\n&gt;&gt;&gt; print(message)\n\n&gt;&gt;&gt; success, message = book2.borrow(\"\u4f50\u85e4\u82b1\u5b50\")\n&gt;&gt;&gt; print(message)\n\nPython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u3092\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n'\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e'\u3092\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n\n&gt;&gt;&gt; # \u8cb8\u51fa\u72b6\u6cc1\u306e\u78ba\u8a8d\n&gt;&gt;&gt; print(\"\\\\n=== \u8cb8\u51fa\u72b6\u6cc1 ===\")\n&gt;&gt;&gt; for book in [book1, book2, book3]:\n...     info = book.get_info()\n...     print(f\"\u300e{info['\u30bf\u30a4\u30c8\u30eb\u300f}\u300f- {info['\u72b6\u614b']}\")\n\n=== \u8cb8\u51fa\u72b6\u6cc1 ===\n\u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f- \u8cb8\u51fa\u4e2d\uff08\u501f\u308a\u624b: \u7530\u4e2d\u592a\u90ce\uff09\n\u300e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e\u300f- \u8cb8\u51fa\u4e2d\uff08\u501f\u308a\u624b: \u4f50\u85e4\u82b1\u5b50\uff09\n\u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f- \u8cb8\u51fa\u53ef\u80fd\n\n&gt;&gt;&gt; # \u672c\u306e\u8fd4\u5374\n&gt;&gt;&gt; success, message = book1.return_book()\n&gt;&gt;&gt; print(f\"\\\\n{message}\")\n\n'Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\n</code></pre>"},{"location":"chapter14/#2member","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5229\u7528\u8005\uff08Member\uff09\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; class Member:\n...     \"\"\"\u56f3\u66f8\u9928\u306e\u5229\u7528\u8005\u3092\u8868\u3059\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, member_id, name, email, phone):\n...         \"\"\"\u5229\u7528\u8005\u306e\u521d\u671f\u5316\"\"\"\n...         self.member_id = member_id\n...         self.name = name\n...         self.email = email\n...         self.phone = phone\n...         self.borrowed_books = []      # \u73fe\u5728\u501f\u308a\u3066\u3044\u308b\u672c\u306e\u30ea\u30b9\u30c8\n...         self.borrow_history = []      # \u904e\u53bb\u306e\u501f\u7528\u5c65\u6b74\n...         self.registration_date = datetime.now()\n...         self.is_active = True\n...         self.overdue_count = 0        # \u5ef6\u6ede\u56de\u6570\n...         self.fine_amount = 0          # \u5ef6\u6ede\u6599\u91d1\n...     \n...     def can_borrow(self, max_books=5, max_overdue=3):\n...         \"\"\"\u8cb8\u51fa\u53ef\u80fd\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n...         if not self.is_active:\n...             return False, \"\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u505c\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\"\n...         \n...         if len(self.borrowed_books) &gt;= max_books:\n...             return False, f\"\u540c\u6642\u8cb8\u51fa\u9650\u5ea6\u6570({max_books}\u518a)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\"\n...         \n...         if self.overdue_count &gt;= max_overdue:\n...             return False, f\"\u5ef6\u6ede\u56de\u6570\u304c\u9650\u5ea6({max_overdue}\u56de)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\"\n...         \n...         if self.fine_amount &gt; 0:\n...             return False, f\"\u672a\u6255\u3044\u306e\u5ef6\u6ede\u6599\u91d1\u304c\u3042\u308a\u307e\u3059: {self.fine_amount}\u5186\"\n...         \n...         return True, \"\u8cb8\u51fa\u53ef\u80fd\u3067\u3059\"\n...     \n...     def borrow_book(self, book):\n...         \"\"\"\u672c\u3092\u501f\u308a\u308b\"\"\"\n...         # \u8cb8\u51fa\u53ef\u80fd\u304b\u30c1\u30a7\u30c3\u30af\n...         can_borrow, message = self.can_borrow()\n...         if not can_borrow:\n...             return False, f\"\u8cb8\u51fa\u4e0d\u53ef: {message}\"\n...         \n...         # \u672c\u3092\u501f\u308a\u308b\n...         success, borrow_message = book.borrow(self.name)\n...         if not success:\n...             return False, borrow_message\n...         \n...         # \u5229\u7528\u8005\u306e\u501f\u7528\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\n...         self.borrowed_books.append(book)\n...         \n...         # \u501f\u7528\u5c65\u6b74\u306b\u8a18\u9332\n...         borrow_record = {\n...             \"book\": book,\n...             \"borrowed_date\": datetime.now(),\n...             \"returned_date\": None\n...         }\n...         self.borrow_history.append(borrow_record)\n...         \n...         return True, borrow_message\n...     \n...     def return_book(self, book):\n...         \"\"\"\u672c\u3092\u8fd4\u3059\"\"\"\n...         if book not in self.borrowed_books:\n...             return False, \"\u3053\u306e\u672c\u306f\u501f\u308a\u3066\u3044\u307e\u305b\u3093\"\n...         \n...         # \u5ef6\u6ede\u30c1\u30a7\u30c3\u30af\n...         was_overdue = book.is_overdue()\n...         if was_overdue:\n...             self.overdue_count += 1\n...             overdue_days = (datetime.now() - book.due_date).days\n...             fine = overdue_days * 10  # 1\u65e510\u5186\u306e\u5ef6\u6ede\u6599\u91d1\n...             self.fine_amount += fine\n...         \n...         # \u672c\u3092\u8fd4\u5374\n...         success, return_message = book.return_book()\n...         if success:\n...             self.borrowed_books.remove(book)\n...             \n...             # \u501f\u7528\u5c65\u6b74\u3092\u66f4\u65b0\n...             for record in reversed(self.borrow_history):\n...                 if record[\"book\"] == book and record[\"returned_date\"] is None:\n...                     record[\"returned_date\"] = datetime.now()\n...                     break\n...         \n...         return success, return_message\n...     \n...     def pay_fine(self, amount):\n...         \"\"\"\u5ef6\u6ede\u6599\u91d1\u3092\u652f\u6255\u3046\"\"\"\n...         if amount &lt;= 0:\n...             return False, \"\u652f\u6255\u3044\u91d1\u984d\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n...         \n...         if amount &gt; self.fine_amount:\n...             return False, f\"\u652f\u6255\u3044\u91d1\u984d\u304c\u5ef6\u6ede\u6599\u91d1\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\uff08\u5ef6\u6ede\u6599\u91d1: {self.fine_amount}\u5186\uff09\"\n...         \n...         self.fine_amount -= amount\n...         return True, f\"{amount}\u5186\u3092\u652f\u6255\u3044\u307e\u3057\u305f\uff08\u6b8b\u308a\u5ef6\u6ede\u6599\u91d1: {self.fine_amount}\u5186\uff09\"\n...     \n...     def get_borrowed_books(self):\n...         \"\"\"\u73fe\u5728\u501f\u308a\u3066\u3044\u308b\u672c\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\"\"\"\n...         if not self.borrowed_books:\n...             return \"\u73fe\u5728\u501f\u308a\u3066\u3044\u308b\u672c\u306f\u3042\u308a\u307e\u305b\u3093\"\n...         \n...         book_list = []\n...         for book in self.borrowed_books:\n...             status = \"\u5ef6\u6ede\u4e2d\" if book.is_overdue() else \"\u8cb8\u51fa\u4e2d\"\n...             book_list.append(f\"\u300e{book.title}\u300f({status})\")\n...         \n...         return \"\u501f\u7528\u4e2d: \" + \", \".join(book_list)\n...     \n...     def get_member_info(self):\n...         \"\"\"\u5229\u7528\u8005\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         return {\n...             \"\u4f1a\u54e1ID\": self.member_id,\n...             \"\u540d\u524d\": self.name,\n...             \"\u30e1\u30fc\u30eb\": self.email,\n...             \"\u96fb\u8a71\": self.phone,\n...             \"\u30a2\u30ab\u30a6\u30f3\u30c8\u72b6\u614b\": \"\u6709\u52b9\" if self.is_active else \"\u505c\u6b62\",\n...             \"\u73fe\u5728\u501f\u7528\u4e2d\": len(self.borrowed_books),\n...             \"\u5ef6\u6ede\u56de\u6570\": self.overdue_count,\n...             \"\u5ef6\u6ede\u6599\u91d1\": self.fine_amount,\n...             \"\u7dcf\u501f\u7528\u56de\u6570\": len(self.borrow_history)\n...         }\n... \n\n&gt;&gt;&gt; # \u5229\u7528\u8005\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n&gt;&gt;&gt; member1 = Member(\"M001\", \"\u7530\u4e2d\u592a\u90ce\", \"tanaka@example.com\", \"090-1234-5678\")\n&gt;&gt;&gt; member2 = Member(\"M002\", \"\u4f50\u85e4\u82b1\u5b50\", \"sato@example.com\", \"080-9876-5432\")\n\n&gt;&gt;&gt; # \u5229\u7528\u8005\u60c5\u5831\u306e\u8868\u793a\n&gt;&gt;&gt; print(\"=== \u5229\u7528\u8005\u60c5\u5831 ===\")\n&gt;&gt;&gt; for member in [member1, member2]:\n...     info = member.get_member_info()\n...     print(f\"{info['\u540d\u524d']}\u3055\u3093 (ID: {info['\u4f1a\u54e1ID']}) - \u501f\u7528\u4e2d: {info['\u73fe\u5728\u501f\u7528\u4e2d']}\u518a\")\n\n=== \u5229\u7528\u8005\u60c5\u5831 ===\n\u7530\u4e2d\u592a\u90ce\u3055\u3093 (ID: M001) - \u501f\u7528\u4e2d: 0\u518a\n\u4f50\u85e4\u82b1\u5b50\u3055\u3093 (ID: M002) - \u501f\u7528\u4e2d: 0\u518a\n\n&gt;&gt;&gt; # \u672c\u306e\u8cb8\u51fa\uff08\u5229\u7528\u8005\u5074\u304b\u3089\uff09\n&gt;&gt;&gt; success, message = member1.borrow_book(book1)\n&gt;&gt;&gt; print(f\"\\\\n{message}\")\n\n&gt;&gt;&gt; success, message = member2.borrow_book(book2)\n&gt;&gt;&gt; print(message)\n\n&gt;&gt;&gt; success, message = member1.borrow_book(book3)\n&gt;&gt;&gt; print(message)\n\n'Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u3092\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n'\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e'\u3092\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n'\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9'\u3092\u7530\u4e2d\u592a\u90ce\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n\n&gt;&gt;&gt; # \u501f\u7528\u72b6\u6cc1\u306e\u78ba\u8a8d\n&gt;&gt;&gt; print(\"\\\\n=== \u501f\u7528\u72b6\u6cc1 ===\")\n&gt;&gt;&gt; print(f\"\u7530\u4e2d\u592a\u90ce\u3055\u3093: {member1.get_borrowed_books()}\")\n&gt;&gt;&gt; print(f\"\u4f50\u85e4\u82b1\u5b50\u3055\u3093: {member2.get_borrowed_books()}\")\n\n=== \u501f\u7528\u72b6\u6cc1 ===\n\u7530\u4e2d\u592a\u90ce\u3055\u3093: \u501f\u7528\u4e2d: \u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f(\u8cb8\u51fa\u4e2d), \u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f(\u8cb8\u51fa\u4e2d)\n\u4f50\u85e4\u82b1\u5b50\u3055\u3093: \u501f\u7528\u4e2d: \u300e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e\u300f(\u8cb8\u51fa\u4e2d)\n</code></pre>"},{"location":"chapter14/#3library","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u56f3\u66f8\u9928\uff08Library\uff09\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; class Library:\n...     \"\"\"\u56f3\u66f8\u9928\u5168\u4f53\u3092\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, name, address):\n...         \"\"\"\u56f3\u66f8\u9928\u306e\u521d\u671f\u5316\"\"\"\n...         self.name = name\n...         self.address = address\n...         self.books = {}          # ISBN \u2192 Book\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8f9e\u66f8\n...         self.members = {}        # \u4f1a\u54e1ID \u2192 Member\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8f9e\u66f8\n...         self.operation_log = []  # \u64cd\u4f5c\u30ed\u30b0\n...     \n...     def add_book(self, book):\n...         \"\"\"\u672c\u3092\u8535\u66f8\u306b\u8ffd\u52a0\"\"\"\n...         if book.isbn in self.books:\n...             return False, f\"ISBN {book.isbn} \u306e\u672c\u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\"\n...         \n...         self.books[book.isbn] = book\n...         self.log_operation(\"add_book\", f\"\u300e{book.title}\u300f\u3092\u8ffd\u52a0\")\n...         return True, f\"\u300e{book.title}\u300f\u3092\u8535\u66f8\u306b\u8ffd\u52a0\u3057\u307e\u3057\u305f\"\n...     \n...     def register_member(self, member):\n...         \"\"\"\u5229\u7528\u8005\u3092\u767b\u9332\"\"\"\n...         if member.member_id in self.members:\n...             return False, f\"\u4f1a\u54e1ID {member.member_id} \u306f\u65e2\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u307e\u3059\"\n...         \n...         self.members[member.member_id] = member\n...         self.log_operation(\"register_member\", f\"{member.name}\u3055\u3093\u3092\u767b\u9332\")\n...         return True, f\"{member.name}\u3055\u3093\u3092\u4f1a\u54e1\u767b\u9332\u3057\u307e\u3057\u305f\"\n...     \n...     def search_books(self, query, search_type=\"title\"):\n...         \"\"\"\u672c\u3092\u691c\u7d22\"\"\"\n...         results = []\n...         query_lower = query.lower()\n...         \n...         for book in self.books.values():\n...             if search_type == \"title\" and query_lower in book.title.lower():\n...                 results.append(book)\n...             elif search_type == \"author\" and query_lower in book.author.lower():\n...                 results.append(book)\n...             elif search_type == \"genre\" and query_lower in book.genre.lower():\n...                 results.append(book)\n...             elif search_type == \"isbn\" and query in book.isbn:\n...                 results.append(book)\n...         \n...         return results\n...     \n...     def get_available_books(self):\n...         \"\"\"\u8cb8\u51fa\u53ef\u80fd\u306a\u672c\u306e\u4e00\u89a7\u3092\u53d6\u5f97\"\"\"\n...         return [book for book in self.books.values() if book.is_available]\n...     \n...     def get_overdue_books(self):\n...         \"\"\"\u5ef6\u6ede\u4e2d\u306e\u672c\u306e\u4e00\u89a7\u3092\u53d6\u5f97\"\"\"\n...         return [book for book in self.books.values() if book.is_overdue()]\n...     \n...     def borrow_book(self, member_id, isbn):\n...         \"\"\"\u672c\u306e\u8cb8\u51fa\u51e6\u7406\"\"\"\n...         # \u4f1a\u54e1\u306e\u5b58\u5728\u78ba\u8a8d\n...         if member_id not in self.members:\n...             return False, \"\u4f1a\u54e1\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n...         \n...         # \u672c\u306e\u5b58\u5728\u78ba\u8a8d\n...         if isbn not in self.books:\n...             return False, \"\u672c\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n...         \n...         member = self.members[member_id]\n...         book = self.books[isbn]\n...         \n...         # \u8cb8\u51fa\u5b9f\u884c\n...         success, message = member.borrow_book(book)\n...         if success:\n...             self.log_operation(\"borrow\", f\"{member.name}\u3055\u3093\u304c\u300e{book.title}\u300f\u3092\u501f\u7528\")\n...         \n...         return success, message\n...     \n...     def return_book(self, member_id, isbn):\n...         \"\"\"\u672c\u306e\u8fd4\u5374\u51e6\u7406\"\"\"\n...         if member_id not in self.members:\n...             return False, \"\u4f1a\u54e1\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n...         \n...         if isbn not in self.books:\n...             return False, \"\u672c\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n...         \n...         member = self.members[member_id]\n...         book = self.books[isbn]\n...         \n...         # \u8fd4\u5374\u5b9f\u884c\n...         success, message = member.return_book(book)\n...         if success:\n...             self.log_operation(\"return\", f\"{member.name}\u3055\u3093\u304c\u300e{book.title}\u300f\u3092\u8fd4\u5374\")\n...         \n...         return success, message\n...     \n...     def log_operation(self, operation_type, description):\n...         \"\"\"\u64cd\u4f5c\u30ed\u30b0\u306e\u8a18\u9332\"\"\"\n...         log_entry = {\n...             \"timestamp\": datetime.now(),\n...             \"operation\": operation_type,\n...             \"description\": description\n...         }\n...         self.operation_log.append(log_entry)\n...     \n...     def generate_report(self):\n...         \"\"\"\u56f3\u66f8\u9928\u306e\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n...         total_books = len(self.books)\n...         available_books = len(self.get_available_books())\n...         borrowed_books = total_books - available_books\n...         overdue_books = len(self.get_overdue_books())\n...         \n...         total_members = len(self.members)\n...         active_borrowers = len([m for m in self.members.values() if m.borrowed_books])\n...         \n...         report = f\"\"\"\n=== {self.name} \u7d71\u8a08\u30ec\u30dd\u30fc\u30c8 ===\n\u751f\u6210\u65e5\u6642: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n\n\u3010\u8535\u66f8\u60c5\u5831\u3011\n\u7dcf\u8535\u66f8\u6570: {total_books}\u518a\n\u8cb8\u51fa\u53ef\u80fd: {available_books}\u518a\n\u8cb8\u51fa\u4e2d: {borrowed_books}\u518a\n\u5ef6\u6ede\u4e2d: {overdue_books}\u518a\n\n\u3010\u5229\u7528\u8005\u60c5\u5831\u3011\n\u7dcf\u4f1a\u54e1\u6570: {total_members}\u4eba\n\u73fe\u5728\u306e\u501f\u7528\u8005\u6570: {active_borrowers}\u4eba\n\n\u3010\u4eba\u6c17\u66f8\u7c4d\u3011\n\"\"\"\n\n        # \u8cb8\u51fa\u56de\u6570\u9806\u306b\u672c\u3092\u30bd\u30fc\u30c8\n        popular_books = sorted(self.books.values(), \n                             key=lambda b: len(b.borrow_history), \n                             reverse=True)[:5]\n\n        for i, book in enumerate(popular_books, 1):\n            report += f\"{i}. \u300e{book.title}\u300f- \u8cb8\u51fa\u56de\u6570: {len(book.borrow_history)}\u56de\\\\n\"\n\n        return report\n...     \n...     def get_member_report(self, member_id):\n...         \"\"\"\u7279\u5b9a\u4f1a\u54e1\u306e\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n...         if member_id not in self.members:\n...             return \"\u4f1a\u54e1\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\"\n...         \n...         member = self.members[member_id]\n...         \n...         report = f\"\"\"\n=== {member.name}\u3055\u3093\u306e\u5229\u7528\u72b6\u6cc1 ===\n\u4f1a\u54e1ID: {member.member_id}\n\u767b\u9332\u65e5: {member.registration_date.strftime('%Y-%m-%d')}\n\n\u3010\u73fe\u5728\u306e\u72b6\u6cc1\u3011\n\u501f\u7528\u4e2d: {len(member.borrowed_books)}\u518a\n\u5ef6\u6ede\u56de\u6570: {member.overdue_count}\u56de\n\u5ef6\u6ede\u6599\u91d1: {member.fine_amount}\u5186\n\n\u3010\u501f\u7528\u4e2d\u306e\u672c\u3011\n\"\"\"\n\n        if member.borrowed_books:\n            for book in member.borrowed_books:\n                status = \"\u5ef6\u6ede\u4e2d\" if book.is_overdue() else \"\u6b63\u5e38\"\n                report += f\"- \u300e{book.title}\u300f({status})\\\\n\"\n        else:\n            report += \"\u306a\u3057\\\\n\"\n\n        report += f\"\\\\n\u3010\u904e\u53bb\u306e\u501f\u7528\u5c65\u6b74\uff08\u6700\u65b05\u4ef6\uff09\u3011\\\\n\"\n        recent_history = member.borrow_history[-5:]\n        for record in recent_history:\n            book = record[\"book\"]\n            borrowed = record[\"borrowed_date\"].strftime('%Y-%m-%d')\n            returned = record[\"returned_date\"].strftime('%Y-%m-%d') if record[\"returned_date\"] else \"\u672a\u8fd4\u5374\"\n            report += f\"- \u300e{book.title}\u300f\u501f\u7528: {borrowed}, \u8fd4\u5374: {returned}\\\\n\"\n\n        return report\n... \n\n&gt;&gt;&gt; # \u56f3\u66f8\u9928\u30b7\u30b9\u30c6\u30e0\u306e\u4f5c\u6210\n&gt;&gt;&gt; library = Library(\"\u4e2d\u592e\u56f3\u66f8\u9928\", \"\u6771\u4eac\u90fd\u5343\u4ee3\u7530\u533a1-1-1\")\n\n&gt;&gt;&gt; # \u672c\u3068\u5229\u7528\u8005\u3092\u56f3\u66f8\u9928\u306b\u767b\u9332\n&gt;&gt;&gt; library.add_book(book1)\n&gt;&gt;&gt; library.add_book(book2)\n&gt;&gt;&gt; library.add_book(book3)\n\n&gt;&gt;&gt; library.register_member(member1)\n&gt;&gt;&gt; library.register_member(member2)\n\n&gt;&gt;&gt; print(\"=== \u56f3\u66f8\u9928\u30b7\u30b9\u30c6\u30e0\u521d\u671f\u5316\u5b8c\u4e86 ===\")\n&gt;&gt;&gt; print(f\"\u56f3\u66f8\u9928\u540d: {library.name}\")\n&gt;&gt;&gt; print(f\"\u8535\u66f8\u6570: {len(library.books)}\u518a\")\n&gt;&gt;&gt; print(f\"\u4f1a\u54e1\u6570: {len(library.members)}\u4eba\")\n\n=== \u56f3\u66f8\u9928\u30b7\u30b9\u30c6\u30e0\u521d\u671f\u5316\u5b8c\u4e86 ===\n\u56f3\u66f8\u9928\u540d: \u4e2d\u592e\u56f3\u66f8\u9928\n\u8535\u66f8\u6570: 3\u518a\n\u4f1a\u54e1\u6570: 2\u4eba\n\n&gt;&gt;&gt; # \u672c\u306e\u691c\u7d22\n&gt;&gt;&gt; print(\"\\\\n=== \u672c\u306e\u691c\u7d22 ===\")\n&gt;&gt;&gt; python_books = library.search_books(\"Python\", \"title\")\n&gt;&gt;&gt; print(f\"'Python'\u3092\u542b\u3080\u672c: {len(python_books)}\u518a\")\n&gt;&gt;&gt; for book in python_books:\n...     print(f\"- \u300e{book.title}\u300f({book.get_status()})\")\n\n=== \u672c\u306e\u691c\u7d22 ===\n'Python'\u3092\u542b\u3080\u672c: 1\u518a\n- \u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f(\u8cb8\u51fa\u4e2d\uff08\u501f\u308a\u624b: \u7530\u4e2d\u592a\u90ce\uff09)\n\n&gt;&gt;&gt; # \u56f3\u66f8\u9928\u30b7\u30b9\u30c6\u30e0\u7d4c\u7531\u3067\u306e\u8cb8\u51fa\u30fb\u8fd4\u5374\n&gt;&gt;&gt; print(\"\\\\n=== \u30b7\u30b9\u30c6\u30e0\u7d4c\u7531\u3067\u306e\u64cd\u4f5c ===\")\n&gt;&gt;&gt; success, message = library.return_book(\"M001\", \"978-4-12-345678-9\")\n&gt;&gt;&gt; print(f\"\u8fd4\u5374: {message}\")\n\n&gt;&gt;&gt; success, message = library.borrow_book(\"M002\", \"978-4-12-345678-9\")\n&gt;&gt;&gt; print(f\"\u8cb8\u51fa: {message}\")\n\n=== \u30b7\u30b9\u30c6\u30e0\u7d4c\u7531\u3067\u306e\u64cd\u4f5c ===\n\u8fd4\u5374: 'Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\n\u8cb8\u51fa: 'Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u3092\u4f50\u85e4\u82b1\u5b50\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n\n&gt;&gt;&gt; # \u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\n&gt;&gt;&gt; print(library.generate_report())\n\n=== \u4e2d\u592e\u56f3\u66f8\u9928 \u7d71\u8a08\u30ec\u30dd\u30fc\u30c8 ===\n\u751f\u6210\u65e5\u6642: 2024-12-19 11:20:00\n\n\u3010\u8535\u66f8\u60c5\u5831\u3011\n\u7dcf\u8535\u66f8\u6570: 3\u518a\n\u8cb8\u51fa\u53ef\u80fd: 1\u518a\n\u8cb8\u51fa\u4e2d: 2\u518a\n\u5ef6\u6ede\u4e2d: 0\u518a\n\n\u3010\u5229\u7528\u8005\u60c5\u5831\u3011\n\u7dcf\u4f1a\u54e1\u6570: 2\u4eba\n\u73fe\u5728\u306e\u501f\u7528\u8005\u6570: 2\u4eba\n\n\u3010\u4eba\u6c17\u66f8\u7c4d\u3011\n1. \u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f- \u8cb8\u51fa\u56de\u6570: 2\u56de\n2. \u300e\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u306e\u57fa\u790e\u300f- \u8cb8\u51fa\u56de\u6570: 1\u56de\n3. \u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f- \u8cb8\u51fa\u56de\u6570: 1\u56de\n\n&gt;&gt;&gt; # \u500b\u4eba\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\n&gt;&gt;&gt; print(library.get_member_report(\"M001\"))\n\n=== \u7530\u4e2d\u592a\u90ce\u3055\u3093\u306e\u5229\u7528\u72b6\u6cc1 ===\n\u4f1a\u54e1ID: M001\n\u767b\u9332\u65e5: 2024-12-19\n\n\u3010\u73fe\u5728\u306e\u72b6\u6cc1\u3011\n\u501f\u7528\u4e2d: 1\u518a\n\u5ef6\u6ede\u56de\u6570: 0\u56de\n\u5ef6\u6ede\u6599\u91d1: 0\u5186\n\n\u3010\u501f\u7528\u4e2d\u306e\u672c\u3011\n- \u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f(\u6b63\u5e38)\n\n\u3010\u904e\u53bb\u306e\u501f\u7528\u5c65\u6b74\uff08\u6700\u65b05\u4ef6\uff09\u3011\n- \u300ePython\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\u300f\u501f\u7528: 2024-12-19, \u8fd4\u5374: 2024-12-19\n- \u300e\u6a5f\u68b0\u5b66\u7fd2\u5b9f\u8df5\u30ac\u30a4\u30c9\u300f\u501f\u7528: 2024-12-19, \u8fd4\u5374: \u672a\u8fd4\u5374\n</code></pre>"},{"location":"chapter14/#_6","title":"\u7d99\u627f\u3068\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0","text":""},{"location":"chapter14/#_7","title":"\u7d99\u627f\uff1a\u30af\u30e9\u30b9\u306e\u6a5f\u80fd\u62e1\u5f35","text":"<pre><code>&gt;&gt;&gt; class SpecialMember(Member):\n...     \"\"\"\u7279\u5225\u4f1a\u54e1\u30af\u30e9\u30b9\uff08\u901a\u5e38\u4f1a\u54e1\u306e\u6a5f\u80fd\u3092\u7d99\u627f\u3057\u3001\u7279\u5178\u3092\u8ffd\u52a0\uff09\"\"\"\n...     \n...     def __init__(self, member_id, name, email, phone, membership_level=\"\u30b4\u30fc\u30eb\u30c9\"):\n...         # \u89aa\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3092\u547c\u3073\u51fa\u3057\n...         super().__init__(member_id, name, email, phone)\n...         self.membership_level = membership_level\n...         self.points = 0\n...         self.discount_rate = 0.5 if membership_level == \"\u30d7\u30e9\u30c1\u30ca\" else 0.3\n...     \n...     def can_borrow(self, max_books=10, max_overdue=5):\n...         \"\"\"\u7279\u5225\u4f1a\u54e1\u306f\u8cb8\u51fa\u5236\u9650\u304c\u7de9\u3044\"\"\"\n...         if not self.is_active:\n...             return False, \"\u30a2\u30ab\u30a6\u30f3\u30c8\u304c\u505c\u6b62\u3055\u308c\u3066\u3044\u307e\u3059\"\n...         \n...         if len(self.borrowed_books) &gt;= max_books:\n...             return False, f\"\u540c\u6642\u8cb8\u51fa\u9650\u5ea6\u6570({max_books}\u518a)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\"\n...         \n...         if self.overdue_count &gt;= max_overdue:\n...             return False, f\"\u5ef6\u6ede\u56de\u6570\u304c\u9650\u5ea6({max_overdue}\u56de)\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\"\n...         \n...         # \u7279\u5225\u4f1a\u54e1\u306f\u5ef6\u6ede\u6599\u91d1\u304c\u3042\u3063\u3066\u3082\u5c11\u984d\u306a\u3089\u8cb8\u51fa\u53ef\u80fd\n...         if self.fine_amount &gt; 500:\n...             return False, f\"\u5ef6\u6ede\u6599\u91d1\u304c500\u5186\u3092\u8d85\u3048\u3066\u3044\u307e\u3059: {self.fine_amount}\u5186\"\n...         \n...         return True, \"\u8cb8\u51fa\u53ef\u80fd\u3067\u3059\uff08\u7279\u5225\u4f1a\u54e1\u7279\u5178\u9069\u7528\uff09\"\n...     \n...     def borrow_book(self, book):\n...         \"\"\"\u672c\u3092\u501f\u308a\u308b\uff08\u30dd\u30a4\u30f3\u30c8\u4ed8\u4e0e\u3042\u308a\uff09\"\"\"\n...         success, message = super().borrow_book(book)\n...         if success:\n...             # \u501f\u7528\u3067\u30dd\u30a4\u30f3\u30c8\u4ed8\u4e0e\n...             points_earned = 10\n...             self.points += points_earned\n...             message += f\" ({points_earned}\u30dd\u30a4\u30f3\u30c8\u7372\u5f97)\"\n...         return success, message\n...     \n...     def pay_fine(self, amount):\n...         \"\"\"\u5ef6\u6ede\u6599\u91d1\u3092\u652f\u6255\u3046\uff08\u5272\u5f15\u9069\u7528\uff09\"\"\"\n...         discounted_amount = int(amount * (1 - self.discount_rate))\n...         \n...         if discounted_amount &gt; self.fine_amount:\n...             return False, f\"\u652f\u6255\u3044\u91d1\u984d\u304c\u5ef6\u6ede\u6599\u91d1\u3092\u8d85\u3048\u3066\u3044\u307e\u3059\uff08\u5272\u5f15\u5f8c\u5ef6\u6ede\u6599\u91d1: {self.fine_amount}\u5186\uff09\"\n...         \n...         self.fine_amount -= discounted_amount\n...         return True, f\"{discounted_amount}\u5186\u3092\u652f\u6255\u3044\u307e\u3057\u305f\uff08{self.membership_level}\u4f1a\u54e1{self.discount_rate:.0%}\u5272\u5f15\u9069\u7528\uff09\"\n...     \n...     def use_points(self, points):\n...         \"\"\"\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u5ef6\u6ede\u6599\u91d1\u3092\u652f\u6255\u3046\"\"\"\n...         if points &gt; self.points:\n...             return False, f\"\u30dd\u30a4\u30f3\u30c8\u304c\u4e0d\u8db3\u3057\u3066\u3044\u307e\u3059\uff08\u4fdd\u6709: {self.points}\u30dd\u30a4\u30f3\u30c8\uff09\"\n...         \n...         # 1\u30dd\u30a4\u30f3\u30c8 = 1\u5186\n...         if points &gt; self.fine_amount:\n...             points = self.fine_amount\n...         \n...         self.points -= points\n...         self.fine_amount -= points\n...         return True, f\"{points}\u30dd\u30a4\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\uff08\u6b8b\u308a\u30dd\u30a4\u30f3\u30c8: {self.points}\uff09\"\n...     \n...     def get_member_info(self):\n...         \"\"\"\u4f1a\u54e1\u60c5\u5831\u3092\u53d6\u5f97\uff08\u7279\u5225\u4f1a\u54e1\u60c5\u5831\u3092\u8ffd\u52a0\uff09\"\"\"\n...         info = super().get_member_info()\n...         info.update({\n...             \"\u4f1a\u54e1\u30ec\u30d9\u30eb\": self.membership_level,\n...             \"\u4fdd\u6709\u30dd\u30a4\u30f3\u30c8\": self.points,\n...             \"\u5ef6\u6ede\u6599\u91d1\u5272\u5f15\u7387\": f\"{self.discount_rate:.0%}\"\n...         })\n...         return info\n... \n\n&gt;&gt;&gt; class DigitalBook(Book):\n...     \"\"\"\u96fb\u5b50\u66f8\u7c4d\u30af\u30e9\u30b9\uff08\u901a\u5e38\u306e\u672c\u3092\u7d99\u627f\u3057\u3001\u30c7\u30b8\u30bf\u30eb\u7279\u6709\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\uff09\"\"\"\n...     \n...     def __init__(self, isbn, title, author, genre, published_year, file_size_mb, format_type=\"PDF\"):\n...         # \u89aa\u30af\u30e9\u30b9\u306e\u521d\u671f\u5316\u3092\u547c\u3073\u51fa\u3057\n...         super().__init__(isbn, title, author, genre, published_year)\n...         self.file_size_mb = file_size_mb\n...         self.format_type = format_type\n...         self.download_count = 0\n...         self.max_concurrent_users = 5  # \u540c\u6642\u5229\u7528\u8005\u6570\u5236\u9650\n...         self.current_users = []\n...     \n...     def borrow(self, borrower_name, loan_period_days=30):\n...         \"\"\"\u96fb\u5b50\u66f8\u7c4d\u306e\u8cb8\u51fa\uff08\u540c\u6642\u5229\u7528\u8005\u6570\u5236\u9650\u3042\u308a\uff09\"\"\"\n...         if len(self.current_users) &gt;= self.max_concurrent_users:\n...             return False, f\"'{self.title}'\u306f\u540c\u6642\u5229\u7528\u8005\u6570\u4e0a\u9650\u306b\u9054\u3057\u3066\u3044\u307e\u3059\uff08{self.max_concurrent_users}\u4eba\uff09\"\n...         \n...         if borrower_name in self.current_users:\n...             return False, f\"'{self.title}'\u306f\u65e2\u306b{borrower_name}\u3055\u3093\u304c\u5229\u7528\u4e2d\u3067\u3059\"\n...         \n...         self.current_users.append(borrower_name)\n...         self.download_count += 1\n...         \n...         # \u8cb8\u51fa\u5c65\u6b74\u306b\u8a18\u9332\uff08\u96fb\u5b50\u66f8\u7c4d\u306f\u501f\u308a\u305f\u65e5\u3068\u671f\u9650\u306e\u307f\u8a18\u9332\uff09\n...         borrow_record = {\n...             \"borrower\": borrower_name,\n...             \"borrowed_date\": datetime.now(),\n...             \"due_date\": datetime.now() + timedelta(days=loan_period_days),\n...             \"returned_date\": None,\n...             \"download_count\": self.download_count\n...         }\n...         self.borrow_history.append(borrow_record)\n...         \n...         return True, f\"'{self.title}'\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\uff08\u5229\u7528\u671f\u9650: 30\u65e5\u9593\uff09\"\n...     \n...     def return_book(self, borrower_name=None):\n...         \"\"\"\u96fb\u5b50\u66f8\u7c4d\u306e\u8fd4\u5374\uff08\u7279\u5b9a\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30bb\u30b9\u7d42\u4e86\uff09\"\"\"\n...         if borrower_name and borrower_name in self.current_users:\n...             self.current_users.remove(borrower_name)\n...             \n...             # \u8cb8\u51fa\u5c65\u6b74\u3092\u66f4\u65b0\n...             for record in reversed(self.borrow_history):\n...                 if record[\"borrower\"] == borrower_name and record[\"returned_date\"] is None:\n...                     record[\"returned_date\"] = datetime.now()\n...                     break\n...             \n...             return True, f\"'{self.title}'\u306e\u5229\u7528\u3092\u7d42\u4e86\u3057\u307e\u3057\u305f\"\n...         else:\n...             return False, f\"'{self.title}'\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u305b\u3093\"\n...     \n...     def get_status(self):\n...         \"\"\"\u96fb\u5b50\u66f8\u7c4d\u306e\u72b6\u614b\u3092\u53d6\u5f97\"\"\"\n...         return f\"\u5229\u7528\u53ef\u80fd\uff08\u73fe\u5728\u306e\u5229\u7528\u8005: {len(self.current_users)}/{self.max_concurrent_users}\u4eba\uff09\"\n...     \n...     def get_info(self):\n...         \"\"\"\u96fb\u5b50\u66f8\u7c4d\u306e\u8a73\u7d30\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         info = super().get_info()\n...         info.update({\n...             \"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\": f\"{self.file_size_mb} MB\",\n...             \"\u5f62\u5f0f\": self.format_type,\n...             \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u56de\u6570\": self.download_count,\n...             \"\u73fe\u5728\u306e\u5229\u7528\u8005\u6570\": len(self.current_users)\n...         })\n...         return info\n... \n\n&gt;&gt;&gt; # \u7279\u5225\u4f1a\u54e1\u3068\u96fb\u5b50\u66f8\u7c4d\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u7d99\u627f\u3068\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u7279\u5225\u4f1a\u54e1\u306e\u4f5c\u6210\n&gt;&gt;&gt; vip_member = SpecialMember(\"V001\", \"\u9ad8\u6a4bVIP\", \"takahashi@example.com\", \"070-1111-2222\", \"\u30d7\u30e9\u30c1\u30ca\")\n\n&gt;&gt;&gt; # \u96fb\u5b50\u66f8\u7c4d\u306e\u4f5c\u6210\n&gt;&gt;&gt; ebook = DigitalBook(\"978-4-00-111111-1\", \"Python\u5b8c\u5168\u30ac\u30a4\u30c9\uff08\u96fb\u5b50\u7248\uff09\", \"\u30c7\u30b8\u30bf\u30eb\u8457\u8005\", \"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\", 2024, 25.5, \"EPUB\")\n\n&gt;&gt;&gt; print(f\"\u7279\u5225\u4f1a\u54e1: {vip_member.name}\u3055\u3093 ({vip_member.membership_level}\u4f1a\u54e1)\")\n&gt;&gt;&gt; print(f\"\u96fb\u5b50\u66f8\u7c4d: \u300e{ebook.title}\u300f({ebook.file_size_mb}MB, {ebook.format_type}\u5f62\u5f0f)\")\n\n=== \u7d99\u627f\u3068\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u30c6\u30b9\u30c8 ===\n\u7279\u5225\u4f1a\u54e1: \u9ad8\u6a4bVIP\u3055\u3093 (\u30d7\u30e9\u30c1\u30ca\u4f1a\u54e1)\n\u96fb\u5b50\u66f8\u7c4d: \u300ePython\u5b8c\u5168\u30ac\u30a4\u30c9\uff08\u96fb\u5b50\u7248\uff09\u300f(25.5MB, EPUB\u5f62\u5f0f)\n\n&gt;&gt;&gt; # \u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u30c6\u30b9\u30c8\uff08\u540c\u3058\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u7570\u306a\u308b\u52d5\u4f5c\uff09\n&gt;&gt;&gt; print(\"\\\\n=== \u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u901a\u5e38\u306e\u672c\u306e\u8cb8\u51fa\n&gt;&gt;&gt; success, message = book1.borrow(\"\u4e00\u822c\u5229\u7528\u8005\")\n&gt;&gt;&gt; print(f\"\u901a\u5e38\u672c: {message}\")\n\n&gt;&gt;&gt; # \u96fb\u5b50\u66f8\u7c4d\u306e\u8cb8\u51fa\n&gt;&gt;&gt; success, message = ebook.borrow(\"VIP\u5229\u7528\u8005\")\n&gt;&gt;&gt; print(f\"\u96fb\u5b50\u66f8\u7c4d: {message}\")\n\n&gt;&gt;&gt; # \u7279\u5225\u4f1a\u54e1\u306e\u60c5\u5831\u8868\u793a\n&gt;&gt;&gt; vip_info = vip_member.get_member_info()\n&gt;&gt;&gt; print(f\"\\\\n\u7279\u5225\u4f1a\u54e1\u60c5\u5831: {vip_info['\u4f1a\u54e1\u30ec\u30d9\u30eb']}\u4f1a\u54e1, \u30dd\u30a4\u30f3\u30c8: {vip_info['\u4fdd\u6709\u30dd\u30a4\u30f3\u30c8']}\")\n\n=== \u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u30c6\u30b9\u30c8 ===\n\u901a\u5e38\u672c: 'Python\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580'\u3092\u4e00\u822c\u5229\u7528\u8005\u3055\u3093\u306b\u8cb8\u3057\u51fa\u3057\u307e\u3057\u305f\uff08\u8fd4\u5374\u671f\u9650: 2024-12-19\uff09\n\u96fb\u5b50\u66f8\u7c4d: 'Python\u5b8c\u5168\u30ac\u30a4\u30c9\uff08\u96fb\u5b50\u7248\uff09'\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\uff08\u5229\u7528\u671f\u9650: 30\u65e5\u9593\uff09\n\n\u7279\u5225\u4f1a\u54e1\u60c5\u5831: \u30d7\u30e9\u30c1\u30ca\u4f1a\u54e1, \u30dd\u30a4\u30f3\u30c8: 0\n</code></pre>"},{"location":"chapter14/#_8","title":"\u307e\u3068\u3081\uff1a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u5a01\u529b","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter14/#_9","title":"\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u30af\u30e9\u30b9: \u8a2d\u8a08\u56f3\uff08\u30c7\u30fc\u30bf\u3068\u51e6\u7406\u3092\u307e\u3068\u3081\u305f\u578b\uff09</li> <li>\u30aa\u30d6\u30b8\u30a7\u30af\u30c8: \u8a2d\u8a08\u56f3\u304b\u3089\u4f5c\u3089\u308c\u305f\u5b9f\u969b\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9</li> <li>\u5c5e\u6027: \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6301\u3064\u30c7\u30fc\u30bf</li> <li>\u30e1\u30bd\u30c3\u30c9: \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u5b9f\u884c\u3067\u304d\u308b\u51e6\u7406</li> </ul>"},{"location":"chapter14/#_10","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u306e\u56db\u5927\u539f\u5247","text":""},{"location":"chapter14/#1","title":"1. \u30ab\u30d7\u30bb\u30eb\u5316","text":"<pre><code>class BankAccount:\n    def __init__(self, balance):\n        self._balance = balance  # \u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u5c5e\u6027\n\n    def get_balance(self):\n        return self._balance\n\n    def deposit(self, amount):\n        if amount &gt; 0:\n            self._balance += amount\n</code></pre>"},{"location":"chapter14/#2","title":"2. \u7d99\u627f","text":"<pre><code>class SavingsAccount(BankAccount):\n    def __init__(self, balance, interest_rate):\n        super().__init__(balance)\n        self.interest_rate = interest_rate\n</code></pre>"},{"location":"chapter14/#3","title":"3. \u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0","text":"<pre><code># \u540c\u3058\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u7570\u306a\u308b\u52d5\u4f5c\naccount1 = BankAccount(1000)\naccount2 = SavingsAccount(1000, 0.02)\n\n# \u3069\u3061\u3089\u3082 deposit \u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u304c\u3001\u5185\u90e8\u52d5\u4f5c\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\naccount1.deposit(100)\naccount2.deposit(100)\n</code></pre>"},{"location":"chapter14/#4","title":"4. \u62bd\u8c61\u5316","text":"<pre><code># \u8907\u96d1\u306a\u5185\u90e8\u51e6\u7406\u3092\u96a0\u3057\u3066\u3001\u7c21\u5358\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u63d0\u4f9b\nlibrary = Library(\"\u4e2d\u592e\u56f3\u66f8\u9928\", \"\u4f4f\u6240\")\nlibrary.borrow_book(\"M001\", \"978-4-12-345678-9\")  # \u8907\u96d1\u306a\u51e6\u7406\u304c\u96a0\u3055\u308c\u3066\u3044\u308b\n</code></pre>"},{"location":"chapter14/#_11","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u56f3\u66f8\u9928\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0: Book, Member, Library \u30af\u30e9\u30b9</li> <li>\u7279\u5225\u4f1a\u54e1\u30b7\u30b9\u30c6\u30e0: \u7d99\u627f\u306b\u3088\u308b\u6a5f\u80fd\u62e1\u5f35</li> <li>\u96fb\u5b50\u66f8\u7c4d\u30b7\u30b9\u30c6\u30e0: \u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306b\u3088\u308b\u67d4\u8edf\u306a\u8a2d\u8a08</li> <li>\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u6a5f\u80fd: \u30af\u30e9\u30b9\u9593\u306e\u9023\u643a</li> </ul>"},{"location":"chapter14/#_12","title":"\u8a2d\u8a08\u306e\u30dd\u30a4\u30f3\u30c8","text":"<ol> <li>\u5358\u4e00\u8cac\u4efb\u539f\u5247: \u5404\u30af\u30e9\u30b9\u306f\u4e00\u3064\u306e\u8cac\u4efb\u3092\u6301\u3064</li> <li>\u958b\u653e\u9589\u9396\u539f\u5247: \u62e1\u5f35\u306b\u5bfe\u3057\u3066\u958b\u653e\u3001\u4fee\u6b63\u306b\u5bfe\u3057\u3066\u9589\u9396</li> <li>\u4f9d\u5b58\u6027\u306e\u9006\u8ee2: \u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3067\u306f\u306a\u304f\u62bd\u8c61\u306b\u4f9d\u5b58</li> <li>\u7d99\u627f\u3088\u308a\u3082\u5408\u6210: \u8907\u96d1\u306a\u7d99\u627f\u968e\u5c64\u3088\u308a\u3082\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b</li> </ol> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u4f5c\u6210\u3057\u305f\u30af\u30e9\u30b9\u3092\u6574\u7406\u3057\u3001\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u69cb\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c14\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c14\u7ae0\u3067\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u6307\u5411\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u6982\u5ff5\u304b\u3089\u5b9f\u8df5\u7684\u306a\u5fdc\u7528\u307e\u3067\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u30af\u30e9\u30b9\u3068\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u95a2\u4fc2\u3001\u30ab\u30d7\u30bb\u30eb\u5316\u306e\u91cd\u8981\u6027\u3001\u7d99\u627f\u306b\u3088\u308b\u6a5f\u80fd\u62e1\u5f35\u3001\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306b\u3088\u308b\u67d4\u8edf\u6027\u3092\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u56f3\u66f8\u9928\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3057\u3001Book\u3001Member\u3001Library\u3001SpecialMember\u3001DigitalBook\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3002\u7d99\u627f\u3068\u30dd\u30ea\u30e2\u30fc\u30d5\u30a3\u30ba\u30e0\u306e\u5b9f\u88c5\u4f8b\u3082\u542b\u3080\u5b8c\u5168\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3002\u6b21\u306f\u7b2c15\u7ae0\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter15/","title":"\u7b2c15\u7ae0\uff1a\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u4e16\u754c","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30ea\u30b9\u30c8\u3084\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4e00\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u9806\u6b21\u51e6\u7406\u3059\u308b\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u51e6\u7406\u3059\u308b\u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u3084\u3001\u7121\u9650\u6570\u5217\u3092\u6271\u3046\u6570\u5b66\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30e1\u30e2\u30ea\u52b9\u7387\u306e\u826f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u65b9\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter15/#_1","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u306f\u4f55\u304b\uff1f","text":""},{"location":"chapter15/#_2","title":"\u53cd\u5fa9\u51e6\u7406\u306e\u57fa\u672c\u6982\u5ff5","text":"<p>\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u306f\u3001\u30c7\u30fc\u30bf\u306e\u96c6\u5408\u3092\u4e00\u3064\u305a\u3064\u9806\u756a\u306b\u53d6\u308a\u51fa\u3059\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002for\u6587\u3067\u4f7f\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u591a\u304f\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u53cd\u5fa9\u51e6\u7406\n&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5]\n&gt;&gt;&gt; \n&gt;&gt;&gt; # for\u6587\u306b\u3088\u308b\u53cd\u5fa9\uff08\u5185\u90e8\u3067\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\uff09\n&gt;&gt;&gt; for num in numbers:\n...     print(f\"\u6570\u5024: {num}\")\n\u6570\u5024: 1\n\u6570\u5024: 2\n\u6570\u5024: 3\n\u6570\u5024: 4\n\u6570\u5024: 5\n\n&gt;&gt;&gt; # \u6587\u5b57\u5217\u3082\u53cd\u5fa9\u53ef\u80fd\n&gt;&gt;&gt; text = \"Python\"\n&gt;&gt;&gt; for char in text:\n...     print(f\"\u6587\u5b57: {char}\")\n\u6587\u5b57: P\n\u6587\u5b57: y\n\u6587\u5b57: t\n\u6587\u5b57: h\n\u6587\u5b57: o\n\u6587\u5b57: n\n\n&gt;&gt;&gt; # \u8f9e\u66f8\u3082\u53cd\u5fa9\u53ef\u80fd\n&gt;&gt;&gt; person = {\"name\": \"\u7530\u4e2d\", \"age\": 30, \"city\": \"\u6771\u4eac\"}\n&gt;&gt;&gt; for key in person:\n...     print(f\"\u30ad\u30fc: {key}, \u5024: {person[key]}\")\n\u30ad\u30fc: name, \u5024: \u7530\u4e2d\n\u30ad\u30fc: age, \u5024: 30\n\u30ad\u30fc: city, \u5024: \u6771\u4eac\n</code></pre>"},{"location":"chapter15/#_3","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3088\u3046","text":"<pre><code>&gt;&gt;&gt; # iter()\u3068next()\u3092\u4f7f\u3063\u305f\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u624b\u52d5\u64cd\u4f5c\n&gt;&gt;&gt; numbers = [1, 2, 3]\n&gt;&gt;&gt; iterator = iter(numbers)  # \u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\n&gt;&gt;&gt; \n&gt;&gt;&gt; print(f\"\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b: {type(iterator)}\")\n&gt;&gt;&gt; \n&gt;&gt;&gt; # next()\u3067\u4e00\u3064\u305a\u3064\u53d6\u5f97\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e\u8981\u7d20: {next(iterator)}\")\n&gt;&gt;&gt; print(f\"\u6b21\u306e\u8981\u7d20: {next(iterator)}\")\n&gt;&gt;&gt; print(f\"\u6700\u5f8c\u306e\u8981\u7d20: {next(iterator)}\")\n\n\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u578b: &lt;class 'list_iterator'&gt;\n\u6700\u521d\u306e\u8981\u7d20: 1\n\u6b21\u306e\u8981\u7d20: 2\n\u6700\u5f8c\u306e\u8981\u7d20: 3\n\n&gt;&gt;&gt; # \u3059\u3079\u3066\u53d6\u5f97\u3057\u305f\u5f8c\u306fStopIteration\u30a8\u30e9\u30fc\n&gt;&gt;&gt; try:\n...     print(f\"\u3082\u3046\u8981\u7d20\u304c\u306a\u3044: {next(iterator)}\")\n... except StopIteration:\n...     print(\"\u3059\u3079\u3066\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\")\n\u3059\u3079\u3066\u306e\u8981\u7d20\u3092\u53d6\u5f97\u3057\u307e\u3057\u305f\n\n&gt;&gt;&gt; # range()\u3082\u30a4\u30c6\u30ec\u30fc\u30bf\n&gt;&gt;&gt; range_iter = iter(range(3))\n&gt;&gt;&gt; print(f\"range(3)\u306e\u8981\u7d20: {list(range_iter)}\")\nrange(3)\u306e\u8981\u7d20: [0, 1, 2]\n</code></pre>"},{"location":"chapter15/#_4","title":"\u30ab\u30b9\u30bf\u30e0\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u4f5c\u6210","text":"<pre><code>&gt;&gt;&gt; class CountDown:\n...     \"\"\"\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u3092\u884c\u3046\u30a4\u30c6\u30ec\u30fc\u30bf\"\"\"\n...     \n...     def __init__(self, start):\n...         self.start = start\n...         self.current = start\n...     \n...     def __iter__(self):\n...         \"\"\"\u30a4\u30c6\u30ec\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u81ea\u4f53\u3092\u8fd4\u3059\"\"\"\n...         return self\n...     \n...     def __next__(self):\n...         \"\"\"\u6b21\u306e\u8981\u7d20\u3092\u8fd4\u3059\"\"\"\n...         if self.current &lt;= 0:\n...             raise StopIteration\n...         \n...         current_value = self.current\n...         self.current -= 1\n...         return current_value\n... \n\n&gt;&gt;&gt; # \u30ab\u30b9\u30bf\u30e0\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u4f7f\u7528\n&gt;&gt;&gt; countdown = CountDown(5)\n&gt;&gt;&gt; print(\"\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u958b\u59cb:\")\n&gt;&gt;&gt; for num in countdown:\n...     print(f\"\u3042\u3068 {num} \u79d2\")\n&gt;&gt;&gt; print(\"\u6642\u9593\u5207\u308c!\")\n\n\u30ab\u30a6\u30f3\u30c8\u30c0\u30a6\u30f3\u958b\u59cb:\n\u3042\u3068 5 \u79d2\n\u3042\u3068 4 \u79d2\n\u3042\u3068 3 \u79d2\n\u3042\u3068 2 \u79d2\n\u3042\u3068 1 \u79d2\n\u6642\u9593\u5207\u308c!\n\n&gt;&gt;&gt; # \u624b\u52d5\u3067next()\u3092\u4f7f\u7528\n&gt;&gt;&gt; countdown2 = CountDown(3)\n&gt;&gt;&gt; try:\n...     while True:\n...         print(f\"\u624b\u52d5\u30ab\u30a6\u30f3\u30c8: {next(countdown2)}\")\n... except StopIteration:\n...     print(\"\u624b\u52d5\u30ab\u30a6\u30f3\u30c8\u7d42\u4e86\")\n\n\u624b\u52d5\u30ab\u30a6\u30f3\u30c8: 3\n\u624b\u52d5\u30ab\u30a6\u30f3\u30c8: 2\n\u624b\u52d5\u30ab\u30a6\u30f3\u30c8: 1\n\u624b\u52d5\u30ab\u30a6\u30f3\u30c8\u7d42\u4e86\n</code></pre>"},{"location":"chapter15/#_5","title":"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff1a\u7c21\u5358\u306b\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u308b","text":""},{"location":"chapter15/#yield","title":"yield\u6587\u3092\u4f7f\u3063\u305f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<p>\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306f\u3001yield\u6587\u3092\u4f7f\u3063\u3066\u7c21\u5358\u306b\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u4f5c\u308b\u65b9\u6cd5\u3067\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; def simple_counter(max_count):\n...     \"\"\"\u30b7\u30f3\u30d7\u30eb\u306a\u30ab\u30a6\u30f3\u30bf\u30fc\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...     count = 1\n...     while count &lt;= max_count:\n...         yield count  # yield\u6587\u3067\u5024\u3092\u8fd4\u3057\u3001\u72b6\u614b\u3092\u4fdd\u6301\n...         count += 1\n... \n\n&gt;&gt;&gt; # \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u4f7f\u7528\n&gt;&gt;&gt; counter = simple_counter(3)\n&gt;&gt;&gt; print(f\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u578b: {type(counter)}\")\n\n&gt;&gt;&gt; for num in counter:\n...     print(f\"\u30ab\u30a6\u30f3\u30c8: {num}\")\n\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u578b: &lt;class 'generator'&gt;\n\u30ab\u30a6\u30f3\u30c8: 1\n\u30ab\u30a6\u30f3\u30c8: 2\n\u30ab\u30a6\u30f3\u30c8: 3\n\n&gt;&gt;&gt; # \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306f\u4e00\u5ea6\u3057\u304b\u4f7f\u3048\u306a\u3044\n&gt;&gt;&gt; print(f\"\u518d\u5ea6\u5b9f\u884c: {list(counter)}\")  # \u7a7a\u306e\u30ea\u30b9\u30c8\n\u518d\u5ea6\u5b9f\u884c: []\n\n&gt;&gt;&gt; # \u65b0\u3057\u3044\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f5c\u6210\n&gt;&gt;&gt; counter2 = simple_counter(3)\n&gt;&gt;&gt; print(f\"\u65b0\u3057\u3044\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf: {list(counter2)}\")\n\u65b0\u3057\u3044\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf: [1, 2, 3]\n</code></pre>"},{"location":"chapter15/#_6","title":"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; def fibonacci_generator(max_value):\n...     \"\"\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u3092\u751f\u6210\u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...     a, b = 0, 1\n...     while a &lt;= max_value:\n...         yield a\n...         a, b = b, a + b\n... \n\n&gt;&gt;&gt; # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u751f\u6210\n&gt;&gt;&gt; print(\"100\u4ee5\u4e0b\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217:\")\n&gt;&gt;&gt; fib = fibonacci_generator(100)\n&gt;&gt;&gt; for num in fib:\n...     print(num, end=\" \")\n&gt;&gt;&gt; print()\n\n100\u4ee5\u4e0b\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217:\n0 1 1 2 3 5 8 13 21 34 55 89 \n\n&gt;&gt;&gt; # \u7121\u9650\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff08\u6ce8\u610f\uff1a\u7121\u9650\u30eb\u30fc\u30d7\u306b\u306a\u308b\u53ef\u80fd\u6027\uff09\n&gt;&gt;&gt; def infinite_fibonacci():\n...     \"\"\"\u7121\u9650\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...     a, b = 0, 1\n...     while True:\n...         yield a\n...         a, b = b, a + b\n... \n\n&gt;&gt;&gt; # \u6700\u521d\u306e10\u500b\u3060\u3051\u53d6\u5f97\n&gt;&gt;&gt; infinite_fib = infinite_fibonacci()\n&gt;&gt;&gt; first_10_fib = []\n&gt;&gt;&gt; for i, num in enumerate(infinite_fib):\n...     if i &gt;= 10:\n...         break\n...     first_10_fib.append(num)\n&gt;&gt;&gt; \n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e10\u500b\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570: {first_10_fib}\")\n\u6700\u521d\u306e10\u500b\u306e\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n</code></pre>"},{"location":"chapter15/#_7","title":"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u5f0f\uff08\u5185\u5305\u8868\u8a18\uff09","text":"<pre><code>&gt;&gt;&gt; # \u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\n&gt;&gt;&gt; squares_list = [x**2 for x in range(5)]\n&gt;&gt;&gt; print(f\"\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18: {squares_list}\")\n&gt;&gt;&gt; print(f\"\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\uff08\u6982\u7b97\uff09: {squares_list.__sizeof__()}\u30d0\u30a4\u30c8\")\n\n\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18: [0, 1, 4, 9, 16]\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\uff08\u6982\u7b97\uff09: 120\u30d0\u30a4\u30c8\n\n&gt;&gt;&gt; # \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u5f0f\uff08\u62ec\u5f27\u3092\u4f7f\u7528\uff09\n&gt;&gt;&gt; squares_gen = (x**2 for x in range(5))\n&gt;&gt;&gt; print(f\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u5f0f: {type(squares_gen)}\")\n&gt;&gt;&gt; print(f\"\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\uff08\u6982\u7b97\uff09: {squares_gen.__sizeof__()}\u30d0\u30a4\u30c8\")\n&gt;&gt;&gt; print(f\"\u5024: {list(squares_gen)}\")\n\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u5f0f: &lt;class 'generator'&gt;\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\uff08\u6982\u7b97\uff09: 112\u30d0\u30a4\u30c8\n\u5024: [0, 1, 4, 9, 16]\n\n&gt;&gt;&gt; # \u5927\u304d\u306a\u30c7\u30fc\u30bf\u3067\u306e\u6bd4\u8f03\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; \n&gt;&gt;&gt; # 1\u4e07\u500b\u306e\u8981\u7d20\u306e\u30ea\u30b9\u30c8\n&gt;&gt;&gt; big_list = [x**2 for x in range(10000)]\n&gt;&gt;&gt; print(f\"\u30ea\u30b9\u30c8\uff081\u4e07\u8981\u7d20\uff09\u306e\u30e1\u30e2\u30ea: {sys.getsizeof(big_list):,}\u30d0\u30a4\u30c8\")\n&gt;&gt;&gt; \n&gt;&gt;&gt; # 1\u4e07\u500b\u306e\u8981\u7d20\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\n&gt;&gt;&gt; big_gen = (x**2 for x in range(10000))\n&gt;&gt;&gt; print(f\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff081\u4e07\u8981\u7d20\uff09\u306e\u30e1\u30e2\u30ea: {sys.getsizeof(big_gen):,}\u30d0\u30a4\u30c8\")\n\n\u30ea\u30b9\u30c8\uff081\u4e07\u8981\u7d20\uff09\u306e\u30e1\u30e2\u30ea: 87,624\u30d0\u30a4\u30c8\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff081\u4e07\u8981\u7d20\uff09\u306e\u30e1\u30e2\u30ea: 112\u30d0\u30a4\u30c8\n</code></pre>"},{"location":"chapter15/#_8","title":"\u3010\u5b9f\u884c\u3011\u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046","text":"<p>\u5927\u91cf\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u52b9\u7387\u7684\u306b\u51e6\u7406\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u5b9f\u7528\u6027\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter15/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; from datetime import datetime, timedelta\n&gt;&gt;&gt; import random\n\n&gt;&gt;&gt; def generate_sample_logs(filename, num_logs=1000):\n...     \"\"\"\u30b5\u30f3\u30d7\u30eb\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\"\"\"\n...     log_levels = [\"INFO\", \"WARNING\", \"ERROR\", \"DEBUG\"]\n...     users = [\"user001\", \"user002\", \"user003\", \"admin\", \"guest\"]\n...     actions = [\"login\", \"logout\", \"view_page\", \"upload\", \"download\", \"delete\"]\n...     \n...     start_time = datetime.now() - timedelta(days=7)\n...     \n...     with open(filename, 'w', encoding='utf-8') as f:\n...         for i in range(num_logs):\n...             timestamp = start_time + timedelta(seconds=i*10 + random.randint(0, 9))\n...             level = random.choice(log_levels)\n...             user = random.choice(users)\n...             action = random.choice(actions)\n...             ip = f\"192.168.1.{random.randint(1, 255)}\"\n...             \n...             log_line = f\"{timestamp.strftime('%Y-%m-%d %H:%M:%S')} [{level}] {user} {action} from {ip}\\\\n\"\n...             f.write(log_line)\n...     \n...     print(f\"\u30b5\u30f3\u30d7\u30eb\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb '{filename}' \u3092\u751f\u6210\u3057\u307e\u3057\u305f\uff08{num_logs}\u884c\uff09\")\n\n&gt;&gt;&gt; # \u30b5\u30f3\u30d7\u30eb\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\n&gt;&gt;&gt; generate_sample_logs(\"system.log\", 5000)\n\u30b5\u30f3\u30d7\u30eb\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb 'system.log' \u3092\u751f\u6210\u3057\u307e\u3057\u305f\uff085000\u884c\uff09\n\n&gt;&gt;&gt; class LogFileReader:\n...     \"\"\"\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u52b9\u7387\u7684\u306b\u8aad\u307f\u8fbc\u3080\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, filename):\n...         self.filename = filename\n...         self.total_lines = 0\n...         self._count_lines()\n...     \n...     def _count_lines(self):\n...         \"\"\"\u30d5\u30a1\u30a4\u30eb\u306e\u884c\u6570\u3092\u30ab\u30a6\u30f3\u30c8\"\"\"\n...         try:\n...             with open(self.filename, 'r', encoding='utf-8') as f:\n...                 self.total_lines = sum(1 for _ in f)\n...         except FileNotFoundError:\n...             self.total_lines = 0\n...     \n...     def read_lines(self):\n...         \"\"\"\u5168\u884c\u3092\u4e00\u5ea6\u306b\u30e1\u30e2\u30ea\u306b\u8aad\u307f\u8fbc\u3080\uff08\u975e\u52b9\u7387\uff09\"\"\"\n...         try:\n...             with open(self.filename, 'r', encoding='utf-8') as f:\n...                 return f.readlines()\n...         except FileNotFoundError:\n...             return []\n...     \n...     def read_lines_generator(self):\n...         \"\"\"\u884c\u3092\u4e00\u3064\u305a\u3064 yield \u3059\u308b\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff08\u52b9\u7387\u7684\uff09\"\"\"\n...         try:\n...             with open(self.filename, 'r', encoding='utf-8') as f:\n...                 for line_num, line in enumerate(f, 1):\n...                     yield line_num, line.strip()\n...         except FileNotFoundError:\n...             return\n...     \n...     def read_chunks(self, chunk_size=100):\n...         \"\"\"\u6307\u5b9a\u884c\u6570\u305a\u3064\u8aad\u307f\u8fbc\u3080\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         chunk = []\n...         try:\n...             with open(self.filename, 'r', encoding='utf-8') as f:\n...                 for line_num, line in enumerate(f, 1):\n...                     chunk.append((line_num, line.strip()))\n...                     \n...                     if len(chunk) &gt;= chunk_size:\n...                         yield chunk\n...                         chunk = []\n...                 \n...                 # \u6b8b\u308a\u306e\u30c7\u30fc\u30bf\u3092\u8fd4\u3059\n...                 if chunk:\n...                     yield chunk\n...         except FileNotFoundError:\n...             return\n...     \n...     def filter_logs(self, level_filter=None, user_filter=None, action_filter=None):\n...         \"\"\"\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u30ed\u30b0\u306e\u307f\u3092\u8fd4\u3059\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         for line_num, line in self.read_lines_generator():\n...             # \u30ed\u30b0\u306e\u89e3\u6790\n...             parts = line.split(' ')\n...             if len(parts) &lt; 6:\n...                 continue\n...             \n...             timestamp = f\"{parts[0]} {parts[1]}\"\n...             level = parts[2].strip('[]')\n...             user = parts[3]\n...             action = parts[4]\n...             ip = parts[7] if len(parts) &gt; 7 else \"unknown\"\n...             \n...             # \u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n...             if level_filter and level != level_filter:\n...                 continue\n...             if user_filter and user != user_filter:\n...                 continue\n...             if action_filter and action != action_filter:\n...                 continue\n...             \n...             yield {\n...                 \"line_number\": line_num,\n...                 \"timestamp\": timestamp,\n...                 \"level\": level,\n...                 \"user\": user,\n...                 \"action\": action,\n...                 \"ip\": ip,\n...                 \"raw_line\": line\n...             }\n... \n\n&gt;&gt;&gt; # \u30ed\u30b0\u30ea\u30fc\u30c0\u30fc\u306e\u4f7f\u7528\u4f8b\n&gt;&gt;&gt; log_reader = LogFileReader(\"system.log\")\n&gt;&gt;&gt; print(f\"\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u7dcf\u884c\u6570: {log_reader.total_lines}\u884c\")\n\n\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u7dcf\u884c\u6570: 5000\u884c\n\n&gt;&gt;&gt; # \u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u6bd4\u8f03\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; \n&gt;&gt;&gt; # \u5168\u884c\u3092\u4e00\u5ea6\u306b\u8aad\u307f\u8fbc\u307f\uff08\u975e\u52b9\u7387\uff09\n&gt;&gt;&gt; all_lines = log_reader.read_lines()\n&gt;&gt;&gt; print(f\"\u5168\u884c\u8aad\u307f\u8fbc\u307f\u6642\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf: {sys.getsizeof(all_lines):,}\u30d0\u30a4\u30c8\")\n&gt;&gt;&gt; print(f\"\u6700\u521d\u306e3\u884c:\")\n&gt;&gt;&gt; for i, line in enumerate(all_lines[:3]):\n...     print(f\"  {i+1}: {line.strip()}\")\n\n&gt;&gt;&gt; # \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f7f\u7528\uff08\u52b9\u7387\u7684\uff09\n&gt;&gt;&gt; line_generator = log_reader.read_lines_generator()\n&gt;&gt;&gt; print(f\"\\\\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf: {sys.getsizeof(line_generator):,}\u30d0\u30a4\u30c8\")\n\n\u5168\u884c\u8aad\u307f\u8fbc\u307f\u6642\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf: 43,152\u30d0\u30a4\u30c8\n\u6700\u521d\u306e3\u884c:\n  1: 2024-12-12 11:20:00 [ERROR] user002 logout from 192.168.1.45\n  2: 2024-12-12 11:20:10 [INFO] user001 view_page from 192.168.1.123\n  3: 2024-12-12 11:20:20 [WARNING] admin upload from 192.168.1.67\n\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf: 112\u30d0\u30a4\u30c8\n\n&gt;&gt;&gt; # \u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u4f8b\n&gt;&gt;&gt; print(\"\\\\n=== \u30a8\u30e9\u30fc\u30ed\u30b0\u306e\u307f\u62bd\u51fa ===\")\n&gt;&gt;&gt; error_logs = log_reader.filter_logs(level_filter=\"ERROR\")\n&gt;&gt;&gt; error_count = 0\n&gt;&gt;&gt; for log_entry in error_logs:\n...     if error_count &lt; 5:  # \u6700\u521d\u306e5\u4ef6\u306e\u307f\u8868\u793a\n...         print(f\"\u884c{log_entry['line_number']}: {log_entry['timestamp']} - {log_entry['user']} {log_entry['action']}\")\n...     error_count += 1\n&gt;&gt;&gt; print(f\"\\\\n\u7dcf\u30a8\u30e9\u30fc\u30ed\u30b0\u6570: {error_count}\u4ef6\")\n\n=== \u30a8\u30e9\u30fc\u30ed\u30b0\u306e\u307f\u62bd\u51fa ===\n\u884c1: 2024-12-12 11:20:00 - user002 logout\n\u884c78: 2024-12-12 11:32:50 - user003 delete\n\u884c147: 2024-12-12 11:44:20 - guest view_page\n\u884c165: 2024-12-12 11:47:00 - admin login\n\u884c253: 2024-12-12 11:61:40 - user001 upload\n\n\u7dcf\u30a8\u30e9\u30fc\u30ed\u30b0\u6570: 1267\u4ef6\n\n&gt;&gt;&gt; # \u7279\u5b9a\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u62bd\u51fa\n&gt;&gt;&gt; print(\"\\\\n=== admin\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3 ===\")\n&gt;&gt;&gt; admin_logs = log_reader.filter_logs(user_filter=\"admin\")\n&gt;&gt;&gt; admin_actions = {}\n&gt;&gt;&gt; for log_entry in admin_logs:\n...     action = log_entry['action']\n...     admin_actions[action] = admin_actions.get(action, 0) + 1\n&gt;&gt;&gt; \n&gt;&gt;&gt; for action, count in sorted(admin_actions.items()):\n...     print(f\"{action}: {count}\u56de\")\n\n=== admin\u30e6\u30fc\u30b6\u30fc\u306e\u30a2\u30af\u30b7\u30e7\u30f3 ===\ndelete: 163\u56de\ndownload: 173\u56de\nlogin: 168\u56de\nlogout: 164\u56de\nupload: 161\u56de\nview_page: 164\u56de\n</code></pre>"},{"location":"chapter15/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30ed\u30b0\u7d71\u8a08\u5206\u6790\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; class LogAnalyzer:\n...     \"\"\"\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u7d71\u8a08\u5206\u6790\u3092\u884c\u3046\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, log_reader):\n...         self.log_reader = log_reader\n...     \n...     def analyze_by_hour(self):\n...         \"\"\"\u6642\u9593\u5225\u306e\u7d71\u8a08\u5206\u6790\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         hourly_stats = {}\n...         \n...         for log_entry in self.log_reader.filter_logs():\n...             try:\n...                 timestamp = log_entry['timestamp']\n...                 hour = timestamp.split(' ')[1].split(':')[0]\n...                 level = log_entry['level']\n...                 \n...                 if hour not in hourly_stats:\n...                     hourly_stats[hour] = {'total': 0, 'INFO': 0, 'WARNING': 0, 'ERROR': 0, 'DEBUG': 0}\n...                 \n...                 hourly_stats[hour]['total'] += 1\n...                 hourly_stats[hour][level] += 1\n...                 \n...             except (IndexError, KeyError):\n...                 continue\n...         \n...         # \u6642\u9593\u9806\u306b\u30bd\u30fc\u30c8\u3057\u3066 yield\n...         for hour in sorted(hourly_stats.keys()):\n...             yield hour, hourly_stats[hour]\n...     \n...     def analyze_user_activity(self):\n...         \"\"\"\u30e6\u30fc\u30b6\u30fc\u5225\u6d3b\u52d5\u5206\u6790\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         user_stats = {}\n...         \n...         for log_entry in self.log_reader.filter_logs():\n...             user = log_entry['user']\n...             action = log_entry['action']\n...             level = log_entry['level']\n...             \n...             if user not in user_stats:\n...                 user_stats[user] = {\n...                     'total_actions': 0,\n...                     'actions': {},\n...                     'error_count': 0,\n...                     'last_activity': log_entry['timestamp']\n...                 }\n...             \n...             user_stats[user]['total_actions'] += 1\n...             user_stats[user]['actions'][action] = user_stats[user]['actions'].get(action, 0) + 1\n...             user_stats[user]['last_activity'] = log_entry['timestamp']\n...             \n...             if level == 'ERROR':\n...                 user_stats[user]['error_count'] += 1\n...         \n...         # \u30a2\u30af\u30c6\u30a3\u30d3\u30c6\u30a3\u6570\u9806\u306b\u30bd\u30fc\u30c8\u3057\u3066 yield\n...         for user, stats in sorted(user_stats.items(), key=lambda x: x[1]['total_actions'], reverse=True):\n...             yield user, stats\n...     \n...     def find_anomalies(self, error_threshold=10):\n...         \"\"\"\u7570\u5e38\u691c\u77e5\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff08\u30a8\u30e9\u30fc\u7387\u304c\u9ad8\u3044\u30e6\u30fc\u30b6\u30fc\u3084\u6642\u9593\u5e2f\uff09\"\"\"\n...         # \u6642\u9593\u5225\u7570\u5e38\u691c\u77e5\n...         for hour, stats in self.analyze_by_hour():\n...             if stats['total'] &gt; 0:\n...                 error_rate = (stats['ERROR'] / stats['total']) * 100\n...                 if error_rate &gt; error_threshold:\n...                     yield {\n...                         'type': 'time_anomaly',\n...                         'hour': hour,\n...                         'error_rate': error_rate,\n...                         'total_logs': stats['total'],\n...                         'error_count': stats['ERROR']\n...                     }\n...         \n...         # \u30e6\u30fc\u30b6\u30fc\u5225\u7570\u5e38\u691c\u77e5\n...         for user, stats in self.analyze_user_activity():\n...             if stats['total_actions'] &gt; 0:\n...                 error_rate = (stats['error_count'] / stats['total_actions']) * 100\n...                 if error_rate &gt; error_threshold:\n...                     yield {\n...                         'type': 'user_anomaly',\n...                         'user': user,\n...                         'error_rate': error_rate,\n...                         'total_actions': stats['total_actions'],\n...                         'error_count': stats['error_count']\n...                     }\n...     \n...     def generate_report(self):\n...         \"\"\"\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         yield \"=== \u30ed\u30b0\u7d71\u8a08\u5206\u6790\u30ec\u30dd\u30fc\u30c8 ===\"\n...         yield f\"\u5206\u6790\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb: {self.log_reader.filename}\"\n...         yield f\"\u7dcf\u884c\u6570: {self.log_reader.total_lines}\u884c\"\n...         yield \"\"\n...         \n...         # \u6642\u9593\u5225\u7d71\u8a08\n...         yield \"\u3010\u6642\u9593\u5225\u7d71\u8a08\u3011\"\n...         for hour, stats in self.analyze_by_hour():\n...             yield f\"{hour}:00-{hour}:59 - \u7dcf\u6570: {stats['total']}, \u30a8\u30e9\u30fc: {stats['ERROR']}, \u8b66\u544a: {stats['WARNING']}\"\n...         \n...         yield \"\"\n...         \n...         # \u30e6\u30fc\u30b6\u30fc\u5225\u7d71\u8a08\n...         yield \"\u3010\u30e6\u30fc\u30b6\u30fc\u5225\u7d71\u8a08\uff08\u4e0a\u4f4d5\u540d\uff09\u3011\"\n...         for i, (user, stats) in enumerate(self.analyze_user_activity()):\n...             if i &gt;= 5:\n...                 break\n...             error_rate = (stats['error_count'] / stats['total_actions']) * 100 if stats['total_actions'] &gt; 0 else 0\n...             yield f\"{user}: {stats['total_actions']}\u56de, \u30a8\u30e9\u30fc\u7387: {error_rate:.1f}%\"\n...         \n...         yield \"\"\n...         \n...         # \u7570\u5e38\u691c\u77e5\n...         yield \"\u3010\u7570\u5e38\u691c\u77e5\uff08\u30a8\u30e9\u30fc\u738710%\u4ee5\u4e0a\uff09\u3011\"\n...         anomaly_found = False\n...         for anomaly in self.find_anomalies():\n...             anomaly_found = True\n...             if anomaly['type'] == 'time_anomaly':\n...                 yield f\"\u6642\u9593\u5e2f {anomaly['hour']}:00 - \u30a8\u30e9\u30fc\u7387: {anomaly['error_rate']:.1f}%\"\n...             elif anomaly['type'] == 'user_anomaly':\n...                 yield f\"\u30e6\u30fc\u30b6\u30fc {anomaly['user']} - \u30a8\u30e9\u30fc\u7387: {anomaly['error_rate']:.1f}%\"\n...         \n...         if not anomaly_found:\n...             yield \"\u7570\u5e38\u306f\u691c\u51fa\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\"\n... \n\n&gt;&gt;&gt; # \u30ed\u30b0\u5206\u6790\u306e\u5b9f\u884c\n&gt;&gt;&gt; analyzer = LogAnalyzer(log_reader)\n\n&gt;&gt;&gt; print(\"=== \u6642\u9593\u5225\u7d71\u8a08\uff08\u6700\u521d\u306e5\u6642\u9593\uff09===\")\n&gt;&gt;&gt; for i, (hour, stats) in enumerate(analyzer.analyze_by_hour()):\n...     if i &gt;= 5:\n...         break\n...     error_rate = (stats['ERROR'] / stats['total']) * 100 if stats['total'] &gt; 0 else 0\n...     print(f\"{hour}:00 - \u7dcf\u6570: {stats['total']}, \u30a8\u30e9\u30fc\u7387: {error_rate:.1f}%\")\n\n=== \u6642\u9593\u5225\u7d71\u8a08\uff08\u6700\u521d\u306e5\u6642\u9593\uff09===\n11:00 - \u7dcf\u6570: 601, \u30a8\u30e9\u30fc\u7387: 26.0%\n12:00 - \u7dcf\u6570: 602, \u30a8\u30e9\u30fc\u7387: 25.7%\n13:00 - \u7dcf\u6570: 603, \u30a8\u30e9\u30fc\u7387: 24.9%\n14:00 - \u7dcf\u6570: 601, \u30a8\u30e9\u30fc\u7387: 24.0%\n15:00 - \u7dcf\u6570: 600, \u30a8\u30e9\u30fc\u7387: 26.2%\n\n&gt;&gt;&gt; print(\"\\\\n=== \u30e6\u30fc\u30b6\u30fc\u6d3b\u52d5\u7d71\u8a08 ===\")\n&gt;&gt;&gt; for user, stats in analyzer.analyze_user_activity():\n...     error_rate = (stats['error_count'] / stats['total_actions']) * 100 if stats['total_actions'] &gt; 0 else 0\n...     most_common_action = max(stats['actions'].items(), key=lambda x: x[1])[0]\n...     print(f\"{user}: {stats['total_actions']}\u56de (\u30a8\u30e9\u30fc\u7387: {error_rate:.1f}%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: {most_common_action})\")\n\n=== \u30e6\u30fc\u30b6\u30fc\u6d3b\u52d5\u7d71\u8a08 ===\nuser001: 1001\u56de (\u30a8\u30e9\u30fc\u7387: 25.3%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: view_page)\nuser002: 1000\u56de (\u30a8\u30e9\u30fc\u7387: 25.7%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: upload)\nadmin: 993\u56de (\u30a8\u30e9\u30fc\u7387: 25.4%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: download)\nuser003: 1003\u56de (\u30a8\u30e9\u30fc\u7387: 24.9%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: view_page)\nguest: 1003\u56de (\u30a8\u30e9\u30fc\u7387: 25.0%, \u3088\u304f\u884c\u3046\u64cd\u4f5c: logout)\n\n&gt;&gt;&gt; print(\"\\\\n=== \u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u751f\u6210 ===\")\n&gt;&gt;&gt; report_lines = 0\n&gt;&gt;&gt; for line in analyzer.generate_report():\n...     print(line)\n...     report_lines += 1\n...     if report_lines &gt; 20:  # \u6700\u521d\u306e20\u884c\u306e\u307f\u8868\u793a\n...         print(\"... (\u30ec\u30dd\u30fc\u30c8\u7d9a\u304f)\")\n...         break\n\n=== \u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u751f\u6210 ===\n=== \u30ed\u30b0\u7d71\u8a08\u5206\u6790\u30ec\u30dd\u30fc\u30c8 ===\n\u5206\u6790\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb: system.log\n\u7dcf\u884c\u6570: 5000\u884c\n\n\u3010\u6642\u9593\u5225\u7d71\u8a08\u3011\n11:00-11:59 - \u7dcf\u6570: 601, \u30a8\u30e9\u30fc: 156, \u8b66\u544a: 147\n12:00-12:59 - \u7dcf\u6570: 602, \u30a8\u30e9\u30fc: 155, \u8b66\u544a: 148\n13:00-13:59 - \u7dcf\u6570: 603, \u30a8\u30e9\u30fc: 150, \u8b66\u544a: 147\n14:00-14:59 - \u7dcf\u6570: 601, \u30a8\u30e9\u30fc: 144, \u8b66\u544a: 164\n15:00-15:59 - \u7dcf\u6570: 600, \u30a8\u30e9\u30fc: 157, \u8b66\u544a: 142\n16:00-16:59 - \u7dcf\u6570: 601, \u30a8\u30e9\u30fc: 163, \u8b66\u544a: 144\n17:00-17:59 - \u7dcf\u6570: 600, \u30a8\u30e9\u30fc: 151, \u8b66\u544a: 157\n18:00-18:59 - \u7dcf\u6570: 600, \u30a8\u30e9\u30fc: 146, \u8b66\u544a: 154\n19:00-19:59 - \u7dcf\u6570: 592, \u30a8\u30e9\u30fc: 145, \u8b66\u544a: 156\n\n\u3010\u30e6\u30fc\u30b6\u30fc\u5225\u7d71\u8a08\uff08\u4e0a\u4f4d5\u540d\uff09\u3011\nuser003: 1003\u56de, \u30a8\u30e9\u30fc\u7387: 24.9%\nuser001: 1001\u56de, \u30a8\u30e9\u30fc\u7387: 25.3%\nguest: 1003\u56de, \u30a8\u30e9\u30fc\u7387: 25.0%\nuser002: 1000\u56de, \u30a8\u30e9\u30fc\u7387: 25.7%\nadmin: 993\u56de, \u30a8\u30e9\u30fc\u7387: 25.4%\n\n\u3010\u7570\u5e38\u691c\u77e5\uff08\u30a8\u30e9\u30fc\u738710%\u4ee5\u4e0a\uff09\u3011\n\u6642\u9593\u5e2f 11:00 - \u30a8\u30e9\u30fc\u7387: 26.0%\n\u6642\u9593\u5e2f 12:00 - \u30a8\u30e9\u30fc\u7387: 25.7%\n... (\u30ec\u30dd\u30fc\u30c8\u7d9a\u304f)\n</code></pre>"},{"location":"chapter15/#_9","title":"\u3010\u5b9f\u884c\u3011\u6570\u5b66\u7684\u7121\u9650\u6570\u5217\u30b7\u30b9\u30c6\u30e0","text":"<p>\u7121\u9650\u6570\u5217\u3092\u6271\u3046\u6570\u5b66\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u771f\u4fa1\u3092\u4f53\u9a13\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter15/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u6570\u5b66\u7684\u6570\u5217\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; import math\n&gt;&gt;&gt; from itertools import islice\n\n&gt;&gt;&gt; class MathSequences:\n...     \"\"\"\u69d8\u3005\u306a\u6570\u5b66\u7684\u6570\u5217\u3092\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n...     \n...     @staticmethod\n...     def fibonacci():\n...         \"\"\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         a, b = 0, 1\n...         while True:\n...             yield a\n...             a, b = b, a + b\n...     \n...     @staticmethod\n...     def prime_numbers():\n...         \"\"\"\u7d20\u6570\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff08\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\uff09\"\"\"\n...         def is_prime(n):\n...             if n &lt; 2:\n...                 return False\n...             for i in range(2, int(math.sqrt(n)) + 1):\n...                 if n % i == 0:\n...                     return False\n...             return True\n...         \n...         num = 2\n...         while True:\n...             if is_prime(num):\n...                 yield num\n...             num += 1\n...     \n...     @staticmethod\n...     def perfect_squares():\n...         \"\"\"\u5b8c\u5168\u5e73\u65b9\u6570\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         n = 1\n...         while True:\n...             yield n * n\n...             n += 1\n...     \n...     @staticmethod\n...     def triangular_numbers():\n...         \"\"\"\u4e09\u89d2\u6570\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         n = 1\n...         while True:\n...             yield n * (n + 1) // 2\n...             n += 1\n...     \n...     @staticmethod\n...     def factorial_sequence():\n...         \"\"\"\u968e\u4e57\u6570\u5217\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         n = 0\n...         factorial = 1\n...         while True:\n...             if n == 0:\n...                 yield factorial\n...             else:\n...                 factorial *= n\n...                 yield factorial\n...             n += 1\n...     \n...     @staticmethod\n...     def collatz_sequence(start):\n...         \"\"\"\u30b3\u30e9\u30c3\u30c4\u6570\u5217\u306e\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff08\u6709\u9650\uff09\"\"\"\n...         current = start\n...         while current != 1:\n...             yield current\n...             if current % 2 == 0:\n...                 current = current // 2\n...             else:\n...                 current = 3 * current + 1\n...         yield 1  # \u6700\u5f8c\u306e1\u3092\u542b\u3080\n...     \n...     @staticmethod\n...     def arithmetic_progression(first_term, common_difference):\n...         \"\"\"\u7b49\u5dee\u6570\u5217\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         current = first_term\n...         while True:\n...             yield current\n...             current += common_difference\n...     \n...     @staticmethod\n...     def geometric_progression(first_term, common_ratio):\n...         \"\"\"\u7b49\u6bd4\u6570\u5217\u306e\u7121\u9650\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\"\"\"\n...         current = first_term\n...         while True:\n...             yield current\n...             current *= common_ratio\n...     \n...     @staticmethod\n...     def pi_approximation():\n...         \"\"\"\u5186\u5468\u7387\u306e\u8fd1\u4f3c\u5024\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\uff08\u30e9\u30a4\u30d7\u30cb\u30c3\u30c4\u306e\u516c\u5f0f\uff09\"\"\"\n...         pi_approx = 0\n...         n = 0\n...         while True:\n...             term = (-1)**n / (2*n + 1)\n...             pi_approx += term\n...             yield pi_approx * 4\n...             n += 1\n... \n\n&gt;&gt;&gt; # \u5404\u7a2e\u6570\u5217\u306e\u4f7f\u7528\u4f8b\n&gt;&gt;&gt; print(\"=== \u6570\u5b66\u7684\u6570\u5217\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf ===\")\n\n&gt;&gt;&gt; # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff08\u6700\u521d\u306e10\u500b\uff09\n&gt;&gt;&gt; fib_gen = MathSequences.fibonacci()\n&gt;&gt;&gt; fib_10 = list(islice(fib_gen, 10))\n&gt;&gt;&gt; print(f\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff0810\u500b\uff09: {fib_10}\")\n\n&gt;&gt;&gt; # \u7d20\u6570\uff08\u6700\u521d\u306e10\u500b\uff09\n&gt;&gt;&gt; prime_gen = MathSequences.prime_numbers()\n&gt;&gt;&gt; prime_10 = list(islice(prime_gen, 10))\n&gt;&gt;&gt; print(f\"\u7d20\u6570\uff0810\u500b\uff09: {prime_10}\")\n\n&gt;&gt;&gt; # \u5b8c\u5168\u5e73\u65b9\u6570\uff08\u6700\u521d\u306e10\u500b\uff09\n&gt;&gt;&gt; square_gen = MathSequences.perfect_squares()\n&gt;&gt;&gt; square_10 = list(islice(square_gen, 10))\n&gt;&gt;&gt; print(f\"\u5b8c\u5168\u5e73\u65b9\u6570\uff0810\u500b\uff09: {square_10}\")\n\n&gt;&gt;&gt; # \u4e09\u89d2\u6570\uff08\u6700\u521d\u306e10\u500b\uff09\n&gt;&gt;&gt; tri_gen = MathSequences.triangular_numbers()\n&gt;&gt;&gt; tri_10 = list(islice(tri_gen, 10))\n&gt;&gt;&gt; print(f\"\u4e09\u89d2\u6570\uff0810\u500b\uff09: {tri_10}\")\n\n=== \u6570\u5b66\u7684\u6570\u5217\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf ===\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff0810\u500b\uff09: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n\u7d20\u6570\uff0810\u500b\uff09: [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n\u5b8c\u5168\u5e73\u65b9\u6570\uff0810\u500b\uff09: [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]\n\u4e09\u89d2\u6570\uff0810\u500b\uff09: [1, 3, 6, 10, 15, 21, 28, 36, 45, 55]\n\n&gt;&gt;&gt; # \u30b3\u30e9\u30c3\u30c4\u6570\u5217\uff08\u7279\u5b9a\u306e\u958b\u59cb\u5024\uff09\n&gt;&gt;&gt; print(\"\\\\n=== \u30b3\u30e9\u30c3\u30c4\u6570\u5217 ===\")\n&gt;&gt;&gt; for start in [7, 15, 27]:\n...     collatz_gen = MathSequences.collatz_sequence(start)\n...     sequence = list(collatz_gen)\n...     print(f\"\u958b\u59cb\u5024 {start}: {sequence} (\u9577\u3055: {len(sequence)})\")\n\n=== \u30b3\u30e9\u30c3\u30c4\u6570\u5217 ===\n\u958b\u59cb\u5024 7: [7, 22, 11, 34, 17, 52, 26, 13, 40, 20, 10, 5, 16, 8, 4, 2, 1] (\u9577\u3055: 17)\n\u958b\u59cb\u5024 15: [15, 46, 23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1] (\u9577\u3055: 18)\n\u958b\u59cb\u5024 27: [27, 82, 41, 124, 62, 31, 94, 47, 142, 71, 214, 107, 322, 161, 484, 242, 121, 364, 182, 91, 274, 137, 412, 206, 103, 310, 155, 466, 233, 700, 350, 175, 526, 263, 790, 395, 1186, 593, 1780, 890, 445, 1336, 668, 334, 167, 502, 251, 754, 377, 1132, 566, 283, 850, 425, 1276, 638, 319, 958, 479, 1438, 719, 2158, 1079, 3238, 1619, 4858, 2429, 7288, 3644, 1822, 911, 2734, 1367, 4102, 2051, 6154, 3077, 9232, 4616, 2308, 1154, 577, 1732, 866, 433, 1300, 650, 325, 976, 488, 244, 122, 61, 184, 92, 46, 23, 70, 35, 106, 53, 160, 80, 40, 20, 10, 5, 16, 8, 4, 2, 1] (\u9577\u3055: 112)\n\n&gt;&gt;&gt; # \u5186\u5468\u7387\u306e\u8fd1\u4f3c\n&gt;&gt;&gt; print(\"\\\\n=== \u5186\u5468\u7387\u306e\u8fd1\u4f3c\uff08\u30e9\u30a4\u30d7\u30cb\u30c3\u30c4\u306e\u516c\u5f0f\uff09===\")\n&gt;&gt;&gt; pi_gen = MathSequences.pi_approximation()\n&gt;&gt;&gt; actual_pi = math.pi\n&gt;&gt;&gt; print(f\"\u5b9f\u969b\u306e\u5186\u5468\u7387: {actual_pi}\")\n&gt;&gt;&gt; print(\"\u8fd1\u4f3c\u5024\u306e\u53ce\u675f:\")\n&gt;&gt;&gt; for i, pi_approx in enumerate(pi_gen):\n...     if i in [0, 9, 99, 999, 9999]:\n...         error = abs(pi_approx - actual_pi)\n...         print(f\"\u9805\u6570 {i+1}: {pi_approx:.6f} (\u8aa4\u5dee: {error:.6f})\")\n...     if i &gt;= 9999:\n...         break\n\n=== \u5186\u5468\u7387\u306e\u8fd1\u4f3c\uff08\u30e9\u30a4\u30d7\u30cb\u30c3\u30c4\u306e\u516c\u5f0f\uff09===\n\u5b9f\u969b\u306e\u5186\u5468\u7387: 3.141592653589793\n\u8fd1\u4f3c\u5024\u306e\u53ce\u675f:\n\u9805\u6570 1: 4.000000 (\u8aa4\u5dee: 0.858407)\n\u9805\u6570 10: 3.041840 (\u8aa4\u5dee: 0.099753)\n\u9805\u6570 100: 3.131593 (\u8aa4\u5dee: 0.010000)\n\u9805\u6570 1000: 3.140593 (\u8aa4\u5dee: 0.001000)\n\u9805\u6570 10000: 3.141493 (\u8aa4\u5dee: 0.000100)\n\n&gt;&gt;&gt; # \u7b49\u5dee\u6570\u5217\u3068\u7b49\u6bd4\u6570\u5217\n&gt;&gt;&gt; print(\"\\\\n=== \u7b49\u5dee\u6570\u5217\u3068\u7b49\u6bd4\u6570\u5217 ===\")\n&gt;&gt;&gt; # \u7b49\u5dee\u6570\u5217\uff08\u521d\u98055, \u516c\u5dee3\uff09\n&gt;&gt;&gt; arith_gen = MathSequences.arithmetic_progression(5, 3)\n&gt;&gt;&gt; arith_10 = list(islice(arith_gen, 10))\n&gt;&gt;&gt; print(f\"\u7b49\u5dee\u6570\u5217\uff08\u521d\u98055, \u516c\u5dee3\uff09: {arith_10}\")\n\n&gt;&gt;&gt; # \u7b49\u6bd4\u6570\u5217\uff08\u521d\u98052, \u516c\u6bd43\uff09\n&gt;&gt;&gt; geom_gen = MathSequences.geometric_progression(2, 3)\n&gt;&gt;&gt; geom_8 = list(islice(geom_gen, 8))\n&gt;&gt;&gt; print(f\"\u7b49\u6bd4\u6570\u5217\uff08\u521d\u98052, \u516c\u6bd43\uff09: {geom_8}\")\n\n&gt;&gt;&gt; # \u968e\u4e57\u6570\u5217\n&gt;&gt;&gt; fact_gen = MathSequences.factorial_sequence()\n&gt;&gt;&gt; fact_8 = list(islice(fact_gen, 8))\n&gt;&gt;&gt; print(f\"\u968e\u4e57\u6570\u5217: {fact_8}\")\n\n=== \u7b49\u5dee\u6570\u5217\u3068\u7b49\u6bd4\u6570\u5217 ===\n\u7b49\u5dee\u6570\u5217\uff08\u521d\u98055, \u516c\u5dee3\uff09: [5, 8, 11, 14, 17, 20, 23, 26, 29, 32]\n\u7b49\u6bd4\u6570\u5217\uff08\u521d\u98052, \u516c\u6bd43\uff09: [2, 6, 18, 54, 162, 486, 1458, 4374]\n\u968e\u4e57\u6570\u5217: [1, 1, 2, 6, 24, 120, 720, 5040]\n</code></pre>"},{"location":"chapter15/#4","title":"\u30b9\u30c6\u30c3\u30d74\uff1a\u6570\u5217\u5206\u6790\u30c4\u30fc\u30eb","text":"<pre><code>&gt;&gt;&gt; class SequenceAnalyzer:\n...     \"\"\"\u6570\u5217\u306e\u5206\u6790\u3092\u884c\u3046\u30af\u30e9\u30b9\"\"\"\n...     \n...     @staticmethod\n...     def find_pattern(sequence, max_terms=100):\n...         \"\"\"\u6570\u5217\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u5206\u6790\"\"\"\n...         terms = list(islice(sequence, max_terms))\n...         \n...         if len(terms) &lt; 3:\n...             return \"\u5206\u6790\u306b\u5341\u5206\u306a\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         \n...         # \u7b49\u5dee\u6570\u5217\u306e\u30c1\u30a7\u30c3\u30af\n...         differences = [terms[i+1] - terms[i] for i in range(len(terms)-1)]\n...         if len(set(differences)) == 1:\n...             return f\"\u7b49\u5dee\u6570\u5217\uff08\u516c\u5dee: {differences[0]}\uff09\"\n...         \n...         # \u7b49\u6bd4\u6570\u5217\u306e\u30c1\u30a7\u30c3\u30af\n...         if all(terms[i] != 0 for i in range(len(terms)-1)):\n...             ratios = [terms[i+1] / terms[i] for i in range(len(terms)-1)]\n...             if len(set(round(r, 6) for r in ratios)) == 1:\n...                 return f\"\u7b49\u6bd4\u6570\u5217\uff08\u516c\u6bd4: {ratios[0]:.6f}\uff09\"\n...         \n...         # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u30c1\u30a7\u30c3\u30af\n...         is_fibonacci = True\n...         for i in range(2, len(terms)):\n...             if terms[i] != terms[i-1] + terms[i-2]:\n...                 is_fibonacci = False\n...                 break\n...         if is_fibonacci:\n...             return \"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\"\n...         \n...         # \u5b8c\u5168\u5e73\u65b9\u6570\u306e\u30c1\u30a7\u30c3\u30af\n...         sqrt_values = [math.sqrt(term) for term in terms if term &gt;= 0]\n...         if all(int(val) == val for val in sqrt_values):\n...             return \"\u5b8c\u5168\u5e73\u65b9\u6570\u5217\"\n...         \n...         return \"\u7279\u5b9a\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\"\n...     \n...     @staticmethod\n...     def convergence_analysis(sequence, max_terms=1000):\n...         \"\"\"\u6570\u5217\u306e\u53ce\u675f\u6027\u3092\u5206\u6790\"\"\"\n...         terms = []\n...         prev_term = None\n...         convergence_info = {\"converges\": False, \"limit\": None, \"rate\": None}\n...         \n...         for i, term in enumerate(islice(sequence, max_terms)):\n...             terms.append(term)\n...             \n...             if i &gt; 10:  # \u6700\u521d\u306e10\u9805\u306f\u7121\u8996\n...                 # \u9023\u7d9a\u3059\u308b\u9805\u306e\u5dee\u304c\u5c0f\u3055\u304f\u306a\u3063\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n...                 if prev_term is not None:\n...                     diff = abs(term - prev_term)\n...                     if diff &lt; 1e-10:  # \u53ce\u675f\u5224\u5b9a\n...                         convergence_info[\"converges\"] = True\n...                         convergence_info[\"limit\"] = term\n...                         convergence_info[\"convergence_term\"] = i\n...                         break\n...             \n...             prev_term = term\n...         \n...         # \u53ce\u675f\u7387\u306e\u8a08\u7b97\uff08\u6700\u5f8c\u306e10\u9805\u3092\u4f7f\u7528\uff09\n...         if len(terms) &gt;= 20:\n...             recent_terms = terms[-10:]\n...             if convergence_info[\"converges\"]:\n...                 limit = convergence_info[\"limit\"]\n...                 errors = [abs(term - limit) for term in recent_terms]\n...                 if len(errors) &gt; 1:\n...                     rate_estimates = []\n...                     for i in range(1, len(errors)):\n...                         if errors[i-1] != 0:\n...                             rate_estimates.append(errors[i] / errors[i-1])\n...                     if rate_estimates:\n...                         convergence_info[\"rate\"] = sum(rate_estimates) / len(rate_estimates)\n...         \n...         return convergence_info, terms\n...     \n...     @staticmethod\n...     def statistics(sequence, max_terms=100):\n...         \"\"\"\u6570\u5217\u306e\u7d71\u8a08\u60c5\u5831\u3092\u8a08\u7b97\"\"\"\n...         terms = list(islice(sequence, max_terms))\n...         \n...         if not terms:\n...             return {}\n...         \n...         stats = {\n...             \"count\": len(terms),\n...             \"min\": min(terms),\n...             \"max\": max(terms),\n...             \"mean\": sum(terms) / len(terms),\n...             \"first_term\": terms[0],\n...             \"last_term\": terms[-1]\n...         }\n...         \n...         # \u4e2d\u592e\u5024\n...         sorted_terms = sorted(terms)\n...         n = len(sorted_terms)\n...         if n % 2 == 0:\n...             stats[\"median\"] = (sorted_terms[n//2 - 1] + sorted_terms[n//2]) / 2\n...         else:\n...             stats[\"median\"] = sorted_terms[n//2]\n...         \n...         # \u5206\u6563\u3068\u6a19\u6e96\u504f\u5dee\n...         mean = stats[\"mean\"]\n...         variance = sum((term - mean)**2 for term in terms) / len(terms)\n...         stats[\"variance\"] = variance\n...         stats[\"std_dev\"] = math.sqrt(variance)\n...         \n...         return stats\n... \n\n&gt;&gt;&gt; # \u6570\u5217\u5206\u6790\u306e\u5b9f\u884c\n&gt;&gt;&gt; print(\"=== \u6570\u5217\u30d1\u30bf\u30fc\u30f3\u5206\u6790 ===\")\n\n&gt;&gt;&gt; # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u5206\u6790\n&gt;&gt;&gt; fib_gen = MathSequences.fibonacci()\n&gt;&gt;&gt; fib_pattern = SequenceAnalyzer.find_pattern(fib_gen)\n&gt;&gt;&gt; print(f\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217: {fib_pattern}\")\n\n&gt;&gt;&gt; # \u7b49\u5dee\u6570\u5217\u306e\u5206\u6790\n&gt;&gt;&gt; arith_gen = MathSequences.arithmetic_progression(10, 5)\n&gt;&gt;&gt; arith_pattern = SequenceAnalyzer.find_pattern(arith_gen)\n&gt;&gt;&gt; print(f\"\u7b49\u5dee\u6570\u5217: {arith_pattern}\")\n\n&gt;&gt;&gt; # \u7b49\u6bd4\u6570\u5217\u306e\u5206\u6790\n&gt;&gt;&gt; geom_gen = MathSequences.geometric_progression(3, 2)\n&gt;&gt;&gt; geom_pattern = SequenceAnalyzer.find_pattern(geom_gen)\n&gt;&gt;&gt; print(f\"\u7b49\u6bd4\u6570\u5217: {geom_pattern}\")\n\n&gt;&gt;&gt; # \u5b8c\u5168\u5e73\u65b9\u6570\u306e\u5206\u6790\n&gt;&gt;&gt; square_gen = MathSequences.perfect_squares()\n&gt;&gt;&gt; square_pattern = SequenceAnalyzer.find_pattern(square_gen)\n&gt;&gt;&gt; print(f\"\u5b8c\u5168\u5e73\u65b9\u6570: {square_pattern}\")\n\n=== \u6570\u5217\u30d1\u30bf\u30fc\u30f3\u5206\u6790 ===\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217: \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\n\u7b49\u5dee\u6570\u5217: \u7b49\u5dee\u6570\u5217\uff08\u516c\u5dee: 5\uff09\n\u7b49\u6bd4\u6570\u5217: \u7b49\u6bd4\u6570\u5217\uff08\u516c\u6bd4: 2.000000\uff09\n\u5b8c\u5168\u5e73\u65b9\u6570: \u5b8c\u5168\u5e73\u65b9\u6570\u5217\n\n&gt;&gt;&gt; # \u53ce\u675f\u6027\u5206\u6790\n&gt;&gt;&gt; print(\"\\\\n=== \u53ce\u675f\u6027\u5206\u6790 ===\")\n\n&gt;&gt;&gt; # \u5186\u5468\u7387\u8fd1\u4f3c\u306e\u53ce\u675f\u6027\n&gt;&gt;&gt; pi_gen = MathSequences.pi_approximation()\n&gt;&gt;&gt; pi_convergence, pi_terms = SequenceAnalyzer.convergence_analysis(pi_gen, 1000)\n&gt;&gt;&gt; print(f\"\u5186\u5468\u7387\u8fd1\u4f3c:\")\n&gt;&gt;&gt; print(f\"  \u53ce\u675f: {pi_convergence['converges']}\")\n&gt;&gt;&gt; if pi_convergence['converges']:\n...     print(f\"  \u53ce\u675f\u5024: {pi_convergence['limit']:.6f}\")\n...     print(f\"  \u53ce\u675f\u9805\u6570: {pi_convergence['convergence_term']}\")\n\n&gt;&gt;&gt; # \u7d71\u8a08\u60c5\u5831\n&gt;&gt;&gt; print(\"\\\\n=== \u7d71\u8a08\u60c5\u5831 ===\")\n\n&gt;&gt;&gt; # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u7d71\u8a08\n&gt;&gt;&gt; fib_gen = MathSequences.fibonacci()\n&gt;&gt;&gt; fib_stats = SequenceAnalyzer.statistics(fib_gen, 20)\n&gt;&gt;&gt; print(f\"\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff0820\u9805\uff09:\")\n&gt;&gt;&gt; print(f\"  \u5e73\u5747: {fib_stats['mean']:.2f}\")\n&gt;&gt;&gt; print(f\"  \u4e2d\u592e\u5024: {fib_stats['median']:.2f}\")\n&gt;&gt;&gt; print(f\"  \u6700\u5c0f\u5024: {fib_stats['min']}\")\n&gt;&gt;&gt; print(f\"  \u6700\u5927\u5024: {fib_stats['max']}\")\n&gt;&gt;&gt; print(f\"  \u6a19\u6e96\u504f\u5dee: {fib_stats['std_dev']:.2f}\")\n\n&gt;&gt;&gt; # \u7d20\u6570\u306e\u7d71\u8a08\n&gt;&gt;&gt; prime_gen = MathSequences.prime_numbers()\n&gt;&gt;&gt; prime_stats = SequenceAnalyzer.statistics(prime_gen, 50)\n&gt;&gt;&gt; print(f\"\\\\n\u7d20\u6570\uff0850\u500b\uff09:\")\n&gt;&gt;&gt; print(f\"  \u5e73\u5747: {prime_stats['mean']:.2f}\")\n&gt;&gt;&gt; print(f\"  \u4e2d\u592e\u5024: {prime_stats['median']:.2f}\")\n&gt;&gt;&gt; print(f\"  \u6700\u5c0f\u5024: {prime_stats['min']}\")\n&gt;&gt;&gt; print(f\"  \u6700\u5927\u5024: {prime_stats['max']}\")\n&gt;&gt;&gt; print(f\"  \u6a19\u6e96\u504f\u5dee: {prime_stats['std_dev']:.2f}\")\n\n=== \u53ce\u675f\u6027\u5206\u6790 ===\n\u5186\u5468\u7387\u8fd1\u4f3c:\n  \u53ce\u675f: False\n\n=== \u7d71\u8a08\u60c5\u5831 ===\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff0820\u9805\uff09:\n  \u5e73\u5747: 1364.80\n  \u4e2d\u592e\u5024: 21.50\n  \u6700\u5c0f\u5024: 0\n  \u6700\u5927\u5024: 6765\n  \u6a19\u6e96\u504f\u5dee: 2297.04\n\n\u7d20\u6570\uff0850\u500b\uff09:\n  \u5e73\u5747: 116.34\n  \u4e2d\u592e\u5024: 113.00\n  \u6700\u5c0f\u5024: 2\n  \u6700\u5927\u5024: 229\n  \u6a19\u6e96\u504f\u5dee: 63.35\n</code></pre>"},{"location":"chapter15/#_10","title":"\u307e\u3068\u3081\uff1a\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u5a01\u529b","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter15/#_11","title":"\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u53cd\u5fa9\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8: for\u6587\u3067\u4f7f\u3048\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8</li> <li>\u30a4\u30c6\u30ec\u30fc\u30bf\u30d7\u30ed\u30c8\u30b3\u30eb: <code>__iter__()</code> \u3068 <code>__next__()</code> \u30e1\u30bd\u30c3\u30c9</li> <li>StopIteration: \u53cd\u5fa9\u7d42\u4e86\u306e\u5408\u56f3</li> <li>\u30e1\u30e2\u30ea\u52b9\u7387: \u5fc5\u8981\u306a\u6642\u3060\u3051\u30c7\u30fc\u30bf\u3092\u751f\u6210</li> </ul>"},{"location":"chapter15/#_12","title":"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u5229\u70b9","text":"<pre><code># \u30e1\u30e2\u30ea\u52b9\u7387\u306e\u6bd4\u8f03\nbig_list = [x**2 for x in range(1000000)]      # \u5927\u91cf\u30e1\u30e2\u30ea\u4f7f\u7528\nbig_gen = (x**2 for x in range(1000000))       # \u5c11\u306a\u3044\u30e1\u30e2\u30ea\u4f7f\u7528\n\n# \u7121\u9650\u6570\u5217\u306e\u51e6\u7406\ndef infinite_sequence():\n    n = 0\n    while True:\n        yield n\n        n += 1\n</code></pre>"},{"location":"chapter15/#_13","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ol> <li>\u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0</li> <li>\u5927\u5bb9\u91cf\u30d5\u30a1\u30a4\u30eb\u306e\u52b9\u7387\u7684\u51e6\u7406</li> <li>\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306e\u6700\u9069\u5316</li> <li> <p>\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u5206\u6790</p> </li> <li> <p>\u6570\u5b66\u7684\u6570\u5217\u51e6\u7406</p> </li> <li>\u7121\u9650\u6570\u5217\u306e\u751f\u6210</li> <li>\u6570\u5024\u8a08\u7b97\u306e\u6700\u9069\u5316</li> <li> <p>\u30d1\u30bf\u30fc\u30f3\u5206\u6790</p> </li> <li> <p>\u30c7\u30fc\u30bf\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0</p> </li> <li>\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u306e\u52b9\u7387\u5316</li> <li>\u30c1\u30e3\u30f3\u30af\u5358\u4f4d\u3067\u306e\u51e6\u7406</li> <li>\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3068\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3</li> </ol>"},{"location":"chapter15/#_14","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6bd4\u8f03","text":"<pre><code>import time\nimport sys\n\n# \u30ea\u30b9\u30c8\u4f7f\u7528\uff08\u5927\u91cf\u30e1\u30e2\u30ea\uff09\nstart = time.time()\nbig_list = [x for x in range(1000000)]\ntotal = sum(big_list)\nlist_time = time.time() - start\nlist_memory = sys.getsizeof(big_list)\n\n# \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u4f7f\u7528\uff08\u5c11\u306a\u3044\u30e1\u30e2\u30ea\uff09\nstart = time.time()\nbig_gen = (x for x in range(1000000))\ntotal = sum(big_gen)\ngen_time = time.time() - start\ngen_memory = sys.getsizeof(big_gen)\n\nprint(f\"\u30ea\u30b9\u30c8: {list_time:.3f}\u79d2, {list_memory:,}\u30d0\u30a4\u30c8\")\nprint(f\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf: {gen_time:.3f}\u79d2, {gen_memory:,}\u30d0\u30a4\u30c8\")\n</code></pre>"},{"location":"chapter15/#_15","title":"\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ol> <li>\u5927\u91cf\u30c7\u30fc\u30bf\u306f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3067\u51e6\u7406</li> <li>\u7121\u9650\u6570\u5217\u306b\u306f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u304c\u5fc5\u9808</li> <li>\u30e1\u30e2\u30ea\u5236\u7d04\u304c\u3042\u308b\u74b0\u5883\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u6d3b\u7528</li> <li>\u518d\u5229\u7528\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u30ea\u30b9\u30c8\u306b\u5909\u63db</li> <li>\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u51e6\u7406\u3067\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b</li> </ol> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u9ad8\u5ea6\u306a\u95a2\u6570\u6a5f\u80fd\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u95a2\u6570\u3092\u3088\u308a\u67d4\u8edf\u306b\u62e1\u5f35\u3057\u3001\u30b3\u30fc\u30c9\u306e\u518d\u5229\u7528\u6027\u3092\u9ad8\u3081\u308b\u9ad8\u5ea6\u306a\u30c6\u30af\u30cb\u30c3\u30af\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c15\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c15\u7ae0\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3068\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u6982\u5ff5\u304b\u3089\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u307e\u3067\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u57fa\u672c\u7684\u306a\u53cd\u5fa9\u51e6\u7406\u306e\u4ed5\u7d44\u307f\u3001\u30ab\u30b9\u30bf\u30e0\u30a4\u30c6\u30ec\u30fc\u30bf\u306e\u4f5c\u6210\u3001yield\u6587\u3092\u4f7f\u3063\u305f\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306e\u5b9f\u88c5\u3092\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u5927\u5bb9\u91cf\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u52b9\u7387\u7684\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u3001\u7121\u9650\u6570\u5217\u3092\u6271\u3046\u6570\u5b66\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3002\u30e1\u30e2\u30ea\u52b9\u7387\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6bd4\u8f03\u3082\u542b\u307f\u3001\u5b9f\u7528\u7684\u306a\u30c7\u30fc\u30bf\u51e6\u7406\u6280\u8853\u3092\u7fd2\u5f97\u3002\u6b21\u306f\u7b2c16\u7ae0\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter16/","title":"\u7b2c16\u7ae0\uff1a\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u9ad8\u5ea6\u306a\u95a2\u6570\u6a5f\u80fd","text":"<p>Python\u306e\u95a2\u6570\u306b\u306f\u3001\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u3092\u8d85\u3048\u305f\u9ad8\u5ea6\u306a\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u3044\u3046\u5f37\u529b\u306a\u4ed5\u7d44\u307f\u3092\u5b66\u3073\u307e\u3059\u3002\u30ed\u30b0\u6a5f\u80fd\u4ed8\u304d\u306e\u95a2\u6570\u3001\u5b9f\u884c\u6642\u9593\u6e2c\u5b9a\u6a5f\u80fd\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u306a\u3069\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u95a2\u6570\u3092\u62e1\u5f35\u3057\u3001\u30b3\u30fc\u30c9\u306e\u518d\u5229\u7528\u6027\u3092\u5927\u5e45\u306b\u5411\u4e0a\u3055\u305b\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter16/#_1","title":"\u9ad8\u968e\u95a2\u6570\u306e\u6982\u5ff5","text":""},{"location":"chapter16/#_2","title":"\u95a2\u6570\u306f\u300c\u7b2c\u4e00\u7d1a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d","text":"<p>Python\u3067\u306f\u3001\u95a2\u6570\u3082\u4ed6\u306e\u30c7\u30fc\u30bf\uff08\u6570\u5024\u3001\u6587\u5b57\u5217\u306a\u3069\uff09\u3068\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; def greet(name):\n...     return f\"\u3053\u3093\u306b\u3061\u306f\u3001{name}\u3055\u3093\uff01\"\n... \n\n&gt;&gt;&gt; # \u95a2\u6570\u3092\u5909\u6570\u306b\u4ee3\u5165\n&gt;&gt;&gt; greeting_function = greet\n&gt;&gt;&gt; print(greeting_function(\"\u7530\u4e2d\"))\n\u3053\u3093\u306b\u3061\u306f\u3001\u7530\u4e2d\u3055\u3093\uff01\n\n&gt;&gt;&gt; # \u95a2\u6570\u306e\u60c5\u5831\u3092\u78ba\u8a8d\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u540d: {greet.__name__}\")\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u306e\u578b: {type(greet)}\")\n&gt;&gt;&gt; print(f\"\u95a2\u6570\u306eID: {id(greet)}\")\n\n\u95a2\u6570\u540d: greet\n\u95a2\u6570\u306e\u578b: &lt;class 'function'&gt;\n\u95a2\u6570\u306eID: 140234567890112\n\n&gt;&gt;&gt; # \u95a2\u6570\u3092\u30ea\u30b9\u30c8\u306b\u5165\u308c\u308b\n&gt;&gt;&gt; math_functions = [abs, max, min, sum]\n&gt;&gt;&gt; numbers = [-5, 10, -3, 7]\n\n&gt;&gt;&gt; for func in math_functions:\n...     if func == sum:\n...         result = func(numbers)\n...     else:\n...         result = func(numbers) if func in [max, min] else func(-8)\n...     print(f\"{func.__name__}: {result}\")\n\nabs: 8\nmax: 10\nmin: -5\nsum: 9\n</code></pre>"},{"location":"chapter16/#_3","title":"\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570","text":"<pre><code>&gt;&gt;&gt; def create_multiplier(factor):\n...     \"\"\"\u6307\u5b9a\u3057\u305f\u500d\u6570\u3092\u304b\u3051\u308b\u95a2\u6570\u3092\u4f5c\u308b\u95a2\u6570\"\"\"\n...     def multiplier(number):\n...         return number * factor\n...     return multiplier\n... \n\n&gt;&gt;&gt; # 2\u500d\u306b\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\n&gt;&gt;&gt; double = create_multiplier(2)\n&gt;&gt;&gt; print(f\"5\u306e2\u500d: {double(5)}\")\n\n&gt;&gt;&gt; # 10\u500d\u306b\u3059\u308b\u95a2\u6570\u3092\u4f5c\u6210\n&gt;&gt;&gt; times_10 = create_multiplier(10)\n&gt;&gt;&gt; print(f\"3\u306e10\u500d: {times_10(3)}\")\n\n&gt;&gt;&gt; # \u4f5c\u6210\u3055\u308c\u305f\u95a2\u6570\u306e\u78ba\u8a8d\n&gt;&gt;&gt; print(f\"double\u95a2\u6570\u306e\u578b: {type(double)}\")\n&gt;&gt;&gt; print(f\"times_10\u95a2\u6570\u306e\u578b: {type(times_10)}\")\n\n5\u306e2\u500d: 10\n3\u306e10\u500d: 30\ndouble\u95a2\u6570\u306e\u578b: &lt;class 'function'&gt;\ntimes_10\u95a2\u6570\u306e\u578b: &lt;class 'function'&gt;\n\n&gt;&gt;&gt; def create_validator(min_value, max_value):\n...     \"\"\"\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u306e\u5024\u304b\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3092\u4f5c\u308b\"\"\"\n...     def validator(value):\n...         if min_value &lt;= value &lt;= max_value:\n...             return True, f\"{value}\u306f\u6709\u52b9\u306a\u5024\u3067\u3059\"\n...         else:\n...             return False, f\"{value}\u306f\u7bc4\u56f2\u5916\u3067\u3059\uff08{min_value}\uff5e{max_value}\uff09\"\n...     return validator\n... \n\n&gt;&gt;&gt; # \u5e74\u9f62\u30c1\u30a7\u30c3\u30af\u95a2\u6570\u3092\u4f5c\u6210\n&gt;&gt;&gt; age_validator = create_validator(0, 120)\n&gt;&gt;&gt; print(age_validator(25))\n&gt;&gt;&gt; print(age_validator(150))\n\n&gt;&gt;&gt; # \u30d1\u30fc\u30bb\u30f3\u30c6\u30fc\u30b8\u30c1\u30a7\u30c3\u30af\u95a2\u6570\u3092\u4f5c\u6210\n&gt;&gt;&gt; percentage_validator = create_validator(0, 100)\n&gt;&gt;&gt; print(percentage_validator(85))\n&gt;&gt;&gt; print(percentage_validator(-5))\n\n(True, '25\u306f\u6709\u52b9\u306a\u5024\u3067\u3059')\n(False, '150\u306f\u7bc4\u56f2\u5916\u3067\u3059\uff080\uff5e120\uff09')\n(True, '85\u306f\u6709\u52b9\u306a\u5024\u3067\u3059')\n(False, '-5\u306f\u7bc4\u56f2\u5916\u3067\u3059\uff080\uff5e100\uff09')\n</code></pre>"},{"location":"chapter16/#_4","title":"\u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u95a2\u6570","text":"<pre><code>&gt;&gt;&gt; def apply_operation(numbers, operation):\n...     \"\"\"\u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u306b\u64cd\u4f5c\u3092\u9069\u7528\"\"\"\n...     return [operation(num) for num in numbers]\n... \n\n&gt;&gt;&gt; def square(x):\n...     return x ** 2\n... \n\n&gt;&gt;&gt; def cube(x):\n...     return x ** 3\n... \n\n&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5]\n\n&gt;&gt;&gt; # \u5404\u7a2e\u64cd\u4f5c\u3092\u9069\u7528\n&gt;&gt;&gt; squared = apply_operation(numbers, square)\n&gt;&gt;&gt; cubed = apply_operation(numbers, cube)\n&gt;&gt;&gt; doubled = apply_operation(numbers, lambda x: x * 2)\n\n&gt;&gt;&gt; print(f\"\u5143\u306e\u6570\u5024: {numbers}\")\n&gt;&gt;&gt; print(f\"2\u4e57: {squared}\")\n&gt;&gt;&gt; print(f\"3\u4e57: {cubed}\")\n&gt;&gt;&gt; print(f\"2\u500d: {doubled}\")\n\n\u5143\u306e\u6570\u5024: [1, 2, 3, 4, 5]\n2\u4e57: [1, 4, 9, 16, 25]\n3\u4e57: [1, 8, 27, 64, 125]\n2\u500d: [2, 4, 6, 8, 10]\n\n&gt;&gt;&gt; def filter_and_transform(data, condition, transformation):\n...     \"\"\"\u6761\u4ef6\u306b\u5408\u3046\u30c7\u30fc\u30bf\u3060\u3051\u3092\u5909\u63db\"\"\"\n...     result = []\n...     for item in data:\n...         if condition(item):\n...             result.append(transformation(item))\n...     return result\n... \n\n&gt;&gt;&gt; numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n&gt;&gt;&gt; # \u5076\u6570\u3060\u3051\u30922\u4e57\n&gt;&gt;&gt; even_squares = filter_and_transform(\n...     numbers, \n...     lambda x: x % 2 == 0,  # \u5076\u6570\u5224\u5b9a\n...     lambda x: x ** 2       # 2\u4e57\u5909\u63db\n... )\n\n&gt;&gt;&gt; print(f\"\u5076\u6570\u306e2\u4e57: {even_squares}\")\n\n\u5076\u6570\u306e2\u4e57: [4, 16, 36, 64, 100]\n</code></pre>"},{"location":"chapter16/#_5","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u57fa\u672c","text":""},{"location":"chapter16/#_6","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u306f","text":"<p>\u30c7\u30b3\u30ec\u30fc\u30bf\u306f\u3001\u65e2\u5b58\u306e\u95a2\u6570\u306b\u65b0\u3057\u3044\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\u95a2\u6570\u3092\u300c\u88c5\u98fe\u300d\u3057\u3066\u6a5f\u80fd\u3092\u62e1\u5f35\u3057\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; def simple_decorator(func):\n...     \"\"\"\u30b7\u30f3\u30d7\u30eb\u306a\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...     def wrapper():\n...         print(\"\u95a2\u6570\u5b9f\u884c\u524d\u306e\u51e6\u7406\")\n...         result = func()\n...         print(\"\u95a2\u6570\u5b9f\u884c\u5f8c\u306e\u51e6\u7406\")\n...         return result\n...     return wrapper\n... \n\n&gt;&gt;&gt; # \u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u624b\u52d5\u3067\u9069\u7528\n&gt;&gt;&gt; def say_hello():\n...     print(\"Hello, World!\")\n... \n\n&gt;&gt;&gt; decorated_hello = simple_decorator(say_hello)\n&gt;&gt;&gt; decorated_hello()\n\n\u95a2\u6570\u5b9f\u884c\u524d\u306e\u51e6\u7406\nHello, World!\n\u95a2\u6570\u5b9f\u884c\u5f8c\u306e\u51e6\u7406\n\n&gt;&gt;&gt; # @\u8a18\u6cd5\u3092\u4f7f\u3063\u305f\u30c7\u30b3\u30ec\u30fc\u30bf\uff08\u63a8\u5968\uff09\n&gt;&gt;&gt; @simple_decorator\n... def say_goodbye():\n...     print(\"Goodbye, World!\")\n... \n\n&gt;&gt;&gt; say_goodbye()\n\n\u95a2\u6570\u5b9f\u884c\u524d\u306e\u51e6\u7406\nGoodbye, World!\n\u95a2\u6570\u5b9f\u884c\u5f8c\u306e\u51e6\u7406\n</code></pre>"},{"location":"chapter16/#_7","title":"\u5f15\u6570\u3092\u6301\u3064\u95a2\u6570\u306e\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; def print_args_decorator(func):\n...     \"\"\"\u5f15\u6570\u3092\u8868\u793a\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...     def wrapper(*args, **kwargs):\n...         print(f\"\u95a2\u6570 '{func.__name__}' \u3092\u547c\u3073\u51fa\u3057\")\n...         print(f\"\u5f15\u6570: {args}\")\n...         print(f\"\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570: {kwargs}\")\n...         result = func(*args, **kwargs)\n...         print(f\"\u623b\u308a\u5024: {result}\")\n...         return result\n...     return wrapper\n... \n\n&gt;&gt;&gt; @print_args_decorator\n... def add_numbers(a, b):\n...     return a + b\n... \n\n&gt;&gt;&gt; @print_args_decorator\n... def greet_person(name, greeting=\"\u3053\u3093\u306b\u3061\u306f\"):\n...     return f\"{greeting}\u3001{name}\u3055\u3093\uff01\"\n... \n\n&gt;&gt;&gt; # \u30c7\u30b3\u30ec\u30fc\u30c8\u6e08\u307f\u95a2\u6570\u306e\u5b9f\u884c\n&gt;&gt;&gt; result1 = add_numbers(5, 3)\n&gt;&gt;&gt; print(f\"\u8a08\u7b97\u7d50\u679c: {result1}\")\n\n&gt;&gt;&gt; print()\n&gt;&gt;&gt; result2 = greet_person(\"\u7530\u4e2d\", greeting=\"\u304a\u306f\u3088\u3046\")\n&gt;&gt;&gt; print(f\"\u6328\u62f6\u7d50\u679c: {result2}\")\n\n\u95a2\u6570 'add_numbers' \u3092\u547c\u3073\u51fa\u3057\n\u5f15\u6570: (5, 3)\n\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570: {}\n\u623b\u308a\u5024: 8\n\u8a08\u7b97\u7d50\u679c: 8\n\n\u95a2\u6570 'greet_person' \u3092\u547c\u3073\u51fa\u3057\n\u5f15\u6570: ('\u7530\u4e2d',)\n\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570: {'greeting': '\u304a\u306f\u3088\u3046'}\n\u623b\u308a\u5024: \u304a\u306f\u3088\u3046\u3001\u7530\u4e2d\u3055\u3093\uff01\n\u6328\u62f6\u7d50\u679c: \u304a\u306f\u3088\u3046\u3001\u7530\u4e2d\u3055\u3093\uff01\n</code></pre>"},{"location":"chapter16/#_8","title":"\u3010\u5b9f\u884c\u3011\u5b9f\u7528\u7684\u306a\u30c7\u30b3\u30ec\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046","text":""},{"location":"chapter16/#1","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u30ed\u30b0\u6a5f\u80fd\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; import functools\n&gt;&gt;&gt; import time\n&gt;&gt;&gt; from datetime import datetime\n\n&gt;&gt;&gt; def log_function_calls(log_file=None, include_args=True, include_time=True):\n...     \"\"\"\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u30ed\u30b0\u306b\u8a18\u9332\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...     def decorator(func):\n...         @functools.wraps(func)  # \u5143\u306e\u95a2\u6570\u306e\u5c5e\u6027\u3092\u4fdd\u6301\n...         def wrapper(*args, **kwargs):\n...             # \u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u306e\u4f5c\u6210\n...             log_entry = []\n...             \n...             if include_time:\n...                 timestamp = datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")\n...                 log_entry.append(f\"[{timestamp}]\")\n...             \n...             log_entry.append(f\"\u95a2\u6570 '{func.__name__}' \u3092\u5b9f\u884c\")\n...             \n...             if include_args:\n...                 if args:\n...                     log_entry.append(f\"\u5f15\u6570: {args}\")\n...                 if kwargs:\n...                     log_entry.append(f\"\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570: {kwargs}\")\n...             \n...             # \u95a2\u6570\u306e\u5b9f\u884c\n...             start_time = time.time()\n...             try:\n...                 result = func(*args, **kwargs)\n...                 end_time = time.time()\n...                 \n...                 log_entry.append(f\"\u6210\u529f (\u5b9f\u884c\u6642\u9593: {end_time - start_time:.4f}\u79d2)\")\n...                 log_entry.append(f\"\u623b\u308a\u5024: {result}\")\n...                 \n...             except Exception as e:\n...                 end_time = time.time()\n...                 log_entry.append(f\"\u30a8\u30e9\u30fc (\u5b9f\u884c\u6642\u9593: {end_time - start_time:.4f}\u79d2)\")\n...                 log_entry.append(f\"\u30a8\u30e9\u30fc\u5185\u5bb9: {str(e)}\")\n...                 raise\n...             \n...             finally:\n...                 # \u30ed\u30b0\u306e\u51fa\u529b\n...                 log_message = \" | \".join(log_entry)\n...                 \n...                 if log_file:\n...                     with open(log_file, 'a', encoding='utf-8') as f:\n...                         f.write(log_message + \"\\\\n\")\n...                 else:\n...                     print(f\"LOG: {log_message}\")\n...             \n...             return result\n...         return wrapper\n...     return decorator\n... \n\n&gt;&gt;&gt; # \u30ed\u30b0\u6a5f\u80fd\u4ed8\u304d\u95a2\u6570\u306e\u4f5c\u6210\n&gt;&gt;&gt; @log_function_calls(include_args=True, include_time=True)\n... def calculate_factorial(n):\n...     \"\"\"\u968e\u4e57\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     if n &lt; 0:\n...         raise ValueError(\"\u8ca0\u306e\u6570\u306e\u968e\u4e57\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\")\n...     if n == 0 or n == 1:\n...         return 1\n...     result = 1\n...     for i in range(2, n + 1):\n...         result *= i\n...     return result\n... \n\n&gt;&gt;&gt; @log_function_calls(log_file=\"math_operations.log\")\n... def divide_numbers(a, b):\n...     \"\"\"\u6570\u5024\u3092\u9664\u7b97\u3059\u308b\u95a2\u6570\"\"\"\n...     if b == 0:\n...         raise ZeroDivisionError(\"\u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\n...     return a / b\n... \n\n&gt;&gt;&gt; # \u30ed\u30b0\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u30ed\u30b0\u6a5f\u80fd\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; result1 = calculate_factorial(5)\n&gt;&gt;&gt; print(f\"5! = {result1}\")\n\n&gt;&gt;&gt; try:\n...     result2 = calculate_factorial(-1)\n... except ValueError as e:\n...     print(f\"\u30a8\u30e9\u30fc\u30ad\u30e3\u30c3\u30c1: {e}\")\n\n&gt;&gt;&gt; result3 = divide_numbers(10, 2)\n&gt;&gt;&gt; print(f\"10 \u00f7 2 = {result3}\")\n\n&gt;&gt;&gt; try:\n...     result4 = divide_numbers(10, 0)\n... except ZeroDivisionError as e:\n...     print(f\"\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc: {e}\")\n\n=== \u30ed\u30b0\u6a5f\u80fd\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\nLOG: [2024-12-19 11:25:00] | \u95a2\u6570 'calculate_factorial' \u3092\u5b9f\u884c | \u5f15\u6570: (5,) | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 120\n5! = 120\nLOG: [2024-12-19 11:25:00] | \u95a2\u6570 'calculate_factorial' \u3092\u5b9f\u884c | \u5f15\u6570: (-1,) | \u30a8\u30e9\u30fc (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u30a8\u30e9\u30fc\u5185\u5bb9: \u8ca0\u306e\u6570\u306e\u968e\u4e57\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\n\u30a8\u30e9\u30fc\u30ad\u30e3\u30c3\u30c1: \u8ca0\u306e\u6570\u306e\u968e\u4e57\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u305b\u3093\n10 \u00f7 2 = 5.0\n\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\n</code></pre>"},{"location":"chapter16/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u5b9f\u884c\u6642\u9593\u6e2c\u5b9a\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; import time\n&gt;&gt;&gt; import statistics\n&gt;&gt;&gt; from collections import defaultdict\n\n&gt;&gt;&gt; class PerformanceMonitor:\n...     \"\"\"\u95a2\u6570\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u76e3\u8996\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self):\n...         self.execution_times = defaultdict(list)\n...         self.call_counts = defaultdict(int)\n...     \n...     def timing_decorator(self, func):\n...         \"\"\"\u5b9f\u884c\u6642\u9593\u3092\u6e2c\u5b9a\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...         @functools.wraps(func)\n...         def wrapper(*args, **kwargs):\n...             start_time = time.perf_counter()\n...             result = func(*args, **kwargs)\n...             end_time = time.perf_counter()\n...             \n...             execution_time = end_time - start_time\n...             \n...             # \u7d71\u8a08\u60c5\u5831\u3092\u8a18\u9332\n...             self.execution_times[func.__name__].append(execution_time)\n...             self.call_counts[func.__name__] += 1\n...             \n...             return result\n...         return wrapper\n...     \n...     def get_statistics(self, func_name):\n...         \"\"\"\u6307\u5b9a\u3057\u305f\u95a2\u6570\u306e\u7d71\u8a08\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         if func_name not in self.execution_times:\n...             return None\n...         \n...         times = self.execution_times[func_name]\n...         return {\n...             \"function_name\": func_name,\n...             \"call_count\": self.call_counts[func_name],\n...             \"total_time\": sum(times),\n...             \"average_time\": statistics.mean(times),\n...             \"min_time\": min(times),\n...             \"max_time\": max(times),\n...             \"median_time\": statistics.median(times),\n...             \"std_dev\": statistics.stdev(times) if len(times) &gt; 1 else 0\n...         }\n...     \n...     def get_report(self):\n...         \"\"\"\u5168\u95a2\u6570\u306e\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n...         report = [\"=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8 ===\"]\n...         \n...         for func_name in sorted(self.execution_times.keys()):\n...             stats = self.get_statistics(func_name)\n...             report.append(f\"\\\\n\u95a2\u6570: {stats['function_name']}\")\n...             report.append(f\"  \u547c\u3073\u51fa\u3057\u56de\u6570: {stats['call_count']}\u56de\")\n...             report.append(f\"  \u7dcf\u5b9f\u884c\u6642\u9593: {stats['total_time']:.6f}\u79d2\")\n...             report.append(f\"  \u5e73\u5747\u5b9f\u884c\u6642\u9593: {stats['average_time']:.6f}\u79d2\")\n...             report.append(f\"  \u6700\u77ed\u5b9f\u884c\u6642\u9593: {stats['min_time']:.6f}\u79d2\")\n...             report.append(f\"  \u6700\u9577\u5b9f\u884c\u6642\u9593: {stats['max_time']:.6f}\u79d2\")\n...             report.append(f\"  \u6a19\u6e96\u504f\u5dee: {stats['std_dev']:.6f}\u79d2\")\n...         \n...         return \"\\\\n\".join(report)\n... \n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u76e3\u8996\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\n&gt;&gt;&gt; monitor = PerformanceMonitor()\n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6e2c\u5b9a\u5bfe\u8c61\u306e\u95a2\u6570\n&gt;&gt;&gt; @monitor.timing_decorator\n... def fibonacci_recursive(n):\n...     \"\"\"\u518d\u5e30\u7684\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff08\u975e\u52b9\u7387\uff09\"\"\"\n...     if n &lt;= 1:\n...         return n\n...     return fibonacci_recursive(n-1) + fibonacci_recursive(n-2)\n... \n\n&gt;&gt;&gt; @monitor.timing_decorator\n... def fibonacci_iterative(n):\n...     \"\"\"\u53cd\u5fa9\u7684\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff08\u52b9\u7387\u7684\uff09\"\"\"\n...     if n &lt;= 1:\n...         return n\n...     a, b = 0, 1\n...     for _ in range(2, n + 1):\n...         a, b = b, a + b\n...     return b\n... \n\n&gt;&gt;&gt; @monitor.timing_decorator\n... def bubble_sort(arr):\n...     \"\"\"\u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\uff08\u975e\u52b9\u7387\uff09\"\"\"\n...     arr = arr.copy()  # \u5143\u306e\u914d\u5217\u3092\u5909\u66f4\u3057\u306a\u3044\n...     n = len(arr)\n...     for i in range(n):\n...         for j in range(0, n - i - 1):\n...             if arr[j] &gt; arr[j + 1]:\n...                 arr[j], arr[j + 1] = arr[j + 1], arr[j]\n...     return arr\n... \n\n&gt;&gt;&gt; @monitor.timing_decorator\n... def quick_sort(arr):\n...     \"\"\"\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\uff08\u52b9\u7387\u7684\uff09\"\"\"\n...     if len(arr) &lt;= 1:\n...         return arr\n...     pivot = arr[len(arr) // 2]\n...     left = [x for x in arr if x &lt; pivot]\n...     middle = [x for x in arr if x == pivot]\n...     right = [x for x in arr if x &gt; pivot]\n...     return quick_sort(left) + middle + quick_sort(right)\n... \n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6bd4\u8f03\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u6bd4\u8f03\n&gt;&gt;&gt; print(\"\\\\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u6bd4\u8f03:\")\n&gt;&gt;&gt; for i in [10, 15, 20, 25]:\n...     print(f\"n={i}\")\n...     result1 = fibonacci_recursive(i)\n...     result2 = fibonacci_iterative(i)\n...     print(f\"  \u7d50\u679c: {result1} (\u4e21\u65b9\u3068\u3082\u540c\u3058)\")\n\n&gt;&gt;&gt; # \u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03\n&gt;&gt;&gt; print(\"\\\\n\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03:\")\n&gt;&gt;&gt; import random\n\n&gt;&gt;&gt; for size in [100, 500, 1000]:\n...     test_data = [random.randint(1, 1000) for _ in range(size)]\n...     print(f\"\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba: {size}\")\n...     \n...     # \u30d0\u30d6\u30eb\u30bd\u30fc\u30c8\n...     sorted1 = bubble_sort(test_data)\n...     \n...     # \u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\n...     sorted2 = quick_sort(test_data)\n...     \n...     print(f\"  \u30bd\u30fc\u30c8\u7d50\u679c\u306e\u4e00\u81f4: {sorted1 == sorted2}\")\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u6bd4\u8f03:\n\nn=10\n  \u7d50\u679c: 55 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\nn=15\n  \u7d50\u679c: 610 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\nn=20\n  \u7d50\u679c: 6765 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\nn=25\n  \u7d50\u679c: 75025 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\n\n\u30bd\u30fc\u30c8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6bd4\u8f03:\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba: 100\n  \u30bd\u30fc\u30c8\u7d50\u679c\u306e\u4e00\u81f4: True\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba: 500\n  \u30bd\u30fc\u30c8\u7d50\u679c\u306e\u4e00\u81f4: True\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30ba: 1000\n  \u30bd\u30fc\u30c8\u7d50\u679c\u306e\u4e00\u81f4: True\n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7d71\u8a08\u306e\u8868\u793a\n&gt;&gt;&gt; print(\"\\\\n\" + monitor.get_report())\n\n=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7d71\u8a08\u30ec\u30dd\u30fc\u30c8 ===\n\n\u95a2\u6570: bubble_sort\n  \u547c\u3073\u51fa\u3057\u56de\u6570: 3\u56de\n  \u7dcf\u5b9f\u884c\u6642\u9593: 0.123456\u79d2\n  \u5e73\u5747\u5b9f\u884c\u6642\u9593: 0.041152\u79d2\n  \u6700\u77ed\u5b9f\u884c\u6642\u9593: 0.002345\u79d2\n  \u6700\u9577\u5b9f\u884c\u6642\u9593: 0.089234\u79d2\n  \u6a19\u6e96\u504f\u5dee: 0.035672\u79d2\n\n\u95a2\u6570: fibonacci_iterative\n  \u547c\u3073\u51fa\u3057\u56de\u6570: 4\u56de\n  \u7dcf\u5b9f\u884c\u6642\u9593: 0.000123\u79d2\n  \u5e73\u5747\u5b9f\u884c\u6642\u9593: 0.000031\u79d2\n  \u6700\u77ed\u5b9f\u884c\u6642\u9593: 0.000012\u79d2\n  \u6700\u9577\u5b9f\u884c\u6642\u9593: 0.000067\u79d2\n  \u6a19\u6e96\u504f\u5dee: 0.000023\u79d2\n\n\u95a2\u6570: fibonacci_recursive\n  \u547c\u3073\u51fa\u3057\u56de\u6570: 4\u56de\n  \u7dcf\u5b9f\u884c\u6642\u9593: 2.456789\u79d2\n  \u5e73\u5747\u5b9f\u884c\u6642\u9593: 0.614197\u79d2\n  \u6700\u77ed\u5b9f\u884c\u6642\u9593: 0.000234\u79d2\n  \u6700\u9577\u5b9f\u884c\u6642\u9593: 2.123456\u79d2\n  \u6a19\u6e96\u504f\u5dee: 0.987654\u79d2\n\n\u95a2\u6570: quick_sort\n  \u547c\u3073\u51fa\u3057\u56de\u6570: 3\u56de\n  \u7dcf\u5b9f\u884c\u6642\u9593: 0.012345\u79d2\n  \u5e73\u5747\u5b9f\u884c\u6642\u9593: 0.004115\u79d2\n  \u6700\u77ed\u5b9f\u884c\u6642\u9593: 0.001234\u79d2\n  \u6700\u9577\u5b9f\u884c\u6642\u9593: 0.006789\u79d2\n  \u6a19\u6e96\u504f\u5dee: 0.002345\u79d2\n</code></pre>"},{"location":"chapter16/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; import pickle\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; from functools import wraps\n\n&gt;&gt;&gt; class CacheManager:\n...     \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, cache_dir=\"cache\", max_cache_size=100):\n...         self.cache_dir = cache_dir\n...         self.max_cache_size = max_cache_size\n...         self.memory_cache = {}\n...         self.cache_stats = {\"hits\": 0, \"misses\": 0}\n...         \n...         # \u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\n...         if not os.path.exists(cache_dir):\n...             os.makedirs(cache_dir)\n...     \n...     def _generate_key(self, func_name, args, kwargs):\n...         \"\"\"\u5f15\u6570\u304b\u3089\u30ad\u30e3\u30c3\u30b7\u30e5\u30ad\u30fc\u3092\u751f\u6210\"\"\"\n...         key_data = f\"{func_name}_{args}_{sorted(kwargs.items())}\"\n...         return hashlib.md5(key_data.encode()).hexdigest()\n...     \n...     def memory_cache_decorator(self, func):\n...         \"\"\"\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...         @wraps(func)\n...         def wrapper(*args, **kwargs):\n...             cache_key = self._generate_key(func.__name__, args, kwargs)\n...             \n...             # \u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u306e\u78ba\u8a8d\n...             if cache_key in self.memory_cache:\n...                 self.cache_stats[\"hits\"] += 1\n...                 print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: {func.__name__}{args}\")\n...                 return self.memory_cache[cache_key]\n...             \n...             # \u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff1a\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\n...             self.cache_stats[\"misses\"] += 1\n...             print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: {func.__name__}{args} - \u8a08\u7b97\u5b9f\u884c\u4e2d...\")\n...             result = func(*args, **kwargs)\n...             \n...             # \u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30a4\u30ba\u306e\u7ba1\u7406\n...             if len(self.memory_cache) &gt;= self.max_cache_size:\n...                 # \u6700\u3082\u53e4\u3044\u30ad\u30fc\u3092\u524a\u9664\uff08\u7c21\u6613\u5b9f\u88c5\uff09\n...                 oldest_key = next(iter(self.memory_cache))\n...                 del self.memory_cache[oldest_key]\n...             \n...             self.memory_cache[cache_key] = result\n...             return result\n...         return wrapper\n...     \n...     def file_cache_decorator(self, func):\n...         \"\"\"\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...         @wraps(func)\n...         def wrapper(*args, **kwargs):\n...             cache_key = self._generate_key(func.__name__, args, kwargs)\n...             cache_file = os.path.join(self.cache_dir, f\"{cache_key}.pkl\")\n...             \n...             # \u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u78ba\u8a8d\n...             if os.path.exists(cache_file):\n...                 try:\n...                     with open(cache_file, 'rb') as f:\n...                         result = pickle.load(f)\n...                     self.cache_stats[\"hits\"] += 1\n...                     print(f\"\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: {func.__name__}{args}\")\n...                     return result\n...                 except (pickle.PickleError, IOError):\n...                     # \u30ad\u30e3\u30c3\u30b7\u30e5\u30d5\u30a1\u30a4\u30eb\u304c\u7834\u640d\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u524a\u9664\n...                     os.remove(cache_file)\n...             \n...             # \u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff1a\u95a2\u6570\u3092\u5b9f\u884c\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\n...             self.cache_stats[\"misses\"] += 1\n...             print(f\"\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: {func.__name__}{args} - \u8a08\u7b97\u5b9f\u884c\u4e2d...\")\n...             result = func(*args, **kwargs)\n...             \n...             try:\n...                 with open(cache_file, 'wb') as f:\n...                     pickle.dump(result, f)\n...             except (pickle.PickleError, IOError):\n...                 print(f\"\u8b66\u544a: \u30ad\u30e3\u30c3\u30b7\u30e5\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u306b\u5931\u6557\u3057\u307e\u3057\u305f\")\n...             \n...             return result\n...         return wrapper\n...     \n...     def get_cache_stats(self):\n...         \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08\u3092\u53d6\u5f97\"\"\"\n...         total_requests = self.cache_stats[\"hits\"] + self.cache_stats[\"misses\"]\n...         hit_rate = (self.cache_stats[\"hits\"] / total_requests * 100) if total_requests &gt; 0 else 0\n...         \n...         return {\n...             \"hits\": self.cache_stats[\"hits\"],\n...             \"misses\": self.cache_stats[\"misses\"],\n...             \"total_requests\": total_requests,\n...             \"hit_rate\": hit_rate,\n...             \"memory_cache_size\": len(self.memory_cache)\n...         }\n...     \n...     def clear_cache(self):\n...         \"\"\"\u5168\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30af\u30ea\u30a2\"\"\"\n...         # \u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30af\u30ea\u30a2\n...         self.memory_cache.clear()\n...         \n...         # \u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30af\u30ea\u30a2\n...         for filename in os.listdir(self.cache_dir):\n...             if filename.endswith('.pkl'):\n...                 os.remove(os.path.join(self.cache_dir, filename))\n...         \n...         # \u7d71\u8a08\u306e\u30ea\u30bb\u30c3\u30c8\n...         self.cache_stats = {\"hits\": 0, \"misses\": 0}\n...         print(\"\u5168\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u30af\u30ea\u30a2\u3057\u307e\u3057\u305f\")\n... \n\n&gt;&gt;&gt; # \u30ad\u30e3\u30c3\u30b7\u30e5\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u4f5c\u6210\n&gt;&gt;&gt; cache_manager = CacheManager()\n\n&gt;&gt;&gt; # \u8a08\u7b97\u30b3\u30b9\u30c8\u306e\u9ad8\u3044\u95a2\u6570\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u5bfe\u8c61\uff09\n&gt;&gt;&gt; @cache_manager.memory_cache_decorator\n... def expensive_fibonacci(n):\n...     \"\"\"\u8a08\u7b97\u30b3\u30b9\u30c8\u306e\u9ad8\u3044\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\"\"\"\n...     if n &lt;= 1:\n...         return n\n...     # \u610f\u56f3\u7684\u306b\u975e\u52b9\u7387\u306a\u5b9f\u88c5\n...     return expensive_fibonacci(n-1) + expensive_fibonacci(n-2)\n... \n\n&gt;&gt;&gt; @cache_manager.file_cache_decorator\n... def calculate_prime_factors(n):\n...     \"\"\"\u7d20\u56e0\u6570\u5206\u89e3\uff08\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u5bfe\u8c61\uff09\"\"\"\n...     factors = []\n...     d = 2\n...     while d * d &lt;= n:\n...         while n % d == 0:\n...             factors.append(d)\n...             n //= d\n...         d += 1\n...     if n &gt; 1:\n...         factors.append(n)\n...     return factors\n... \n\n&gt;&gt;&gt; # \u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"\\\\n\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30b9\u30c8\uff08\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff09:\")\n&gt;&gt;&gt; for i in [10, 15, 10, 20, 15]:  # \u91cd\u8907\u3057\u305f\u5024\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u52b9\u679c\u3092\u78ba\u8a8d\n...     result = expensive_fibonacci(i)\n...     print(f\"fibonacci({i}) = {result}\")\n\n&gt;&gt;&gt; print(\"\\\\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30b9\u30c8\uff08\u7d20\u56e0\u6570\u5206\u89e3\uff09:\")\n&gt;&gt;&gt; for num in [1000, 2048, 1000, 3456, 2048]:  # \u91cd\u8907\u3057\u305f\u5024\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u52b9\u679c\u3092\u78ba\u8a8d\n...     factors = calculate_prime_factors(num)\n...     print(f\"{num}\u306e\u7d20\u56e0\u6570: {factors}\")\n\n=== \u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8 ===\n\n\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30b9\u30c8\uff08\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\uff09:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: expensive_fibonacci(10) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\nfibonacci(10) = 55\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: expensive_fibonacci(15) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\nfibonacci(15) = 610\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: expensive_fibonacci(10)\nfibonacci(10) = 55\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: expensive_fibonacci(20) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\nfibonacci(20) = 6765\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: expensive_fibonacci(15)\nfibonacci(15) = 610\n\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30c6\u30b9\u30c8\uff08\u7d20\u56e0\u6570\u5206\u89e3\uff09:\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: calculate_prime_factors(1000) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\n1000\u306e\u7d20\u56e0\u6570: [2, 2, 2, 5, 5, 5]\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: calculate_prime_factors(2048) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\n2048\u306e\u7d20\u56e0\u6570: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: calculate_prime_factors(1000)\n1000\u306e\u7d20\u56e0\u6570: [2, 2, 2, 5, 5, 5]\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: calculate_prime_factors(3456) - \u8a08\u7b97\u5b9f\u884c\u4e2d...\n3456\u306e\u7d20\u56e0\u6570: [2, 2, 2, 2, 2, 2, 2, 3, 3, 3]\n\u30d5\u30a1\u30a4\u30eb\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: calculate_prime_factors(2048)\n2048\u306e\u7d20\u56e0\u6570: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n\n&gt;&gt;&gt; # \u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08\u306e\u8868\u793a\n&gt;&gt;&gt; stats = cache_manager.get_cache_stats()\n&gt;&gt;&gt; print(f\"\\\\n=== \u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08 ===\")\n&gt;&gt;&gt; print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: {stats['hits']}\u56de\")\n&gt;&gt;&gt; print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: {stats['misses']}\u56de\")\n&gt;&gt;&gt; print(f\"\u30d2\u30c3\u30c8\u7387: {stats['hit_rate']:.1f}%\")\n&gt;&gt;&gt; print(f\"\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30a4\u30ba: {stats['memory_cache_size']}\u500b\")\n\n=== \u30ad\u30e3\u30c3\u30b7\u30e5\u7d71\u8a08 ===\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: 4\u56de\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: 6\u56de\n\u30d2\u30c3\u30c8\u7387: 40.0%\n\u30e1\u30e2\u30ea\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30a4\u30ba: 3\u500b\n</code></pre>"},{"location":"chapter16/#_9","title":"\u8907\u6570\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u308b","text":""},{"location":"chapter16/#_10","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u30c1\u30a7\u30fc\u30f3","text":"<pre><code>&gt;&gt;&gt; # \u8907\u6570\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u7d44\u307f\u5408\u308f\u305b\u305f\u95a2\u6570\n&gt;&gt;&gt; @log_function_calls(include_time=False, include_args=False)\n... @monitor.timing_decorator\n... @cache_manager.memory_cache_decorator\n... def complex_calculation(x, y, operation=\"add\"):\n...     \"\"\"\u8907\u96d1\u306a\u8a08\u7b97\u3092\u884c\u3046\u95a2\u6570\uff08\u4f8b\uff09\"\"\"\n...     import time\n...     time.sleep(0.1)  # \u8a08\u7b97\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...     \n...     if operation == \"add\":\n...         return x + y\n...     elif operation == \"multiply\":\n...         return x * y\n...     elif operation == \"power\":\n...         return x ** y\n...     else:\n...         raise ValueError(f\"\u672a\u5bfe\u5fdc\u306e\u64cd\u4f5c: {operation}\")\n... \n\n&gt;&gt;&gt; print(\"=== \u8907\u6570\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u7d44\u307f\u5408\u308f\u305b\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; \n&gt;&gt;&gt; # \u540c\u3058\u8a08\u7b97\u3092\u8907\u6570\u56de\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u52b9\u679c\u3092\u78ba\u8a8d\uff09\n&gt;&gt;&gt; for i in range(3):\n...     print(f\"\\\\n\u5b9f\u884c {i+1}:\")\n...     result1 = complex_calculation(5, 3, \"add\")\n...     result2 = complex_calculation(4, 2, \"multiply\") \n...     result3 = complex_calculation(5, 3, \"add\")  # \u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\u3059\u308b\u306f\u305a\n...     \n...     print(f\"\u7d50\u679c: {result1}, {result2}, {result3}\")\n\n=== \u8907\u6570\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u7d44\u307f\u5408\u308f\u305b\u30c6\u30b9\u30c8 ===\n\n\u5b9f\u884c 1:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: complex_calculation(5, 3, 'add') - \u8a08\u7b97\u5b9f\u884c\u4e2d...\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.1001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: complex_calculation(4, 2, 'multiply') - \u8a08\u7b97\u5b9f\u884c\u4e2d...\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.1001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(5, 3, 'add')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u7d50\u679c: 8, 8, 8\n\n\u5b9f\u884c 2:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(5, 3, 'add')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(4, 2, 'multiply')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(5, 3, 'add')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u7d50\u679c: 8, 8, 8\n\n\u5b9f\u884c 3:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(5, 3, 'add')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(4, 2, 'multiply')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: complex_calculation(5, 3, 'add')\nLOG: \u95a2\u6570 'complex_calculation' \u3092\u5b9f\u884c | \u6210\u529f (\u5b9f\u884c\u6642\u9593: 0.0001\u79d2) | \u623b\u308a\u5024: 8\n\u7d50\u679c: 8, 8, 8\n</code></pre>"},{"location":"chapter16/#_11","title":"\u5f15\u6570\u3092\u6301\u3064\u30c7\u30b3\u30ec\u30fc\u30bf","text":""},{"location":"chapter16/#_12","title":"\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>&gt;&gt;&gt; def retry_on_failure(max_attempts=3, delay=1, exceptions=(Exception,)):\n...     \"\"\"\u5931\u6557\u6642\u306b\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...     def decorator(func):\n...         @functools.wraps(func)\n...         def wrapper(*args, **kwargs):\n...             last_exception = None\n...             \n...             for attempt in range(max_attempts):\n...                 try:\n...                     print(f\"\u8a66\u884c {attempt + 1}/{max_attempts}: {func.__name__}\")\n...                     result = func(*args, **kwargs)\n...                     if attempt &gt; 0:\n...                         print(f\"\u6210\u529f: {attempt + 1}\u56de\u76ee\u3067\u6210\u529f\u3057\u307e\u3057\u305f\")\n...                     return result\n...                     \n...                 except exceptions as e:\n...                     last_exception = e\n...                     print(f\"\u5931\u6557: {str(e)}\")\n...                     \n...                     if attempt &lt; max_attempts - 1:\n...                         print(f\"{delay}\u79d2\u5f85\u6a5f\u3057\u3066\u30ea\u30c8\u30e9\u30a4\u3057\u307e\u3059...\")\n...                         time.sleep(delay)\n...                     else:\n...                         print(f\"\u6700\u5927\u8a66\u884c\u56de\u6570\u306b\u9054\u3057\u307e\u3057\u305f\u3002\u8ae6\u3081\u307e\u3059\u3002\")\n...             \n...             # \u5168\u3066\u306e\u8a66\u884c\u304c\u5931\u6557\u3057\u305f\u5834\u5408\n...             raise last_exception\n...         return wrapper\n...     return decorator\n... \n\n&gt;&gt;&gt; def validate_types(**type_checks):\n...     \"\"\"\u5f15\u6570\u306e\u578b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...     def decorator(func):\n...         @functools.wraps(func)\n...         def wrapper(*args, **kwargs):\n...             import inspect\n...             \n...             # \u95a2\u6570\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u53d6\u5f97\n...             sig = inspect.signature(func)\n...             bound_args = sig.bind(*args, **kwargs)\n...             bound_args.apply_defaults()\n...             \n...             # \u578b\u30c1\u30a7\u30c3\u30af\n...             for param_name, expected_type in type_checks.items():\n...                 if param_name in bound_args.arguments:\n...                     value = bound_args.arguments[param_name]\n...                     if not isinstance(value, expected_type):\n...                         raise TypeError(\n...                             f\"\u5f15\u6570 '{param_name}' \u306f {expected_type.__name__} \u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\"\n...                             f\"\u5b9f\u969b\u306e\u578b: {type(value).__name__}\"\n...                         )\n...             \n...             return func(*args, **kwargs)\n...         return wrapper\n...     return decorator\n... \n\n&gt;&gt;&gt; # \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u4f7f\u7528\u4f8b\n&gt;&gt;&gt; import random\n\n&gt;&gt;&gt; @retry_on_failure(max_attempts=3, delay=0.5, exceptions=(ValueError, ConnectionError))\n... def unreliable_network_call(success_rate=0.3):\n...     \"\"\"\u4e0d\u5b89\u5b9a\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u547c\u3073\u51fa\u3057\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\"\"\"\n...     if random.random() &lt; success_rate:\n...         return \"\u30c7\u30fc\u30bf\u53d6\u5f97\u6210\u529f\"\n...     else:\n...         if random.random() &lt; 0.5:\n...             raise ValueError(\"\u30c7\u30fc\u30bf\u5f62\u5f0f\u30a8\u30e9\u30fc\")\n...         else:\n...             raise ConnectionError(\"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u63a5\u7d9a\u30a8\u30e9\u30fc\")\n... \n\n&gt;&gt;&gt; @validate_types(name=str, age=int, salary=float)\n... def create_employee_record(name, age, salary):\n...     \"\"\"\u5f93\u696d\u54e1\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\"\"\"\n...     return {\n...         \"name\": name,\n...         \"age\": age,\n...         \"salary\": salary,\n...         \"id\": f\"EMP_{age}_{name[:3].upper()}\"\n...     }\n... \n\n&gt;&gt;&gt; print(\"=== \u30ea\u30c8\u30e9\u30a4\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; try:\n...     result = unreliable_network_call(success_rate=0.8)  # \u6210\u529f\u738780%\n...     print(f\"\u7d50\u679c: {result}\")\n... except Exception as e:\n...     print(f\"\u6700\u7d42\u7684\u306b\u5931\u6557: {e}\")\n\n&gt;&gt;&gt; print(\"\\\\n=== \u578b\u30c1\u30a7\u30c3\u30af\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\")\n\n&gt;&gt;&gt; # \u6b63\u5e38\u306a\u30b1\u30fc\u30b9\n&gt;&gt;&gt; try:\n...     employee1 = create_employee_record(\"\u7530\u4e2d\u592a\u90ce\", 30, 500000.0)\n...     print(f\"\u6b63\u5e38\u4f5c\u6210: {employee1}\")\n... except TypeError as e:\n...     print(f\"\u578b\u30a8\u30e9\u30fc: {e}\")\n\n&gt;&gt;&gt; # \u578b\u30a8\u30e9\u30fc\u306e\u30b1\u30fc\u30b9\n&gt;&gt;&gt; try:\n...     employee2 = create_employee_record(\"\u4f50\u85e4\u82b1\u5b50\", \"30\", 600000.0)  # \u5e74\u9f62\u304c\u6587\u5b57\u5217\n...     print(f\"\u4f5c\u6210: {employee2}\")\n... except TypeError as e:\n...     print(f\"\u578b\u30a8\u30e9\u30fc: {e}\")\n\n&gt;&gt;&gt; try:\n...     employee3 = create_employee_record(\"\u9234\u6728\u4e00\u90ce\", 35, \"700000\")  # \u7d66\u4e0e\u304c\u6587\u5b57\u5217\n...     print(f\"\u4f5c\u6210: {employee3}\")\n... except TypeError as e:\n...     print(f\"\u578b\u30a8\u30e9\u30fc: {e}\")\n\n=== \u30ea\u30c8\u30e9\u30a4\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\n\u8a66\u884c 1/3: unreliable_network_call\n\u7d50\u679c: \u30c7\u30fc\u30bf\u53d6\u5f97\u6210\u529f\n\n=== \u578b\u30c1\u30a7\u30c3\u30af\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 ===\n\u6b63\u5e38\u4f5c\u6210: {'name': '\u7530\u4e2d\u592a\u90ce', 'age': 30, 'salary': 500000.0, 'id': 'EMP_30_\u7530\u4e2d'}\n\u578b\u30a8\u30e9\u30fc: \u5f15\u6570 'age' \u306f int \u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u969b\u306e\u578b: str\n\u578b\u30a8\u30e9\u30fc: \u5f15\u6570 'salary' \u306f float \u578b\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u969b\u306e\u578b: str\n</code></pre>"},{"location":"chapter16/#_13","title":"\u307e\u3068\u3081\uff1a\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u5a01\u529b\u3068\u6d3b\u7528\u6cd5","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter16/#_14","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u95a2\u6570\u3092\u62e1\u5f35\u3059\u308b\u4ed5\u7d44\u307f: \u65e2\u5b58\u306e\u95a2\u6570\u306b\u65b0\u3057\u3044\u6a5f\u80fd\u3092\u8ffd\u52a0</li> <li>@\u8a18\u6cd5: <code>@decorator</code> \u3067\u30b7\u30f3\u30d7\u30eb\u306b\u9069\u7528</li> <li>functools.wraps: \u5143\u306e\u95a2\u6570\u306e\u60c5\u5831\u3092\u4fdd\u6301</li> <li>\u9ad8\u968e\u95a2\u6570: \u95a2\u6570\u3092\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u95a2\u6570</li> </ul>"},{"location":"chapter16/#_15","title":"\u5b9f\u7528\u7684\u306a\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u4f8b","text":"<ol> <li>\u30ed\u30b0\u6a5f\u80fd: \u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u8a18\u9332</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6e2c\u5b9a: \u5b9f\u884c\u6642\u9593\u306e\u76e3\u8996</li> <li>\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd: \u8a08\u7b97\u7d50\u679c\u306e\u4fdd\u5b58\u3068\u518d\u5229\u7528</li> <li>\u30ea\u30c8\u30e9\u30a4\u6a5f\u80fd: \u5931\u6557\u6642\u306e\u81ea\u52d5\u518d\u8a66\u884c</li> <li>\u578b\u30c1\u30a7\u30c3\u30af: \u5f15\u6570\u306e\u578b\u691c\u8a3c</li> </ol>"},{"location":"chapter16/#_16","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u8a2d\u8a08\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># \u57fa\u672c\u30d1\u30bf\u30fc\u30f3\ndef simple_decorator(func):\n    @functools.wraps(func)\n    def wrapper(*args, **kwargs):\n        # \u524d\u51e6\u7406\n        result = func(*args, **kwargs)\n        # \u5f8c\u51e6\u7406\n        return result\n    return wrapper\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u4ed8\u304d\u30d1\u30bf\u30fc\u30f3\ndef parameterized_decorator(param1, param2=default):\n    def decorator(func):\n        @functools.wraps(func)\n        def wrapper(*args, **kwargs):\n            # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u4f7f\u7528\u3057\u305f\u51e6\u7406\n            return func(*args, **kwargs)\n        return wrapper\n    return decorator\n</code></pre>"},{"location":"chapter16/#_17","title":"\u30c7\u30b3\u30ec\u30fc\u30bf\u30c1\u30a7\u30fc\u30f3","text":"<pre><code>@decorator1\n@decorator2\n@decorator3\ndef my_function():\n    pass\n\n# \u3053\u308c\u306f\u4ee5\u4e0b\u3068\u540c\u7b49\uff1a\n# my_function = decorator1(decorator2(decorator3(my_function)))\n</code></pre>"},{"location":"chapter16/#_18","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>Web\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af: \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3001\u8a8d\u8a3c\u3001CORS</li> <li>\u30c6\u30b9\u30c8: \u30e2\u30c3\u30af\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7</li> <li>API: \u30ec\u30fc\u30c8\u5236\u9650\u3001\u8a8d\u8a3c\u30c1\u30a7\u30c3\u30af</li> <li>\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9: \u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406</li> <li>\u30c7\u30d0\u30c3\u30b0: \u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3001\u30ed\u30b0</li> </ul>"},{"location":"chapter16/#_19","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3078\u306e\u5f71\u97ff","text":"<ul> <li>\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf: \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u3088\u308b\u6700\u9069\u5316</li> <li>\u5b9f\u884c\u6642\u9593: \u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u3068\u6700\u9069\u5316\u306e\u30d0\u30e9\u30f3\u30b9</li> <li>\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3: \u5927\u898f\u6a21\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u52b9\u679c</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002async/await\u3092\u4f7f\u3063\u305f\u4e26\u884c\u51e6\u7406\u3067\u3001I/O\u5f85\u6a5f\u6642\u9593\u3092\u6709\u52b9\u6d3b\u7528\u3057\u3001\u9ad8\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c16\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c16\u7ae0\u3067\u306f\u9ad8\u968e\u95a2\u6570\u3068\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u6982\u5ff5\u304b\u3089\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u307e\u3067\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u95a2\u6570\u3092\u7b2c\u4e00\u7d1a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u6271\u3046\u65b9\u6cd5\u3001\u95a2\u6570\u3092\u8fd4\u3059\u95a2\u6570\u3001\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308b\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u30ed\u30b0\u6a5f\u80fd\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u76e3\u8996\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u6a5f\u80fd\u3092\u6301\u3064\u30c7\u30b3\u30ec\u30fc\u30bf\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3002\u8907\u6570\u30c7\u30b3\u30ec\u30fc\u30bf\u306e\u7d44\u307f\u5408\u308f\u305b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c7\u30b3\u30ec\u30fc\u30bf\u3082\u542b\u3080\u5b8c\u5168\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u5b9f\u88c5\u3002\u6b21\u306f\u7b2c17\u7ae0\u306e\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter17/","title":"\u7b2c17\u7ae0\uff1a\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u4e16\u754c","text":"<p>\u5f93\u6765\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e00\u3064\u305a\u3064\u9806\u756a\u306b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u307e\u3059\u304c\u3001\u73fe\u4ee3\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u8907\u6570\u306e\u51e6\u7406\u3092\u540c\u6642\u306b\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u5b66\u3073\u307e\u3059\u3002Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3001\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u76e3\u8996\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001async/await\u3092\u4f7f\u3063\u305f\u52b9\u7387\u7684\u306a\u4e26\u884c\u51e6\u7406\u306e\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter17/#vs","title":"\u540c\u671f\u51e6\u7406 vs \u975e\u540c\u671f\u51e6\u7406","text":""},{"location":"chapter17/#_1","title":"\u540c\u671f\u51e6\u7406\u306e\u554f\u984c\u70b9","text":"<p>\u5f93\u6765\u306e\u540c\u671f\u51e6\u7406\u3067\u306f\u3001\u4e00\u3064\u306e\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u307e\u3067\u6b21\u306e\u51e6\u7406\u3092\u958b\u59cb\u3067\u304d\u307e\u305b\u3093\uff1a</p> <pre><code>&gt;&gt;&gt; import time\n&gt;&gt;&gt; import requests\n\n&gt;&gt;&gt; def synchronous_download(urls):\n...     \"\"\"\u540c\u671f\u7684\u306bURL\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\"\"\"\n...     results = []\n...     start_time = time.time()\n...     \n...     for i, url in enumerate(urls):\n...         print(f\"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb {i+1}: {url}\")\n...         # \u5b9f\u969b\u306eHTTP\u901a\u4fe1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...         time.sleep(1)  # 1\u79d2\u306e\u5f85\u6a5f\u6642\u9593\n...         results.append(f\"\u30c7\u30fc\u30bf_{i+1}\")\n...         print(f\"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 {i+1}\")\n...     \n...     end_time = time.time()\n...     print(f\"\u7dcf\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...     return results\n... \n\n&gt;&gt;&gt; # \u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"=== \u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; urls = [\"http://example1.com\", \"http://example2.com\", \"http://example3.com\"]\n&gt;&gt;&gt; results = synchronous_download(urls)\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {results}\")\n\n=== \u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8 ===\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 1: http://example1.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 1\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 2: http://example2.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 2\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 3: http://example3.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 3\n\u7dcf\u5b9f\u884c\u6642\u9593: 3.00\u79d2\n\u7d50\u679c: ['\u30c7\u30fc\u30bf_1', '\u30c7\u30fc\u30bf_2', '\u30c7\u30fc\u30bf_3']\n</code></pre> <p>\u554f\u984c\u70b9\uff1a 1. \u5f85\u6a5f\u6642\u9593\u306e\u7121\u99c4: \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306e\u5f85\u6a5f\u4e2d\u3001CPU\u304c\u4f55\u3082\u3057\u306a\u3044 2. \u51e6\u7406\u6642\u9593\u306e\u9577\u3055: \u51e6\u7406\u304c\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u6642\u9593\u304c\u304b\u304b\u308b 3. \u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\u306e\u6b20\u5982: \u5927\u91cf\u306e\u51e6\u7406\u306b\u306f\u4e0d\u5411\u304d</p>"},{"location":"chapter17/#_2","title":"\u975e\u540c\u671f\u51e6\u7406\u306e\u5229\u70b9","text":"<pre><code>&gt;&gt;&gt; import asyncio\n\n&gt;&gt;&gt; async def asynchronous_download(urls):\n...     \"\"\"\u975e\u540c\u671f\u7684\u306bURL\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\"\"\"\n...     async def download_single(index, url):\n...         print(f\"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb {index+1}: {url}\")\n...         # \u975e\u540c\u671f\u306e\u5f85\u6a5f\uff08\u4ed6\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3067\u304d\u308b\uff09\n...         await asyncio.sleep(1)\n...         print(f\"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 {index+1}\")\n...         return f\"\u30c7\u30fc\u30bf_{index+1}\"\n...     \n...     start_time = time.time()\n...     \n...     # \u8907\u6570\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u4e26\u884c\u5b9f\u884c\n...     tasks = [download_single(i, url) for i, url in enumerate(urls)]\n...     results = await asyncio.gather(*tasks)\n...     \n...     end_time = time.time()\n...     print(f\"\u7dcf\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...     return results\n... \n\n&gt;&gt;&gt; # \u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; print(\"\\\\n=== \u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8 ===\")\n&gt;&gt;&gt; results = asyncio.run(asynchronous_download(urls))\n&gt;&gt;&gt; print(f\"\u7d50\u679c: {results}\")\n\n=== \u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8 ===\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 1: http://example1.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 2: http://example2.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u958b\u59cb 3: http://example3.com\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 1\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 2\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5b8c\u4e86 3\n\u7dcf\u5b9f\u884c\u6642\u9593: 1.00\u79d2\n\u7d50\u679c: ['\u30c7\u30fc\u30bf_1', '\u30c7\u30fc\u30bf_2', '\u30c7\u30fc\u30bf_3']\n</code></pre> <p>\u975e\u540c\u671f\u51e6\u7406\u306e\u5229\u70b9\uff1a 1. \u4e26\u884c\u5b9f\u884c: \u8907\u6570\u306e\u51e6\u7406\u3092\u540c\u6642\u306b\u5b9f\u884c 2. \u52b9\u7387\u7684\u306a\u5f85\u6a5f\u6642\u9593\u306e\u6d3b\u7528: I/O\u5f85\u6a5f\u4e2d\u306b\u4ed6\u306e\u51e6\u7406\u3092\u5b9f\u884c 3. \u9ad8\u3044\u30b9\u30eb\u30fc\u30d7\u30c3\u30c8: \u540c\u3058\u6642\u9593\u3067\u3088\u308a\u591a\u304f\u306e\u51e6\u7406\u304c\u53ef\u80fd</p>"},{"location":"chapter17/#asyncawait","title":"async/await\u306e\u57fa\u672c","text":""},{"location":"chapter17/#_3","title":"\u57fa\u672c\u7684\u306a\u69cb\u6587","text":"<pre><code>&gt;&gt;&gt; async def simple_async_function():\n...     \"\"\"\u30b7\u30f3\u30d7\u30eb\u306a\u975e\u540c\u671f\u95a2\u6570\"\"\"\n...     print(\"\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\")\n...     await asyncio.sleep(1)  # 1\u79d2\u5f85\u6a5f\uff08\u975e\u540c\u671f\uff09\n...     print(\"\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\")\n...     return \"\u5b8c\u4e86\"\n... \n\n&gt;&gt;&gt; async def demonstrate_async_basics():\n...     \"\"\"\u975e\u540c\u671f\u51e6\u7406\u306e\u57fa\u672c\u3092\u793a\u3059\u95a2\u6570\"\"\"\n...     print(\"=== \u975e\u540c\u671f\u51e6\u7406\u306e\u57fa\u672c ===\")\n...     \n...     # 1. \u5358\u4e00\u306e\u975e\u540c\u671f\u95a2\u6570\u5b9f\u884c\n...     print(\"1. \u5358\u4e00\u306e\u975e\u540c\u671f\u95a2\u6570:\")\n...     result = await simple_async_function()\n...     print(f\"\u7d50\u679c: {result}\")\n...     \n...     # 2. \u8907\u6570\u306e\u975e\u540c\u671f\u95a2\u6570\u3092\u9806\u6b21\u5b9f\u884c\n...     print(\"\\\\n2. \u9806\u6b21\u5b9f\u884c:\")\n...     start_time = time.time()\n...     await simple_async_function()\n...     await simple_async_function()\n...     end_time = time.time()\n...     print(f\"\u9806\u6b21\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...     \n...     # 3. \u8907\u6570\u306e\u975e\u540c\u671f\u95a2\u6570\u3092\u4e26\u884c\u5b9f\u884c\n...     print(\"\\\\n3. \u4e26\u884c\u5b9f\u884c:\")\n...     start_time = time.time()\n...     await asyncio.gather(\n...         simple_async_function(),\n...         simple_async_function()\n...     )\n...     end_time = time.time()\n...     print(f\"\u4e26\u884c\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n... \n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u975e\u540c\u671f\u51e6\u7406\u306e\u5b9f\u884c\n&gt;&gt;&gt; asyncio.run(demonstrate_async_basics())\n\n=== \u975e\u540c\u671f\u51e6\u7406\u306e\u57fa\u672c ===\n1. \u5358\u4e00\u306e\u975e\u540c\u671f\u95a2\u6570:\n\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\n\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\n\u7d50\u679c: \u5b8c\u4e86\n\n2. \u9806\u6b21\u5b9f\u884c:\n\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\n\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\n\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\n\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\n\u9806\u6b21\u5b9f\u884c\u6642\u9593: 2.00\u79d2\n\n3. \u4e26\u884c\u5b9f\u884c:\n\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\n\u975e\u540c\u671f\u95a2\u6570\u306e\u958b\u59cb\n\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\n\u975e\u540c\u671f\u95a2\u6570\u306e\u7d42\u4e86\n\u4e26\u884c\u5b9f\u884c\u6642\u9593: 1.00\u79d2\n</code></pre>"},{"location":"chapter17/#_4","title":"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc","text":"<pre><code>&gt;&gt;&gt; class AsyncFileManager:\n...     \"\"\"\u975e\u540c\u671f\u30d5\u30a1\u30a4\u30eb\u7ba1\u7406\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, filename, mode='r'):\n...         self.filename = filename\n...         self.mode = mode\n...         self.file = None\n...     \n...     async def __aenter__(self):\n...         \"\"\"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u958b\u59cb\"\"\"\n...         print(f\"\u30d5\u30a1\u30a4\u30eb '{self.filename}' \u3092\u958b\u3044\u3066\u3044\u307e\u3059...\")\n...         await asyncio.sleep(0.1)  # \u30d5\u30a1\u30a4\u30eb\u958b\u304f\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...         self.file = open(self.filename, self.mode, encoding='utf-8')\n...         print(f\"\u30d5\u30a1\u30a4\u30eb '{self.filename}' \u3092\u958b\u304d\u307e\u3057\u305f\")\n...         return self.file\n...     \n...     async def __aexit__(self, exc_type, exc_val, exc_tb):\n...         \"\"\"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u7d42\u4e86\"\"\"\n...         if self.file:\n...             print(f\"\u30d5\u30a1\u30a4\u30eb '{self.filename}' \u3092\u9589\u3058\u3066\u3044\u307e\u3059...\")\n...             self.file.close()\n...             await asyncio.sleep(0.1)  # \u30d5\u30a1\u30a4\u30eb\u9589\u3058\u308b\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...             print(f\"\u30d5\u30a1\u30a4\u30eb '{self.filename}' \u3092\u9589\u3058\u307e\u3057\u305f\")\n... \n\n&gt;&gt;&gt; async def test_async_context_manager():\n...     \"\"\"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u30c6\u30b9\u30c8\"\"\"\n...     # \u30c6\u30b9\u30c8\u7528\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n...     with open(\"test_async.txt\", \"w\", encoding=\"utf-8\") as f:\n...         f.write(\"\u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\\\\nPython\u306f\u7d20\u6674\u3089\u3057\u3044\uff01\")\n...     \n...     # \u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u306e\u4f7f\u7528\n...     async with AsyncFileManager(\"test_async.txt\", \"r\") as file:\n...         content = file.read()\n...         print(f\"\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9: {content}\")\n...         await asyncio.sleep(0.5)  # \u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n... \n\n&gt;&gt;&gt; asyncio.run(test_async_context_manager())\n\n\u30d5\u30a1\u30a4\u30eb 'test_async.txt' \u3092\u958b\u3044\u3066\u3044\u307e\u3059...\n\u30d5\u30a1\u30a4\u30eb 'test_async.txt' \u3092\u958b\u304d\u307e\u3057\u305f\n\u30d5\u30a1\u30a4\u30eb\u5185\u5bb9: \u975e\u540c\u671f\u51e6\u7406\u306e\u30c6\u30b9\u30c8\nPython\u306f\u7d20\u6674\u3089\u3057\u3044\uff01\n\u30d5\u30a1\u30a4\u30eb 'test_async.txt' \u3092\u9589\u3058\u3066\u3044\u307e\u3059...\n\u30d5\u30a1\u30a4\u30eb 'test_async.txt' \u3092\u9589\u3058\u307e\u3057\u305f\n</code></pre>"},{"location":"chapter17/#web","title":"\u3010\u5b9f\u884c\u3011Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046","text":"<p>\u5b9f\u969b\u306eWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u3063\u3066\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u5b9f\u7528\u6027\u3092\u5b66\u3073\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter17/#1http","title":"\u30b9\u30c6\u30c3\u30d71\uff1a\u975e\u540c\u671fHTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8","text":"<pre><code>&gt;&gt;&gt; import aiohttp\n&gt;&gt;&gt; import asyncio\n&gt;&gt;&gt; import time\n&gt;&gt;&gt; from urllib.parse import urljoin, urlparse\n&gt;&gt;&gt; import re\n\n&gt;&gt;&gt; class AsyncWebScraper:\n...     \"\"\"\u975e\u540c\u671fWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, max_concurrent=10, delay_between_requests=0.1):\n...         self.max_concurrent = max_concurrent\n...         self.delay_between_requests = delay_between_requests\n...         self.session = None\n...         self.results = []\n...         self.errors = []\n...     \n...     async def __aenter__(self):\n...         \"\"\"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u958b\u59cb\"\"\"\n...         self.session = aiohttp.ClientSession(\n...             timeout=aiohttp.ClientTimeout(total=30),\n...             headers={'User-Agent': 'AsyncWebScraper/1.0'}\n...         )\n...         return self\n...     \n...     async def __aexit__(self, exc_type, exc_val, exc_tb):\n...         \"\"\"\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u7d42\u4e86\"\"\"\n...         if self.session:\n...             await self.session.close()\n...     \n...     async def fetch_url(self, url, semaphore):\n...         \"\"\"\u5358\u4e00URL\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\"\"\"\n...         async with semaphore:  # \u540c\u6642\u5b9f\u884c\u6570\u3092\u5236\u9650\n...             try:\n...                 print(f\"\u53d6\u5f97\u958b\u59cb: {url}\")\n...                 async with self.session.get(url) as response:\n...                     content = await response.text()\n...                     \n...                     # \u57fa\u672c\u7684\u306a\u60c5\u5831\u3092\u62bd\u51fa\n...                     title = self.extract_title(content)\n...                     links_count = self.count_links(content)\n...                     \n...                     result = {\n...                         'url': url,\n...                         'status_code': response.status,\n...                         'title': title,\n...                         'content_length': len(content),\n...                         'links_count': links_count,\n...                         'success': True\n...                     }\n...                     \n...                     self.results.append(result)\n...                     print(f\"\u53d6\u5f97\u5b8c\u4e86: {url} (\u30bf\u30a4\u30c8\u30eb: {title})\")\n...                     \n...                     # \u30ea\u30af\u30a8\u30b9\u30c8\u9593\u306e\u9045\u5ef6\n...                     await asyncio.sleep(self.delay_between_requests)\n...                     \n...                     return result\n...                     \n...             except Exception as e:\n...                 error = {\n...                     'url': url,\n...                     'error': str(e),\n...                     'success': False\n...                 }\n...                 self.errors.append(error)\n...                 print(f\"\u53d6\u5f97\u30a8\u30e9\u30fc: {url} - {str(e)}\")\n...                 return error\n...     \n...     def extract_title(self, html_content):\n...         \"\"\"HTML\u304b\u3089\u30bf\u30a4\u30c8\u30eb\u3092\u62bd\u51fa\"\"\"\n...         title_match = re.search(r'&lt;title&gt;(.*?)&lt;/title&gt;', html_content, re.IGNORECASE | re.DOTALL)\n...         if title_match:\n...             return title_match.group(1).strip()\n...         return \"\u30bf\u30a4\u30c8\u30eb\u306a\u3057\"\n...     \n...     def count_links(self, html_content):\n...         \"\"\"HTML\u306e\u30ea\u30f3\u30af\u6570\u3092\u30ab\u30a6\u30f3\u30c8\"\"\"\n...         links = re.findall(r'&lt;a\\s+[^&gt;]*href=[\"\\'][^\"\\']*[\"\\'][^&gt;]*&gt;', html_content, re.IGNORECASE)\n...         return len(links)\n...     \n...     async def scrape_urls(self, urls):\n...         \"\"\"\u8907\u6570URL\u3092\u4e26\u884c\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\"\"\"\n...         semaphore = asyncio.Semaphore(self.max_concurrent)\n...         \n...         print(f\"\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u958b\u59cb: {len(urls)}\u500b\u306eURL\")\n...         start_time = time.time()\n...         \n...         # \u5168URL\u3092\u4e26\u884c\u51e6\u7406\n...         tasks = [self.fetch_url(url, semaphore) for url in urls]\n...         results = await asyncio.gather(*tasks, return_exceptions=True)\n...         \n...         end_time = time.time()\n...         \n...         print(f\"\\\\n\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u5b8c\u4e86:\")\n...         print(f\"  \u7dcf\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...         print(f\"  \u6210\u529f: {len(self.results)}\u4ef6\")\n...         print(f\"  \u30a8\u30e9\u30fc: {len(self.errors)}\u4ef6\")\n...         \n...         return results\n...     \n...     def generate_report(self):\n...         \"\"\"\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u7d50\u679c\u306e\u30ec\u30dd\u30fc\u30c8\u751f\u6210\"\"\"\n...         if not self.results:\n...             return \"\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u7d50\u679c\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         \n...         report = [\"=== Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u7d50\u679c\u30ec\u30dd\u30fc\u30c8 ===\"]\n...         \n...         # \u6210\u529f\u3057\u305f\u7d50\u679c\u306e\u7d71\u8a08\n...         successful_results = [r for r in self.results if r.get('success')]\n...         if successful_results:\n...             avg_content_length = sum(r['content_length'] for r in successful_results) / len(successful_results)\n...             total_links = sum(r['links_count'] for r in successful_results)\n...             \n...             report.append(f\"\\\\n\u3010\u7d71\u8a08\u60c5\u5831\u3011\")\n...             report.append(f\"\u6210\u529f\u3057\u305fURL\u6570: {len(successful_results)}\")\n...             report.append(f\"\u5e73\u5747\u30b3\u30f3\u30c6\u30f3\u30c4\u9577: {avg_content_length:.0f}\u6587\u5b57\")\n...             report.append(f\"\u7dcf\u30ea\u30f3\u30af\u6570: {total_links}\")\n...         \n...         # \u5404URL\u306e\u8a73\u7d30\n...         report.append(f\"\\\\n\u3010\u8a73\u7d30\u7d50\u679c\u3011\")\n...         for result in self.results:\n...             if result.get('success'):\n...                 report.append(f\"\u2713 {result['url']}\")\n...                 report.append(f\"  \u30bf\u30a4\u30c8\u30eb: {result['title']}\")\n...                 report.append(f\"  \u30b9\u30c6\u30fc\u30bf\u30b9: {result['status_code']}\")\n...                 report.append(f\"  \u30b3\u30f3\u30c6\u30f3\u30c4\u9577: {result['content_length']:,}\u6587\u5b57\")\n...                 report.append(f\"  \u30ea\u30f3\u30af\u6570: {result['links_count']}\")\n...             else:\n...                 report.append(f\"\u2717 {result['url']}\")\n...                 report.append(f\"  \u30a8\u30e9\u30fc: {result['error']}\")\n...         \n...         return \"\\\\n\".join(report)\n... \n\n&gt;&gt;&gt; # \u975e\u540c\u671fWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30c6\u30b9\u30c8\uff08\u30b5\u30f3\u30d7\u30ebURL\u3092\u4f7f\u7528\uff09\n&gt;&gt;&gt; async def test_web_scraping():\n...     \"\"\"Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30c6\u30b9\u30c8\"\"\"\n...     # \u5b9f\u969b\u306eWeb\u30b5\u30a4\u30c8\u3067\u306f\u306a\u304f\u3001HTTPBin\u306a\u3069\u306e\u30c6\u30b9\u30c8\u7528\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u7528\n...     test_urls = [\n...         \"https://httpbin.org/html\",\n...         \"https://httpbin.org/json\",\n...         \"https://httpbin.org/xml\",\n...         \"https://httpbin.org/delay/1\",\n...         \"https://httpbin.org/status/200\"\n...     ]\n...     \n...     async with AsyncWebScraper(max_concurrent=3, delay_between_requests=0.2) as scraper:\n...         results = await scraper.scrape_urls(test_urls)\n...         \n...         # \u30ec\u30dd\u30fc\u30c8\u751f\u6210\n...         report = scraper.generate_report()\n...         print(report)\n... \n\n&gt;&gt;&gt; # \u5b9f\u969b\u306b\u306faiohttp \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\n&gt;&gt;&gt; # \u4ee3\u66ff\u3068\u3057\u3066\u540c\u671f\u7248\u3067\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\n&gt;&gt;&gt; print(\"=== \u975e\u540c\u671fWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 ===\")\n&gt;&gt;&gt; print(\"\u6ce8\u610f: \u5b9f\u969b\u306e\u5b9f\u884c\u306b\u306faiohttp \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3059\")\n\n&gt;&gt;&gt; # \u975e\u540c\u671f\u51e6\u7406\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u305f\u30c7\u30e2\n&gt;&gt;&gt; async def demo_web_scraping():\n...     \"\"\"Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30c7\u30e2\uff08\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\"\"\"\n...     urls = [\n...         \"https://example1.com\",\n...         \"https://example2.com\", \n...         \"https://example3.com\",\n...         \"https://example4.com\",\n...         \"https://example5.com\"\n...     ]\n...     \n...     async def simulate_fetch(url):\n...         print(f\"\u53d6\u5f97\u958b\u59cb: {url}\")\n...         # HTTP\u901a\u4fe1\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...         await asyncio.sleep(1 + 0.5 * (hash(url) % 3))  # \u30e9\u30f3\u30c0\u30e0\u306a\u9045\u5ef6\n...         \n...         # \u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u7d50\u679c\n...         result = {\n...             'url': url,\n...             'status_code': 200,\n...             'title': f\"\u30b5\u30f3\u30d7\u30eb\u30da\u30fc\u30b8 - {url.split('//')[1]}\",\n...             'content_length': 1000 + (hash(url) % 5000),\n...             'links_count': 10 + (hash(url) % 20),\n...             'success': True\n...         }\n...         print(f\"\u53d6\u5f97\u5b8c\u4e86: {url}\")\n...         return result\n...     \n...     print(f\"\u975e\u540c\u671f\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u958b\u59cb: {len(urls)}\u500b\u306eURL\")\n...     start_time = time.time()\n...     \n...     # \u5168URL\u3092\u4e26\u884c\u51e6\u7406\n...     results = await asyncio.gather(*[simulate_fetch(url) for url in urls])\n...     \n...     end_time = time.time()\n...     print(f\"\\\\n\u4e26\u884c\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...     \n...     # \u540c\u671f\u51e6\u7406\u3068\u306e\u6bd4\u8f03\u7528\n...     print(\"\\\\n\u540c\u671f\u51e6\u7406\u3067\u540c\u3058\u4f5c\u696d\u3092\u884c\u3063\u305f\u5834\u5408:\")\n...     estimated_sync_time = sum(1 + 0.5 * (hash(url) % 3) for url in urls)\n...     print(f\"\u63a8\u5b9a\u6642\u9593: {estimated_sync_time:.2f}\u79d2\")\n...     print(f\"\u52b9\u7387\u5411\u4e0a: {estimated_sync_time / (end_time - start_time):.1f}\u500d\")\n...     \n...     return results\n\n&gt;&gt;&gt; results = asyncio.run(demo_web_scraping())\n\n=== \u975e\u540c\u671fWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3 ===\n\u6ce8\u610f: \u5b9f\u969b\u306e\u5b9f\u884c\u306b\u306faiohttp \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5fc5\u8981\u3067\u3059\n\u975e\u540c\u671f\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u958b\u59cb: 5\u500b\u306eURL\n\u53d6\u5f97\u958b\u59cb: https://example1.com\n\u53d6\u5f97\u958b\u59cb: https://example2.com\n\u53d6\u5f97\u958b\u59cb: https://example3.com\n\u53d6\u5f97\u958b\u59cb: https://example4.com\n\u53d6\u5f97\u958b\u59cb: https://example5.com\n\u53d6\u5f97\u5b8c\u4e86: https://example2.com\n\u53d6\u5f97\u5b8c\u4e86: https://example4.com\n\u53d6\u5f97\u5b8c\u4e86: https://example1.com\n\u53d6\u5f97\u5b8c\u4e86: https://example3.com\n\u53d6\u5f97\u5b8c\u4e86: https://example5.com\n\n\u4e26\u884c\u5b9f\u884c\u6642\u9593: 2.50\u79d2\n\n\u540c\u671f\u51e6\u7406\u3067\u540c\u3058\u4f5c\u696d\u3092\u884c\u3063\u305f\u5834\u5408:\n\u63a8\u5b9a\u6642\u9593: 7.50\u79d2\n\u52b9\u7387\u5411\u4e0a: 3.0\u500d\n</code></pre>"},{"location":"chapter17/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u975e\u540c\u671f\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3","text":"<pre><code>&gt;&gt;&gt; import json\n&gt;&gt;&gt; import asyncio\n&gt;&gt;&gt; from datetime import datetime\n\n&gt;&gt;&gt; class AsyncDataProcessor:\n...     \"\"\"\u975e\u540c\u671f\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\"\"\"\n...     \n...     def __init__(self, batch_size=10, processing_delay=0.1):\n...         self.batch_size = batch_size\n...         self.processing_delay = processing_delay\n...         self.processed_count = 0\n...         self.error_count = 0\n...     \n...     async def extract_data(self, source):\n...         \"\"\"\u30c7\u30fc\u30bf\u62bd\u51fa\u30d5\u30a7\u30fc\u30ba\"\"\"\n...         print(f\"\u30c7\u30fc\u30bf\u62bd\u51fa\u958b\u59cb: {source}\")\n...         await asyncio.sleep(0.5)  # \u62bd\u51fa\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...         \n...         # \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u751f\u6210\n...         data = []\n...         for i in range(50):\n...             data.append({\n...                 'id': f\"{source}_{i:03d}\",\n...                 'timestamp': datetime.now().isoformat(),\n...                 'value': (i * 7 + hash(source)) % 1000,\n...                 'category': ['A', 'B', 'C'][i % 3],\n...                 'source': source\n...             })\n...         \n...         print(f\"\u30c7\u30fc\u30bf\u62bd\u51fa\u5b8c\u4e86: {source} - {len(data)}\u4ef6\")\n...         return data\n...     \n...     async def transform_data_item(self, item):\n...         \"\"\"\u5358\u4e00\u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u306e\u5909\u63db\"\"\"\n...         await asyncio.sleep(self.processing_delay)\n...         \n...         try:\n...             # \u30c7\u30fc\u30bf\u5909\u63db\u51e6\u7406\n...             transformed = {\n...                 'id': item['id'],\n...                 'processed_at': datetime.now().isoformat(),\n...                 'normalized_value': item['value'] / 1000.0,\n...                 'category_code': ord(item['category']) - ord('A'),\n...                 'source_hash': hash(item['source']) % 10000,\n...                 'is_high_value': item['value'] &gt; 500,\n...                 'metadata': {\n...                     'original_value': item['value'],\n...                     'processing_batch': self.processed_count // self.batch_size\n...                 }\n...             }\n...             \n...             self.processed_count += 1\n...             return transformed, None\n...             \n...         except Exception as e:\n...             self.error_count += 1\n...             return None, str(e)\n...     \n...     async def transform_data_batch(self, data_batch):\n...         \"\"\"\u30c7\u30fc\u30bf\u30d0\u30c3\u30c1\u306e\u4e26\u884c\u5909\u63db\"\"\"\n...         print(f\"\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: {len(data_batch)}\u4ef6\")\n...         \n...         # \u30d0\u30c3\u30c1\u5185\u306e\u30a2\u30a4\u30c6\u30e0\u3092\u4e26\u884c\u51e6\u7406\n...         tasks = [self.transform_data_item(item) for item in data_batch]\n...         results = await asyncio.gather(*tasks)\n...         \n...         # \u6210\u529f\u3068\u5931\u6557\u3092\u5206\u96e2\n...         successful = [result[0] for result in results if result[0] is not None]\n...         errors = [result[1] for result in results if result[1] is not None]\n...         \n...         print(f\"\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f {len(successful)}\u4ef6, \u30a8\u30e9\u30fc {len(errors)}\u4ef6\")\n...         return successful, errors\n...     \n...     async def load_data(self, transformed_data, destination):\n...         \"\"\"\u5909\u63db\u6e08\u307f\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\"\"\"\n...         print(f\"\u30c7\u30fc\u30bf\u4fdd\u5b58\u958b\u59cb: {destination}\")\n...         await asyncio.sleep(0.3)  # \u4fdd\u5b58\u6642\u9593\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...         \n...         # JSON\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\n...         filename = f\"{destination}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json\"\n...         with open(filename, 'w', encoding='utf-8') as f:\n...             json.dump(transformed_data, f, ensure_ascii=False, indent=2)\n...         \n...         print(f\"\u30c7\u30fc\u30bf\u4fdd\u5b58\u5b8c\u4e86: {filename} - {len(transformed_data)}\u4ef6\")\n...         return filename\n...     \n...     async def process_pipeline(self, sources, destination_prefix):\n...         \"\"\"\u5b8c\u5168\u306aETL\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5b9f\u884c\"\"\"\n...         print(\"=== \u975e\u540c\u671fETL\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u958b\u59cb ===\")\n...         start_time = time.time()\n...         \n...         # Phase 1: \u4e26\u884c\u30c7\u30fc\u30bf\u62bd\u51fa\n...         print(\"\\\\nPhase 1: \u30c7\u30fc\u30bf\u62bd\u51fa\")\n...         extract_tasks = [self.extract_data(source) for source in sources]\n...         all_raw_data = await asyncio.gather(*extract_tasks)\n...         \n...         # \u5168\u30c7\u30fc\u30bf\u3092\u7d71\u5408\n...         combined_data = []\n...         for data_list in all_raw_data:\n...             combined_data.extend(data_list)\n...         \n...         print(f\"\u62bd\u51fa\u5b8c\u4e86: \u7dcf\u8a08 {len(combined_data)}\u4ef6\")\n...         \n...         # Phase 2: \u30d0\u30c3\u30c1\u5358\u4f4d\u3067\u306e\u4e26\u884c\u5909\u63db\n...         print(f\"\\\\nPhase 2: \u30c7\u30fc\u30bf\u5909\u63db (\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: {self.batch_size})\")\n...         all_transformed = []\n...         all_errors = []\n...         \n...         # \u30c7\u30fc\u30bf\u3092\u30d0\u30c3\u30c1\u306b\u5206\u5272\n...         for i in range(0, len(combined_data), self.batch_size):\n...             batch = combined_data[i:i + self.batch_size]\n...             transformed, errors = await self.transform_data_batch(batch)\n...             all_transformed.extend(transformed)\n...             all_errors.extend(errors)\n...         \n...         print(f\"\u5909\u63db\u5b8c\u4e86: \u6210\u529f {len(all_transformed)}\u4ef6, \u30a8\u30e9\u30fc {len(all_errors)}\u4ef6\")\n...         \n...         # Phase 3: \u5909\u63db\u6e08\u307f\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\n...         print(f\"\\\\nPhase 3: \u30c7\u30fc\u30bf\u4fdd\u5b58\")\n...         saved_files = []\n...         \n...         # \u30ab\u30c6\u30b4\u30ea\u5225\u306b\u5206\u3051\u3066\u4fdd\u5b58\n...         categories = {}\n...         for item in all_transformed:\n...             category = item['category_code']\n...             if category not in categories:\n...                 categories[category] = []\n...             categories[category].append(item)\n...         \n...         # \u30ab\u30c6\u30b4\u30ea\u5225\u306b\u4e26\u884c\u4fdd\u5b58\n...         save_tasks = [\n...             self.load_data(items, f\"{destination_prefix}_category_{cat}\")\n...             for cat, items in categories.items()\n...         ]\n...         saved_files = await asyncio.gather(*save_tasks)\n...         \n...         end_time = time.time()\n...         \n...         # \u7d50\u679c\u30b5\u30de\u30ea\u30fc\n...         print(f\"\\\\n=== \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5b8c\u4e86 ===\")\n...         print(f\"\u7dcf\u5b9f\u884c\u6642\u9593: {end_time - start_time:.2f}\u79d2\")\n...         print(f\"\u51e6\u7406\u6e08\u307f\u30a2\u30a4\u30c6\u30e0: {self.processed_count}\u4ef6\")\n...         print(f\"\u30a8\u30e9\u30fc\u6570: {self.error_count}\u4ef6\")\n...         print(f\"\u4fdd\u5b58\u30d5\u30a1\u30a4\u30eb: {len(saved_files)}\u500b\")\n...         print(f\"\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7: {saved_files}\")\n...         \n...         return {\n...             'execution_time': end_time - start_time,\n...             'processed_count': self.processed_count,\n...             'error_count': self.error_count,\n...             'saved_files': saved_files,\n...             'success_rate': (self.processed_count / (self.processed_count + self.error_count)) * 100 if (self.processed_count + self.error_count) &gt; 0 else 100\n...         }\n... \n\n&gt;&gt;&gt; # \u975e\u540c\u671f\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; async def test_data_pipeline():\n...     \"\"\"\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\"\"\"\n...     processor = AsyncDataProcessor(batch_size=15, processing_delay=0.01)\n...     \n...     sources = [\"database_1\", \"api_endpoint\", \"csv_file\", \"json_feed\"]\n...     destination = \"processed_data\"\n...     \n...     result = await processor.process_pipeline(sources, destination)\n...     \n...     print(f\"\\\\n\u6700\u7d42\u7d50\u679c:\")\n...     print(f\"  \u51e6\u7406\u6210\u529f\u7387: {result['success_rate']:.1f}%\")\n...     print(f\"  \u5e73\u5747\u51e6\u7406\u901f\u5ea6: {result['processed_count'] / result['execution_time']:.1f}\u4ef6/\u79d2\")\n\n&gt;&gt;&gt; asyncio.run(test_data_pipeline())\n\n=== \u975e\u540c\u671fETL\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u958b\u59cb ===\n\nPhase 1: \u30c7\u30fc\u30bf\u62bd\u51fa\n\u30c7\u30fc\u30bf\u62bd\u51fa\u958b\u59cb: database_1\n\u30c7\u30fc\u30bf\u62bd\u51fa\u958b\u59cb: api_endpoint\n\u30c7\u30fc\u30bf\u62bd\u51fa\u958b\u59cb: csv_file\n\u30c7\u30fc\u30bf\u62bd\u51fa\u958b\u59cb: json_feed\n\u30c7\u30fc\u30bf\u62bd\u51fa\u5b8c\u4e86: database_1 - 50\u4ef6\n\u30c7\u30fc\u30bf\u62bd\u51fa\u5b8c\u4e86: api_endpoint - 50\u4ef6\n\u30c7\u30fc\u30bf\u62bd\u51fa\u5b8c\u4e86: csv_file - 50\u4ef6\n\u30c7\u30fc\u30bf\u62bd\u51fa\u5b8c\u4e86: json_feed - 50\u4ef6\n\u62bd\u51fa\u5b8c\u4e86: \u7dcf\u8a08 200\u4ef6\n\nPhase 2: \u30c7\u30fc\u30bf\u5909\u63db (\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba: 15)\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 15\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 15\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u958b\u59cb: 5\u4ef6\n\u30d0\u30c3\u30c1\u5909\u63db\u5b8c\u4e86: \u6210\u529f 5\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\u5909\u63db\u5b8c\u4e86: \u6210\u529f 200\u4ef6, \u30a8\u30e9\u30fc 0\u4ef6\n\nPhase 3: \u30c7\u30fc\u30bf\u4fdd\u5b58\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u958b\u59cb: processed_data_category_0\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u958b\u59cb: processed_data_category_1\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u958b\u59cb: processed_data_category_2\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5b8c\u4e86: processed_data_category_0_20241219_112500.json - 67\u4ef6\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5b8c\u4e86: processed_data_category_1_20241219_112500.json - 67\u4ef6\n\u30c7\u30fc\u30bf\u4fdd\u5b58\u5b8c\u4e86: processed_data_category_2_20241219_112500.json - 66\u4ef6\n\n=== \u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u5b8c\u4e86 ===\n\u7dcf\u5b9f\u884c\u6642\u9593: 3.15\u79d2\n\u51e6\u7406\u6e08\u307f\u30a2\u30a4\u30c6\u30e0: 200\u4ef6\n\u30a8\u30e9\u30fc\u6570: 0\u4ef6\n\u4fdd\u5b58\u30d5\u30a1\u30a4\u30eb: 3\u500b\n\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7: ['processed_data_category_0_20241219_112500.json', 'processed_data_category_1_20241219_112500.json', 'processed_data_category_2_20241219_112500.json']\n\n\u6700\u7d42\u7d50\u679c:\n  \u51e6\u7406\u6210\u529f\u7387: 100.0%\n  \u5e73\u5747\u51e6\u7406\u901f\u5ea6: 63.5\u4ef6/\u79d2\n</code></pre>"},{"location":"chapter17/#_5","title":"\u3010\u5b9f\u884c\u3011\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u30b7\u30b9\u30c6\u30e0","text":""},{"location":"chapter17/#3","title":"\u30b9\u30c6\u30c3\u30d73\uff1a\u975e\u540c\u671f\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc","text":"<pre><code>&gt;&gt;&gt; import asyncio\n&gt;&gt;&gt; import json\n&gt;&gt;&gt; import weakref\n&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; from typing import Dict, Set\n\n&gt;&gt;&gt; class ChatRoom:\n...     \"\"\"\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, room_id: str, name: str):\n...         self.room_id = room_id\n...         self.name = name\n...         self.members: Dict[str, 'ChatClient'] = {}\n...         self.message_history = []\n...         self.created_at = datetime.now()\n...     \n...     async def add_member(self, client):\n...         \"\"\"\u30e1\u30f3\u30d0\u30fc\u3092\u30eb\u30fc\u30e0\u306b\u8ffd\u52a0\"\"\"\n...         self.members[client.client_id] = client\n...         \n...         # \u5165\u5ba4\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n...         join_message = {\n...             'type': 'user_joined',\n...             'user_id': client.client_id,\n...             'username': client.username,\n...             'room_id': self.room_id,\n...             'timestamp': datetime.now().isoformat(),\n...             'message': f\"{client.username}\u3055\u3093\u304c\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u307e\u3057\u305f\"\n...         }\n...         \n...         await self.broadcast_message(join_message, exclude=client.client_id)\n...         \n...         # \u65b0\u30e1\u30f3\u30d0\u30fc\u306b\u30eb\u30fc\u30e0\u60c5\u5831\u3092\u9001\u4fe1\n...         room_info = {\n...             'type': 'room_info',\n...             'room_id': self.room_id,\n...             'room_name': self.name,\n...             'member_count': len(self.members),\n...             'members': [{'id': m.client_id, 'username': m.username} for m in self.members.values()],\n...             'recent_messages': self.message_history[-10:]  # \u6700\u65b010\u4ef6\n...         }\n...         await client.send_message(room_info)\n...     \n...     async def remove_member(self, client_id: str):\n...         \"\"\"\u30e1\u30f3\u30d0\u30fc\u3092\u30eb\u30fc\u30e0\u304b\u3089\u524a\u9664\"\"\"\n...         if client_id in self.members:\n...             client = self.members[client_id]\n...             del self.members[client_id]\n...             \n...             # \u9000\u5ba4\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n...             leave_message = {\n...                 'type': 'user_left',\n...                 'user_id': client_id,\n...                 'username': client.username,\n...                 'room_id': self.room_id,\n...                 'timestamp': datetime.now().isoformat(),\n...                 'message': f\"{client.username}\u3055\u3093\u304c\u30eb\u30fc\u30e0\u3092\u9000\u51fa\u3057\u307e\u3057\u305f\"\n...             }\n...             \n...             await self.broadcast_message(leave_message)\n...     \n...     async def broadcast_message(self, message, exclude=None):\n...         \"\"\"\u30eb\u30fc\u30e0\u5185\u306e\u5168\u30e1\u30f3\u30d0\u30fc\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\"\"\"\n...         # \u30e1\u30c3\u30bb\u30fc\u30b8\u5c65\u6b74\u306b\u8ffd\u52a0\n...         if message.get('type') == 'chat_message':\n...             self.message_history.append(message)\n...             # \u5c65\u6b74\u306f\u6700\u65b0100\u4ef6\u307e\u3067\u4fdd\u6301\n...             if len(self.message_history) &gt; 100:\n...                 self.message_history = self.message_history[-100:]\n...         \n...         # \u5168\u30e1\u30f3\u30d0\u30fc\u306b\u9001\u4fe1\uff08exclude\u3067\u6307\u5b9a\u3055\u308c\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u9664\u304f\uff09\n...         tasks = []\n...         for client_id, client in self.members.items():\n...             if client_id != exclude:\n...                 tasks.append(client.send_message(message))\n...         \n...         if tasks:\n...             await asyncio.gather(*tasks, return_exceptions=True)\n... \n\n&gt;&gt;&gt; class ChatClient:\n...     \"\"\"\u30c1\u30e3\u30c3\u30c8\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, client_id: str, username: str):\n...         self.client_id = client_id\n...         self.username = username\n...         self.current_room = None\n...         self.message_queue = asyncio.Queue()\n...         self.is_connected = True\n...         self.last_activity = datetime.now()\n...     \n...     async def send_message(self, message):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\"\"\"\n...         if self.is_connected:\n...             await self.message_queue.put(message)\n...     \n...     async def get_message(self):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\"\"\"\n...         try:\n...             message = await asyncio.wait_for(self.message_queue.get(), timeout=1.0)\n...             self.last_activity = datetime.now()\n...             return message\n...         except asyncio.TimeoutError:\n...             return None\n...     \n...     def disconnect(self):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5207\u65ad\"\"\"\n...         self.is_connected = False\n... \n\n&gt;&gt;&gt; class ChatServer:\n...     \"\"\"\u975e\u540c\u671f\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\"\"\"\n...     \n...     def __init__(self, max_clients=100):\n...         self.max_clients = max_clients\n...         self.clients: Dict[str, ChatClient] = {}\n...         self.rooms: Dict[str, ChatRoom] = {}\n...         self.server_stats = {\n...             'total_messages': 0,\n...             'peak_concurrent_users': 0,\n...             'rooms_created': 0\n...         }\n...         self.create_default_rooms()\n...     \n...     def create_default_rooms(self):\n...         \"\"\"\u30c7\u30d5\u30a9\u30eb\u30c8\u30eb\u30fc\u30e0\u306e\u4f5c\u6210\"\"\"\n...         default_rooms = [\n...             ('general', '\u4e00\u822c\u30c1\u30e3\u30c3\u30c8'),\n...             ('tech', '\u6280\u8853\u8a0e\u8ad6'),\n...             ('random', '\u96d1\u8ac7')\n...         ]\n...         \n...         for room_id, room_name in default_rooms:\n...             self.rooms[room_id] = ChatRoom(room_id, room_name)\n...             self.server_stats['rooms_created'] += 1\n...     \n...     async def register_client(self, username: str):\n...         \"\"\"\u65b0\u3057\u3044\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u767b\u9332\"\"\"\n...         if len(self.clients) &gt;= self.max_clients:\n...             raise Exception(\"\u30b5\u30fc\u30d0\u30fc\u304c\u6e80\u676f\u3067\u3059\")\n...         \n...         client_id = f\"client_{len(self.clients)}_{int(datetime.now().timestamp())}\"\n...         client = ChatClient(client_id, username)\n...         self.clients[client_id] = client\n...         \n...         # \u7d71\u8a08\u66f4\u65b0\n...         current_users = len(self.clients)\n...         if current_users &gt; self.server_stats['peak_concurrent_users']:\n...             self.server_stats['peak_concurrent_users'] = current_users\n...         \n...         print(f\"\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: {username} (ID: {client_id})\")\n...         return client\n...     \n...     async def unregister_client(self, client_id: str):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u767b\u9332\u3092\u89e3\u9664\"\"\"\n...         if client_id in self.clients:\n...             client = self.clients[client_id]\n...             \n...             # \u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\n...             if client.current_room:\n...                 await self.leave_room(client_id, client.current_room)\n...             \n...             client.disconnect()\n...             del self.clients[client_id]\n...             print(f\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: {client.username} (ID: {client_id})\")\n...     \n...     async def join_room(self, client_id: str, room_id: str):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3055\u305b\u308b\"\"\"\n...         if client_id not in self.clients:\n...             raise Exception(\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         \n...         if room_id not in self.rooms:\n...             raise Exception(\"\u30eb\u30fc\u30e0\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         \n...         client = self.clients[client_id]\n...         room = self.rooms[room_id]\n...         \n...         # \u73fe\u5728\u306e\u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\n...         if client.current_room:\n...             await self.leave_room(client_id, client.current_room)\n...         \n...         # \u65b0\u3057\u3044\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\n...         client.current_room = room_id\n...         await room.add_member(client)\n...         \n...         print(f\"{client.username}\u304c{room.name}\u306b\u53c2\u52a0\")\n...     \n...     async def leave_room(self, client_id: str, room_id: str):\n...         \"\"\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30eb\u30fc\u30e0\u304b\u3089\u9000\u51fa\u3055\u305b\u308b\"\"\"\n...         if client_id in self.clients and room_id in self.rooms:\n...             client = self.clients[client_id]\n...             room = self.rooms[room_id]\n...             \n...             await room.remove_member(client_id)\n...             client.current_room = None\n...             \n...             print(f\"{client.username}\u304c{room.name}\u304b\u3089\u9000\u51fa\")\n...     \n...     async def send_chat_message(self, client_id: str, message_text: str):\n...         \"\"\"\u30c1\u30e3\u30c3\u30c8\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\"\"\"\n...         if client_id not in self.clients:\n...             raise Exception(\"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n...         \n...         client = self.clients[client_id]\n...         if not client.current_room:\n...             raise Exception(\"\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3057\u3066\u3044\u307e\u305b\u3093\")\n...         \n...         room = self.rooms[client.current_room]\n...         \n...         message = {\n...             'type': 'chat_message',\n...             'user_id': client_id,\n...             'username': client.username,\n...             'room_id': client.current_room,\n...             'message': message_text,\n...             'timestamp': datetime.now().isoformat()\n...         }\n...         \n...         await room.broadcast_message(message)\n...         self.server_stats['total_messages'] += 1\n...     \n...     def get_server_stats(self):\n...         \"\"\"\u30b5\u30fc\u30d0\u30fc\u7d71\u8a08\u3092\u53d6\u5f97\"\"\"\n...         return {\n...             'current_clients': len(self.clients),\n...             'current_rooms': len(self.rooms),\n...             'total_messages': self.server_stats['total_messages'],\n...             'peak_concurrent_users': self.server_stats['peak_concurrent_users'],\n...             'rooms_created': self.server_stats['rooms_created']\n...         }\n...     \n...     async def simulate_chat_session(self, duration_seconds=10):\n...         \"\"\"\u30c1\u30e3\u30c3\u30c8\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...         print(\"=== \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u958b\u59cb ===\")\n...         \n...         # \u8907\u6570\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u6210\n...         usernames = [\"\u7530\u4e2d\", \"\u4f50\u85e4\", \"\u9234\u6728\", \"\u9ad8\u6a4b\", \"\u5c71\u7530\"]\n...         clients = []\n...         \n...         for username in usernames:\n...             client = await self.register_client(username)\n...             clients.append(client)\n...         \n...         # \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3055\u305b\u308b\n...         import random\n...         room_ids = list(self.rooms.keys())\n...         \n...         for client in clients:\n...             room_id = random.choice(room_ids)\n...             await self.join_room(client.client_id, room_id)\n...         \n...         # \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\n...         sample_messages = [\n...             \"\u3053\u3093\u306b\u3061\u306f\uff01\",\n...             \"\u8abf\u5b50\u306f\u3069\u3046\u3067\u3059\u304b\uff1f\",\n...             \"\u4eca\u65e5\u306f\u3044\u3044\u5929\u6c17\u3067\u3059\u306d\",\n...             \"Python\u306e\u52c9\u5f37\u3092\u3057\u3066\u3044\u307e\u3059\",\n...             \"\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u9762\u767d\u3044\u3067\u3059\u306d\",\n...             \"\u30c1\u30e3\u30c3\u30c8\u304c\u5feb\u9069\u306b\u52d5\u3044\u3066\u3044\u307e\u3059\",\n...             \"\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\",\n...             \"\u307e\u305f\u5f8c\u3067\u8a71\u3057\u307e\u3057\u3087\u3046\"\n...         ]\n...         \n...         # \u6307\u5b9a\u6642\u9593\u9593\u30e9\u30f3\u30c0\u30e0\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n...         start_time = time.time()\n...         message_count = 0\n...         \n...         while time.time() - start_time &lt; duration_seconds:\n...             # \u30e9\u30f3\u30c0\u30e0\u306a\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n...             client = random.choice(clients)\n...             if client.current_room:\n...                 message = random.choice(sample_messages)\n...                 await self.send_chat_message(client.client_id, message)\n...                 message_count += 1\n...                 print(f\"[{client.username}@{client.current_room}]: {message}\")\n...             \n...             # \u30e9\u30f3\u30c0\u30e0\u306a\u9593\u9694\u3067\u9001\u4fe1\n...             await asyncio.sleep(random.uniform(0.5, 2.0))\n...         \n...         print(f\"\\\\n=== \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u5b8c\u4e86 ===\")\n...         print(f\"\u5b9f\u884c\u6642\u9593: {duration_seconds}\u79d2\")\n...         print(f\"\u9001\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u6570: {message_count}\")\n...         \n...         # \u7d71\u8a08\u60c5\u5831\u8868\u793a\n...         stats = self.get_server_stats()\n...         print(f\"\\\\n\u30b5\u30fc\u30d0\u30fc\u7d71\u8a08:\")\n...         for key, value in stats.items():\n...             print(f\"  {key}: {value}\")\n...         \n...         # \u5168\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u767b\u9332\u89e3\u9664\n...         for client in clients:\n...             await self.unregister_client(client.client_id)\n... \n\n&gt;&gt;&gt; # \u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; async def test_chat_server():\n...     \"\"\"\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u306e\u30c6\u30b9\u30c8\"\"\"\n...     server = ChatServer(max_clients=50)\n...     await server.simulate_chat_session(duration_seconds=8)\n\n&gt;&gt;&gt; asyncio.run(test_chat_server())\n\n\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: \u7530\u4e2d (ID: client_0_1734609900)\n\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: \u4f50\u85e4 (ID: client_1_1734609900)\n\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: \u9234\u6728 (ID: client_2_1734609900)\n\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: \u9ad8\u6a4b (ID: client_3_1734609900)\n\u65b0\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332: \u5c71\u7530 (ID: client_4_1734609900)\n\u7530\u4e2d\u304c\u6280\u8853\u8a0e\u8ad6\u306b\u53c2\u52a0\n\u4f50\u85e4\u304c\u4e00\u822c\u30c1\u30e3\u30c3\u30c8\u306b\u53c2\u52a0\n\u9234\u6728\u304c\u96d1\u8ac7\u306b\u53c2\u52a0\n\u9ad8\u6a4b\u304c\u6280\u8853\u8a0e\u8ad6\u306b\u53c2\u52a0\n\u5c71\u7530\u304c\u4e00\u822c\u30c1\u30e3\u30c3\u30c8\u306b\u53c2\u52a0\n[\u4f50\u85e4@general]: \u8abf\u5b50\u306f\u3069\u3046\u3067\u3059\u304b\uff1f\n[\u7530\u4e2d@tech]: Python\u306e\u52c9\u5f37\u3092\u3057\u3066\u3044\u307e\u3059\n[\u5c71\u7530@general]: \u3053\u3093\u306b\u3061\u306f\uff01\n[\u9ad8\u6a4b@tech]: \u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u9762\u767d\u3044\u3067\u3059\u306d\n[\u9234\u6728@random]: \u4eca\u65e5\u306f\u3044\u3044\u5929\u6c17\u3067\u3059\u306d\n[\u4f50\u85e4@general]: \u30c1\u30e3\u30c3\u30c8\u304c\u5feb\u9069\u306b\u52d5\u3044\u3066\u3044\u307e\u3059\n[\u7530\u4e2d@tech]: \u307e\u305f\u5f8c\u3067\u8a71\u3057\u307e\u3057\u3087\u3046\n[\u5c71\u7530@general]: \u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\n\n=== \u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u5b8c\u4e86 ===\n\u5b9f\u884c\u6642\u9593: 8\u79d2\n\u9001\u4fe1\u30e1\u30c3\u30bb\u30fc\u30b8\u6570: 8\n\n\u30b5\u30fc\u30d0\u30fc\u7d71\u8a08:\n  current_clients: 5\n  current_rooms: 3\n  total_messages: 8\n  peak_concurrent_users: 5\n  rooms_created: 3\n\u7530\u4e2d\u304c\u6280\u8853\u8a0e\u8ad6\u304b\u3089\u9000\u51fa\n\u4f50\u85e4\u304c\u4e00\u822c\u30c1\u30e3\u30c3\u30c8\u304b\u3089\u9000\u51fa\n\u9234\u6728\u304c\u96d1\u8ac7\u304b\u3089\u9000\u51fa\n\u9ad8\u6a4b\u304c\u6280\u8853\u8a0e\u8ad6\u304b\u3089\u9000\u51fa\n\u5c71\u7530\u304c\u4e00\u822c\u30c1\u30e3\u30c3\u30c8\u304b\u3089\u9000\u51fa\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: \u7530\u4e2d (ID: client_0_1734609900)\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: \u4f50\u85e4 (ID: client_1_1734609900)\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: \u9234\u6728 (ID: client_2_1734609900)\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: \u9ad8\u6a4b (ID: client_3_1734609900)\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u767b\u9332\u89e3\u9664: \u5c71\u7530 (ID: client_4_1734609900)\n</code></pre>"},{"location":"chapter17/#asyncio","title":"asyncio\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd","text":""},{"location":"chapter17/#_6","title":"\u30bf\u30b9\u30af\u3068\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7","text":"<pre><code>&gt;&gt;&gt; async def demonstrate_advanced_asyncio():\n...     \"\"\"asyncio\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     \n...     print(\"=== Task\u7ba1\u7406\u3068\u30ad\u30e3\u30f3\u30bb\u30ec\u30fc\u30b7\u30e7\u30f3 ===\")\n...     \n...     async def long_running_task(task_id, duration):\n...         \"\"\"\u6642\u9593\u306e\u304b\u304b\u308b\u30bf\u30b9\u30af\"\"\"\n...         try:\n...             print(f\"\u30bf\u30b9\u30af{task_id}\u958b\u59cb (\u4e88\u5b9a\u5b9f\u884c\u6642\u9593: {duration}\u79d2)\")\n...             await asyncio.sleep(duration)\n...             print(f\"\u30bf\u30b9\u30af{task_id}\u5b8c\u4e86\")\n...             return f\"\u7d50\u679c_{task_id}\"\n...         except asyncio.CancelledError:\n...             print(f\"\u30bf\u30b9\u30af{task_id}\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f\")\n...             raise\n...     \n...     # \u8907\u6570\u30bf\u30b9\u30af\u306e\u4f5c\u6210\n...     task1 = asyncio.create_task(long_running_task(1, 2))\n...     task2 = asyncio.create_task(long_running_task(2, 3))\n...     task3 = asyncio.create_task(long_running_task(3, 1))\n...     \n...     # \u4e00\u5b9a\u6642\u9593\u5f8c\u306btask2\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\n...     await asyncio.sleep(1.5)\n...     task2.cancel()\n...     \n...     # \u7d50\u679c\u306e\u53ce\u96c6\n...     results = await asyncio.gather(task1, task2, task3, return_exceptions=True)\n...     \n...     print(f\"\u7d50\u679c: {results}\")\n...     \n...     print(\"\\\\n=== \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406 ===\")\n...     \n...     async def timeout_demo():\n...         \"\"\"\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\u306e\u30c7\u30e2\"\"\"\n...         try:\n...             # 5\u79d2\u306e\u30bf\u30b9\u30af\u30922\u79d2\u3067\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\n...             result = await asyncio.wait_for(long_running_task(4, 5), timeout=2.0)\n...             return result\n...         except asyncio.TimeoutError:\n...             print(\"\u30bf\u30b9\u30af\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\")\n...             return None\n...     \n...     timeout_result = await timeout_demo()\n...     print(f\"\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u7d50\u679c: {timeout_result}\")\n...     \n...     print(\"\\\\n=== \u30bb\u30de\u30d5\u30a9\u306b\u3088\u308b\u4e26\u884c\u5236\u5fa1 ===\")\n...     \n...     semaphore = asyncio.Semaphore(2)  # \u6700\u59272\u3064\u306e\u4e26\u884c\u5b9f\u884c\n...     \n...     async def limited_task(task_id):\n...         async with semaphore:\n...             print(f\"\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af{task_id}\u958b\u59cb\")\n...             await asyncio.sleep(1)\n...             print(f\"\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af{task_id}\u5b8c\u4e86\")\n...             return f\"\u5236\u9650\u7d50\u679c_{task_id}\"\n...     \n...     # 5\u3064\u306e\u30bf\u30b9\u30af\u3092\u4f5c\u6210\uff08\u540c\u6642\u5b9f\u884c\u306f2\u3064\u307e\u3067\uff09\n...     limited_tasks = [limited_task(i) for i in range(5)]\n...     limited_results = await asyncio.gather(*limited_tasks)\n...     print(f\"\u5236\u9650\u4ed8\u304d\u5b9f\u884c\u7d50\u679c: {limited_results}\")\n...     \n...     print(\"\\\\n=== \u30a4\u30d9\u30f3\u30c8\u306e\u4f7f\u7528 ===\")\n...     \n...     event = asyncio.Event()\n...     \n...     async def waiter(waiter_id):\n...         print(f\"\u30a6\u30a7\u30a4\u30bf\u30fc{waiter_id}: \u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u6a5f\u4e2d...\")\n...         await event.wait()\n...         print(f\"\u30a6\u30a7\u30a4\u30bf\u30fc{waiter_id}: \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff01\")\n...     \n...     async def setter():\n...         await asyncio.sleep(2)\n...         print(\"\u30bb\u30c3\u30bf\u30fc: \u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\")\n...         event.set()\n...     \n...     # \u8907\u6570\u306e\u30a6\u30a7\u30a4\u30bf\u30fc\u3068\u30bb\u30c3\u30bf\u30fc\u3092\u4e26\u884c\u5b9f\u884c\n...     await asyncio.gather(\n...         waiter(1),\n...         waiter(2),\n...         waiter(3),\n...         setter()\n...     )\n\n&gt;&gt;&gt; asyncio.run(demonstrate_advanced_asyncio())\n\n=== Task\u7ba1\u7406\u3068\u30ad\u30e3\u30f3\u30bb\u30ec\u30fc\u30b7\u30e7\u30f3 ===\n\u30bf\u30b9\u30af1\u958b\u59cb (\u4e88\u5b9a\u5b9f\u884c\u6642\u9593: 2\u79d2)\n\u30bf\u30b9\u30af2\u958b\u59cb (\u4e88\u5b9a\u5b9f\u884c\u6642\u9593: 3\u79d2)\n\u30bf\u30b9\u30af3\u958b\u59cb (\u4e88\u5b9a\u5b9f\u884c\u6642\u9593: 1\u79d2)\n\u30bf\u30b9\u30af3\u5b8c\u4e86\n\u30bf\u30b9\u30af2\u304c\u30ad\u30e3\u30f3\u30bb\u30eb\u3055\u308c\u307e\u3057\u305f\n\u30bf\u30b9\u30af1\u5b8c\u4e86\n\u7d50\u679c: ['\u7d50\u679c_1', CancelledError(), '\u7d50\u679c_3']\n\n=== \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406 ===\n\u30bf\u30b9\u30af4\u958b\u59cb (\u4e88\u5b9a\u5b9f\u884c\u6642\u9593: 5\u79d2)\n\u30bf\u30b9\u30af\u304c\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u307e\u3057\u305f\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u7d50\u679c: None\n\n=== \u30bb\u30de\u30d5\u30a9\u306b\u3088\u308b\u4e26\u884c\u5236\u5fa1 ===\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af0\u958b\u59cb\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af1\u958b\u59cb\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af0\u5b8c\u4e86\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af1\u5b8c\u4e86\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af2\u958b\u59cb\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af3\u958b\u59cb\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af2\u5b8c\u4e86\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af3\u5b8c\u4e86\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af4\u958b\u59cb\n\u5236\u9650\u4ed8\u304d\u30bf\u30b9\u30af4\u5b8c\u4e86\n\u5236\u9650\u4ed8\u304d\u5b9f\u884c\u7d50\u679c: ['\u5236\u9650\u7d50\u679c_0', '\u5236\u9650\u7d50\u679c_1', '\u5236\u9650\u7d50\u679c_2', '\u5236\u9650\u7d50\u679c_3', '\u5236\u9650\u7d50\u679c_4']\n\n=== \u30a4\u30d9\u30f3\u30c8\u306e\u4f7f\u7528 ===\n\u30a6\u30a7\u30a4\u30bf\u30fc1: \u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u6a5f\u4e2d...\n\u30a6\u30a7\u30a4\u30bf\u30fc2: \u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u6a5f\u4e2d...\n\u30a6\u30a7\u30a4\u30bf\u30fc3: \u30a4\u30d9\u30f3\u30c8\u3092\u5f85\u6a5f\u4e2d...\n\u30bb\u30c3\u30bf\u30fc: \u30a4\u30d9\u30f3\u30c8\u3092\u8a2d\u5b9a\u3057\u307e\u3059\n\u30a6\u30a7\u30a4\u30bf\u30fc1: \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff01\n\u30a6\u30a7\u30a4\u30bf\u30fc2: \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff01\n\u30a6\u30a7\u30a4\u30bf\u30fc3: \u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3057\u307e\u3057\u305f\uff01\n</code></pre>"},{"location":"chapter17/#_7","title":"\u307e\u3068\u3081\uff1a\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u5a01\u529b","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter17/#_8","title":"\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u4e26\u884c\u6027 vs \u4e26\u5217\u6027: \u4e26\u884c\u306f\u8ad6\u7406\u7684\u3001\u4e26\u5217\u306f\u7269\u7406\u7684</li> <li>I/O\u30d0\u30a6\u30f3\u30c9 vs CPU\u30d0\u30a6\u30f3\u30c9: \u975e\u540c\u671f\u306fI/O\u30d0\u30a6\u30f3\u30c9\u30bf\u30b9\u30af\u306b\u52b9\u679c\u7684</li> <li>async/await: \u975e\u540c\u671f\u95a2\u6570\u306e\u5b9a\u7fa9\u3068\u5b9f\u884c</li> <li>\u30a4\u30d9\u30f3\u30c8\u30eb\u30fc\u30d7: \u975e\u540c\u671f\u51e6\u7406\u306e\u5236\u5fa1\u6a5f\u69cb</li> </ul>"},{"location":"chapter17/#_9","title":"\u4e3b\u8981\u306a\u69cb\u6587\u3068\u30d1\u30bf\u30fc\u30f3","text":"<pre><code># \u57fa\u672c\u30d1\u30bf\u30fc\u30f3\nasync def async_function():\n    result = await some_async_operation()\n    return result\n\n# \u4e26\u884c\u5b9f\u884c\nresults = await asyncio.gather(\n    async_function1(),\n    async_function2(),\n    async_function3()\n)\n\n# \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u51e6\u7406\ntry:\n    result = await asyncio.wait_for(slow_function(), timeout=5.0)\nexcept asyncio.TimeoutError:\n    print(\"\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\")\n</code></pre>"},{"location":"chapter17/#_10","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ol> <li>Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0: \u8907\u6570URL\u306e\u4e26\u884c\u53d6\u5f97</li> <li>\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3: ETL\u51e6\u7406\u306e\u4e26\u884c\u5316</li> <li>\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc: \u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u901a\u4fe1</li> <li>API\u547c\u3073\u51fa\u3057: \u5916\u90e8\u30b5\u30fc\u30d3\u30b9\u3068\u306e\u52b9\u7387\u7684\u306a\u901a\u4fe1</li> <li>\u30d5\u30a1\u30a4\u30eb\u51e6\u7406: \u5927\u91cf\u30d5\u30a1\u30a4\u30eb\u306e\u4e26\u884c\u51e6\u7406</li> </ol>"},{"location":"chapter17/#_11","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u5411\u4e0a","text":"<pre><code># \u540c\u671f\u51e6\u7406: 10\u79d2\nfor i in range(10):\n    time.sleep(1)  # \u5404\u51e6\u74061\u79d2\n\n# \u975e\u540c\u671f\u51e6\u7406: 1\u79d2\nawait asyncio.gather(*[\n    asyncio.sleep(1) for _ in range(10)\n])\n</code></pre>"},{"location":"chapter17/#_12","title":"\u6ce8\u610f\u70b9\u3068\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ol> <li>CPU\u30d0\u30a6\u30f3\u30c9\u30bf\u30b9\u30af\u306b\u306f\u4e0d\u5411\u304d: \u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b7\u30f3\u30b0\u3092\u4f7f\u7528</li> <li>\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u95a2\u6570\u306e\u56de\u907f: <code>time.sleep()</code>\u3067\u306f\u306a\u304f<code>asyncio.sleep()</code></li> <li>\u9069\u5207\u306a\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: <code>asyncio.gather()</code>\u306e<code>return_exceptions=True</code></li> <li>\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406: <code>async with</code>\u3067\u30ea\u30bd\u30fc\u30b9\u306e\u9069\u5207\u306a\u89e3\u653e</li> <li>\u30bb\u30de\u30d5\u30a9\u306b\u3088\u308b\u5236\u5fa1: \u4e26\u884c\u6570\u306e\u5236\u9650</li> </ol>"},{"location":"chapter17/#_13","title":"\u5b9f\u969b\u306e\u4f7f\u7528\u5834\u9762","text":"<ul> <li>Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3: FastAPI\u3001Django Channels</li> <li>API\u958b\u767a: \u9ad8\u4e26\u884c\u6027\u306eREST API</li> <li>\u30c7\u30fc\u30bf\u53ce\u96c6: Web\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3001API\u7d71\u5408</li> <li>\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406: \u30c1\u30e3\u30c3\u30c8\u3001\u30b2\u30fc\u30e0\u3001\u76e3\u8996\u30b7\u30b9\u30c6\u30e0</li> <li>\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9: \u30b5\u30fc\u30d3\u30b9\u9593\u901a\u4fe1\u306e\u6700\u9069\u5316</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002unittest\u3001pytest\u3001\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u305f\u52b9\u679c\u7684\u306a\u30c6\u30b9\u30c8\u624b\u6cd5\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u6280\u8853\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c17\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c17\u7ae0\u3067\u306f\u975e\u540c\u671f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u672c\u6982\u5ff5\u304b\u3089\u9ad8\u5ea6\u306a\u5fdc\u7528\u307e\u3067\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u540c\u671f\u51e6\u7406\u3068\u975e\u540c\u671f\u51e6\u7406\u306e\u9055\u3044\u3001async/await\u306e\u57fa\u672c\u69cb\u6587\u3001\u975e\u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\u3092\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u975e\u540c\u671fWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\u3001ETL\u30c7\u30fc\u30bf\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30c1\u30e3\u30c3\u30c8\u30b5\u30fc\u30d0\u30fc\u3092\u69cb\u7bc9\u3002asyncio\u306e\u9ad8\u5ea6\u306a\u6a5f\u80fd\uff08\u30bf\u30b9\u30af\u7ba1\u7406\u3001\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3001\u30bb\u30de\u30d5\u30a9\u3001\u30a4\u30d9\u30f3\u30c8\uff09\u3082\u542b\u3080\u5b8c\u5168\u306a\u30b7\u30b9\u30c6\u30e0\u3092\u5b9f\u88c5\u3002\u6b21\u306f\u7b2c18\u7ae0\u306e\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter18/","title":"\u7b2c18\u7ae0\uff1a\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306e\u6280\u8853","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u306f\u5efa\u7269\u3092\u5efa\u3066\u308b\u3053\u3068\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\u5efa\u7269\u306e\u5b89\u5168\u6027\u3092\u78ba\u8a8d\u3059\u308b\u3088\u3046\u306b\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b63\u3057\u304f\u52d5\u4f5c\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306e\u6280\u8853\u3092\u5b66\u3073\u307e\u3059\u3002\u9280\u884c\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30c6\u30b9\u30c8\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u54c1\u8cea\u306e\u9ad8\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter18/#_1","title":"\u30c6\u30b9\u30c8\u306e\u91cd\u8981\u6027","text":""},{"location":"chapter18/#_2","title":"\u306a\u305c\u30c6\u30b9\u30c8\u304c\u5fc5\u8981\uff1f","text":"<p>\u30c6\u30b9\u30c8\u306a\u3057\u306e\u958b\u767a\u306f\u3001\u8a2d\u8a08\u56f3\u306a\u3057\u3067\u5efa\u7269\u3092\u5efa\u3066\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u306e\u306a\u3044\u5371\u967a\u306a\u9280\u884c\u30b7\u30b9\u30c6\u30e0\uff08\u60aa\u3044\u4f8b\uff09\n&gt;&gt;&gt; class UnsafeBankAccount:\n...     def __init__(self, initial_balance):\n...         self.balance = initial_balance\n...     \n...     def withdraw(self, amount):\n...         self.balance -= amount  # \u6b8b\u9ad8\u30c1\u30a7\u30c3\u30af\u306a\u3057\uff01\n...         return self.balance\n...     \n...     def deposit(self, amount):\n...         self.balance += amount  # \u8ca0\u306e\u91d1\u984d\u30c1\u30a7\u30c3\u30af\u306a\u3057\uff01\n...         return self.balance\n... \n\n&gt;&gt;&gt; # \u5371\u967a\u306a\u4f7f\u7528\u4f8b\n&gt;&gt;&gt; account = UnsafeBankAccount(1000)\n&gt;&gt;&gt; print(f\"\u521d\u671f\u6b8b\u9ad8: {account.balance}\")\n\n&gt;&gt;&gt; # \u6b8b\u9ad8\u4ee5\u4e0a\u306e\u51fa\u91d1\uff08\u672c\u6765\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3079\u304d\uff09\n&gt;&gt;&gt; account.withdraw(1500)\n&gt;&gt;&gt; print(f\"1500\u5186\u51fa\u91d1\u5f8c: {account.balance}\")  # \u30de\u30a4\u30ca\u30b9\u6b8b\u9ad8\uff01\n\n&gt;&gt;&gt; # \u8ca0\u306e\u91d1\u984d\u306e\u5165\u91d1\uff08\u672c\u6765\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3079\u304d\uff09\n&gt;&gt;&gt; account.deposit(-500)\n&gt;&gt;&gt; print(f\"\u30de\u30a4\u30ca\u30b9500\u5186\u5165\u91d1\u5f8c: {account.balance}\")  # \u3055\u3089\u306b\u6e1b\u984d\uff01\n\n\u521d\u671f\u6b8b\u9ad8: 1000\n1500\u5186\u51fa\u91d1\u5f8c: -500\n\u30de\u30a4\u30ca\u30b9500\u5186\u5165\u91d1\u5f8c: -1000\n</code></pre> <p>\u554f\u984c\u70b9\uff1a 1. \u30d0\u30b0\u306e\u898b\u843d\u3068\u3057: \u30de\u30a4\u30ca\u30b9\u6b8b\u9ad8\u304c\u8a31\u53ef\u3055\u308c\u3066\u3044\u308b 2. \u4ed5\u69d8\u306e\u4e0d\u660e\u78ba\u3055: \u4f55\u304c\u6b63\u3057\u3044\u52d5\u4f5c\u304b\u5206\u304b\u3089\u306a\u3044 3. \u56de\u5e30\u306e\u5371\u967a\u6027: \u4fee\u6b63\u304c\u4ed6\u306e\u90e8\u5206\u3092\u58ca\u3059\u53ef\u80fd\u6027 4. \u30c7\u30d7\u30ed\u30a4\u6642\u306e\u4e0d\u5b89: \u672c\u756a\u74b0\u5883\u3067\u306e\u4e88\u671f\u3057\u306a\u3044\u52d5\u4f5c</p>"},{"location":"chapter18/#_3","title":"\u30c6\u30b9\u30c8\u306b\u3088\u308b\u54c1\u8cea\u4fdd\u8a3c","text":"<pre><code>&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u306b\u3088\u308b\u5b89\u5168\u306a\u9280\u884c\u30b7\u30b9\u30c6\u30e0\n&gt;&gt;&gt; class SafeBankAccount:\n...     def __init__(self, initial_balance):\n...         if initial_balance &lt; 0:\n...             raise ValueError(\"\u521d\u671f\u6b8b\u9ad8\u306f0\u4ee5\u4e0a\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         self.balance = initial_balance\n...         self.transaction_history = []\n...     \n...     def withdraw(self, amount):\n...         if amount &lt;= 0:\n...             raise ValueError(\"\u51fa\u91d1\u984d\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         if amount &gt; self.balance:\n...             raise ValueError(\"\u6b8b\u9ad8\u4e0d\u8db3\u3067\u3059\")\n...         \n...         self.balance -= amount\n...         self.transaction_history.append(f\"\u51fa\u91d1: {amount}\u5186\")\n...         return self.balance\n...     \n...     def deposit(self, amount):\n...         if amount &lt;= 0:\n...             raise ValueError(\"\u5165\u91d1\u984d\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         \n...         self.balance += amount\n...         self.transaction_history.append(f\"\u5165\u91d1: {amount}\u5186\")\n...         return self.balance\n...     \n...     def get_balance(self):\n...         return self.balance\n... \n\n&gt;&gt;&gt; # \u57fa\u672c\u7684\u306a\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_safe_bank_account():\n...     \"\"\"SafeBankAccount\u306e\u57fa\u672c\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== SafeBankAccount \u30c6\u30b9\u30c8\u958b\u59cb ===\")\n...     \n...     # \u30c6\u30b9\u30c81: \u6b63\u5e38\u306a\u521d\u671f\u5316\n...     account = SafeBankAccount(1000)\n...     assert account.get_balance() == 1000, \"\u521d\u671f\u6b8b\u9ad8\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\"\n...     print(\"\u2713 \u6b63\u5e38\u306a\u521d\u671f\u5316\u30c6\u30b9\u30c8\u5408\u683c\")\n...     \n...     # \u30c6\u30b9\u30c82: \u6b63\u5e38\u306a\u5165\u91d1\n...     account.deposit(500)\n...     assert account.get_balance() == 1500, \"\u5165\u91d1\u5f8c\u306e\u6b8b\u9ad8\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\"\n...     print(\"\u2713 \u6b63\u5e38\u306a\u5165\u91d1\u30c6\u30b9\u30c8\u5408\u683c\")\n...     \n...     # \u30c6\u30b9\u30c83: \u6b63\u5e38\u306a\u51fa\u91d1\n...     account.withdraw(300)\n...     assert account.get_balance() == 1200, \"\u51fa\u91d1\u5f8c\u306e\u6b8b\u9ad8\u304c\u6b63\u3057\u304f\u3042\u308a\u307e\u305b\u3093\"\n...     print(\"\u2713 \u6b63\u5e38\u306a\u51fa\u91d1\u30c6\u30b9\u30c8\u5408\u683c\")\n...     \n...     # \u30c6\u30b9\u30c84: \u6b8b\u9ad8\u4e0d\u8db3\u3067\u306e\u51fa\u91d1\uff08\u30a8\u30e9\u30fc\u304c\u671f\u5f85\u3055\u308c\u308b\uff09\n...     try:\n...         account.withdraw(2000)\n...         assert False, \"\u6b8b\u9ad8\u4e0d\u8db3\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3079\u304d\u3067\u3059\"\n...     except ValueError as e:\n...         assert \"\u6b8b\u9ad8\u4e0d\u8db3\" in str(e)\n...         print(\"\u2713 \u6b8b\u9ad8\u4e0d\u8db3\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\u5408\u683c\")\n...     \n...     # \u30c6\u30b9\u30c85: \u8ca0\u306e\u91d1\u984d\u3067\u306e\u5165\u91d1\uff08\u30a8\u30e9\u30fc\u304c\u671f\u5f85\u3055\u308c\u308b\uff09\n...     try:\n...         account.deposit(-100)\n...         assert False, \"\u8ca0\u306e\u5165\u91d1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3079\u304d\u3067\u3059\"\n...     except ValueError as e:\n...         assert \"\u6b63\u306e\u6570\" in str(e)\n...         print(\"\u2713 \u8ca0\u306e\u5165\u91d1\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\u5408\u683c\")\n...     \n...     print(\"=== \u5168\u30c6\u30b9\u30c8\u5408\u683c\uff01 ===\")\n\n&gt;&gt;&gt; test_safe_bank_account()\n\n=== SafeBankAccount \u30c6\u30b9\u30c8\u958b\u59cb ===\n\u2713 \u6b63\u5e38\u306a\u521d\u671f\u5316\u30c6\u30b9\u30c8\u5408\u683c\n\u2713 \u6b63\u5e38\u306a\u5165\u91d1\u30c6\u30b9\u30c8\u5408\u683c\n\u2713 \u6b63\u5e38\u306a\u51fa\u91d1\u30c6\u30b9\u30c8\u5408\u683c\n\u2713 \u6b8b\u9ad8\u4e0d\u8db3\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\u5408\u683c\n\u2713 \u8ca0\u306e\u5165\u91d1\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\u5408\u683c\n=== \u5168\u30c6\u30b9\u30c8\u5408\u683c\uff01 ===\n</code></pre>"},{"location":"chapter18/#unittest","title":"unittest\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af","text":""},{"location":"chapter18/#_4","title":"\u57fa\u672c\u7684\u306a\u30c6\u30b9\u30c8\u30af\u30e9\u30b9","text":"<pre><code>&gt;&gt;&gt; import unittest\n&gt;&gt;&gt; from io import StringIO\n&gt;&gt;&gt; import sys\n\n&gt;&gt;&gt; class TestBankAccount(unittest.TestCase):\n...     \"\"\"BankAccount\u30af\u30e9\u30b9\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\"\"\"\n...     \n...     def setUp(self):\n...         \"\"\"\u5404\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\u6e96\u5099\u51e6\u7406\"\"\"\n...         self.account = SafeBankAccount(1000)\n...     \n...     def tearDown(self):\n...         \"\"\"\u5404\u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\u5f8c\u51e6\u7406\"\"\"\n...         # \u30c6\u30b9\u30c8\u5f8c\u306e\u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09\n...         pass\n...     \n...     def test_initial_balance(self):\n...         \"\"\"\u521d\u671f\u6b8b\u9ad8\u306e\u30c6\u30b9\u30c8\"\"\"\n...         self.assertEqual(self.account.get_balance(), 1000)\n...         self.assertEqual(len(self.account.transaction_history), 0)\n...     \n...     def test_deposit_positive_amount(self):\n...         \"\"\"\u6b63\u306e\u91d1\u984d\u3067\u306e\u5165\u91d1\u30c6\u30b9\u30c8\"\"\"\n...         self.account.deposit(500)\n...         self.assertEqual(self.account.get_balance(), 1500)\n...         self.assertIn(\"\u5165\u91d1: 500\u5186\", self.account.transaction_history)\n...     \n...     def test_withdraw_valid_amount(self):\n...         \"\"\"\u6709\u52b9\u306a\u91d1\u984d\u3067\u306e\u51fa\u91d1\u30c6\u30b9\u30c8\"\"\"\n...         self.account.withdraw(300)\n...         self.assertEqual(self.account.get_balance(), 700)\n...         self.assertIn(\"\u51fa\u91d1: 300\u5186\", self.account.transaction_history)\n...     \n...     def test_withdraw_insufficient_funds(self):\n...         \"\"\"\u6b8b\u9ad8\u4e0d\u8db3\u3067\u306e\u51fa\u91d1\u30c6\u30b9\u30c8\"\"\"\n...         with self.assertRaises(ValueError) as context:\n...             self.account.withdraw(1500)\n...         self.assertIn(\"\u6b8b\u9ad8\u4e0d\u8db3\", str(context.exception))\n...     \n...     def test_deposit_negative_amount(self):\n...         \"\"\"\u8ca0\u306e\u91d1\u984d\u3067\u306e\u5165\u91d1\u30c6\u30b9\u30c8\"\"\"\n...         with self.assertRaises(ValueError) as context:\n...             self.account.deposit(-100)\n...         self.assertIn(\"\u6b63\u306e\u6570\", str(context.exception))\n...     \n...     def test_withdraw_negative_amount(self):\n...         \"\"\"\u8ca0\u306e\u91d1\u984d\u3067\u306e\u51fa\u91d1\u30c6\u30b9\u30c8\"\"\"\n...         with self.assertRaises(ValueError) as context:\n...             self.account.withdraw(-50)\n...         self.assertIn(\"\u6b63\u306e\u6570\", str(context.exception))\n...     \n...     def test_multiple_transactions(self):\n...         \"\"\"\u8907\u6570\u53d6\u5f15\u306e\u30c6\u30b9\u30c8\"\"\"\n...         self.account.deposit(200)    # 1000 + 200 = 1200\n...         self.account.withdraw(100)   # 1200 - 100 = 1100\n...         self.account.deposit(300)    # 1100 + 300 = 1400\n...         \n...         self.assertEqual(self.account.get_balance(), 1400)\n...         self.assertEqual(len(self.account.transaction_history), 3)\n...     \n...     def test_negative_initial_balance(self):\n...         \"\"\"\u8ca0\u306e\u521d\u671f\u6b8b\u9ad8\u3067\u306e\u30a8\u30e9\u30fc\u30c6\u30b9\u30c8\"\"\"\n...         with self.assertRaises(ValueError) as context:\n...             SafeBankAccount(-100)\n...         self.assertIn(\"0\u4ee5\u4e0a\", str(context.exception))\n... \n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306e\u95a2\u6570\n&gt;&gt;&gt; def run_unittest_tests():\n...     \"\"\"unittest\u306e\u5b9f\u884c\"\"\"\n...     # StringIO\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\n...     test_output = StringIO()\n...     \n...     # \u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u306e\u4f5c\u6210\n...     test_suite = unittest.TestLoader().loadTestsFromTestCase(TestBankAccount)\n...     \n...     # \u30c6\u30b9\u30c8\u5b9f\u884c\n...     test_runner = unittest.TextTestRunner(stream=test_output, verbosity=2)\n...     test_result = test_runner.run(test_suite)\n...     \n...     # \u7d50\u679c\u306e\u8868\u793a\n...     output = test_output.getvalue()\n...     print(output)\n...     \n...     # \u30b5\u30de\u30ea\u30fc\n...     print(f\"\u5b9f\u884c\u30c6\u30b9\u30c8\u6570: {test_result.testsRun}\")\n...     print(f\"\u5931\u6557: {len(test_result.failures)}\")\n...     print(f\"\u30a8\u30e9\u30fc: {len(test_result.errors)}\")\n...     print(f\"\u6210\u529f\u7387: {((test_result.testsRun - len(test_result.failures) - len(test_result.errors)) / test_result.testsRun * 100):.1f}%\")\n\n&gt;&gt;&gt; run_unittest_tests()\n\ntest_deposit_negative_amount (__main__.TestBankAccount) ... ok\ntest_deposit_positive_amount (__main__.TestBankAccount) ... ok\ntest_initial_balance (__main__.TestBankAccount) ... ok\ntest_multiple_transactions (__main__.TestBankAccount) ... ok\ntest_negative_initial_balance (__main__.TestBankAccount) ... ok\ntest_withdraw_insufficient_funds (__main__.TestBankAccount) ... ok\ntest_withdraw_negative_amount (__main__.TestBankAccount) ... ok\ntest_withdraw_valid_amount (__main__.TestBankAccount) ... ok\n\n----------------------------------------------------------------------\nRan 8 tests in 0.002s\n\nOK\n\n\u5b9f\u884c\u30c6\u30b9\u30c8\u6570: 8\n\u5931\u6557: 0\n\u30a8\u30e9\u30fc: 0\n\u6210\u529f\u7387: 100.0%\n</code></pre>"},{"location":"chapter18/#_5","title":"\u3010\u5b9f\u884c\u3011\u5305\u62ec\u7684\u306a\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u4f5c\u308d\u3046","text":""},{"location":"chapter18/#1e","title":"\u30b9\u30c6\u30c3\u30d71\uff1aE\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8","text":"<pre><code>&gt;&gt;&gt; import unittest\n&gt;&gt;&gt; from datetime import datetime, timedelta\n&gt;&gt;&gt; from unittest.mock import Mock, patch\n\n&gt;&gt;&gt; class Product:\n...     \"\"\"\u5546\u54c1\u30af\u30e9\u30b9\"\"\"\n...     def __init__(self, product_id, name, price, stock_quantity):\n...         self.product_id = product_id\n...         self.name = name\n...         self.price = price\n...         self.stock_quantity = stock_quantity\n...     \n...     def is_available(self, quantity=1):\n...         return self.stock_quantity &gt;= quantity\n...     \n...     def reduce_stock(self, quantity):\n...         if not self.is_available(quantity):\n...             raise ValueError(\"\u5728\u5eab\u4e0d\u8db3\u3067\u3059\")\n...         self.stock_quantity -= quantity\n\n&gt;&gt;&gt; class ShoppingCart:\n...     \"\"\"\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u30af\u30e9\u30b9\"\"\"\n...     def __init__(self):\n...         self.items = {}  # product_id: quantity\n...         self.discount_rate = 0.0\n...     \n...     def add_item(self, product, quantity=1):\n...         if quantity &lt;= 0:\n...             raise ValueError(\"\u6570\u91cf\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         if not product.is_available(quantity):\n...             raise ValueError(\"\u5728\u5eab\u4e0d\u8db3\u3067\u3059\")\n...         \n...         if product.product_id in self.items:\n...             self.items[product.product_id]['quantity'] += quantity\n...         else:\n...             self.items[product.product_id] = {\n...                 'product': product,\n...                 'quantity': quantity\n...             }\n...     \n...     def remove_item(self, product_id):\n...         if product_id in self.items:\n...             del self.items[product_id]\n...         else:\n...             raise ValueError(\"\u5546\u54c1\u304c\u30ab\u30fc\u30c8\u306b\u3042\u308a\u307e\u305b\u3093\")\n...     \n...     def calculate_total(self):\n...         total = 0\n...         for item in self.items.values():\n...             total += item['product'].price * item['quantity']\n...         return total * (1 - self.discount_rate)\n...     \n...     def apply_discount(self, discount_rate):\n...         if not 0 &lt;= discount_rate &lt;= 1:\n...             raise ValueError(\"\u5272\u5f15\u7387\u306f0\u304b\u30891\u306e\u9593\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         self.discount_rate = discount_rate\n...     \n...     def get_item_count(self):\n...         return sum(item['quantity'] for item in self.items.values())\n\n&gt;&gt;&gt; class OrderProcessor:\n...     \"\"\"\u6ce8\u6587\u51e6\u7406\u30af\u30e9\u30b9\"\"\"\n...     def __init__(self, payment_gateway, inventory_system):\n...         self.payment_gateway = payment_gateway\n...         self.inventory_system = inventory_system\n...         self.processed_orders = []\n...     \n...     def process_order(self, cart, customer_info):\n...         if cart.get_item_count() == 0:\n...             raise ValueError(\"\u30ab\u30fc\u30c8\u304c\u7a7a\u3067\u3059\")\n...         \n...         total_amount = cart.calculate_total()\n...         \n...         # \u652f\u6255\u3044\u51e6\u7406\n...         payment_result = self.payment_gateway.process_payment(\n...             customer_info['payment_method'], \n...             total_amount\n...         )\n...         \n...         if not payment_result['success']:\n...             raise ValueError(f\"\u652f\u6255\u3044\u30a8\u30e9\u30fc: {payment_result['error']}\")\n...         \n...         # \u5728\u5eab\u66f4\u65b0\n...         for item in cart.items.values():\n...             self.inventory_system.update_stock(\n...                 item['product'].product_id,\n...                 -item['quantity']\n...             )\n...         \n...         # \u6ce8\u6587\u8a18\u9332\n...         order = {\n...             'order_id': f\"ORDER_{len(self.processed_orders) + 1:04d}\",\n...             'customer': customer_info['name'],\n...             'items': dict(cart.items),\n...             'total_amount': total_amount,\n...             'processed_at': datetime.now(),\n...             'payment_id': payment_result['transaction_id']\n...         }\n...         \n...         self.processed_orders.append(order)\n...         return order\n\n&gt;&gt;&gt; class TestEcommerceSystem(unittest.TestCase):\n...     \"\"\"E\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0\u306e\u7d71\u5408\u30c6\u30b9\u30c8\"\"\"\n...     \n...     def setUp(self):\n...         \"\"\"\u30c6\u30b9\u30c8\u6e96\u5099\"\"\"\n...         # \u30c6\u30b9\u30c8\u7528\u5546\u54c1\u306e\u4f5c\u6210\n...         self.product1 = Product(\"P001\", \"\u30ce\u30fc\u30c8PC\", 80000, 10)\n...         self.product2 = Product(\"P002\", \"\u30de\u30a6\u30b9\", 3000, 20)\n...         self.product3 = Product(\"P003\", \"\u30ad\u30fc\u30dc\u30fc\u30c9\", 8000, 5)\n...         \n...         # \u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306e\u4f5c\u6210\n...         self.cart = ShoppingCart()\n...         \n...         # \u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n...         self.mock_payment_gateway = Mock()\n...         self.mock_inventory_system = Mock()\n...         \n...         # \u6ce8\u6587\u51e6\u7406\u306e\u4f5c\u6210\n...         self.order_processor = OrderProcessor(\n...             self.mock_payment_gateway,\n...             self.mock_inventory_system\n...         )\n...         \n...         # \u9867\u5ba2\u60c5\u5831\n...         self.customer_info = {\n...             'name': '\u7530\u4e2d\u592a\u90ce',\n...             'email': 'tanaka@example.com',\n...             'payment_method': 'credit_card'\n...         }\n...     \n...     def test_product_availability(self):\n...         \"\"\"\u5546\u54c1\u5728\u5eab\u306e\u30c6\u30b9\u30c8\"\"\"\n...         # \u5341\u5206\u306a\u5728\u5eab\u304c\u3042\u308b\u5834\u5408\n...         self.assertTrue(self.product1.is_available(5))\n...         \n...         # \u5728\u5eab\u4ee5\u4e0a\u3092\u8981\u6c42\u3059\u308b\u5834\u5408\n...         self.assertFalse(self.product1.is_available(15))\n...         \n...         # \u5728\u5eab\u306e\u6e1b\u5c11\n...         initial_stock = self.product1.stock_quantity\n...         self.product1.reduce_stock(3)\n...         self.assertEqual(self.product1.stock_quantity, initial_stock - 3)\n...     \n...     def test_shopping_cart_operations(self):\n...         \"\"\"\u30b7\u30e7\u30c3\u30d4\u30f3\u30b0\u30ab\u30fc\u30c8\u306e\u64cd\u4f5c\u30c6\u30b9\u30c8\"\"\"\n...         # \u5546\u54c1\u306e\u8ffd\u52a0\n...         self.cart.add_item(self.product1, 2)\n...         self.cart.add_item(self.product2, 1)\n...         \n...         self.assertEqual(self.cart.get_item_count(), 3)\n...         self.assertEqual(len(self.cart.items), 2)\n...         \n...         # \u540c\u3058\u5546\u54c1\u306e\u8ffd\u52a0\uff08\u6570\u91cf\u5897\u52a0\uff09\n...         self.cart.add_item(self.product1, 1)\n...         self.assertEqual(self.cart.items[\"P001\"]['quantity'], 3)\n...         \n...         # \u5546\u54c1\u306e\u524a\u9664\n...         self.cart.remove_item(\"P002\")\n...         self.assertEqual(len(self.cart.items), 1)\n...         \n...         # \u5b58\u5728\u3057\u306a\u3044\u5546\u54c1\u306e\u524a\u9664\n...         with self.assertRaises(ValueError):\n...             self.cart.remove_item(\"P999\")\n...     \n...     def test_cart_total_calculation(self):\n...         \"\"\"\u30ab\u30fc\u30c8\u306e\u5408\u8a08\u91d1\u984d\u8a08\u7b97\u30c6\u30b9\u30c8\"\"\"\n...         self.cart.add_item(self.product1, 1)  # 80000\u5186\n...         self.cart.add_item(self.product2, 2)  # 6000\u5186\n...         \n...         # \u5272\u5f15\u306a\u3057\u306e\u5408\u8a08\n...         expected_total = 80000 + 6000\n...         self.assertEqual(self.cart.calculate_total(), expected_total)\n...         \n...         # 10%\u5272\u5f15\u9069\u7528\n...         self.cart.apply_discount(0.1)\n...         expected_discounted = expected_total * 0.9\n...         self.assertEqual(self.cart.calculate_total(), expected_discounted)\n...     \n...     def test_discount_validation(self):\n...         \"\"\"\u5272\u5f15\u7387\u306e\u691c\u8a3c\u30c6\u30b9\u30c8\"\"\"\n...         # \u6709\u52b9\u306a\u5272\u5f15\u7387\n...         self.cart.apply_discount(0.15)\n...         self.assertEqual(self.cart.discount_rate, 0.15)\n...         \n...         # \u7121\u52b9\u306a\u5272\u5f15\u7387\n...         with self.assertRaises(ValueError):\n...             self.cart.apply_discount(-0.1)\n...         \n...         with self.assertRaises(ValueError):\n...             self.cart.apply_discount(1.5)\n...     \n...     @patch('datetime.datetime')\n...     def test_successful_order_processing(self, mock_datetime):\n...         \"\"\"\u6b63\u5e38\u306a\u6ce8\u6587\u51e6\u7406\u306e\u30c6\u30b9\u30c8\"\"\"\n...         # \u30e2\u30c3\u30af\u306e\u8a2d\u5b9a\n...         mock_datetime.now.return_value = datetime(2024, 1, 15, 14, 30, 0)\n...         \n...         self.mock_payment_gateway.process_payment.return_value = {\n...             'success': True,\n...             'transaction_id': 'TXN_12345'\n...         }\n...         \n...         # \u30ab\u30fc\u30c8\u306b\u5546\u54c1\u3092\u8ffd\u52a0\n...         self.cart.add_item(self.product1, 1)\n...         self.cart.add_item(self.product2, 2)\n...         \n...         # \u6ce8\u6587\u51e6\u7406\n...         order = self.order_processor.process_order(self.cart, self.customer_info)\n...         \n...         # \u7d50\u679c\u306e\u691c\u8a3c\n...         self.assertEqual(order['customer'], '\u7530\u4e2d\u592a\u90ce')\n...         self.assertEqual(order['total_amount'], 86000)\n...         self.assertEqual(order['payment_id'], 'TXN_12345')\n...         \n...         # \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u78ba\u8a8d\n...         self.mock_payment_gateway.process_payment.assert_called_once_with('credit_card', 86000)\n...         self.assertEqual(self.mock_inventory_system.update_stock.call_count, 2)\n...     \n...     def test_payment_failure_handling(self):\n...         \"\"\"\u652f\u6255\u3044\u5931\u6557\u306e\u51e6\u7406\u30c6\u30b9\u30c8\"\"\"\n...         # \u652f\u6255\u3044\u5931\u6557\u306e\u30e2\u30c3\u30af\u8a2d\u5b9a\n...         self.mock_payment_gateway.process_payment.return_value = {\n...             'success': False,\n...             'error': '\u30ab\u30fc\u30c9\u306e\u6709\u52b9\u671f\u9650\u5207\u308c'\n...         }\n...         \n...         self.cart.add_item(self.product1, 1)\n...         \n...         # \u652f\u6255\u3044\u5931\u6557\u6642\u306e\u4f8b\u5916\u767a\u751f\u3092\u78ba\u8a8d\n...         with self.assertRaises(ValueError) as context:\n...             self.order_processor.process_order(self.cart, self.customer_info)\n...         \n...         self.assertIn('\u652f\u6255\u3044\u30a8\u30e9\u30fc', str(context.exception))\n...         self.assertIn('\u30ab\u30fc\u30c9\u306e\u6709\u52b9\u671f\u9650\u5207\u308c', str(context.exception))\n...         \n...         # \u5728\u5eab\u66f4\u65b0\u304c\u884c\u308f\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n...         self.mock_inventory_system.update_stock.assert_not_called()\n...     \n...     def test_empty_cart_processing(self):\n...         \"\"\"\u7a7a\u306e\u30ab\u30fc\u30c8\u3067\u306e\u6ce8\u6587\u51e6\u7406\u30c6\u30b9\u30c8\"\"\"\n...         with self.assertRaises(ValueError) as context:\n...             self.order_processor.process_order(self.cart, self.customer_info)\n...         \n...         self.assertIn('\u30ab\u30fc\u30c8\u304c\u7a7a', str(context.exception))\n...     \n...     def test_stock_insufficient_error(self):\n...         \"\"\"\u5728\u5eab\u4e0d\u8db3\u30a8\u30e9\u30fc\u306e\u30c6\u30b9\u30c8\"\"\"\n...         # \u5728\u5eab\u4ee5\u4e0a\u306e\u6570\u91cf\u3092\u8ffd\u52a0\u3057\u3088\u3046\u3068\u3059\u308b\n...         with self.assertRaises(ValueError) as context:\n...             self.cart.add_item(self.product3, 10)  # \u5728\u5eab5\u500b\u3001\u8981\u6c4210\u500b\n...         \n...         self.assertIn('\u5728\u5eab\u4e0d\u8db3', str(context.exception))\n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\n&gt;&gt;&gt; class TestEcommercePerformance(unittest.TestCase):\n...     \"\"\"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\"\"\"\n...     \n...     def setUp(self):\n...         \"\"\"\u5927\u91cf\u30c7\u30fc\u30bf\u306e\u6e96\u5099\"\"\"\n...         self.products = []\n...         for i in range(1000):\n...             product = Product(f\"P{i:04d}\", f\"\u5546\u54c1{i}\", 1000 + i, 100)\n...             self.products.append(product)\n...     \n...     def test_large_cart_performance(self):\n...         \"\"\"\u5927\u91cf\u5546\u54c1\u3067\u306e\u30ab\u30fc\u30c8\u51e6\u7406\u6027\u80fd\u30c6\u30b9\u30c8\"\"\"\n...         import time\n...         \n...         cart = ShoppingCart()\n...         \n...         # 100\u500b\u306e\u5546\u54c1\u3092\u30ab\u30fc\u30c8\u306b\u8ffd\u52a0\n...         start_time = time.time()\n...         for i in range(100):\n...             cart.add_item(self.products[i], 1)\n...         add_time = time.time() - start_time\n...         \n...         # \u5408\u8a08\u8a08\u7b97\n...         start_time = time.time()\n...         total = cart.calculate_total()\n...         calc_time = time.time() - start_time\n...         \n...         # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u691c\u8a3c\uff081\u79d2\u4ee5\u5185\u306b\u5b8c\u4e86\u3059\u308b\u3053\u3068\uff09\n...         self.assertLess(add_time, 1.0, \"\u5546\u54c1\u8ffd\u52a0\u304c\u9045\u3059\u304e\u307e\u3059\")\n...         self.assertLess(calc_time, 0.1, \"\u5408\u8a08\u8a08\u7b97\u304c\u9045\u3059\u304e\u307e\u3059\")\n...         \n...         print(f\"\u5546\u54c1\u8ffd\u52a0\u6642\u9593: {add_time:.4f}\u79d2\")\n...         print(f\"\u5408\u8a08\u8a08\u7b97\u6642\u9593: {calc_time:.4f}\u79d2\")\n...         print(f\"\u30ab\u30fc\u30c8\u5185\u5546\u54c1\u6570: {cart.get_item_count()}\")\n...         print(f\"\u5408\u8a08\u91d1\u984d: {total:,.0f}\u5186\")\n\n&gt;&gt;&gt; # \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n&gt;&gt;&gt; def run_ecommerce_tests():\n...     \"\"\"E\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\"\"\"\n...     print(\"=== E\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0 \u30c6\u30b9\u30c8\u5b9f\u884c ===\")\n...     \n...     # \u57fa\u672c\u6a5f\u80fd\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n...     basic_suite = unittest.TestLoader().loadTestsFromTestCase(TestEcommerceSystem)\n...     basic_result = unittest.TextTestRunner(verbosity=1).run(basic_suite)\n...     \n...     print(f\"\\\\n\u57fa\u672c\u6a5f\u80fd\u30c6\u30b9\u30c8\u7d50\u679c:\")\n...     print(f\"  \u5b9f\u884c: {basic_result.testsRun}\u4ef6\")\n...     print(f\"  \u6210\u529f: {basic_result.testsRun - len(basic_result.failures) - len(basic_result.errors)}\u4ef6\")\n...     print(f\"  \u5931\u6557: {len(basic_result.failures)}\u4ef6\")\n...     print(f\"  \u30a8\u30e9\u30fc: {len(basic_result.errors)}\u4ef6\")\n...     \n...     # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n...     print(\"\\\\n=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8 ===\")\n...     perf_suite = unittest.TestLoader().loadTestsFromTestCase(TestEcommercePerformance)\n...     perf_result = unittest.TextTestRunner(verbosity=2).run(perf_suite)\n\n&gt;&gt;&gt; run_ecommerce_tests()\n\n=== E\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0 \u30c6\u30b9\u30c8\u5b9f\u884c ===\n........\n----------------------------------------------------------------------\nRan 8 tests in 0.003s\n\nOK\n\n\u57fa\u672c\u6a5f\u80fd\u30c6\u30b9\u30c8\u7d50\u679c:\n  \u5b9f\u884c: 8\u4ef6\n  \u6210\u529f: 8\u4ef6\n  \u5931\u6557: 0\u4ef6\n  \u30a8\u30e9\u30fc: 0\u4ef6\n\n=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8 ===\ntest_large_cart_performance (__main__.TestEcommercePerformance) ... \u5546\u54c1\u8ffd\u52a0\u6642\u9593: 0.0012\u79d2\n\u5408\u8a08\u8a08\u7b97\u6642\u9593: 0.0003\u79d2\n\u30ab\u30fc\u30c8\u5185\u5546\u54c1\u6570: 100\n\u5408\u8a08\u91d1\u984d: 154,950\u5186\nok\n\n----------------------------------------------------------------------\nRan 1 tests in 0.002s\n\nOK\n</code></pre>"},{"location":"chapter18/#2","title":"\u30b9\u30c6\u30c3\u30d72\uff1a\u30e2\u30c3\u30af\u3068\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb","text":"<pre><code>&gt;&gt;&gt; from unittest.mock import Mock, MagicMock, patch, call\n&gt;&gt;&gt; import requests\n\n&gt;&gt;&gt; class WeatherService:\n...     \"\"\"\u5929\u6c17\u4e88\u5831\u30b5\u30fc\u30d3\u30b9\uff08\u5916\u90e8API\u3092\u4f7f\u7528\uff09\"\"\"\n...     \n...     def __init__(self, api_key):\n...         self.api_key = api_key\n...         self.base_url = \"https://api.weather.com/v1\"\n...     \n...     def get_current_weather(self, city):\n...         \"\"\"\u73fe\u5728\u306e\u5929\u6c17\u3092\u53d6\u5f97\"\"\"\n...         url = f\"{self.base_url}/current\"\n...         params = {\n...             'key': self.api_key,\n...             'q': city,\n...             'lang': 'ja'\n...         }\n...         \n...         response = requests.get(url, params=params)\n...         if response.status_code == 200:\n...             data = response.json()\n...             return {\n...                 'city': city,\n...                 'temperature': data['current']['temp_c'],\n...                 'condition': data['current']['condition']['text'],\n...                 'humidity': data['current']['humidity']\n...             }\n...         else:\n...             raise Exception(f\"\u5929\u6c17\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {response.status_code}\")\n...     \n...     def get_forecast(self, city, days=3):\n...         \"\"\"\u5929\u6c17\u4e88\u5831\u3092\u53d6\u5f97\"\"\"\n...         url = f\"{self.base_url}/forecast\"\n...         params = {\n...             'key': self.api_key,\n...             'q': city,\n...             'days': days,\n...             'lang': 'ja'\n...         }\n...         \n...         response = requests.get(url, params=params)\n...         if response.status_code == 200:\n...             data = response.json()\n...             forecast = []\n...             for day in data['forecast']['forecastday']:\n...                 forecast.append({\n...                     'date': day['date'],\n...                     'max_temp': day['day']['maxtemp_c'],\n...                     'min_temp': day['day']['mintemp_c'],\n...                     'condition': day['day']['condition']['text']\n...                 })\n...             return forecast\n...         else:\n...             raise Exception(f\"\u4e88\u5831\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u306b\u5931\u6557\u3057\u307e\u3057\u305f: {response.status_code}\")\n\n&gt;&gt;&gt; class WeatherApp:\n...     \"\"\"\u5929\u6c17\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     \n...     def __init__(self, weather_service):\n...         self.weather_service = weather_service\n...         self.cache = {}\n...     \n...     def get_weather_summary(self, city):\n...         \"\"\"\u5929\u6c17\u30b5\u30de\u30ea\u30fc\u3092\u53d6\u5f97\"\"\"\n...         try:\n...             current = self.weather_service.get_current_weather(city)\n...             forecast = self.weather_service.get_forecast(city, 2)\n...             \n...             # \u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u4fdd\u5b58\n...             self.cache[city] = {\n...                 'current': current,\n...                 'forecast': forecast,\n...                 'cached_at': datetime.now()\n...             }\n...             \n...             return {\n...                 'success': True,\n...                 'current_weather': current,\n...                 'forecast': forecast,\n...                 'summary': f\"{city}\u306e\u73fe\u5728\u306e\u5929\u6c17\u306f{current['condition']}\u3001\u6c17\u6e29{current['temperature']}\u00b0C\u3067\u3059\u3002\"\n...             }\n...         except Exception as e:\n...             return {\n...                 'success': False,\n...                 'error': str(e)\n...             }\n...     \n...     def get_cached_weather(self, city):\n...         \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u5929\u6c17\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\"\"\"\n...         if city in self.cache:\n...             cached_data = self.cache[city]\n...             cache_age = datetime.now() - cached_data['cached_at']\n...             \n...             # 30\u5206\u4ee5\u5185\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u6709\u52b9\n...             if cache_age &lt; timedelta(minutes=30):\n...                 return cached_data\n...         \n...         return None\n\n&gt;&gt;&gt; class TestWeatherApp(unittest.TestCase):\n...     \"\"\"\u5929\u6c17\u30a2\u30d7\u30ea\u306e\u30c6\u30b9\u30c8\uff08\u30e2\u30c3\u30af\u3092\u4f7f\u7528\uff09\"\"\"\n...     \n...     def setUp(self):\n...         \"\"\"\u30c6\u30b9\u30c8\u6e96\u5099\"\"\"\n...         self.mock_weather_service = Mock(spec=WeatherService)\n...         self.weather_app = WeatherApp(self.mock_weather_service)\n...     \n...     def test_successful_weather_summary(self):\n...         \"\"\"\u6b63\u5e38\u306a\u5929\u6c17\u30b5\u30de\u30ea\u30fc\u53d6\u5f97\u306e\u30c6\u30b9\u30c8\"\"\"\n...         # \u30e2\u30c3\u30af\u306e\u623b\u308a\u5024\u3092\u8a2d\u5b9a\n...         self.mock_weather_service.get_current_weather.return_value = {\n...             'city': '\u6771\u4eac',\n...             'temperature': 22,\n...             'condition': '\u6674\u308c',\n...             'humidity': 65\n...         }\n...         \n...         self.mock_weather_service.get_forecast.return_value = [\n...             {\n...                 'date': '2024-01-16',\n...                 'max_temp': 25,\n...                 'min_temp': 18,\n...                 'condition': '\u66c7\u308a'\n...             },\n...             {\n...                 'date': '2024-01-17',\n...                 'max_temp': 20,\n...                 'min_temp': 15,\n...                 'condition': '\u96e8'\n...             }\n...         ]\n...         \n...         # \u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\n...         result = self.weather_app.get_weather_summary('\u6771\u4eac')\n...         \n...         # \u7d50\u679c\u306e\u691c\u8a3c\n...         self.assertTrue(result['success'])\n...         self.assertEqual(result['current_weather']['temperature'], 22)\n...         self.assertIn('\u6771\u4eac\u306e\u73fe\u5728\u306e\u5929\u6c17\u306f\u6674\u308c', result['summary'])\n...         self.assertEqual(len(result['forecast']), 2)\n...         \n...         # \u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u78ba\u8a8d\n...         self.mock_weather_service.get_current_weather.assert_called_once_with('\u6771\u4eac')\n...         self.mock_weather_service.get_forecast.assert_called_once_with('\u6771\u4eac', 2)\n...     \n...     def test_weather_service_error_handling(self):\n...         \"\"\"\u5929\u6c17\u30b5\u30fc\u30d3\u30b9\u30a8\u30e9\u30fc\u306e\u51e6\u7406\u30c6\u30b9\u30c8\"\"\"\n...         # \u30e2\u30c3\u30af\u3067\u4f8b\u5916\u3092\u767a\u751f\u3055\u305b\u308b\n...         self.mock_weather_service.get_current_weather.side_effect = Exception(\"API\u30a8\u30e9\u30fc\")\n...         \n...         # \u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\n...         result = self.weather_app.get_weather_summary('\u6771\u4eac')\n...         \n...         # \u30a8\u30e9\u30fc\u51e6\u7406\u306e\u691c\u8a3c\n...         self.assertFalse(result['success'])\n...         self.assertIn('API\u30a8\u30e9\u30fc', result['error'])\n...     \n...     @patch('datetime.datetime')\n...     def test_weather_caching(self, mock_datetime):\n...         \"\"\"\u5929\u6c17\u30c7\u30fc\u30bf\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30c6\u30b9\u30c8\"\"\"\n...         # \u56fa\u5b9a\u6642\u523b\u306e\u8a2d\u5b9a\n...         base_time = datetime(2024, 1, 15, 10, 0, 0)\n...         mock_datetime.now.return_value = base_time\n...         \n...         # \u30e2\u30c3\u30af\u306e\u8a2d\u5b9a\n...         current_weather = {'city': '\u5927\u962a', 'temperature': 18, 'condition': '\u66c7\u308a', 'humidity': 70}\n...         forecast = [{'date': '2024-01-16', 'max_temp': 20, 'min_temp': 12, 'condition': '\u6674\u308c'}]\n...         \n...         self.mock_weather_service.get_current_weather.return_value = current_weather\n...         self.mock_weather_service.get_forecast.return_value = forecast\n...         \n...         # \u521d\u56de\u53d6\u5f97\n...         result1 = self.weather_app.get_weather_summary('\u5927\u962a')\n...         self.assertTrue(result1['success'])\n...         \n...         # \u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u78ba\u8a8d\n...         cached = self.weather_app.get_cached_weather('\u5927\u962a')\n...         self.assertIsNotNone(cached)\n...         self.assertEqual(cached['current']['temperature'], 18)\n...         \n...         # \u6642\u9593\u309220\u5206\u5f8c\u306b\u8a2d\u5b9a\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u6709\u52b9\u671f\u9593\u5185\uff09\n...         mock_datetime.now.return_value = base_time + timedelta(minutes=20)\n...         cached_recent = self.weather_app.get_cached_weather('\u5927\u962a')\n...         self.assertIsNotNone(cached_recent)\n...         \n...         # \u6642\u9593\u309240\u5206\u5f8c\u306b\u8a2d\u5b9a\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u671f\u9650\u5207\u308c\uff09\n...         mock_datetime.now.return_value = base_time + timedelta(minutes=40)\n...         cached_expired = self.weather_app.get_cached_weather('\u5927\u962a')\n...         self.assertIsNone(cached_expired)\n...     \n...     def test_multiple_cities(self):\n...         \"\"\"\u8907\u6570\u90fd\u5e02\u306e\u5929\u6c17\u53d6\u5f97\u30c6\u30b9\u30c8\"\"\"\n...         cities = ['\u6771\u4eac', '\u5927\u962a', '\u540d\u53e4\u5c4b']\n...         \n...         # \u5404\u90fd\u5e02\u306b\u5bfe\u3059\u308b\u30e2\u30c3\u30af\u8a2d\u5b9a\n...         def mock_current_weather(city):\n...             weather_data = {\n...                 '\u6771\u4eac': {'city': '\u6771\u4eac', 'temperature': 22, 'condition': '\u6674\u308c', 'humidity': 60},\n...                 '\u5927\u962a': {'city': '\u5927\u962a', 'temperature': 20, 'condition': '\u66c7\u308a', 'humidity': 70},\n...                 '\u540d\u53e4\u5c4b': {'city': '\u540d\u53e4\u5c4b', 'temperature': 19, 'condition': '\u96e8', 'humidity': 80}\n...             }\n...             return weather_data[city]\n...         \n...         def mock_forecast(city, days):\n...             return [{'date': '2024-01-16', 'max_temp': 25, 'min_temp': 15, 'condition': '\u6674\u308c'}]\n...         \n...         self.mock_weather_service.get_current_weather.side_effect = mock_current_weather\n...         self.mock_weather_service.get_forecast.side_effect = mock_forecast\n...         \n...         # \u5404\u90fd\u5e02\u306e\u5929\u6c17\u3092\u53d6\u5f97\n...         results = []\n...         for city in cities:\n...             result = self.weather_app.get_weather_summary(city)\n...             results.append(result)\n...         \n...         # \u7d50\u679c\u306e\u691c\u8a3c\n...         for i, result in enumerate(results):\n...             self.assertTrue(result['success'])\n...             self.assertEqual(result['current_weather']['city'], cities[i])\n...         \n...         # \u547c\u3073\u51fa\u3057\u56de\u6570\u306e\u78ba\u8a8d\n...         self.assertEqual(self.mock_weather_service.get_current_weather.call_count, 3)\n...         self.assertEqual(self.mock_weather_service.get_forecast.call_count, 3)\n...         \n...         # \u547c\u3073\u51fa\u3057\u5f15\u6570\u306e\u78ba\u8a8d\n...         expected_calls = [call(city) for city in cities]\n...         self.mock_weather_service.get_current_weather.assert_has_calls(expected_calls)\n\n&gt;&gt;&gt; # \u30e2\u30c3\u30af\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n&gt;&gt;&gt; def run_mock_tests():\n...     \"\"\"\u30e2\u30c3\u30af\u3092\u4f7f\u7528\u3057\u305f\u30c6\u30b9\u30c8\u306e\u5b9f\u884c\"\"\"\n...     print(\"=== \u30e2\u30c3\u30af\u30c6\u30b9\u30c8\u5b9f\u884c ===\")\n...     \n...     test_suite = unittest.TestLoader().loadTestsFromTestCase(TestWeatherApp)\n...     test_result = unittest.TextTestRunner(verbosity=2).run(test_suite)\n...     \n...     print(f\"\\\\n\u30e2\u30c3\u30af\u30c6\u30b9\u30c8\u7d50\u679c:\")\n...     print(f\"  \u5b9f\u884c: {test_result.testsRun}\u4ef6\")\n...     print(f\"  \u6210\u529f: {test_result.testsRun - len(test_result.failures) - len(test_result.errors)}\u4ef6\")\n...     print(f\"  \u5931\u6557: {len(test_result.failures)}\u4ef6\")\n...     print(f\"  \u30a8\u30e9\u30fc: {len(test_result.errors)}\u4ef6\")\n\n&gt;&gt;&gt; run_mock_tests()\n\n=== \u30e2\u30c3\u30af\u30c6\u30b9\u30c8\u5b9f\u884c ===\ntest_multiple_cities (__main__.TestWeatherApp) ... ok\ntest_successful_weather_summary (__main__.TestWeatherApp) ... ok\ntest_weather_caching (__main__.TestWeatherApp) ... ok\ntest_weather_service_error_handling (__main__.TestWeatherApp) ... ok\n\n----------------------------------------------------------------------\nRan 4 tests in 0.002s\n\nOK\n\n\u30e2\u30c3\u30af\u30c6\u30b9\u30c8\u7d50\u679c:\n  \u5b9f\u884c: 4\u4ef6\n  \u6210\u529f: 4\u4ef6\n  \u5931\u6557: 0\u4ef6\n  \u30a8\u30e9\u30fc: 0\u4ef6\n</code></pre>"},{"location":"chapter18/#_6","title":"\u30c7\u30d0\u30c3\u30b0\u6280\u8853","text":""},{"location":"chapter18/#print","title":"print\u6587\u3092\u4f7f\u3063\u305f\u30c7\u30d0\u30c3\u30b0","text":"<pre><code>&gt;&gt;&gt; def debug_example_function(numbers):\n...     \"\"\"\u30c7\u30d0\u30c3\u30b0\u4f8b\u306e\u305f\u3081\u306e\u95a2\u6570\"\"\"\n...     print(f\"[DEBUG] \u95a2\u6570\u958b\u59cb: \u5165\u529b = {numbers}\")\n...     \n...     result = []\n...     for i, num in enumerate(numbers):\n...         print(f\"[DEBUG] \u30eb\u30fc\u30d7 {i}: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = {num}\")\n...         \n...         if num &gt; 0:\n...             squared = num ** 2\n...             print(f\"[DEBUG] \u6b63\u306e\u6570 {num} \u306e2\u4e57 = {squared}\")\n...             result.append(squared)\n...         else:\n...             print(f\"[DEBUG] \u8ca0\u307e\u305f\u306f0\u306e\u6570\u3092\u30b9\u30ad\u30c3\u30d7: {num}\")\n...     \n...     print(f\"[DEBUG] \u95a2\u6570\u7d42\u4e86: \u7d50\u679c = {result}\")\n...     return result\n\n&gt;&gt;&gt; # \u30c7\u30d0\u30c3\u30b0\u5b9f\u884c\n&gt;&gt;&gt; test_numbers = [-2, 3, 0, 5, -1, 7]\n&gt;&gt;&gt; debug_result = debug_example_function(test_numbers)\n\n[DEBUG] \u95a2\u6570\u958b\u59cb: \u5165\u529b = [-2, 3, 0, 5, -1, 7]\n[DEBUG] \u30eb\u30fc\u30d7 0: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = -2\n[DEBUG] \u8ca0\u307e\u305f\u306f0\u306e\u6570\u3092\u30b9\u30ad\u30c3\u30d7: -2\n[DEBUG] \u30eb\u30fc\u30d7 1: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = 3\n[DEBUG] \u6b63\u306e\u6570 3 \u306e2\u4e57 = 9\n[DEBUG] \u30eb\u30fc\u30d7 2: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = 0\n[DEBUG] \u8ca0\u307e\u305f\u306f0\u306e\u6570\u3092\u30b9\u30ad\u30c3\u30d7: 0\n[DEBUG] \u30eb\u30fc\u30d7 3: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = 5\n[DEBUG] \u6b63\u306e\u6570 5 \u306e2\u4e57 = 25\n[DEBUG] \u30eb\u30fc\u30d7 4: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = -1\n[DEBUG] \u8ca0\u307e\u305f\u306f0\u306e\u6570\u3092\u30b9\u30ad\u30c3\u30d7: -1\n[DEBUG] \u30eb\u30fc\u30d7 5: \u51e6\u7406\u4e2d\u306e\u6570\u5024 = 7\n[DEBUG] \u6b63\u306e\u6570 7 \u306e2\u4e57 = 49\n[DEBUG] \u95a2\u6570\u7d42\u4e86: \u7d50\u679c = [9, 25, 49]\n</code></pre>"},{"location":"chapter18/#_7","title":"\u30ed\u30b0\u3092\u4f7f\u3063\u305f\u9ad8\u5ea6\u306a\u30c7\u30d0\u30c3\u30b0","text":"<pre><code>&gt;&gt;&gt; import logging\n&gt;&gt;&gt; from datetime import datetime\n\n&gt;&gt;&gt; # \u30ed\u30b0\u8a2d\u5b9a\n&gt;&gt;&gt; logging.basicConfig(\n...     level=logging.DEBUG,\n...     format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n...     handlers=[\n...         logging.StreamHandler(),\n...         logging.FileHandler('debug.log', encoding='utf-8')\n...     ]\n... )\n\n&gt;&gt;&gt; class DebuggableCalculator:\n...     \"\"\"\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u4ed8\u304d\u8a08\u7b97\u6a5f\"\"\"\n...     \n...     def __init__(self):\n...         self.logger = logging.getLogger(self.__class__.__name__)\n...         self.operation_count = 0\n...         self.logger.info(\"\u8a08\u7b97\u6a5f\u3092\u521d\u671f\u5316\u3057\u307e\u3057\u305f\")\n...     \n...     def add(self, a, b):\n...         \"\"\"\u52a0\u7b97\"\"\"\n...         self.operation_count += 1\n...         self.logger.debug(f\"\u52a0\u7b97\u64cd\u4f5c\u958b\u59cb: {a} + {b}\")\n...         \n...         try:\n...             result = a + b\n...             self.logger.info(f\"\u52a0\u7b97\u6210\u529f: {a} + {b} = {result}\")\n...             return result\n...         except Exception as e:\n...             self.logger.error(f\"\u52a0\u7b97\u30a8\u30e9\u30fc: {a} + {b}, \u30a8\u30e9\u30fc: {e}\")\n...             raise\n...     \n...     def divide(self, a, b):\n...         \"\"\"\u9664\u7b97\"\"\"\n...         self.operation_count += 1\n...         self.logger.debug(f\"\u9664\u7b97\u64cd\u4f5c\u958b\u59cb: {a} / {b}\")\n...         \n...         if b == 0:\n...             self.logger.warning(f\"\u30bc\u30ed\u9664\u7b97\u306e\u8a66\u884c: {a} / {b}\")\n...             raise ValueError(\"\u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\")\n...         \n...         try:\n...             result = a / b\n...             self.logger.info(f\"\u9664\u7b97\u6210\u529f: {a} / {b} = {result}\")\n...             return result\n...         except Exception as e:\n...             self.logger.error(f\"\u9664\u7b97\u30a8\u30e9\u30fc: {a} / {b}, \u30a8\u30e9\u30fc: {e}\")\n...             raise\n...     \n...     def complex_calculation(self, numbers):\n...         \"\"\"\u8907\u96d1\u306a\u8a08\u7b97\u306e\u30c7\u30d0\u30c3\u30b0\u4f8b\"\"\"\n...         self.logger.info(f\"\u8907\u96d1\u306a\u8a08\u7b97\u958b\u59cb: {len(numbers)}\u500b\u306e\u6570\u5024\")\n...         \n...         total = 0\n...         valid_numbers = []\n...         \n...         for i, num in enumerate(numbers):\n...             self.logger.debug(f\"\u6570\u5024 {i}: {num} \u3092\u51e6\u7406\u4e2d\")\n...             \n...             if isinstance(num, (int, float)):\n...                 if num &gt; 0:\n...                     valid_numbers.append(num)\n...                     total += num\n...                     self.logger.debug(f\"\u6709\u52b9\u306a\u6570\u5024\u3092\u8ffd\u52a0: {num}, \u73fe\u5728\u306e\u5408\u8a08: {total}\")\n...                 else:\n...                     self.logger.warning(f\"\u8ca0\u307e\u305f\u306f0\u306e\u6570\u5024\u3092\u30b9\u30ad\u30c3\u30d7: {num}\")\n...             else:\n...                 self.logger.error(f\"\u7121\u52b9\u306a\u30c7\u30fc\u30bf\u578b: {num} (\u578b: {type(num)})\")\n...         \n...         if not valid_numbers:\n...             self.logger.error(\"\u6709\u52b9\u306a\u6570\u5024\u304c\u3042\u308a\u307e\u305b\u3093\")\n...             raise ValueError(\"\u8a08\u7b97\u53ef\u80fd\u306a\u6570\u5024\u304c\u3042\u308a\u307e\u305b\u3093\")\n...         \n...         average = total / len(valid_numbers)\n...         self.logger.info(f\"\u8a08\u7b97\u5b8c\u4e86: \u5408\u8a08={total}, \u5e73\u5747={average:.2f}, \u6709\u52b9\u6570\u5024\u6570={len(valid_numbers)}\")\n...         \n...         return {\n...             'total': total,\n...             'average': average,\n...             'count': len(valid_numbers),\n...             'valid_numbers': valid_numbers\n...         }\n...     \n...     def get_stats(self):\n...         \"\"\"\u7d71\u8a08\u60c5\u5831\u3092\u53d6\u5f97\"\"\"\n...         self.logger.debug(\"\u7d71\u8a08\u60c5\u5831\u306e\u53d6\u5f97\")\n...         return {\n...             'operation_count': self.operation_count,\n...             'timestamp': datetime.now().isoformat()\n...         }\n\n&gt;&gt;&gt; # \u30c7\u30d0\u30c3\u30b0\u4ed8\u304d\u8a08\u7b97\u6a5f\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_debuggable_calculator():\n...     \"\"\"\u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u4ed8\u304d\u8a08\u7b97\u6a5f\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u4ed8\u304d\u8a08\u7b97\u6a5f\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     calc = DebuggableCalculator()\n...     \n...     # \u6b63\u5e38\u306a\u8a08\u7b97\n...     result1 = calc.add(10, 5)\n...     print(f\"\u52a0\u7b97\u7d50\u679c: {result1}\")\n...     \n...     result2 = calc.divide(20, 4)\n...     print(f\"\u9664\u7b97\u7d50\u679c: {result2}\")\n...     \n...     # \u30a8\u30e9\u30fc\u30b1\u30fc\u30b9\n...     try:\n...         result3 = calc.divide(10, 0)\n...     except ValueError as e:\n...         print(f\"\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1: {e}\")\n...     \n...     # \u8907\u96d1\u306a\u8a08\u7b97\n...     test_data = [1, 2.5, -1, 0, \"invalid\", 3, 4.7, None, 5]\n...     try:\n...         complex_result = calc.complex_calculation(test_data)\n...         print(f\"\u8907\u96d1\u306a\u8a08\u7b97\u7d50\u679c: {complex_result}\")\n...     except ValueError as e:\n...         print(f\"\u8a08\u7b97\u30a8\u30e9\u30fc: {e}\")\n...     \n...     # \u7d71\u8a08\u60c5\u5831\n...     stats = calc.get_stats()\n...     print(f\"\u7d71\u8a08\u60c5\u5831: {stats}\")\n\n&gt;&gt;&gt; # \u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u8abf\u6574\u3057\u3066\u30c6\u30b9\u30c8\u5b9f\u884c\n&gt;&gt;&gt; test_debuggable_calculator()\n\n=== \u30c7\u30d0\u30c3\u30b0\u6a5f\u80fd\u4ed8\u304d\u8a08\u7b97\u6a5f\u306e\u30c6\u30b9\u30c8 ===\n\u52a0\u7b97\u7d50\u679c: 15\n\u9664\u7b97\u7d50\u679c: 5.0\n\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc\u3092\u30ad\u30e3\u30c3\u30c1: \u30bc\u30ed\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\n\u8907\u96d1\u306a\u8a08\u7b97\u7d50\u679c: {'total': 16.2, 'average': 3.24, 'count': 5, 'valid_numbers': [1, 2.5, 3, 4.7, 5]}\n\u7d71\u8a08\u60c5\u5831: {'operation_count': 4, 'timestamp': '2024-12-19T11:30:00.123456'}\n</code></pre>"},{"location":"chapter18/#_8","title":"\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u3068\u54c1\u8cea\u6e2c\u5b9a","text":""},{"location":"chapter18/#_9","title":"\u30ab\u30d0\u30ec\u30c3\u30b8\u6e2c\u5b9a\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3","text":"<pre><code>&gt;&gt;&gt; class CoverageSimulator:\n...     \"\"\"\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30bf\u30fc\"\"\"\n...     \n...     def __init__(self):\n...         self.executed_lines = set()\n...         self.total_lines = set()\n...     \n...     def mark_line_executed(self, line_number):\n...         \"\"\"\u5b9f\u884c\u3055\u308c\u305f\u884c\u3092\u30de\u30fc\u30af\"\"\"\n...         self.executed_lines.add(line_number)\n...         self.total_lines.add(line_number)\n...     \n...     def mark_line_exists(self, line_number):\n...         \"\"\"\u5b58\u5728\u3059\u308b\u884c\u3092\u30de\u30fc\u30af\"\"\"\n...         self.total_lines.add(line_number)\n...     \n...     def get_coverage_report(self):\n...         \"\"\"\u30ab\u30d0\u30ec\u30c3\u30b8\u30ec\u30dd\u30fc\u30c8\u3092\u751f\u6210\"\"\"\n...         if not self.total_lines:\n...             return 0.0\n...         \n...         coverage_percentage = (len(self.executed_lines) / len(self.total_lines)) * 100\n...         \n...         report = {\n...             'total_lines': len(self.total_lines),\n...             'executed_lines': len(self.executed_lines),\n...             'coverage_percentage': coverage_percentage,\n...             'uncovered_lines': self.total_lines - self.executed_lines\n...         }\n...         \n...         return report\n\n&gt;&gt;&gt; def demonstrate_test_coverage():\n...     \"\"\"\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\"\"\"\n...     print(\"=== \u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u30c7\u30e2 ===\")\n...     \n...     coverage = CoverageSimulator()\n...     \n...     # \u67b6\u7a7a\u306e\u30b3\u30fc\u30c9\u306e\u884c\u756a\u53f7\u3092\u30de\u30fc\u30af\n...     code_lines = range(1, 21)  # 20\u884c\u306e\u30b3\u30fc\u30c9\n...     for line in code_lines:\n...         coverage.mark_line_exists(line)\n...     \n...     # \u30c6\u30b9\u30c8\u5b9f\u884c\u306b\u3088\u308b\u5b9f\u884c\u884c\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n...     executed_by_test1 = [1, 2, 3, 5, 6, 8, 10]\n...     executed_by_test2 = [1, 2, 4, 7, 9, 11, 12]\n...     executed_by_test3 = [13, 14, 15, 16]\n...     \n...     print(\"\u30c6\u30b9\u30c81\u5b9f\u884c\u5f8c:\")\n...     for line in executed_by_test1:\n...         coverage.mark_line_executed(line)\n...     report1 = coverage.get_coverage_report()\n...     print(f\"  \u30ab\u30d0\u30ec\u30c3\u30b8: {report1['coverage_percentage']:.1f}%\")\n...     \n...     print(\"\u30c6\u30b9\u30c82\u5b9f\u884c\u5f8c:\")\n...     for line in executed_by_test2:\n...         coverage.mark_line_executed(line)\n...     report2 = coverage.get_coverage_report()\n...     print(f\"  \u30ab\u30d0\u30ec\u30c3\u30b8: {report2['coverage_percentage']:.1f}%\")\n...     \n...     print(\"\u30c6\u30b9\u30c83\u5b9f\u884c\u5f8c:\")\n...     for line in executed_by_test3:\n...         coverage.mark_line_executed(line)\n...     final_report = coverage.get_coverage_report()\n...     \n...     print(f\"\\\\n\u6700\u7d42\u30ab\u30d0\u30ec\u30c3\u30b8\u30ec\u30dd\u30fc\u30c8:\")\n...     print(f\"  \u7dcf\u884c\u6570: {final_report['total_lines']}\")\n...     print(f\"  \u5b9f\u884c\u884c\u6570: {final_report['executed_lines']}\")\n...     print(f\"  \u30ab\u30d0\u30ec\u30c3\u30b8: {final_report['coverage_percentage']:.1f}%\")\n...     print(f\"  \u672a\u5b9f\u884c\u884c: {sorted(final_report['uncovered_lines'])}\")\n...     \n...     # \u30ab\u30d0\u30ec\u30c3\u30b8\u54c1\u8cea\u306e\u8a55\u4fa1\n...     coverage_percentage = final_report['coverage_percentage']\n...     if coverage_percentage &gt;= 90:\n...         quality = \"\u512a\u79c0\"\n...     elif coverage_percentage &gt;= 80:\n...         quality = \"\u826f\u597d\"\n...     elif coverage_percentage &gt;= 70:\n...         quality = \"\u666e\u901a\"\n...     else:\n...         quality = \"\u6539\u5584\u304c\u5fc5\u8981\"\n...     \n...     print(f\"  \u54c1\u8cea\u8a55\u4fa1: {quality}\")\n\n&gt;&gt;&gt; demonstrate_test_coverage()\n\n=== \u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u30c7\u30e2 ===\n\u30c6\u30b9\u30c81\u5b9f\u884c\u5f8c:\n  \u30ab\u30d0\u30ec\u30c3\u30b8: 35.0%\n\u30c6\u30b9\u30c82\u5b9f\u884c\u5f8c:\n  \u30ab\u30d0\u30ec\u30c3\u30b8: 60.0%\n\u30c6\u30b9\u30c83\u5b9f\u884c\u5f8c:\n  \u30ab\u30d0\u30ec\u30c3\u30b8: 80.0%\n\n\u6700\u7d42\u30ab\u30d0\u30ec\u30c3\u30b8\u30ec\u30dd\u30fc\u30c8:\n  \u7dcf\u884c\u6570: 20\n  \u5b9f\u884c\u884c\u6570: 16\n  \u30ab\u30d0\u30ec\u30c3\u30b8: 80.0%\n  \u672a\u5b9f\u884c\u884c: [17, 18, 19, 20]\n  \u54c1\u8cea\u8a55\u4fa1: \u826f\u597d\n</code></pre>"},{"location":"chapter18/#_10","title":"\u307e\u3068\u3081\uff1a\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter18/#_11","title":"\u30c6\u30b9\u30c8\u306e\u7a2e\u985e\u3068\u76ee\u7684","text":"<ol> <li>\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8: \u500b\u5225\u306e\u95a2\u6570\u30fb\u30af\u30e9\u30b9\u306e\u52d5\u4f5c\u78ba\u8a8d</li> <li>\u7d71\u5408\u30c6\u30b9\u30c8: \u8907\u6570\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u9023\u643a\u78ba\u8a8d</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8: \u6027\u80fd\u30fb\u901f\u5ea6\u306e\u78ba\u8a8d</li> <li>\u30e2\u30c3\u30af\u30c6\u30b9\u30c8: \u5916\u90e8\u4f9d\u5b58\u3092\u6392\u9664\u3057\u305f\u30c6\u30b9\u30c8</li> </ol>"},{"location":"chapter18/#_12","title":"\u30c6\u30b9\u30c8\u8a2d\u8a08\u306e\u539f\u5247","text":"<pre><code># AAA \u30d1\u30bf\u30fc\u30f3 (Arrange, Act, Assert)\ndef test_example():\n    # Arrange: \u30c6\u30b9\u30c8\u6e96\u5099\n    account = BankAccount(1000)\n\n    # Act: \u30c6\u30b9\u30c8\u5b9f\u884c\n    account.deposit(500)\n\n    # Assert: \u7d50\u679c\u78ba\u8a8d\n    assert account.get_balance() == 1500\n</code></pre>"},{"location":"chapter18/#unittest_1","title":"unittest\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u57fa\u672c","text":"<ul> <li>setUp/tearDown: \u30c6\u30b9\u30c8\u524d\u5f8c\u306e\u51e6\u7406</li> <li>assert \u30e1\u30bd\u30c3\u30c9: \u7d50\u679c\u306e\u691c\u8a3c</li> <li>\u4f8b\u5916\u30c6\u30b9\u30c8: \u671f\u5f85\u3059\u308b\u30a8\u30e9\u30fc\u306e\u78ba\u8a8d</li> <li>\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8: \u8907\u6570\u30c6\u30b9\u30c8\u306e\u7ba1\u7406</li> </ul>"},{"location":"chapter18/#_13","title":"\u30e2\u30c3\u30af\u3068\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb","text":"<pre><code># \u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f7f\u7528\nmock_service = Mock()\nmock_service.get_data.return_value = \"test_data\"\nmock_service.process.side_effect = Exception(\"test_error\")\n\n# \u547c\u3073\u51fa\u3057\u78ba\u8a8d\nmock_service.get_data.assert_called_once_with(\"param\")\n</code></pre>"},{"location":"chapter18/#_14","title":"\u30c7\u30d0\u30c3\u30b0\u6280\u8853","text":"<ol> <li>print\u6587\u30c7\u30d0\u30c3\u30b0: \u30b7\u30f3\u30d7\u30eb\u3067\u52b9\u679c\u7684</li> <li>\u30ed\u30b0\u30c7\u30d0\u30c3\u30b0: \u30ec\u30d9\u30eb\u5225\u306e\u8a73\u7d30\u306a\u60c5\u5831</li> <li>\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8: IDE\u3067\u306e\u5bfe\u8a71\u7684\u30c7\u30d0\u30c3\u30b0</li> <li>\u5358\u4f53\u30c6\u30b9\u30c8: \u554f\u984c\u306e\u5c40\u6240\u5316</li> </ol>"},{"location":"chapter18/#_15","title":"\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8","text":"<ul> <li>\u884c\u30ab\u30d0\u30ec\u30c3\u30b8: \u5b9f\u884c\u3055\u308c\u305f\u884c\u306e\u5272\u5408</li> <li>\u5206\u5c90\u30ab\u30d0\u30ec\u30c3\u30b8: \u6761\u4ef6\u5206\u5c90\u306e\u7db2\u7f85\u6027</li> <li>\u76ee\u6a19\u5024: 80%\u4ee5\u4e0a\u304c\u4e00\u822c\u7684\u306a\u76ee\u6a19</li> </ul>"},{"location":"chapter18/#_16","title":"\u54c1\u8cea\u4fdd\u8a3c\u306e\u30d7\u30ed\u30bb\u30b9","text":"<ol> <li>\u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\uff08TDD\uff09: \u30c6\u30b9\u30c8\u5148\u884c\u306e\u958b\u767a</li> <li>\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3: \u81ea\u52d5\u30c6\u30b9\u30c8\u5b9f\u884c</li> <li>\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc: \u30c1\u30fc\u30e0\u3067\u306e\u54c1\u8cea\u78ba\u8a8d</li> <li>\u56de\u5e30\u30c6\u30b9\u30c8: \u65e2\u5b58\u6a5f\u80fd\u306e\u4fdd\u8b77</li> </ol>"},{"location":"chapter18/#_17","title":"\u5b9f\u7528\u7684\u306a\u30c6\u30b9\u30c8\u6226\u7565","text":"<ul> <li>\u91cd\u8981\u306a\u6a5f\u80fd\u304b\u3089\u512a\u5148\u3057\u3066\u30c6\u30b9\u30c8</li> <li>\u30a8\u30c3\u30b8\u30b1\u30fc\u30b9\u3068\u7570\u5e38\u7cfb\u306e\u8003\u616e</li> <li>\u5916\u90e8\u4f9d\u5b58\u306f\u30e2\u30c3\u30af\u3067\u5206\u96e2</li> <li>\u30c6\u30b9\u30c8\u306f\u7c21\u6f54\u3067\u7406\u89e3\u3057\u3084\u3059\u304f</li> </ul> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001Python\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002datetime\u3001json\u3001re\u3001os\u3001collections\u306a\u3069\u3001\u5b9f\u969b\u306e\u958b\u767a\u3067\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u5f37\u529b\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6d3b\u7528\u65b9\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c18\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c18\u7ae0\u3067\u306f\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0\u306e\u6280\u8853\u3092\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002\u30c6\u30b9\u30c8\u306e\u91cd\u8981\u6027\u3001unittest\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u57fa\u672c\u304b\u3089\u9ad8\u5ea6\u306a\u6a5f\u80fd\u307e\u3067\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u9280\u884c\u30b7\u30b9\u30c6\u30e0\u3001E\u30b3\u30de\u30fc\u30b9\u30b7\u30b9\u30c6\u30e0\u306e\u5305\u62ec\u7684\u306a\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u69cb\u7bc9\u3002\u30e2\u30c3\u30af\u3068\u30c6\u30b9\u30c8\u30c0\u30d6\u30eb\u3092\u4f7f\u3063\u305f\u5916\u90e8\u4f9d\u5b58\u306e\u5206\u96e2\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30c6\u30b9\u30c8\u3001\u30c7\u30d0\u30c3\u30b0\u6280\u8853\u3001\u30c6\u30b9\u30c8\u30ab\u30d0\u30ec\u30c3\u30b8\u307e\u3067\u542b\u3080\u5b8c\u5168\u306a\u30c6\u30b9\u30c8\u4f53\u7cfb\u3092\u5b9f\u88c5\u3002\u6b21\u306f\u7b2c19\u7ae0\u306ePython\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter19/","title":"\u7b2c19\u7ae0\uff1aPython\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5b9d\u5eab","text":"<p>Python\u306b\u306f\u300c\u30d0\u30c3\u30c6\u30ea\u30fc\u540c\u68b1\u300d\u3068\u3044\u3046\u54f2\u5b66\u304c\u3042\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u3088\u304f\u4f7f\u308f\u308c\u308b\u6a5f\u80fd\u306e\u591a\u304f\u304c\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u6700\u521d\u304b\u3089\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Python\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e3b\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5b66\u3073\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u3001\u65e5\u6642\u64cd\u4f5c\u3001JSON\u51e6\u7406\u3001\u6b63\u898f\u8868\u73fe\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u306a\u3069\u3092\u4f7f\u3063\u305f\u5b9f\u7528\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u52b9\u7387\u7684\u306a\u958b\u767a\u624b\u6cd5\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter19/#-datetime","title":"\u65e5\u6642\u51e6\u7406 - datetime\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"chapter19/#_1","title":"\u57fa\u672c\u7684\u306a\u65e5\u6642\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; from datetime import datetime, date, time, timedelta\n&gt;&gt;&gt; import calendar\n\n&gt;&gt;&gt; def demonstrate_datetime_basics():\n...     \"\"\"\u65e5\u6642\u51e6\u7406\u306e\u57fa\u672c\u7684\u306a\u64cd\u4f5c\"\"\"\n...     print(\"=== \u65e5\u6642\u51e6\u7406\u306e\u57fa\u672c ===\")\n...     \n...     # \u73fe\u5728\u306e\u65e5\u6642\u53d6\u5f97\n...     now = datetime.now()\n...     today = date.today()\n...     \n...     print(f\"\u73fe\u5728\u65e5\u6642: {now}\")\n...     print(f\"\u4eca\u65e5\u306e\u65e5\u4ed8: {today}\")\n...     print(f\"\u73fe\u5728\u6642\u523b: {now.time()}\")\n...     \n...     # \u7279\u5b9a\u306e\u65e5\u6642\u3092\u4f5c\u6210\n...     birthday = datetime(1990, 5, 15, 14, 30, 0)\n...     print(f\"\u6307\u5b9a\u3057\u305f\u65e5\u6642: {birthday}\")\n...     \n...     # \u65e5\u6642\u306e\u5404\u8981\u7d20\u3092\u53d6\u5f97\n...     print(f\"\u5e74: {now.year}\")\n...     print(f\"\u6708: {now.month}\")\n...     print(f\"\u65e5: {now.day}\")\n...     print(f\"\u66dc\u65e5\u756a\u53f7: {now.weekday()} (\u6708\u66dc\u65e5=0)\")\n...     print(f\"\u66dc\u65e5\u540d: {calendar.day_name[now.weekday()]}\")\n...     \n...     # \u6587\u5b57\u5217\u3068\u306e\u5909\u63db\n...     date_string = now.strftime(\"%Y\u5e74%m\u6708%d\u65e5 %H\u6642%M\u5206%S\u79d2\")\n...     print(f\"\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u65e5\u6642: {date_string}\")\n...     \n...     # \u6587\u5b57\u5217\u304b\u3089\u65e5\u6642\u3078\u306e\u5909\u63db\n...     parsed_date = datetime.strptime(\"2024-01-15 09:30:00\", \"%Y-%m-%d %H:%M:%S\")\n...     print(f\"\u6587\u5b57\u5217\u304b\u3089\u5909\u63db: {parsed_date}\")\n\n&gt;&gt;&gt; demonstrate_datetime_basics()\n\n=== \u65e5\u6642\u51e6\u7406\u306e\u57fa\u672c ===\n\u73fe\u5728\u65e5\u6642: 2024-12-19 11:35:00.123456\n\u4eca\u65e5\u306e\u65e5\u4ed8: 2024-12-19\n\u73fe\u5728\u6642\u523b: 11:35:00.123456\n\u6307\u5b9a\u3057\u305f\u65e5\u6642: 1990-05-15 14:30:00\n\u5e74: 2024\n\u6708: 12\n\u65e5: 19\n\u66dc\u65e5\u756a\u53f7: 3 (\u6708\u66dc\u65e5=0)\n\u66dc\u65e5\u540d: Thursday\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\u65e5\u6642: 2024\u5e7412\u670819\u65e5 11\u664235\u520600\u79d2\n\u6587\u5b57\u5217\u304b\u3089\u5909\u63db: 2024-01-15 09:30:00\n</code></pre>"},{"location":"chapter19/#_2","title":"\u3010\u5b9f\u884c\u3011\u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308d\u3046","text":"<pre><code>&gt;&gt;&gt; class AttendanceManager:\n...     \"\"\"\u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self):\n...         self.attendance_records = {}\n...         self.holidays = set()\n...         self.work_hours = {'start': time(9, 0), 'end': time(18, 0)}\n...     \n...     def add_holiday(self, holiday_date):\n...         \"\"\"\u795d\u65e5\u3092\u8ffd\u52a0\"\"\"\n...         if isinstance(holiday_date, str):\n...             holiday_date = datetime.strptime(holiday_date, \"%Y-%m-%d\").date()\n...         self.holidays.add(holiday_date)\n...     \n...     def clock_in(self, employee_id, timestamp=None):\n...         \"\"\"\u51fa\u52e4\u8a18\u9332\"\"\"\n...         if timestamp is None:\n...             timestamp = datetime.now()\n...         \n...         date_key = timestamp.date()\n...         if employee_id not in self.attendance_records:\n...             self.attendance_records[employee_id] = {}\n...         \n...         if date_key in self.attendance_records[employee_id]:\n...             return False, \"\u65e2\u306b\u51fa\u52e4\u8a18\u9332\u304c\u3042\u308a\u307e\u3059\"\n...         \n...         self.attendance_records[employee_id][date_key] = {\n...             'clock_in': timestamp,\n...             'clock_out': None,\n...             'break_start': None,\n...             'break_end': None,\n...             'notes': []\n...         }\n...         \n...         # \u9045\u523b\u30c1\u30a7\u30c3\u30af\n...         standard_start = datetime.combine(date_key, self.work_hours['start'])\n...         is_late = timestamp &gt; standard_start\n...         \n...         if is_late:\n...             late_minutes = int((timestamp - standard_start).total_seconds() / 60)\n...             self.attendance_records[employee_id][date_key]['notes'].append(f\"\u9045\u523b: {late_minutes}\u5206\")\n...         \n...         return True, f\"\u51fa\u52e4\u8a18\u9332\u5b8c\u4e86 ({timestamp.strftime('%H:%M')})\"\n...     \n...     def clock_out(self, employee_id, timestamp=None):\n...         \"\"\"\u9000\u52e4\u8a18\u9332\"\"\"\n...         if timestamp is None:\n...             timestamp = datetime.now()\n...         \n...         date_key = timestamp.date()\n...         if (employee_id not in self.attendance_records or \n...             date_key not in self.attendance_records[employee_id]):\n...             return False, \"\u51fa\u52e4\u8a18\u9332\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         \n...         record = self.attendance_records[employee_id][date_key]\n...         if record['clock_out'] is not None:\n...             return False, \"\u65e2\u306b\u9000\u52e4\u8a18\u9332\u304c\u3042\u308a\u307e\u3059\"\n...         \n...         record['clock_out'] = timestamp\n...         \n...         # \u65e9\u9000\u30c1\u30a7\u30c3\u30af\n...         standard_end = datetime.combine(date_key, self.work_hours['end'])\n...         if timestamp &lt; standard_end:\n...             early_minutes = int((standard_end - timestamp).total_seconds() / 60)\n...             record['notes'].append(f\"\u65e9\u9000: {early_minutes}\u5206\")\n...         \n...         return True, f\"\u9000\u52e4\u8a18\u9332\u5b8c\u4e86 ({timestamp.strftime('%H:%M')})\"\n...     \n...     def take_break(self, employee_id, timestamp=None):\n...         \"\"\"\u4f11\u61a9\u958b\u59cb\u8a18\u9332\"\"\"\n...         if timestamp is None:\n...             timestamp = datetime.now()\n...         \n...         date_key = timestamp.date()\n...         if (employee_id not in self.attendance_records or \n...             date_key not in self.attendance_records[employee_id]):\n...             return False, \"\u51fa\u52e4\u8a18\u9332\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         \n...         record = self.attendance_records[employee_id][date_key]\n...         if record['break_start'] is not None:\n...             return False, \"\u65e2\u306b\u4f11\u61a9\u4e2d\u3067\u3059\"\n...         \n...         record['break_start'] = timestamp\n...         return True, f\"\u4f11\u61a9\u958b\u59cb ({timestamp.strftime('%H:%M')})\"\n...     \n...     def end_break(self, employee_id, timestamp=None):\n...         \"\"\"\u4f11\u61a9\u7d42\u4e86\u8a18\u9332\"\"\"\n...         if timestamp is None:\n...             timestamp = datetime.now()\n...         \n...         date_key = timestamp.date()\n...         record = self.attendance_records[employee_id][date_key]\n...         \n...         if record['break_start'] is None:\n...             return False, \"\u4f11\u61a9\u8a18\u9332\u304c\u3042\u308a\u307e\u305b\u3093\"\n...         if record['break_end'] is not None:\n...             return False, \"\u65e2\u306b\u4f11\u61a9\u7d42\u4e86\u6e08\u307f\u3067\u3059\"\n...         \n...         record['break_end'] = timestamp\n...         return True, f\"\u4f11\u61a9\u7d42\u4e86 ({timestamp.strftime('%H:%M')})\"\n...     \n...     def calculate_work_hours(self, employee_id, target_date):\n...         \"\"\"\u52e4\u52d9\u6642\u9593\u8a08\u7b97\"\"\"\n...         if isinstance(target_date, str):\n...             target_date = datetime.strptime(target_date, \"%Y-%m-%d\").date()\n...         \n...         if (employee_id not in self.attendance_records or \n...             target_date not in self.attendance_records[employee_id]):\n...             return None\n...         \n...         record = self.attendance_records[employee_id][target_date]\n...         \n...         if record['clock_in'] is None or record['clock_out'] is None:\n...             return None\n...         \n...         # \u7dcf\u52e4\u52d9\u6642\u9593\n...         total_time = record['clock_out'] - record['clock_in']\n...         \n...         # \u4f11\u61a9\u6642\u9593\u3092\u5dee\u3057\u5f15\u304d\n...         if record['break_start'] and record['break_end']:\n...             break_time = record['break_end'] - record['break_start']\n...             total_time -= break_time\n...         \n...         hours = total_time.total_seconds() / 3600\n...         return round(hours, 2)\n...     \n...     def generate_monthly_report(self, employee_id, year, month):\n...         \"\"\"\u6708\u6b21\u52e4\u6020\u30ec\u30dd\u30fc\u30c8\"\"\"\n...         # \u5bfe\u8c61\u6708\u306e\u65e5\u4ed8\u7bc4\u56f2\u3092\u53d6\u5f97\n...         start_date = date(year, month, 1)\n...         if month == 12:\n...             end_date = date(year + 1, 1, 1) - timedelta(days=1)\n...         else:\n...             end_date = date(year, month + 1, 1) - timedelta(days=1)\n...         \n...         report = {\n...             'employee_id': employee_id,\n...             'year': year,\n...             'month': month,\n...             'work_days': 0,\n...             'total_hours': 0,\n...             'late_count': 0,\n...             'early_leave_count': 0,\n...             'daily_records': []\n...         }\n...         \n...         current_date = start_date\n...         while current_date &lt;= end_date:\n...             # \u571f\u65e5\u795d\u65e5\u3092\u30b9\u30ad\u30c3\u30d7\n...             if (current_date.weekday() &gt;= 5 or  # \u571f\u65e5\n...                 current_date in self.holidays):  # \u795d\u65e5\n...                 current_date += timedelta(days=1)\n...                 continue\n...             \n...             daily_record = {\n...                 'date': current_date,\n...                 'work_hours': 0,\n...                 'status': '\u6b20\u52e4',\n...                 'notes': []\n...             }\n...             \n...             if (employee_id in self.attendance_records and \n...                 current_date in self.attendance_records[employee_id]):\n...                 \n...                 record = self.attendance_records[employee_id][current_date]\n...                 work_hours = self.calculate_work_hours(employee_id, current_date)\n...                 \n...                 if work_hours is not None:\n...                     daily_record['work_hours'] = work_hours\n...                     daily_record['status'] = '\u51fa\u52e4'\n...                     report['work_days'] += 1\n...                     report['total_hours'] += work_hours\n...                 \n...                 daily_record['notes'] = record.get('notes', [])\n...                 \n...                 # \u9045\u523b\u30fb\u65e9\u9000\u30ab\u30a6\u30f3\u30c8\n...                 for note in daily_record['notes']:\n...                     if '\u9045\u523b' in note:\n...                         report['late_count'] += 1\n...                     elif '\u65e9\u9000' in note:\n...                         report['early_leave_count'] += 1\n...             \n...             report['daily_records'].append(daily_record)\n...             current_date += timedelta(days=1)\n...         \n...         return report\n...     \n...     def get_attendance_summary(self, employee_id):\n...         \"\"\"\u52e4\u6020\u30b5\u30de\u30ea\u30fc\u3092\u53d6\u5f97\"\"\"\n...         if employee_id not in self.attendance_records:\n...             return None\n...         \n...         total_days = 0\n...         total_hours = 0\n...         late_days = 0\n...         \n...         for date_key, record in self.attendance_records[employee_id].items():\n...             if record['clock_in'] and record['clock_out']:\n...                 total_days += 1\n...                 work_hours = self.calculate_work_hours(employee_id, date_key)\n...                 if work_hours:\n...                     total_hours += work_hours\n...                 \n...                 for note in record.get('notes', []):\n...                     if '\u9045\u523b' in note:\n...                         late_days += 1\n...                         break\n...         \n...         return {\n...             'total_work_days': total_days,\n...             'total_work_hours': round(total_hours, 2),\n...             'average_hours_per_day': round(total_hours / total_days, 2) if total_days &gt; 0 else 0,\n...             'late_days': late_days,\n...             'punctuality_rate': round((total_days - late_days) / total_days * 100, 1) if total_days &gt; 0 else 100\n...         }\n\n&gt;&gt;&gt; # \u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_attendance_system():\n...     \"\"\"\u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     # \u30b7\u30b9\u30c6\u30e0\u521d\u671f\u5316\n...     attendance = AttendanceManager()\n...     \n...     # \u795d\u65e5\u306e\u8a2d\u5b9a\n...     attendance.add_holiday(\"2024-01-01\")  # \u5143\u65e5\n...     attendance.add_holiday(\"2024-01-08\")  # \u6210\u4eba\u306e\u65e5\n...     \n...     # \u5f93\u696d\u54e1\u306e\u52e4\u6020\u8a18\u9332\uff08\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\n...     employee_id = \"EMP001\"\n...     \n...     # 1\u9031\u9593\u5206\u306e\u52e4\u6020\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\n...     base_date = datetime(2024, 1, 15)  # \u6708\u66dc\u65e5\n...     \n...     for day_offset in range(5):  # \u5e73\u65e55\u65e5\u5206\n...         work_date = base_date + timedelta(days=day_offset)\n...         \n...         # \u51fa\u52e4\u6642\u523b\uff08\u305f\u307e\u306b\u9045\u523b\uff09\n...         if day_offset == 2:  # \u6c34\u66dc\u65e5\u306f\u9045\u523b\n...             clock_in_time = work_date.replace(hour=9, minute=15)\n...         else:\n...             clock_in_time = work_date.replace(hour=8, minute=55)\n...         \n...         # \u9000\u52e4\u6642\u523b\n...         clock_out_time = work_date.replace(hour=18, minute=10)\n...         \n...         # \u4f11\u61a9\u6642\u523b\n...         break_start = work_date.replace(hour=12, minute=0)\n...         break_end = work_date.replace(hour=13, minute=0)\n...         \n...         # \u8a18\u9332\n...         attendance.clock_in(employee_id, clock_in_time)\n...         attendance.take_break(employee_id, break_start)\n...         attendance.end_break(employee_id, break_end)\n...         attendance.clock_out(employee_id, clock_out_time)\n...     \n...     print(\"1\u9031\u9593\u306e\u52e4\u6020\u30c7\u30fc\u30bf\u3092\u8a18\u9332\u3057\u307e\u3057\u305f\")\n...     \n...     # \u5404\u65e5\u306e\u52e4\u52d9\u6642\u9593\u3092\u8868\u793a\n...     print(\"\\\\n=== \u65e5\u5225\u52e4\u52d9\u6642\u9593 ===\")\n...     for day_offset in range(5):\n...         work_date = base_date + timedelta(days=day_offset)\n...         work_hours = attendance.calculate_work_hours(employee_id, work_date.date())\n...         day_name = calendar.day_name[work_date.weekday()]\n...         print(f\"{work_date.strftime('%Y-%m-%d')} ({day_name}): {work_hours}\u6642\u9593\")\n...     \n...     # \u6708\u6b21\u30ec\u30dd\u30fc\u30c8\u751f\u6210\n...     monthly_report = attendance.generate_monthly_report(employee_id, 2024, 1)\n...     \n...     print(f\"\\\\n=== \u6708\u6b21\u30ec\u30dd\u30fc\u30c8 (2024\u5e741\u6708) ===\")\n...     print(f\"\u51fa\u52e4\u65e5\u6570: {monthly_report['work_days']}\u65e5\")\n...     print(f\"\u7dcf\u52e4\u52d9\u6642\u9593: {monthly_report['total_hours']}\u6642\u9593\")\n...     print(f\"\u5e73\u5747\u52e4\u52d9\u6642\u9593: {monthly_report['total_hours'] / monthly_report['work_days']:.2f}\u6642\u9593/\u65e5\")\n...     print(f\"\u9045\u523b\u56de\u6570: {monthly_report['late_count']}\u56de\")\n...     print(f\"\u65e9\u9000\u56de\u6570: {monthly_report['early_leave_count']}\u56de\")\n...     \n...     # \u52e4\u6020\u30b5\u30de\u30ea\u30fc\n...     summary = attendance.get_attendance_summary(employee_id)\n...     print(f\"\\\\n=== \u52e4\u6020\u30b5\u30de\u30ea\u30fc ===\")\n...     for key, value in summary.items():\n...         print(f\"{key}: {value}\")\n\n&gt;&gt;&gt; test_attendance_system()\n\n=== \u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\n1\u9031\u9593\u306e\u52e4\u6020\u30c7\u30fc\u30bf\u3092\u8a18\u9332\u3057\u307e\u3057\u305f\n\n=== \u65e5\u5225\u52e4\u52d9\u6642\u9593 ===\n2024-01-15 (Monday): 8.25\u6642\u9593\n2024-01-16 (Tuesday): 8.25\u6642\u9593\n2024-01-17 (Wednesday): 8.0\u6642\u9593\n2024-01-18 (Thursday): 8.25\u6642\u9593\n2024-01-19 (Friday): 8.25\u6642\u9593\n\n=== \u6708\u6b21\u30ec\u30dd\u30fc\u30c8 (2024\u5e741\u6708) ===\n\u51fa\u52e4\u65e5\u6570: 5\u65e5\n\u7dcf\u52e4\u52d9\u6642\u9593: 41.0\u6642\u9593\n\u5e73\u5747\u52e4\u52d9\u6642\u9593: 8.20\u6642\u9593/\u65e5\n\u9045\u523b\u56de\u6570: 1\u56de\n\u65e9\u9000\u56de\u6570: 0\u56de\n\n=== \u52e4\u6020\u30b5\u30de\u30ea\u30fc ===\ntotal_work_days: 5\ntotal_work_hours: 41.0\naverage_hours_per_day: 8.2\nlate_days: 1\npunctuality_rate: 80.0\n</code></pre>"},{"location":"chapter19/#-ospathlib","title":"\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c - os/pathlib\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"chapter19/#_3","title":"\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; import shutil\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; import glob\n\n&gt;&gt;&gt; class FileSystemManager:\n...     \"\"\"\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u30af\u30e9\u30b9\"\"\"\n...     \n...     def __init__(self, base_directory=\"./file_operations\"):\n...         self.base_dir = Path(base_directory)\n...         self.ensure_base_directory()\n...     \n...     def ensure_base_directory(self):\n...         \"\"\"\u30d9\u30fc\u30b9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u78ba\u4fdd\"\"\"\n...         self.base_dir.mkdir(exist_ok=True)\n...     \n...     def create_directory_structure(self):\n...         \"\"\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306e\u4f5c\u6210\"\"\"\n...         directories = [\n...             \"documents/reports\",\n...             \"documents/presentations\", \n...             \"images/photos\",\n...             \"images/graphics\",\n...             \"data/csv\",\n...             \"data/json\",\n...             \"backup\"\n...         ]\n...         \n...         for dir_path in directories:\n...             full_path = self.base_dir / dir_path\n...             full_path.mkdir(parents=True, exist_ok=True)\n...         \n...         print(f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f: {self.base_dir}\")\n...     \n...     def create_sample_files(self):\n...         \"\"\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\"\"\"\n...         sample_files = {\n...             \"documents/reports/quarterly_report.txt\": \"\u56db\u534a\u671f\u30ec\u30dd\u30fc\u30c8\u306e\u5185\u5bb9\\\\n\u58f2\u4e0a: 1000\u4e07\u5186\\\\n\u5229\u76ca: 200\u4e07\u5186\",\n...             \"documents/reports/annual_summary.txt\": \"\u5e74\u6b21\u30b5\u30de\u30ea\u30fc\\\\n\u7dcf\u58f2\u4e0a: 4000\u4e07\u5186\\\\n\u6210\u9577\u7387: 15%\",\n...             \"documents/presentations/product_demo.txt\": \"\u88fd\u54c1\u30c7\u30e2\u8cc7\u6599\\\\n\u65b0\u6a5f\u80fd\u306e\u7d39\u4ecb\\\\n\u30e6\u30fc\u30b6\u30fc\u4f53\u9a13\u306e\u5411\u4e0a\",\n...             \"data/csv/sales_data.csv\": \"\u65e5\u4ed8,\u58f2\u4e0a,\u5546\u54c1\\\\n2024-01-01,10000,\u5546\u54c1A\\\\n2024-01-02,15000,\u5546\u54c1B\",\n...             \"data/json/config.json\": '{\"database\": \"mysql\", \"host\": \"localhost\", \"port\": 3306}',\n...             \"images/photos/vacation.jpg\": \"\u753b\u50cf\u30c7\u30fc\u30bf\uff08\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\",\n...             \"README.md\": \"# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8aac\u660e\\\\n\\\\n\u3053\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f...\\\\n\\\\n## \u4f7f\u3044\u65b9\\\\n\\\\n1. \u8a2d\u5b9a\\\\n2. \u5b9f\u884c\"\n...         }\n...         \n...         for file_path, content in sample_files.items():\n...             full_path = self.base_dir / file_path\n...             full_path.write_text(content, encoding='utf-8')\n...         \n...         print(f\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f: {len(sample_files)}\u500b\")\n...     \n...     def list_directory_contents(self, directory=None, recursive=False):\n...         \"\"\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u5bb9\u306e\u4e00\u89a7\u8868\u793a\"\"\"\n...         if directory is None:\n...             directory = self.base_dir\n...         else:\n...             directory = self.base_dir / directory\n...         \n...         if not directory.exists():\n...             return f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u5b58\u5728\u3057\u307e\u305b\u3093: {directory}\"\n...         \n...         contents = []\n...         \n...         if recursive:\n...             # \u518d\u5e30\u7684\u306b\u5168\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\n...             for item in directory.rglob(\"*\"):\n...                 if item.is_file():\n...                     relative_path = item.relative_to(self.base_dir)\n...                     file_size = item.stat().st_size\n...                     contents.append({\n...                         'path': str(relative_path),\n...                         'size': file_size,\n...                         'type': 'file'\n...                     })\n...                 elif item.is_dir() and item != directory:\n...                     relative_path = item.relative_to(self.base_dir)\n...                     contents.append({\n...                         'path': str(relative_path),\n...                         'type': 'directory'\n...                     })\n...         else:\n...             # \u76f4\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u307f\n...             for item in directory.iterdir():\n...                 relative_path = item.relative_to(self.base_dir)\n...                 if item.is_file():\n...                     file_size = item.stat().st_size\n...                     contents.append({\n...                         'path': str(relative_path),\n...                         'size': file_size,\n...                         'type': 'file'\n...                     })\n...                 else:\n...                     contents.append({\n...                         'path': str(relative_path),\n...                         'type': 'directory'\n...                     })\n...         \n...         return contents\n...     \n...     def find_files_by_pattern(self, pattern):\n...         \"\"\"\u30d1\u30bf\u30fc\u30f3\u306b\u3088\u308b\u30d5\u30a1\u30a4\u30eb\u691c\u7d22\"\"\"\n...         matches = []\n...         for file_path in self.base_dir.rglob(pattern):\n...             if file_path.is_file():\n...                 relative_path = file_path.relative_to(self.base_dir)\n...                 matches.append({\n...                     'path': str(relative_path),\n...                     'size': file_path.stat().st_size,\n...                     'modified': datetime.fromtimestamp(file_path.stat().st_mtime)\n...                 })\n...         return matches\n...     \n...     def get_file_info(self, file_path):\n...         \"\"\"\u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\"\"\"\n...         full_path = self.base_dir / file_path\n...         if not full_path.exists():\n...             return None\n...         \n...         stat_info = full_path.stat()\n...         \n...         return {\n...             'path': str(file_path),\n...             'size': stat_info.st_size,\n...             'created': datetime.fromtimestamp(stat_info.st_ctime),\n...             'modified': datetime.fromtimestamp(stat_info.st_mtime),\n...             'is_file': full_path.is_file(),\n...             'is_directory': full_path.is_dir(),\n...             'extension': full_path.suffix,\n...             'stem': full_path.stem\n...         }\n...     \n...     def backup_files(self, backup_name=None):\n...         \"\"\"\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\"\"\"\n...         if backup_name is None:\n...             backup_name = f\"backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}\"\n...         \n...         backup_dir = self.base_dir / \"backup\" / backup_name\n...         backup_dir.mkdir(parents=True, exist_ok=True)\n...         \n...         copied_files = 0\n...         for item in self.base_dir.rglob(\"*\"):\n...             if item.is_file() and \"backup\" not in str(item):\n...                 relative_path = item.relative_to(self.base_dir)\n...                 backup_path = backup_dir / relative_path\n...                 backup_path.parent.mkdir(parents=True, exist_ok=True)\n...                 shutil.copy2(item, backup_path)\n...                 copied_files += 1\n...         \n...         return f\"\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5b8c\u4e86: {copied_files}\u500b\u306e\u30d5\u30a1\u30a4\u30eb\u3092 {backup_name} \u306b\u30b3\u30d4\u30fc\u3057\u307e\u3057\u305f\"\n...     \n...     def calculate_directory_size(self, directory=None):\n...         \"\"\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b5\u30a4\u30ba\u306e\u8a08\u7b97\"\"\"\n...         if directory is None:\n...             directory = self.base_dir\n...         else:\n...             directory = self.base_dir / directory\n...         \n...         total_size = 0\n...         file_count = 0\n...         \n...         for file_path in directory.rglob(\"*\"):\n...             if file_path.is_file():\n...                 total_size += file_path.stat().st_size\n...                 file_count += 1\n...         \n...         return {\n...             'total_size_bytes': total_size,\n...             'total_size_mb': round(total_size / (1024 * 1024), 2),\n...             'file_count': file_count\n...         }\n...     \n...     def organize_files_by_extension(self):\n...         \"\"\"\u62e1\u5f35\u5b50\u5225\u30d5\u30a1\u30a4\u30eb\u6574\u7406\"\"\"\n...         organized = {}\n...         \n...         for file_path in self.base_dir.rglob(\"*\"):\n...             if file_path.is_file() and \"backup\" not in str(file_path):\n...                 extension = file_path.suffix.lower()\n...                 if not extension:\n...                     extension = \"no_extension\"\n...                 \n...                 if extension not in organized:\n...                     organized[extension] = []\n...                 \n...                 organized[extension].append({\n...                     'name': file_path.name,\n...                     'path': str(file_path.relative_to(self.base_dir)),\n...                     'size': file_path.stat().st_size\n...                 })\n...         \n...         return organized\n...     \n...     def cleanup(self):\n...         \"\"\"\u4f5c\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u524a\u9664\"\"\"\n...         if self.base_dir.exists():\n...             shutil.rmtree(self.base_dir)\n...             print(f\"\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3057\u307e\u3057\u305f: {self.base_dir}\")\n\n&gt;&gt;&gt; # \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_file_system_operations():\n...     \"\"\"\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u64cd\u4f5c\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u64cd\u4f5c\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     # \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u306e\u521d\u671f\u5316\n...     fs_manager = FileSystemManager()\n...     \n...     # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3068\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n...     fs_manager.create_directory_structure()\n...     fs_manager.create_sample_files()\n...     \n...     # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u5bb9\u306e\u8868\u793a\n...     print(\"\\\\n=== \u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5185\u5bb9 ===\")\n...     root_contents = fs_manager.list_directory_contents()\n...     for item in root_contents:\n...         icon = \"\ud83d\udcc1\" if item['type'] == 'directory' else \"\ud83d\udcc4\"\n...         size_info = f\" ({item['size']} bytes)\" if item['type'] == 'file' else \"\"\n...         print(f\"{icon} {item['path']}{size_info}\")\n...     \n...     # \u518d\u5e30\u7684\u306a\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\n...     print(\"\\\\n=== \u5168\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7 ===\")\n...     all_files = fs_manager.list_directory_contents(recursive=True)\n...     for item in all_files:\n...         if item['type'] == 'file':\n...             print(f\"\ud83d\udcc4 {item['path']} ({item['size']} bytes)\")\n...     \n...     # \u30d1\u30bf\u30fc\u30f3\u691c\u7d22\n...     print(\"\\\\n=== .txt \u30d5\u30a1\u30a4\u30eb\u306e\u691c\u7d22 ===\")\n...     txt_files = fs_manager.find_files_by_pattern(\"*.txt\")\n...     for file_info in txt_files:\n...         print(f\"\ud83d\udcc4 {file_info['path']} - {file_info['size']} bytes, \u66f4\u65b0\u65e5: {file_info['modified'].strftime('%Y-%m-%d %H:%M')}\")\n...     \n...     # \u30d5\u30a1\u30a4\u30eb\u60c5\u5831\u306e\u53d6\u5f97\n...     print(\"\\\\n=== README.md \u306e\u8a73\u7d30\u60c5\u5831 ===\")\n...     readme_info = fs_manager.get_file_info(\"README.md\")\n...     if readme_info:\n...         for key, value in readme_info.items():\n...             print(f\"{key}: {value}\")\n...     \n...     # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b5\u30a4\u30ba\u8a08\u7b97\n...     total_size = fs_manager.calculate_directory_size()\n...     print(f\"\\\\n=== \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b5\u30a4\u30ba ===\")\n...     print(f\"\u7dcf\u30b5\u30a4\u30ba: {total_size['total_size_mb']} MB ({total_size['total_size_bytes']} bytes)\")\n...     print(f\"\u30d5\u30a1\u30a4\u30eb\u6570: {total_size['file_count']}\")\n...     \n...     # \u62e1\u5f35\u5b50\u5225\u6574\u7406\n...     print(\"\\\\n=== \u62e1\u5f35\u5b50\u5225\u30d5\u30a1\u30a4\u30eb\u6574\u7406 ===\")\n...     organized_files = fs_manager.organize_files_by_extension()\n...     for extension, files in organized_files.items():\n...         print(f\"\\\\n{extension}: {len(files)}\u500b\")\n...         for file_info in files:\n...             print(f\"  \ud83d\udcc4 {file_info['name']} ({file_info['size']} bytes)\")\n...     \n...     # \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u4f5c\u6210\n...     backup_result = fs_manager.backup_files()\n...     print(f\"\\\\n{backup_result}\")\n...     \n...     # \u30af\u30ea\u30fc\u30f3\u30a2\u30c3\u30d7\uff08\u30c6\u30b9\u30c8\u5f8c\u306e\u524a\u9664\uff09\n...     # fs_manager.cleanup()  # \u5b9f\u969b\u306b\u306f\u524a\u9664\u3057\u306a\u3044\uff08\u78ba\u8a8d\u7528\uff09\n...     print(\"\\\\n\u30c6\u30b9\u30c8\u5b8c\u4e86\uff08\u30d5\u30a1\u30a4\u30eb\u306f\u6b8b\u3055\u308c\u3066\u3044\u307e\u3059\uff09\")\n\n&gt;&gt;&gt; test_file_system_operations()\n\n=== \u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u64cd\u4f5c\u306e\u30c6\u30b9\u30c8 ===\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f: file_operations\n\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f: 7\u500b\n\n=== \u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u5185\u5bb9 ===\n\ud83d\udcc1 backup\n\ud83d\udcc1 data\n\ud83d\udcc1 documents\n\ud83d\udcc1 images\n\ud83d\udcc4 README.md (75 bytes)\n\n=== \u5168\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7 ===\n\ud83d\udcc4 README.md (75 bytes)\n\ud83d\udcc4 data/csv/sales_data.csv (82 bytes)\n\ud83d\udcc4 data/json/config.json (71 bytes)\n\ud83d\udcc4 documents/presentations/product_demo.txt (54 bytes)\n\ud83d\udcc4 documents/reports/annual_summary.txt (42 bytes)\n\ud83d\udcc4 documents/reports/quarterly_report.txt (58 bytes)\n\ud83d\udcc4 images/photos/vacation.jpg (39 bytes)\n\n=== .txt \u30d5\u30a1\u30a4\u30eb\u306e\u691c\u7d22 ===\n\ud83d\udcc4 documents/presentations/product_demo.txt - 54 bytes, \u66f4\u65b0\u65e5: 2024-12-19 11:40\n\ud83d\udcc4 documents/reports/annual_summary.txt - 42 bytes, \u66f4\u65b0\u65e5: 2024-12-19 11:40\n\ud83d\udcc4 documents/reports/quarterly_report.txt - 58 bytes, \u66f4\u65b0\u65e5: 2024-12-19 11:40\n\n=== README.md \u306e\u8a73\u7d30\u60c5\u5831 ===\npath: README.md\nsize: 75\ncreated: 2024-12-19 11:40:00.123456\nmodified: 2024-12-19 11:40:00.123456\nis_file: True\nis_directory: False\nextension: .md\nstem: README\n\n=== \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30b5\u30a4\u30ba ===\n\u7dcf\u30b5\u30a4\u30ba: 0.0 MB (421 bytes)\n\u30d5\u30a1\u30a4\u30eb\u6570: 7\n\n=== \u62e1\u5f35\u5b50\u5225\u30d5\u30a1\u30a4\u30eb\u6574\u7406 ===\n\n.md: 1\u500b\n  \ud83d\udcc4 README.md (75 bytes)\n\n.csv: 1\u500b\n  \ud83d\udcc4 sales_data.csv (82 bytes)\n\n.json: 1\u500b\n  \ud83d\udcc4 config.json (71 bytes)\n\n.txt: 3\u500b\n  \ud83d\udcc4 product_demo.txt (54 bytes)\n  \ud83d\udcc4 annual_summary.txt (42 bytes)\n  \ud83d\udcc4 quarterly_report.txt (58 bytes)\n\n.jpg: 1\u500b\n  \ud83d\udcc4 vacation.jpg (39 bytes)\n\n\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u5b8c\u4e86: 7\u500b\u306e\u30d5\u30a1\u30a4\u30eb\u3092 backup_20241219_114000 \u306b\u30b3\u30d4\u30fc\u3057\u307e\u3057\u305f\n\n\u30c6\u30b9\u30c8\u5b8c\u4e86\uff08\u30d5\u30a1\u30a4\u30eb\u306f\u6b8b\u3055\u308c\u3066\u3044\u307e\u3059\uff09\n</code></pre>"},{"location":"chapter19/#json-json","title":"JSON\u51e6\u7406 - json\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"chapter19/#_4","title":"\u3010\u5b9f\u884c\u3011\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0","text":"<pre><code>&gt;&gt;&gt; import json\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; from typing import Dict, Any\n\n&gt;&gt;&gt; class ConfigurationManager:\n...     \"\"\"\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, config_file=\"config.json\"):\n...         self.config_file = Path(config_file)\n...         self.config_data = {}\n...         self.load_config()\n...     \n...     def load_config(self):\n...         \"\"\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\"\"\"\n...         if self.config_file.exists():\n...             try:\n...                 with open(self.config_file, 'r', encoding='utf-8') as f:\n...                     self.config_data = json.load(f)\n...                 print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3057\u305f: {self.config_file}\")\n...             except json.JSONDecodeError as e:\n...                 print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u5f62\u5f0f\u30a8\u30e9\u30fc: {e}\")\n...                 self.config_data = {}\n...             except Exception as e:\n...                 print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u30a8\u30e9\u30fc: {e}\")\n...                 self.config_data = {}\n...         else:\n...             print(\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3059\u3002\")\n...             self.create_default_config()\n...     \n...     def create_default_config(self):\n...         \"\"\"\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u306e\u4f5c\u6210\"\"\"\n...         default_config = {\n...             \"application\": {\n...                 \"name\": \"Sample Application\",\n...                 \"version\": \"1.0.0\",\n...                 \"debug\": False,\n...                 \"log_level\": \"INFO\"\n...             },\n...             \"database\": {\n...                 \"host\": \"localhost\",\n...                 \"port\": 5432,\n...                 \"name\": \"sample_db\",\n...                 \"username\": \"user\",\n...                 \"password\": \"password\",\n...                 \"ssl_enabled\": True,\n...                 \"connection_pool\": {\n...                     \"min_connections\": 5,\n...                     \"max_connections\": 20\n...                 }\n...             },\n...             \"api\": {\n...                 \"base_url\": \"https://api.example.com\",\n...                 \"timeout\": 30,\n...                 \"retry_attempts\": 3,\n...                 \"rate_limit\": {\n...                     \"requests_per_minute\": 60,\n...                     \"requests_per_hour\": 1000\n...                 }\n...             },\n...             \"cache\": {\n...                 \"enabled\": True,\n...                 \"type\": \"redis\",\n...                 \"host\": \"localhost\",\n...                 \"port\": 6379,\n...                 \"ttl\": 3600\n...             },\n...             \"logging\": {\n...                 \"file\": \"app.log\",\n...                 \"max_file_size\": \"10MB\",\n...                 \"backup_count\": 5,\n...                 \"format\": \"%(asctime)s - %(name)s - %(levelname)s - %(message)s\"\n...             }\n...         }\n...         \n...         self.config_data = default_config\n...         self.save_config()\n...     \n...     def save_config(self):\n...         \"\"\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\"\"\"\n...         try:\n...             with open(self.config_file, 'w', encoding='utf-8') as f:\n...                 json.dump(self.config_data, f, ensure_ascii=False, indent=2)\n...             print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: {self.config_file}\")\n...             return True\n...         except Exception as e:\n...             print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fdd\u5b58\u30a8\u30e9\u30fc: {e}\")\n...             return False\n...     \n...     def get_config(self, key_path, default=None):\n...         \"\"\"\u30cd\u30b9\u30c8\u3057\u305f\u30ad\u30fc\u304b\u3089\u8a2d\u5b9a\u5024\u3092\u53d6\u5f97\"\"\"\n...         keys = key_path.split('.')\n...         current = self.config_data\n...         \n...         for key in keys:\n...             if isinstance(current, dict) and key in current:\n...                 current = current[key]\n...             else:\n...                 return default\n...         \n...         return current\n...     \n...     def set_config(self, key_path, value):\n...         \"\"\"\u30cd\u30b9\u30c8\u3057\u305f\u30ad\u30fc\u306b\u8a2d\u5b9a\u5024\u3092\u8a2d\u5b9a\"\"\"\n...         keys = key_path.split('.')\n...         current = self.config_data\n...         \n...         # \u6700\u5f8c\u306e\u30ad\u30fc\u4ee5\u5916\u3092\u305f\u3069\u3063\u3066\u30cd\u30b9\u30c8\u3057\u305f\u8f9e\u66f8\u3092\u4f5c\u6210\n...         for key in keys[:-1]:\n...             if key not in current:\n...                 current[key] = {}\n...             current = current[key]\n...         \n...         # \u6700\u5f8c\u306e\u30ad\u30fc\u306b\u5024\u3092\u8a2d\u5b9a\n...         current[keys[-1]] = value\n...         return self.save_config()\n...     \n...     def update_config(self, updates: Dict[str, Any]):\n...         \"\"\"\u8907\u6570\u306e\u8a2d\u5b9a\u3092\u4e00\u62ec\u66f4\u65b0\"\"\"\n...         for key_path, value in updates.items():\n...             self.set_config(key_path, value)\n...     \n...     def validate_config(self):\n...         \"\"\"\u8a2d\u5b9a\u306e\u59a5\u5f53\u6027\u3092\u30c1\u30a7\u30c3\u30af\"\"\"\n...         issues = []\n...         \n...         # \u5fc5\u9808\u9805\u76ee\u306e\u30c1\u30a7\u30c3\u30af\n...         required_keys = [\n...             'application.name',\n...             'application.version',\n...             'database.host',\n...             'database.name'\n...         ]\n...         \n...         for key in required_keys:\n...             if self.get_config(key) is None:\n...                 issues.append(f\"\u5fc5\u9808\u9805\u76ee\u304c\u672a\u8a2d\u5b9a: {key}\")\n...         \n...         # \u30c7\u30fc\u30bf\u578b\u306e\u30c1\u30a7\u30c3\u30af\n...         type_checks = {\n...             'database.port': int,\n...             'api.timeout': (int, float),\n...             'cache.enabled': bool,\n...             'database.ssl_enabled': bool\n...         }\n...         \n...         for key, expected_type in type_checks.items():\n...             value = self.get_config(key)\n...             if value is not None and not isinstance(value, expected_type):\n...                 issues.append(f\"\u30c7\u30fc\u30bf\u578b\u30a8\u30e9\u30fc: {key} \u306f {expected_type.__name__} \u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         \n...         # \u7bc4\u56f2\u30c1\u30a7\u30c3\u30af\n...         range_checks = {\n...             'database.port': (1, 65535),\n...             'api.timeout': (1, 300),\n...             'cache.port': (1, 65535)\n...         }\n...         \n...         for key, (min_val, max_val) in range_checks.items():\n...             value = self.get_config(key)\n...             if value is not None and isinstance(value, (int, float)):\n...                 if not (min_val &lt;= value &lt;= max_val):\n...                     issues.append(f\"\u7bc4\u56f2\u30a8\u30e9\u30fc: {key} \u306f {min_val} \u304b\u3089 {max_val} \u306e\u9593\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...         \n...         return issues\n...     \n...     def export_config(self, export_file, sections=None):\n...         \"\"\"\u8a2d\u5b9a\u306e\u90e8\u5206\u7684\u306a\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\"\"\"\n...         if sections is None:\n...             export_data = self.config_data\n...         else:\n...             export_data = {}\n...             for section in sections:\n...                 if section in self.config_data:\n...                     export_data[section] = self.config_data[section]\n...         \n...         try:\n...             with open(export_file, 'w', encoding='utf-8') as f:\n...                 json.dump(export_data, f, ensure_ascii=False, indent=2)\n...             return True, f\"\u8a2d\u5b9a\u3092 {export_file} \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\"\n...         except Exception as e:\n...             return False, f\"\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def import_config(self, import_file, merge=True):\n...         \"\"\"\u8a2d\u5b9a\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\"\"\"\n...         try:\n...             with open(import_file, 'r', encoding='utf-8') as f:\n...                 imported_data = json.load(f)\n...             \n...             if merge:\n...                 # \u65e2\u5b58\u8a2d\u5b9a\u3068\u30de\u30fc\u30b8\n...                 self._deep_merge(self.config_data, imported_data)\n...             else:\n...                 # \u5b8c\u5168\u7f6e\u63db\n...                 self.config_data = imported_data\n...             \n...             self.save_config()\n...             return True, f\"\u8a2d\u5b9a\u3092 {import_file} \u304b\u3089\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\"\n...         except Exception as e:\n...             return False, f\"\u30a4\u30f3\u30dd\u30fc\u30c8\u30a8\u30e9\u30fc: {e}\"\n...     \n...     def _deep_merge(self, target, source):\n...         \"\"\"\u8f9e\u66f8\u306e\u6df1\u3044\u30de\u30fc\u30b8\"\"\"\n...         for key, value in source.items():\n...             if key in target and isinstance(target[key], dict) and isinstance(value, dict):\n...                 self._deep_merge(target[key], value)\n...             else:\n...                 target[key] = value\n...     \n...     def get_environment_specific_config(self, environment):\n...         \"\"\"\u74b0\u5883\u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u53d6\u5f97\"\"\"\n...         env_config = self.config_data.copy()\n...         \n...         # \u74b0\u5883\u56fa\u6709\u306e\u8a2d\u5b9a\u304c\u3042\u308c\u3070\u9069\u7528\n...         if f\"environments.{environment}\" in str(self.config_data):\n...             env_specific = self.get_config(f\"environments.{environment}\", {})\n...             self._deep_merge(env_config, env_specific)\n...         \n...         return env_config\n...     \n...     def generate_config_report(self):\n...         \"\"\"\u8a2d\u5b9a\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\"\"\"\n...         report = {\n...             \"config_file\": str(self.config_file),\n...             \"file_size\": self.config_file.stat().st_size if self.config_file.exists() else 0,\n...             \"last_modified\": datetime.fromtimestamp(self.config_file.stat().st_mtime).isoformat() if self.config_file.exists() else None,\n...             \"sections\": list(self.config_data.keys()),\n...             \"total_keys\": self._count_keys(self.config_data),\n...             \"validation_issues\": self.validate_config()\n...         }\n...         \n...         return report\n...     \n...     def _count_keys(self, data, count=0):\n...         \"\"\"\u8a2d\u5b9a\u9805\u76ee\u6570\u3092\u30ab\u30a6\u30f3\u30c8\"\"\"\n...         if isinstance(data, dict):\n...             for value in data.values():\n...                 if isinstance(value, dict):\n...                     count = self._count_keys(value, count)\n...                 else:\n...                     count += 1\n...         return count\n\n&gt;&gt;&gt; # \u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_configuration_system():\n...     \"\"\"\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     # \u8a2d\u5b9a\u7ba1\u7406\u306e\u521d\u671f\u5316\n...     config = ConfigurationManager(\"test_config.json\")\n...     \n...     # \u8a2d\u5b9a\u5024\u306e\u53d6\u5f97\n...     print(\"\\\\n=== \u8a2d\u5b9a\u5024\u306e\u53d6\u5f97 ===\")\n...     app_name = config.get_config(\"application.name\")\n...     db_host = config.get_config(\"database.host\")\n...     api_timeout = config.get_config(\"api.timeout\")\n...     \n...     print(f\"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d: {app_name}\")\n...     print(f\"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30db\u30b9\u30c8: {db_host}\")\n...     print(f\"API\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8: {api_timeout}\u79d2\")\n...     \n...     # \u8a2d\u5b9a\u5024\u306e\u5909\u66f4\n...     print(\"\\\\n=== \u8a2d\u5b9a\u5024\u306e\u5909\u66f4 ===\")\n...     config.set_config(\"application.debug\", True)\n...     config.set_config(\"database.connection_pool.max_connections\", 30)\n...     config.set_config(\"api.base_url\", \"https://api-v2.example.com\")\n...     \n...     print(\"\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3001\u6700\u5927\u63a5\u7d9a\u6570\u3001API\u30d9\u30fc\u30b9URL\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\")\n...     \n...     # \u4e00\u62ec\u66f4\u65b0\n...     print(\"\\\\n=== \u4e00\u62ec\u8a2d\u5b9a\u66f4\u65b0 ===\")\n...     updates = {\n...         \"cache.ttl\": 7200,\n...         \"logging.level\": \"DEBUG\",\n...         \"api.rate_limit.requests_per_minute\": 120\n...     }\n...     config.update_config(updates)\n...     print(\"\u8907\u6570\u306e\u8a2d\u5b9a\u3092\u4e00\u62ec\u66f4\u65b0\u3057\u307e\u3057\u305f\")\n...     \n...     # \u8a2d\u5b9a\u306e\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af\n...     print(\"\\\\n=== \u8a2d\u5b9a\u306e\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af ===\")\n...     validation_issues = config.validate_config()\n...     if validation_issues:\n...         print(\"\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af\u3067\u554f\u984c\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f:\")\n...         for issue in validation_issues:\n...             print(f\"  \u26a0\ufe0f {issue}\")\n...     else:\n...         print(\"\u2713 \u8a2d\u5b9a\u306f\u6b63\u5e38\u3067\u3059\")\n...     \n...     # \u8a2d\u5b9a\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\n...     print(\"\\\\n=== \u8a2d\u5b9a\u30ec\u30dd\u30fc\u30c8 ===\")\n...     report = config.generate_config_report()\n...     print(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb: {report['config_file']}\")\n...     print(f\"\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba: {report['file_size']} bytes\")\n...     print(f\"\u30bb\u30af\u30b7\u30e7\u30f3\u6570: {len(report['sections'])}\")\n...     print(f\"\u7dcf\u8a2d\u5b9a\u9805\u76ee\u6570: {report['total_keys']}\")\n...     print(f\"\u30bb\u30af\u30b7\u30e7\u30f3: {', '.join(report['sections'])}\")\n...     \n...     # \u90e8\u5206\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n...     print(\"\\\\n=== \u90e8\u5206\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 ===\")\n...     success, message = config.export_config(\"database_config.json\", [\"database\"])\n...     print(message)\n...     \n...     # \u74b0\u5883\u56fa\u6709\u8a2d\u5b9a\u306e\u4f8b\n...     print(\"\\\\n=== \u74b0\u5883\u56fa\u6709\u8a2d\u5b9a\u306e\u4f5c\u6210 ===\")\n...     config.set_config(\"environments.production.database.host\", \"prod-db.example.com\")\n...     config.set_config(\"environments.production.application.debug\", False)\n...     config.set_config(\"environments.development.database.host\", \"dev-db.example.com\")\n...     config.set_config(\"environments.development.application.debug\", True)\n...     \n...     # \u672c\u756a\u74b0\u5883\u7528\u8a2d\u5b9a\n...     prod_config = config.get_environment_specific_config(\"production\")\n...     print(f\"\u672c\u756a\u74b0\u5883\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30db\u30b9\u30c8: {prod_config['database']['host']}\")\n...     print(f\"\u672c\u756a\u74b0\u5883\u306e\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9: {prod_config['application']['debug']}\")\n\n&gt;&gt;&gt; test_configuration_system()\n\n=== \u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\n=== \u8a2d\u5b9a\u5024\u306e\u53d6\u5f97 ===\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d: Sample Application\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30db\u30b9\u30c8: localhost\nAPI\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8: 30\n\n=== \u8a2d\u5b9a\u5024\u306e\u5909\u66f4 ===\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9\u3001\u6700\u5927\u63a5\u7d9a\u6570\u3001API\u30d9\u30fc\u30b9URL\u3092\u5909\u66f4\u3057\u307e\u3057\u305f\n\n=== \u4e00\u62ec\u8a2d\u5b9a\u66f4\u65b0 ===\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8907\u6570\u306e\u8a2d\u5b9a\u3092\u4e00\u62ec\u66f4\u65b0\u3057\u307e\u3057\u305f\n\n=== \u8a2d\u5b9a\u306e\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af ===\n\u2713 \u8a2d\u5b9a\u306f\u6b63\u5e38\u3067\u3059\n\n=== \u8a2d\u5b9a\u30ec\u30dd\u30fc\u30c8 ===\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb: test_config.json\n\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba: 1089 bytes\n\u30bb\u30af\u30b7\u30e7\u30f3\u6570: 5\n\u7dcf\u8a2d\u5b9a\u9805\u76ee\u6570: 25\n\u30bb\u30af\u30b7\u30e7\u30f3: application, database, api, cache, logging\n\n=== \u90e8\u5206\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 ===\n\u8a2d\u5b9a\u3092 database_config.json \u306b\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3057\u305f\n\n=== \u74b0\u5883\u56fa\u6709\u8a2d\u5b9a\u306e\u4f5c\u6210 ===\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\u3057\u307e\u3057\u305f: test_config.json\n\u672c\u756a\u74b0\u5883\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30db\u30b9\u30c8: prod-db.example.com\n\u672c\u756a\u74b0\u5883\u306e\u30c7\u30d0\u30c3\u30b0\u30e2\u30fc\u30c9: False\n</code></pre>"},{"location":"chapter19/#-re","title":"\u6b63\u898f\u8868\u73fe - re\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"chapter19/#_5","title":"\u3010\u5b9f\u884c\u3011\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0","text":"<pre><code>&gt;&gt;&gt; import re\n&gt;&gt;&gt; from collections import Counter\n&gt;&gt;&gt; from typing import List, Dict, Tuple\n\n&gt;&gt;&gt; class TextAnalyzer:\n...     \"\"\"\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\uff08\u6b63\u898f\u8868\u73fe\u4f7f\u7528\uff09\"\"\"\n...     \n...     def __init__(self):\n...         # \u3088\u304f\u4f7f\u7528\u3059\u308b\u6b63\u898f\u8868\u73fe\u30d1\u30bf\u30fc\u30f3\u3092\u4e8b\u524d\u306b\u5b9a\u7fa9\n...         self.patterns = {\n...             'email': re.compile(r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b'),\n...             'phone_jp': re.compile(r'0\\d{1,4}-\\d{1,4}-\\d{4}'),\n...             'url': re.compile(r'https?://[^\\s&lt;&gt;\"\\'{}|\\\\^`\\[\\]]+'),\n...             'postal_code': re.compile(r'\\d{3}-\\d{4}'),\n...             'date_ymd': re.compile(r'\\d{4}[-/]\\d{1,2}[-/]\\d{1,2}'),\n...             'time_hm': re.compile(r'\\d{1,2}:\\d{2}'),\n...             'number': re.compile(r'-?\\d+(?:\\.\\d+)?'),\n...             'word': re.compile(r'[A-Za-z]+'),\n...             'japanese': re.compile(r'[\u3072\u3089\u304c\u306a\u30ab\u30bf\u30ab\u30ca\u6f22\u5b57]+', re.UNICODE)\n...         }\n...     \n...     def extract_information(self, text: str) -&gt; Dict[str, List[str]]:\n...         \"\"\"\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u5404\u7a2e\u60c5\u5831\u3092\u62bd\u51fa\"\"\"\n...         results = {}\n...         \n...         for name, pattern in self.patterns.items():\n...             matches = pattern.findall(text)\n...             results[name] = matches\n...         \n...         return results\n...     \n...     def validate_format(self, text: str, format_type: str) -&gt; bool:\n...         \"\"\"\u6307\u5b9a\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u59a5\u5f53\u6027\u3092\u30c1\u30a7\u30c3\u30af\"\"\"\n...         if format_type not in self.patterns:\n...             return False\n...         \n...         return bool(self.patterns[format_type].fullmatch(text))\n...     \n...     def clean_text(self, text: str) -&gt; str:\n...         \"\"\"\u30c6\u30ad\u30b9\u30c8\u306e\u30af\u30ea\u30fc\u30cb\u30f3\u30b0\"\"\"\n...         # HTML\u30bf\u30b0\u306e\u9664\u53bb\n...         text = re.sub(r'&lt;[^&gt;]+&gt;', '', text)\n...         \n...         # \u4f59\u5206\u306a\u7a7a\u767d\u306e\u9664\u53bb\n...         text = re.sub(r'\\s+', ' ', text)\n...         \n...         # \u884c\u982d\u30fb\u884c\u672b\u306e\u7a7a\u767d\u9664\u53bb\n...         text = text.strip()\n...         \n...         return text\n...     \n...     def mask_sensitive_data(self, text: str) -&gt; str:\n...         \"\"\"\u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u30de\u30b9\u30ad\u30f3\u30b0\"\"\"\n...         # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u30de\u30b9\u30ad\u30f3\u30b0\n...         text = re.sub(r'\\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,}\\b', \n...                      '***@***.***', text)\n...         \n...         # \u96fb\u8a71\u756a\u53f7\u306e\u30de\u30b9\u30ad\u30f3\u30b0\n...         text = re.sub(r'0\\d{1,4}-\\d{1,4}-\\d{4}', '***-****-****', text)\n...         \n...         # \u90f5\u4fbf\u756a\u53f7\u306e\u30de\u30b9\u30ad\u30f3\u30b0\n...         text = re.sub(r'\\d{3}-\\d{4}', '***-****', text)\n...         \n...         return text\n...     \n...     def extract_structured_data(self, text: str) -&gt; Dict[str, List[Dict]]:\n...         \"\"\"\u69cb\u9020\u5316\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\"\"\"\n...         # \u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u306e\u62bd\u51fa\n...         log_pattern = re.compile(\n...             r'(?P&lt;timestamp&gt;\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2})\\s+'\n...             r'\\[(?P&lt;level&gt;\\w+)\\]\\s+'\n...             r'(?P&lt;message&gt;.*)'\n...         )\n...         \n...         # CSV\u5f62\u5f0f\u306e\u62bd\u51fa\n...         csv_pattern = re.compile(\n...             r'(?P&lt;field1&gt;[^,]+),\\s*(?P&lt;field2&gt;[^,]+),\\s*(?P&lt;field3&gt;[^,\\n]+)'\n...         )\n...         \n...         # \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u62bd\u51fa\n...         user_pattern = re.compile(\n...             r'\u540d\u524d:\\s*(?P&lt;name&gt;[^\\s]+)\\s+'\n...             r'\u5e74\u9f62:\\s*(?P&lt;age&gt;\\d+)\\s+'\n...             r'\u30e1\u30fc\u30eb:\\s*(?P&lt;email&gt;[^\\s]+)'\n...         )\n...         \n...         results = {\n...             'logs': [],\n...             'csv_data': [],\n...             'users': []\n...         }\n...         \n...         # \u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u306e\u62bd\u51fa\n...         for match in log_pattern.finditer(text):\n...             results['logs'].append(match.groupdict())\n...         \n...         # CSV \u30c7\u30fc\u30bf\u306e\u62bd\u51fa\n...         for match in csv_pattern.finditer(text):\n...             results['csv_data'].append(match.groupdict())\n...         \n...         # \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u62bd\u51fa\n...         for match in user_pattern.finditer(text):\n...             results['users'].append(match.groupdict())\n...         \n...         return results\n...     \n...     def analyze_text_patterns(self, text: str) -&gt; Dict[str, any]:\n...         \"\"\"\u30c6\u30ad\u30b9\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u5206\u6790\"\"\"\n...         # \u5358\u8a9e\u306e\u983b\u5ea6\u5206\u6790\n...         words = re.findall(r'\\b\\w+\\b', text.lower())\n...         word_freq = Counter(words)\n...         \n...         # \u6587\u306e\u9577\u3055\u5206\u6790\n...         sentences = re.split(r'[.!?]+', text)\n...         sentence_lengths = [len(s.split()) for s in sentences if s.strip()]\n...         \n...         # \u6bb5\u843d\u5206\u6790\n...         paragraphs = re.split(r'\\n\\s*\\n', text)\n...         paragraph_count = len([p for p in paragraphs if p.strip()])\n...         \n...         # \u6570\u5024\u306e\u7d71\u8a08\n...         numbers = [float(n) for n in re.findall(r'-?\\d+(?:\\.\\d+)?', text)]\n...         \n...         return {\n...             'word_count': len(words),\n...             'unique_words': len(word_freq),\n...             'most_common_words': word_freq.most_common(5),\n...             'sentence_count': len(sentence_lengths),\n...             'avg_sentence_length': sum(sentence_lengths) / len(sentence_lengths) if sentence_lengths else 0,\n...             'paragraph_count': paragraph_count,\n...             'number_count': len(numbers),\n...             'number_sum': sum(numbers) if numbers else 0\n...         }\n...     \n...     def search_and_replace(self, text: str, replacements: List[Tuple[str, str]]) -&gt; str:\n...         \"\"\"\u691c\u7d22\u3068\u7f6e\u63db\uff08\u6b63\u898f\u8868\u73fe\u5bfe\u5fdc\uff09\"\"\"\n...         result = text\n...         for pattern, replacement in replacements:\n...             result = re.sub(pattern, replacement, result)\n...         return result\n...     \n...     def generate_summary_report(self, text: str) -&gt; str:\n...         \"\"\"\u30b5\u30de\u30ea\u30fc\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\"\"\"\n...         # \u57fa\u672c\u60c5\u5831\u306e\u62bd\u51fa\n...         extracted = self.extract_information(text)\n...         patterns = self.analyze_text_patterns(text)\n...         structured = self.extract_structured_data(text)\n...         \n...         report = [\n...             \"=== \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30ec\u30dd\u30fc\u30c8 ===\",\n...             f\"\u30c6\u30ad\u30b9\u30c8\u9577: {len(text)}\u6587\u5b57\",\n...             f\"\u5358\u8a9e\u6570: {patterns['word_count']}\",\n...             f\"\u30e6\u30cb\u30fc\u30af\u5358\u8a9e\u6570: {patterns['unique_words']}\",\n...             f\"\u6587\u6570: {patterns['sentence_count']}\",\n...             f\"\u6bb5\u843d\u6570: {patterns['paragraph_count']}\",\n...             \"\",\n...             \"\u3010\u62bd\u51fa\u3055\u308c\u305f\u60c5\u5831\u3011\"\n...         ]\n...         \n...         for info_type, items in extracted.items():\n...             if items:\n...                 report.append(f\"{info_type}: {len(items)}\u500b\")\n...                 for item in items[:3]:  # \u6700\u521d\u306e3\u500b\u306e\u307f\u8868\u793a\n...                     report.append(f\"  - {item}\")\n...                 if len(items) &gt; 3:\n...                     report.append(f\"  ... \u4ed6 {len(items) - 3}\u500b\")\n...         \n...         if patterns['most_common_words']:\n...             report.append(\"\")\n...             report.append(\"\u3010\u983b\u51fa\u5358\u8a9e TOP5\u3011\")\n...             for word, count in patterns['most_common_words']:\n...                 report.append(f\"{word}: {count}\u56de\")\n...         \n...         return \"\\n\".join(report)\n\n&gt;&gt;&gt; # \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_text_analyzer():\n...     \"\"\"\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     # \u30b5\u30f3\u30d7\u30eb\u30c6\u30ad\u30b9\u30c8\u306e\u6e96\u5099\n...     sample_text = \"\"\"\n...     \u4f1a\u793e\u60c5\u5831:\n...     \u540d\u524d: \u7530\u4e2d\u592a\u90ce \u5e74\u9f62: 30 \u30e1\u30fc\u30eb: tanaka@example.com\n...     \u540d\u524d: \u4f50\u85e4\u82b1\u5b50 \u5e74\u9f62: 25 \u30e1\u30fc\u30eb: sato@company.co.jp\n...     \u540d\u524d: \u9234\u6728\u4e00\u90ce \u5e74\u9f62: 35 \u30e1\u30fc\u30eb: suzuki@sample.org\n...     \n...     \u9023\u7d61\u5148\u60c5\u5831:\n...     \u96fb\u8a71\u756a\u53f7: 03-1234-5678, 090-9876-5432\n...     \u90f5\u4fbf\u756a\u53f7: 100-0001, 160-0023\n...     \n...     \u30a6\u30a7\u30d6\u30b5\u30a4\u30c8:\n...     https://www.example.com\n...     https://api.sample.co.jp/v1/users\n...     \n...     \u30ed\u30b0\u30c7\u30fc\u30bf:\n...     2024-01-15 10:30:15 [INFO] \u30e6\u30fc\u30b6\u30fc\u30ed\u30b0\u30a4\u30f3\u6210\u529f\n...     2024-01-15 10:31:42 [ERROR] \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc\n...     2024-01-15 10:32:01 [WARN] \u51e6\u7406\u6642\u9593\u304c\u95be\u5024\u3092\u8d85\u904e\n...     \n...     \u58f2\u4e0a\u30c7\u30fc\u30bf(CSV):\n...     \u5546\u54c1A, 10000, 2024-01-15\n...     \u5546\u54c1B, 15000, 2024-01-16\n...     \u5546\u54c1C, 8000, 2024-01-17\n...     \n...     \u6570\u5024\u30c7\u30fc\u30bf: 123.45, -67.89, 1000, 0.5\n...     \n...     \u65e5\u672c\u8a9e\u30c6\u30ad\u30b9\u30c8: \u3053\u308c\u306f\u30b5\u30f3\u30d7\u30eb\u30c6\u30ad\u30b9\u30c8\u3067\u3059\u3002Python\u3067\u6b63\u898f\u8868\u73fe\u3092\u5b66\u7fd2\u3057\u3066\u3044\u307e\u3059\u3002\n...     \"\"\"\n...     \n...     # \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u306e\u521d\u671f\u5316\n...     analyzer = TextAnalyzer()\n...     \n...     # \u57fa\u672c\u60c5\u5831\u306e\u62bd\u51fa\n...     print(\"\\\\n=== \u57fa\u672c\u60c5\u5831\u306e\u62bd\u51fa ===\")\n...     extracted_info = analyzer.extract_information(sample_text)\n...     for info_type, items in extracted_info.items():\n...         if items:\n...             print(f\"{info_type}: {items}\")\n...     \n...     # \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af\n...     print(\"\\\\n=== \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af ===\")\n...     test_formats = [\n...         (\"tanaka@example.com\", \"email\"),\n...         (\"03-1234-5678\", \"phone_jp\"),\n...         (\"https://www.example.com\", \"url\"),\n...         (\"100-0001\", \"postal_code\"),\n...         (\"2024-01-15\", \"date_ymd\"),\n...         (\"invalid-email\", \"email\")\n...     ]\n...     \n...     for text, format_type in test_formats:\n...         is_valid = analyzer.validate_format(text, format_type)\n...         status = \"\u2713\" if is_valid else \"\u2717\"\n...         print(f\"{status} {text} ({format_type}): {'\u6709\u52b9' if is_valid else '\u7121\u52b9'}\")\n...     \n...     # \u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u30de\u30b9\u30ad\u30f3\u30b0\n...     print(\"\\\\n=== \u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u30de\u30b9\u30ad\u30f3\u30b0 ===\")\n...     masked_text = analyzer.mask_sensitive_data(sample_text)\n...     print(\"\u30de\u30b9\u30ad\u30f3\u30b0\u524d:\")\n...     print(\"\u7530\u4e2d\u592a\u90ce\u306e\u30e1\u30fc\u30eb: tanaka@example.com, \u96fb\u8a71: 03-1234-5678\")\n...     print(\"\u30de\u30b9\u30ad\u30f3\u30b0\u5f8c:\")\n...     mask_sample = \"\u7530\u4e2d\u592a\u90ce\u306e\u30e1\u30fc\u30eb: tanaka@example.com, \u96fb\u8a71: 03-1234-5678\"\n...     masked_sample = analyzer.mask_sensitive_data(mask_sample)\n...     print(masked_sample)\n...     \n...     # \u69cb\u9020\u5316\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\n...     print(\"\\\\n=== \u69cb\u9020\u5316\u30c7\u30fc\u30bf\u306e\u62bd\u51fa ===\")\n...     structured_data = analyzer.extract_structured_data(sample_text)\n...     for data_type, items in structured_data.items():\n...         if items:\n...             print(f\"\\\\n{data_type}:\")\n...             for item in items:\n...                 print(f\"  {item}\")\n...     \n...     # \u30c6\u30ad\u30b9\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u5206\u6790\n...     print(\"\\\\n=== \u30c6\u30ad\u30b9\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u5206\u6790 ===\")\n...     pattern_analysis = analyzer.analyze_text_patterns(sample_text)\n...     for key, value in pattern_analysis.items():\n...         print(f\"{key}: {value}\")\n...     \n...     # \u691c\u7d22\u3068\u7f6e\u63db\n...     print(\"\\\\n=== \u691c\u7d22\u3068\u7f6e\u63db ===\")\n...     replacements = [\n...         (r'\\b(ERROR|WARN)\\b', r'[\\1]'),  # \u30a8\u30e9\u30fc\u30ec\u30d9\u30eb\u3092\u62ec\u5f27\u3067\u56f2\u3080\n...         (r'\\d{4}-\\d{2}-\\d{2}', '[DATE]'),  # \u65e5\u4ed8\u3092[DATE]\u306b\u7f6e\u63db\n...         (r'\u5546\u54c1[A-Z]', '\u88fd\u54c1X')  # \u5546\u54c1\u540d\u3092\u88fd\u54c1X\u306b\u7f6e\u63db\n...     ]\n...     \n...     original_sample = \"2024-01-15 [ERROR] \u5546\u54c1A\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\"\n...     replaced_sample = analyzer.search_and_replace(original_sample, replacements)\n...     print(f\"\u5143\u306e\u30c6\u30ad\u30b9\u30c8: {original_sample}\")\n...     print(f\"\u7f6e\u63db\u5f8c: {replaced_sample}\")\n...     \n...     # \u30b5\u30de\u30ea\u30fc\u30ec\u30dd\u30fc\u30c8\u306e\u751f\u6210\n...     print(\"\\\\n\" + analyzer.generate_summary_report(sample_text))\n\n&gt;&gt;&gt; test_text_analyzer()\n\n=== \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\n\n=== \u57fa\u672c\u60c5\u5831\u306e\u62bd\u51fa ===\nemail: ['tanaka@example.com', 'sato@company.co.jp', 'suzuki@sample.org']\nphone_jp: ['03-1234-5678', '090-9876-5432']\nurl: ['https://www.example.com', 'https://api.sample.co.jp/v1/users']\npostal_code: ['100-0001', '160-0023']\ndate_ymd: ['2024-01-15', '2024-01-15', '2024-01-15', '2024-01-15', '2024-01-16', '2024-01-17']\ntime_hm: ['10:30', '10:31', '10:32']\nnumber: ['30', '25', '35', '03', '1234', '5678', '090', '9876', '5432', '100', '0001', '160', '0023', '2024', '01', '15', '10', '30', '15', '2024', '01', '15', '10', '31', '42', '2024', '01', '15', '10', '32', '01', '10000', '2024', '01', '15', '15000', '2024', '01', '16', '8000', '2024', '01', '17', '123.45', '67.89', '1000', '0.5']\nword: ['INFO', 'ERROR', 'WARN', 'CSV', 'Python']\n\n=== \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u59a5\u5f53\u6027\u30c1\u30a7\u30c3\u30af ===\n\u2713 tanaka@example.com (email): \u6709\u52b9\n\u2713 03-1234-5678 (phone_jp): \u6709\u52b9\n\u2713 https://www.example.com (url): \u6709\u52b9\n\u2713 100-0001 (postal_code): \u6709\u52b9\n\u2713 2024-01-15 (date_ymd): \u6709\u52b9\n\u2717 invalid-email (email): \u7121\u52b9\n\n=== \u6a5f\u5bc6\u30c7\u30fc\u30bf\u306e\u30de\u30b9\u30ad\u30f3\u30b0 ===\n\u30de\u30b9\u30ad\u30f3\u30b0\u524d:\n\u7530\u4e2d\u592a\u90ce\u306e\u30e1\u30fc\u30eb: tanaka@example.com, \u96fb\u8a71: 03-1234-5678\n\u30de\u30b9\u30ad\u30f3\u30b0\u5f8c:\n\u7530\u4e2d\u592a\u90ce\u306e\u30e1\u30fc\u30eb: ***@***.**, \u96fb\u8a71: ***-****-****\n\n=== \u69cb\u9020\u5316\u30c7\u30fc\u30bf\u306e\u62bd\u51fa ===\n\nlogs:\n  {'timestamp': '2024-01-15 10:30:15', 'level': 'INFO', 'message': '\u30e6\u30fc\u30b6\u30fc\u30ed\u30b0\u30a4\u30f3\u6210\u529f'}\n  {'timestamp': '2024-01-15 10:31:42', 'level': 'ERROR', 'message': '\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc'}\n  {'timestamp': '2024-01-15 10:32:01', 'level': 'WARN', 'message': '\u51e6\u7406\u6642\u9593\u304c\u95be\u5024\u3092\u8d85\u904e'}\n\ncsv_data:\n  {'field1': '\u5546\u54c1A', 'field2': ' 10000', 'field3': ' 2024-01-15'}\n  {'field1': '\u5546\u54c1B', 'field2': ' 15000', 'field3': ' 2024-01-16'}\n  {'field1': '\u5546\u54c1C', 'field2': ' 8000', 'field3': ' 2024-01-17'}\n\nusers:\n  {'name': '\u7530\u4e2d\u592a\u90ce', 'age': '30', 'email': 'tanaka@example.com'}\n  {'name': '\u4f50\u85e4\u82b1\u5b50', 'age': '25', 'email': 'sato@company.co.jp'}\n  {'name': '\u9234\u6728\u4e00\u90ce', 'age': '35', 'email': 'suzuki@sample.org'}\n\n=== \u30c6\u30ad\u30b9\u30c8\u30d1\u30bf\u30fc\u30f3\u306e\u5206\u6790 ===\nword_count: 44\nunique_words: 33\nmost_common_words: [('01', 8), ('2024', 6), ('15', 5), ('10', 3), ('com', 2)]\nsentence_count: 2\navg_sentence_length: 11.0\nparagraph_count: 1\nnumber_count: 54\nnumber_sum: 39086.05\n\n=== \u691c\u7d22\u3068\u7f6e\u63db ===\n\u5143\u306e\u30c6\u30ad\u30b9\u30c8: 2024-01-15 [ERROR] \u5546\u54c1A\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\n\u7f6e\u63db\u5f8c: [DATE] [[ERROR]] \u88fd\u54c1X\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\n\n=== \u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30ec\u30dd\u30fc\u30c8 ===\n\u30c6\u30ad\u30b9\u30c8\u9577: 1090\u6587\u5b57\n\u5358\u8a9e\u6570: 44\n\u30e6\u30cb\u30fc\u30af\u5358\u8a9e\u6570: 33\n\u6587\u6570: 2\n\u6bb5\u843d\u6570: 1\n\n\u3010\u62bd\u51fa\u3055\u308c\u305f\u60c5\u5831\u3011\nemail: 3\u500b\n  - tanaka@example.com\n  - sato@company.co.jp\n  - suzuki@sample.org\nphone_jp: 2\u500b\n  - 03-1234-5678\n  - 090-9876-5432\nurl: 2\u500b\n  - https://www.example.com\n  - https://api.sample.co.jp/v1/users\npostal_code: 2\u500b\n  - 100-0001\n  - 160-0023\ndate_ymd: 6\u500b\n  - 2024-01-15\n  - 2024-01-15\n  - 2024-01-15\n  ... \u4ed6 3\u500b\ntime_hm: 3\u500b\n  - 10:30\n  - 10:31\n  - 10:32\nnumber: 54\u500b\n  - 30\n  - 25\n  - 35\n  ... \u4ed6 51\u500b\nword: 5\u500b\n  - INFO\n  - ERROR\n  - WARN\n  ... \u4ed6 2\u500b\n\n\u3010\u983b\u51fa\u5358\u8a9e TOP5\u3011\n01: 8\u56de\n2024: 6\u56de\n15: 5\u56de\n10: 3\u56de\ncom: 2\u56de\n</code></pre>"},{"location":"chapter19/#-collections","title":"\u30c7\u30fc\u30bf\u69cb\u9020 - collections\u30e2\u30b8\u30e5\u30fc\u30eb","text":""},{"location":"chapter19/#_6","title":"\u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u6d3b\u7528","text":"<pre><code>&gt;&gt;&gt; from collections import defaultdict, Counter, deque, namedtuple, OrderedDict, ChainMap\n&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; import heapq\n\n&gt;&gt;&gt; class AdvancedDataStructures:\n...     \"\"\"\u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u6d3b\u7528\u4f8b\"\"\"\n...     \n...     def demonstrate_counter(self):\n...         \"\"\"Counter\u306e\u4f7f\u7528\u4f8b\"\"\"\n...         print(\"=== Counter \u306e\u4f7f\u7528\u4f8b ===\")\n...         \n...         # \u6587\u5b57\u306e\u983b\u5ea6\u30ab\u30a6\u30f3\u30c8\n...         text = \"hello world python programming\"\n...         char_count = Counter(text)\n...         print(f\"\u6587\u5b57\u306e\u983b\u5ea6: {char_count.most_common(5)}\")\n...         \n...         # \u5358\u8a9e\u306e\u983b\u5ea6\u30ab\u30a6\u30f3\u30c8\n...         words = text.split()\n...         word_count = Counter(words)\n...         print(f\"\u5358\u8a9e\u306e\u983b\u5ea6: {word_count}\")\n...         \n...         # \u30a2\u30af\u30bb\u30b9\u30ed\u30b0\u306e\u5206\u6790\u4f8b\n...         access_logs = [\n...             \"192.168.1.100\", \"192.168.1.101\", \"192.168.1.100\",\n...             \"10.0.0.1\", \"192.168.1.100\", \"10.0.0.1\", \"192.168.1.102\"\n...         ]\n...         ip_count = Counter(access_logs)\n...         print(f\"IP\u30a2\u30c9\u30ec\u30b9\u5225\u30a2\u30af\u30bb\u30b9\u6570: {ip_count.most_common()}\")\n...         \n...         # Counter\u540c\u58eb\u306e\u6f14\u7b97\n...         counter1 = Counter(\"aabbc\")\n...         counter2 = Counter(\"abc\")\n...         print(f\"Counter1: {counter1}\")\n...         print(f\"Counter2: {counter2}\")\n...         print(f\"\u52a0\u7b97: {counter1 + counter2}\")\n...         print(f\"\u6e1b\u7b97: {counter1 - counter2}\")\n...         print(f\"\u7a4d\u96c6\u5408: {counter1 &amp; counter2}\")\n...     \n...     def demonstrate_defaultdict(self):\n...         \"\"\"defaultdict\u306e\u4f7f\u7528\u4f8b\"\"\"\n...         print(\"\\\\n=== defaultdict \u306e\u4f7f\u7528\u4f8b ===\")\n...         \n...         # \u30b0\u30eb\u30fc\u30d7\u5316\u306e\u4f8b\n...         students = [\n...             (\"\u7530\u4e2d\", \"\u6570\u5b66\"), (\"\u4f50\u85e4\", \"\u82f1\u8a9e\"), (\"\u9234\u6728\", \"\u6570\u5b66\"),\n...             (\"\u9ad8\u6a4b\", \"\u7406\u79d1\"), (\"\u5c71\u7530\", \"\u82f1\u8a9e\"), (\"\u6e21\u8fba\", \"\u6570\u5b66\")\n...         ]\n...         \n...         # \u901a\u5e38\u306e\u8f9e\u66f8\u3067\u306f\u8907\u96d1\n...         regular_dict = {}\n...         for name, subject in students:\n...             if subject not in regular_dict:\n...                 regular_dict[subject] = []\n...             regular_dict[subject].append(name)\n...         \n...         # defaultdict\u306a\u3089\u7c21\u6f54\n...         grouped = defaultdict(list)\n...         for name, subject in students:\n...             grouped[subject].append(name)\n...         \n...         print(\"\u79d1\u76ee\u5225\u751f\u5f92\u4e00\u89a7:\")\n...         for subject, names in grouped.items():\n...             print(f\"  {subject}: {names}\")\n...         \n...         # \u30cd\u30b9\u30c8\u3057\u305f defaultdict\n...         sales_data = defaultdict(lambda: defaultdict(int))\n...         sales_records = [\n...             (\"2024-01\", \"\u5546\u54c1A\", 100),\n...             (\"2024-01\", \"\u5546\u54c1B\", 150),\n...             (\"2024-02\", \"\u5546\u54c1A\", 120),\n...             (\"2024-02\", \"\u5546\u54c1C\", 80)\n...         ]\n...         \n...         for month, product, amount in sales_records:\n...             sales_data[month][product] += amount\n...         \n...         print(\"\\\\n\u6708\u5225\u30fb\u5546\u54c1\u5225\u58f2\u4e0a:\")\n...         for month, products in sales_data.items():\n...             print(f\"  {month}:\")\n...             for product, amount in products.items():\n...                 print(f\"    {product}: {amount}\")\n...     \n...     def demonstrate_deque(self):\n...         \"\"\"deque\u306e\u4f7f\u7528\u4f8b\"\"\"\n...         print(\"\\\\n=== deque \u306e\u4f7f\u7528\u4f8b ===\")\n...         \n...         # \u4e21\u7aef\u30ad\u30e5\u30fc\u3068\u3057\u3066\u306e\u4f7f\u7528\n...         task_queue = deque()\n...         \n...         # \u53f3\u7aef\u306b\u8ffd\u52a0\uff08\u901a\u5e38\u306e\u30ad\u30e5\u30fc\u64cd\u4f5c\uff09\n...         task_queue.append(\"\u30bf\u30b9\u30af1\")\n...         task_queue.append(\"\u30bf\u30b9\u30af2\")\n...         task_queue.append(\"\u30bf\u30b9\u30af3\")\n...         print(f\"\u30bf\u30b9\u30af\u30ad\u30e5\u30fc: {list(task_queue)}\")\n...         \n...         # \u5de6\u7aef\u304b\u3089\u53d6\u5f97\uff08FIFO\uff09\n...         first_task = task_queue.popleft()\n...         print(f\"\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af: {first_task}\")\n...         print(f\"\u6b8b\u308a\u30bf\u30b9\u30af: {list(task_queue)}\")\n...         \n...         # \u512a\u5148\u30bf\u30b9\u30af\u3092\u5de6\u7aef\u306b\u8ffd\u52a0\n...         task_queue.appendleft(\"\u7dca\u6025\u30bf\u30b9\u30af\")\n...         print(f\"\u7dca\u6025\u30bf\u30b9\u30af\u8ffd\u52a0\u5f8c: {list(task_queue)}\")\n...         \n...         # \u56fa\u5b9a\u30b5\u30a4\u30ba\u306e\u30d0\u30c3\u30d5\u30a1\uff08\u6700\u8fd1\u306eN\u4ef6\u3092\u4fdd\u6301\uff09\n...         recent_actions = deque(maxlen=3)\n...         actions = [\"\u30a2\u30af\u30b7\u30e7\u30f31\", \"\u30a2\u30af\u30b7\u30e7\u30f32\", \"\u30a2\u30af\u30b7\u30e7\u30f33\", \"\u30a2\u30af\u30b7\u30e7\u30f34\", \"\u30a2\u30af\u30b7\u30e7\u30f35\"]\n...         \n...         for action in actions:\n...             recent_actions.append(action)\n...             print(f\"\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: {list(recent_actions)}\")\n...     \n...     def demonstrate_namedtuple(self):\n...         \"\"\"namedtuple\u306e\u4f7f\u7528\u4f8b\"\"\"\n...         print(\"\\\\n=== namedtuple \u306e\u4f7f\u7528\u4f8b ===\")\n...         \n...         # \u5ea7\u6a19\u70b9\u306e\u5b9a\u7fa9\n...         Point = namedtuple('Point', ['x', 'y'])\n...         p1 = Point(3, 4)\n...         p2 = Point(0, 0)\n...         \n...         print(f\"\u70b91: {p1}\")\n...         print(f\"\u70b91\u306ex\u5ea7\u6a19: {p1.x}\")\n...         print(f\"\u70b91\u306ey\u5ea7\u6a19: {p1.y}\")\n...         \n...         # \u8ddd\u96e2\u8a08\u7b97\n...         distance = ((p1.x - p2.x)**2 + (p1.y - p2.y)**2)**0.5\n...         print(f\"\u539f\u70b9\u304b\u3089\u306e\u8ddd\u96e2: {distance}\")\n...         \n...         # \u5f93\u696d\u54e1\u60c5\u5831\u306e\u5b9a\u7fa9\n...         Employee = namedtuple('Employee', ['id', 'name', 'department', 'salary'])\n...         employees = [\n...             Employee(1, \"\u7530\u4e2d\u592a\u90ce\", \"\u958b\u767a\", 500000),\n...             Employee(2, \"\u4f50\u85e4\u82b1\u5b50\", \"\u55b6\u696d\", 450000),\n...             Employee(3, \"\u9234\u6728\u4e00\u90ce\", \"\u958b\u767a\", 520000)\n...         ]\n...         \n...         print(\"\\\\n\u5f93\u696d\u54e1\u60c5\u5831:\")\n...         for emp in employees:\n...             print(f\"  ID:{emp.id} {emp.name} ({emp.department}) - {emp.salary:,}\u5186\")\n...         \n...         # \u90e8\u7f72\u5225\u5e73\u5747\u7d66\u4e0e\n...         dept_salaries = defaultdict(list)\n...         for emp in employees:\n...             dept_salaries[emp.department].append(emp.salary)\n...         \n...         print(\"\\\\n\u90e8\u7f72\u5225\u5e73\u5747\u7d66\u4e0e:\")\n...         for dept, salaries in dept_salaries.items():\n...             avg_salary = sum(salaries) / len(salaries)\n...             print(f\"  {dept}: {avg_salary:,.0f}\u5186\")\n...     \n...     def demonstrate_chainmap(self):\n...         \"\"\"ChainMap\u306e\u4f7f\u7528\u4f8b\"\"\"\n...         print(\"\\\\n=== ChainMap \u306e\u4f7f\u7528\u4f8b ===\")\n...         \n...         # \u8a2d\u5b9a\u306e\u968e\u5c64\u7ba1\u7406\n...         default_config = {\n...             \"host\": \"localhost\",\n...             \"port\": 8080,\n...             \"debug\": False,\n...             \"timeout\": 30\n...         }\n...         \n...         user_config = {\n...             \"port\": 9000,\n...             \"debug\": True\n...         }\n...         \n...         env_config = {\n...             \"host\": \"production-server.com\"\n...         }\n...         \n...         # \u512a\u5148\u9806\u4f4d: env_config &gt; user_config &gt; default_config\n...         config = ChainMap(env_config, user_config, default_config)\n...         \n...         print(\"\u7d71\u5408\u8a2d\u5b9a:\")\n...         for key, value in config.items():\n...             print(f\"  {key}: {value}\")\n...         \n...         print(f\"\\\\nhost\u8a2d\u5b9a\u306e\u53d6\u5f97: {config['host']}\")\n...         print(f\"port\u8a2d\u5b9a\u306e\u53d6\u5f97: {config['port']}\")\n...         \n...         # \u65b0\u3057\u3044\u8a2d\u5b9a\u306e\u8ffd\u52a0\n...         runtime_config = {\"max_connections\": 100}\n...         extended_config = ChainMap(runtime_config, config)\n...         print(f\"\\\\n\u5b9f\u884c\u6642\u8a2d\u5b9a\u8ffd\u52a0\u5f8c\u306emax_connections: {extended_config.get('max_connections')}\")\n\n&gt;&gt;&gt; # \u5b9f\u7528\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u7d44\u307f\u5408\u308f\u305b\u4f8b\n&gt;&gt;&gt; class LogAnalyzer:\n...     \"\"\"\u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\uff08\u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u4f7f\u7528\uff09\"\"\"\n...     \n...     def __init__(self):\n...         self.log_entries = deque(maxlen=1000)  # \u6700\u65b01000\u4ef6\u306e\u30ed\u30b0\u3092\u4fdd\u6301\n...         self.error_count = Counter()\n...         self.hourly_stats = defaultdict(lambda: defaultdict(int))\n...         \n...         # \u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u306e\u69cb\u9020\u3092\u5b9a\u7fa9\n...         self.LogEntry = namedtuple('LogEntry', \n...                                   ['timestamp', 'level', 'source', 'message'])\n...     \n...     def add_log_entry(self, timestamp, level, source, message):\n...         \"\"\"\u30ed\u30b0\u30a8\u30f3\u30c8\u30ea\u306e\u8ffd\u52a0\"\"\"\n...         entry = self.LogEntry(timestamp, level, source, message)\n...         self.log_entries.append(entry)\n...         \n...         # \u30a8\u30e9\u30fc\u30ec\u30d9\u30eb\u306e\u7d71\u8a08\n...         self.error_count[level] += 1\n...         \n...         # \u6642\u9593\u5225\u7d71\u8a08\n...         hour = timestamp.hour\n...         self.hourly_stats[hour][level] += 1\n...     \n...     def get_error_summary(self):\n...         \"\"\"\u30a8\u30e9\u30fc\u30b5\u30de\u30ea\u30fc\u306e\u53d6\u5f97\"\"\"\n...         return dict(self.error_count)\n...     \n...     def get_hourly_report(self):\n...         \"\"\"\u6642\u9593\u5225\u30ec\u30dd\u30fc\u30c8\u306e\u53d6\u5f97\"\"\"\n...         report = {}\n...         for hour, stats in self.hourly_stats.items():\n...             report[hour] = dict(stats)\n...         return report\n...     \n...     def get_recent_errors(self, error_level=\"ERROR\", count=5):\n...         \"\"\"\u6700\u8fd1\u306e\u30a8\u30e9\u30fc\u30ed\u30b0\u3092\u53d6\u5f97\"\"\"\n...         errors = [entry for entry in self.log_entries \n...                  if entry.level == error_level]\n...         return list(errors)[-count:]\n\n&gt;&gt;&gt; # \u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; def test_advanced_data_structures():\n...     \"\"\"\u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30c6\u30b9\u30c8\"\"\"\n...     print(\"=== \u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30c6\u30b9\u30c8 ===\")\n...     \n...     demo = AdvancedDataStructures()\n...     \n...     # \u5404\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\n...     demo.demonstrate_counter()\n...     demo.demonstrate_defaultdict()\n...     demo.demonstrate_deque()\n...     demo.demonstrate_namedtuple()\n...     demo.demonstrate_chainmap()\n...     \n...     # \u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n...     print(\"\\\\n=== \u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\")\n...     log_analyzer = LogAnalyzer()\n...     \n...     # \u30b5\u30f3\u30d7\u30eb\u30ed\u30b0\u306e\u8ffd\u52a0\n...     sample_logs = [\n...         (datetime(2024, 1, 15, 9, 30), \"INFO\", \"auth\", \"\u30e6\u30fc\u30b6\u30fc\u30ed\u30b0\u30a4\u30f3\"),\n...         (datetime(2024, 1, 15, 9, 31), \"ERROR\", \"db\", \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc\"),\n...         (datetime(2024, 1, 15, 10, 15), \"WARN\", \"api\", \"API\u5fdc\u7b54\u6642\u9593\u8d85\u904e\"),\n...         (datetime(2024, 1, 15, 10, 30), \"ERROR\", \"auth\", \"\u8a8d\u8a3c\u5931\u6557\"),\n...         (datetime(2024, 1, 15, 11, 45), \"INFO\", \"web\", \"\u30da\u30fc\u30b8\u30a2\u30af\u30bb\u30b9\"),\n...         (datetime(2024, 1, 15, 11, 50), \"ERROR\", \"db\", \"\u30af\u30a8\u30ea\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\"),\n...     ]\n...     \n...     for timestamp, level, source, message in sample_logs:\n...         log_analyzer.add_log_entry(timestamp, level, source, message)\n...     \n...     # \u30a8\u30e9\u30fc\u30b5\u30de\u30ea\u30fc\n...     error_summary = log_analyzer.get_error_summary()\n...     print(\"\u30a8\u30e9\u30fc\u30ec\u30d9\u30eb\u5225\u7d71\u8a08:\")\n...     for level, count in error_summary.items():\n...         print(f\"  {level}: {count}\u4ef6\")\n...     \n...     # \u6642\u9593\u5225\u30ec\u30dd\u30fc\u30c8\n...     hourly_report = log_analyzer.get_hourly_report()\n...     print(\"\\\\n\u6642\u9593\u5225\u30ed\u30b0\u7d71\u8a08:\")\n...     for hour in sorted(hourly_report.keys()):\n...         stats = hourly_report[hour]\n...         print(f\"  {hour:02d}\u6642\u53f0: {dict(stats)}\")\n...     \n...     # \u6700\u8fd1\u306e\u30a8\u30e9\u30fc\n...     recent_errors = log_analyzer.get_recent_errors(\"ERROR\", 3)\n...     print(\"\\\\n\u6700\u8fd1\u306e\u30a8\u30e9\u30fc:\")\n...     for error in recent_errors:\n...         print(f\"  {error.timestamp} [{error.level}] {error.source}: {error.message}\")\n\n&gt;&gt;&gt; test_advanced_data_structures()\n\n=== \u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u30c6\u30b9\u30c8 ===\n=== Counter \u306e\u4f7f\u7528\u4f8b ===\n\u6587\u5b57\u306e\u983b\u5ea6: [('o', 3), ('r', 3), ('m', 3), (' ', 3), ('g', 2)]\n\u5358\u8a9e\u306e\u983b\u5ea6: Counter({'hello': 1, 'world': 1, 'python': 1, 'programming': 1})\nIP\u30a2\u30c9\u30ec\u30b9\u5225\u30a2\u30af\u30bb\u30b9\u6570: [('192.168.1.100', 3), ('10.0.0.1', 2), ('192.168.1.101', 1), ('192.168.1.102', 1)]\nCounter1: Counter({'a': 2, 'b': 2, 'c': 1})\nCounter2: Counter({'a': 1, 'b': 1, 'c': 1})\n\u52a0\u7b97: Counter({'a': 3, 'b': 3, 'c': 2})\n\u6e1b\u7b97: Counter({'a': 1, 'b': 1})\n\u7a4d\u96c6\u5408: Counter({'a': 1, 'b': 1, 'c': 1})\n\n=== defaultdict \u306e\u4f7f\u7528\u4f8b ===\n\u79d1\u76ee\u5225\u751f\u5f92\u4e00\u89a7:\n  \u6570\u5b66: ['\u7530\u4e2d', '\u9234\u6728', '\u6e21\u8fba']\n  \u82f1\u8a9e: ['\u4f50\u85e4', '\u5c71\u7530']\n  \u7406\u79d1: ['\u9ad8\u6a4b']\n\n\u6708\u5225\u30fb\u5546\u54c1\u5225\u58f2\u4e0a:\n  2024-01:\n    \u5546\u54c1A: 100\n    \u5546\u54c1B: 150\n  2024-02:\n    \u5546\u54c1A: 120\n    \u5546\u54c1C: 80\n\n=== deque \u306e\u4f7f\u7528\u4f8b ===\n\u30bf\u30b9\u30af\u30ad\u30e5\u30fc: ['\u30bf\u30b9\u30af1', '\u30bf\u30b9\u30af2', '\u30bf\u30b9\u30af3']\n\u5b9f\u884c\u3059\u308b\u30bf\u30b9\u30af: \u30bf\u30b9\u30af1\n\u6b8b\u308a\u30bf\u30b9\u30af: ['\u30bf\u30b9\u30af2', '\u30bf\u30b9\u30af3']\n\u7dca\u6025\u30bf\u30b9\u30af\u8ffd\u52a0\u5f8c: ['\u7dca\u6025\u30bf\u30b9\u30af', '\u30bf\u30b9\u30af2', '\u30bf\u30b9\u30af3']\n\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: ['\u30a2\u30af\u30b7\u30e7\u30f31']\n\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: ['\u30a2\u30af\u30b7\u30e7\u30f31', '\u30a2\u30af\u30b7\u30e7\u30f32']\n\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: ['\u30a2\u30af\u30b7\u30e7\u30f31', '\u30a2\u30af\u30b7\u30e7\u30f32', '\u30a2\u30af\u30b7\u30e7\u30f33']\n\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: ['\u30a2\u30af\u30b7\u30e7\u30f32', '\u30a2\u30af\u30b7\u30e7\u30f33', '\u30a2\u30af\u30b7\u30e7\u30f34']\n\u6700\u8fd1\u306e\u30a2\u30af\u30b7\u30e7\u30f3: ['\u30a2\u30af\u30b7\u30e7\u30f33', '\u30a2\u30af\u30b7\u30e7\u30f34', '\u30a2\u30af\u30b7\u30e7\u30f35']\n\n=== namedtuple \u306e\u4f7f\u7528\u4f8b ===\n\u70b91: Point(x=3, y=4)\n\u70b91\u306ex\u5ea7\u6a19: 3\n\u70b91\u306ey\u5ea7\u6a19: 4\n\u539f\u70b9\u304b\u3089\u306e\u8ddd\u96e2: 5.0\n\n\u5f93\u696d\u54e1\u60c5\u5831:\n  ID:1 \u7530\u4e2d\u592a\u90ce (\u958b\u767a) - 500,000\u5186\n  ID:2 \u4f50\u85e4\u82b1\u5b50 (\u55b6\u696d) - 450,000\u5186\n  ID:3 \u9234\u6728\u4e00\u90ce (\u958b\u767a) - 520,000\u5186\n\n\u90e8\u7f72\u5225\u5e73\u5747\u7d66\u4e0e:\n  \u958b\u767a: 510,000\u5186\n  \u55b6\u696d: 450,000\u5186\n\n=== ChainMap \u306e\u4f7f\u7528\u4f8b ===\n\u7d71\u5408\u8a2d\u5b9a:\n  host: production-server.com\n  port: 9000\n  debug: True\n  timeout: 30\n\nhost\u8a2d\u5b9a\u306e\u53d6\u5f97: production-server.com\nport\u8a2d\u5b9a\u306e\u53d6\u5f97: 9000\n\n\u5b9f\u884c\u6642\u8a2d\u5b9a\u8ffd\u52a0\u5f8c\u306emax_connections: 100\n\n=== \u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8 ===\n\u30a8\u30e9\u30fc\u30ec\u30d9\u30eb\u5225\u7d71\u8a08:\n  INFO: 2\u4ef6\n  ERROR: 3\u4ef6\n  WARN: 1\u4ef6\n\n\u6642\u9593\u5225\u30ed\u30b0\u7d71\u8a08:\n  09\u6642\u53f0: {'INFO': 1, 'ERROR': 1}\n  10\u6642\u53f0: {'WARN': 1, 'ERROR': 1}\n  11\u6642\u53f0: {'INFO': 1, 'ERROR': 1}\n\n\u6700\u8fd1\u306e\u30a8\u30e9\u30fc:\n  2024-01-15 09:31:00 [ERROR] db: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30a8\u30e9\u30fc\n  2024-01-15 10:30:00 [ERROR] auth: \u8a8d\u8a3c\u5931\u6557\n  2024-01-15 11:50:00 [ERROR] db: \u30af\u30a8\u30ea\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\n</code></pre>"},{"location":"chapter19/#python","title":"\u307e\u3068\u3081\uff1aPython\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6d3b\u7528","text":"<p>\u3053\u306e\u7ae0\u3067\u5b66\u3093\u3060\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3057\u3087\u3046\uff1a</p>"},{"location":"chapter19/#_7","title":"\u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7279\u5fb4","text":"<ol> <li>datetime: \u65e5\u6642\u306e\u64cd\u4f5c\u3001\u8a08\u7b97\u3001\u30d5\u30a9\u30fc\u30de\u30c3\u30c8</li> <li>os/pathlib: \u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c</li> <li>json: JSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u51e6\u7406</li> <li>re: \u6b63\u898f\u8868\u73fe\u306b\u3088\u308b\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0</li> <li>collections: \u9ad8\u5ea6\u306a\u30c7\u30fc\u30bf\u69cb\u9020</li> </ol>"},{"location":"chapter19/#_8","title":"\u5b9f\u7528\u7684\u306a\u5fdc\u7528\u4f8b","text":"<ul> <li>\u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0: datetime, validation</li> <li>\u30d5\u30a1\u30a4\u30eb\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0: pathlib, os, shutil</li> <li>\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0: json, validation</li> <li>\u30c6\u30ad\u30b9\u30c8\u89e3\u6790: re, collections.Counter</li> <li>\u30ed\u30b0\u89e3\u6790: collections\u5168\u822c</li> </ul>"},{"location":"chapter19/#_9","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30e1\u30e2\u30ea\u52b9\u7387","text":"<pre><code># \u52b9\u7387\u7684\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u306e\u9078\u629e\nCounter(\"abcabc\")           # \u983b\u5ea6\u30ab\u30a6\u30f3\u30c8\ndefaultdict(list)           # \u30b0\u30eb\u30fc\u30d7\u5316\ndeque(maxlen=1000)         # \u56fa\u5b9a\u30b5\u30a4\u30ba\u30d0\u30c3\u30d5\u30a1\nnamedtuple('Point', 'x y')  # \u8efd\u91cf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n</code></pre>"},{"location":"chapter19/#_10","title":"\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<ol> <li>\u9069\u5207\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u9078\u629e: \u8981\u4ef6\u306b\u5fdc\u3058\u305f\u6700\u9069\u306a\u30e2\u30b8\u30e5\u30fc\u30eb</li> <li>\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0: \u4f8b\u5916\u51e6\u7406\u306e\u9069\u5207\u306a\u5b9f\u88c5</li> <li>\u578b\u30d2\u30f3\u30c8: \u53ef\u8aad\u6027\u3068\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u306e\u5411\u4e0a</li> <li>\u8a2d\u5b9a\u306e\u5206\u96e2: \u74b0\u5883\u5225\u8a2d\u5b9a\u306e\u7ba1\u7406</li> <li>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9: \u5927\u91cf\u30c7\u30fc\u30bf\u51e6\u7406\u306e\u6700\u9069\u5316</li> </ol>"},{"location":"chapter19/#_11","title":"\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308b\u76f8\u4e57\u52b9\u679c","text":"<pre><code># \u8907\u6570\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\nconfig = json.load(f)                    # JSON\u8a2d\u5b9a\u8aad\u307f\u8fbc\u307f\nlog_file = Path(config['log_path'])      # pathlib \u3067\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\nentries = Counter()                       # collections \u3067\u30ab\u30a6\u30f3\u30c8\npattern = re.compile(config['pattern'])  # \u6b63\u898f\u8868\u73fe\u30d1\u30bf\u30fc\u30f3\n</code></pre> <p>\u6b21\u306e\u7ae0\u3067\u306f\u3001Python\u958b\u767a\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u3064\u3044\u3066\u5b66\u3073\u307e\u3059\u3002\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406\u3001\u4eee\u60f3\u74b0\u5883\u306a\u3069\u3001\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306a\u958b\u767a\u306b\u5fc5\u8981\u306a\u77e5\u8b58\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\uff01</p> <p>\u7b2c19\u7ae0\u57f7\u7b46\u5b8c\u4e86\u30ed\u30b0: \u7b2c19\u7ae0\u3067\u306fPython\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3002datetime\u3001os/pathlib\u3001json\u3001re\u3001collections\u306e\u57fa\u672c\u304b\u3089\u9ad8\u5ea6\u306a\u6d3b\u7528\u307e\u3067\u6bb5\u968e\u7684\u306b\u8aac\u660e\u3002\u5b9f\u8df5\u4f8b\u3068\u3057\u3066\u52e4\u6020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u7ba1\u7406\u3001\u8a2d\u5b9a\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3001\u30c6\u30ad\u30b9\u30c8\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u3001\u30ed\u30b0\u89e3\u6790\u30b7\u30b9\u30c6\u30e0\u3092\u69cb\u7bc9\u3002\u5404\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u308b\u76f8\u4e57\u52b9\u679c\u3082\u542b\u3080\u5b8c\u5168\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u6d3b\u7528\u65b9\u6cd5\u3092\u5b9f\u88c5\u3002\u6b21\u306f\u7b2c20\u7ae0\u306e\u958b\u767a\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306b\u9032\u307f\u307e\u3059\u3002</p>"},{"location":"chapter20/","title":"\u7b2c20\u7ae0\uff1aPython\u958b\u767a\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3053\u3068\u306f\u3001\u6587\u7ae0\u3092\u66f8\u304f\u3053\u3068\u306b\u4f3c\u3066\u3044\u307e\u3059\u3002\u8aad\u307f\u3084\u3059\u304f\u3001\u4fdd\u5b88\u3057\u3084\u3059\u304f\u3001\u62e1\u5f35\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u304c\u91cd\u8981\u3067\u3059\u3002\u3053\u306e\u7ae0\u3067\u306f\u3001Python\u958b\u767a\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u5b66\u3073\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u3001\u30c1\u30fc\u30e0\u958b\u767a\u30c4\u30fc\u30eb\u3001\u7d99\u7d9a\u7684\u30a4\u30f3\u30c6\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u30b7\u30b9\u30c6\u30e0\u3092\u4f5c\u308a\u306a\u304c\u3089\u3001\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u306aPython\u958b\u767a\u8005\u306b\u306a\u308b\u305f\u3081\u306e\u6280\u8853\u3092\u7fd2\u5f97\u3057\u307e\u3057\u3087\u3046\u3002</p>"},{"location":"chapter20/#_1","title":"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u3068\u30b9\u30bf\u30a4\u30eb","text":""},{"location":"chapter20/#pep-8-python","title":"PEP 8 - Python\u306e\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9","text":"<p>PEP 8\u306f\u3001Python\u30b3\u30fc\u30c9\u306e\u516c\u5f0f\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u3067\u3059\u3002\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u305f\u3081\u306e\u898f\u5247\u304c\u5b9a\u3081\u3089\u308c\u3066\u3044\u307e\u3059\uff1a</p> <pre><code>&gt;&gt;&gt; # \u60aa\u3044\u4f8b\uff08PEP 8\u306b\u9055\u53cd\uff09\n&gt;&gt;&gt; def calculateTax(price,rate):\n...     if price&gt;1000:\n...         tax=price*rate\n...         total=price+tax\n...         return total\n...     else:\n...         return price\n\n&gt;&gt;&gt; # \u826f\u3044\u4f8b\uff08PEP 8\u306b\u6e96\u62e0\uff09\n&gt;&gt;&gt; def calculate_tax(price, rate):\n...     \"\"\"\u4fa1\u683c\u3068\u7a0e\u7387\u304b\u3089\u7a0e\u8fbc\u307f\u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b\"\"\"\n...     if price &gt; 1000:\n...         tax = price * rate\n...         total = price + tax\n...         return total\n...     else:\n...         return price\n\n&gt;&gt;&gt; # \u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af\u306e\u5b9f\u4f8b\n&gt;&gt;&gt; def demonstrate_style_guidelines():\n...     \"\"\"\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\"\"\"\n...     print(\"=== PEP 8 \u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3 ===\")\n...     \n...     # 1. \u547d\u540d\u898f\u5247\n...     # \u5909\u6570\u30fb\u95a2\u6570: snake_case\n...     user_name = \"\u7530\u4e2d\u592a\u90ce\"\n...     max_attempts = 3\n...     \n...     # \u30af\u30e9\u30b9: PascalCase\n...     class UserAccount:\n...         pass\n...     \n...     # \u5b9a\u6570: UPPER_CASE\n...     MAX_FILE_SIZE = 1024 * 1024\n...     DEFAULT_TIMEOUT = 30\n...     \n...     # 2. \u30a4\u30f3\u30c7\u30f3\u30c8: 4\u3064\u306e\u30b9\u30da\u30fc\u30b9\n...     if user_name:\n...         if max_attempts &gt; 0:\n...             print(f\"\u30e6\u30fc\u30b6\u30fc: {user_name}\")\n...     \n...     # 3. \u6f14\u7b97\u5b50\u306e\u524d\u5f8c\u306b\u30b9\u30da\u30fc\u30b9\n...     result = (10 + 20) * 3 / 2\n...     is_valid = result &gt; 0 and max_attempts &gt;= 1\n...     \n...     # 4. \u30b3\u30f3\u30de\u306e\u5f8c\u306b\u30b9\u30da\u30fc\u30b9\n...     numbers = [1, 2, 3, 4, 5]\n...     coordinates = (10, 20, 30)\n...     \n...     # 5. \u884c\u306e\u9577\u3055\u306f79\u6587\u5b57\u4ee5\u5185\n...     long_message = (\n...         \"\u3053\u308c\u306f\u975e\u5e38\u306b\u9577\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u3001\"\n...         \"\u884c\u306e\u9577\u3055\u309279\u6587\u5b57\u4ee5\u5185\u306b\u53ce\u3081\u308b\u305f\u3081\u306b\"\n...         \"\u8907\u6570\u884c\u306b\u5206\u5272\u3057\u3066\u3044\u307e\u3059\"\n...     )\n...     \n...     print(\"\u2713 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306e\u78ba\u8a8d\u5b8c\u4e86\")\n...     return True\n\n&gt;&gt;&gt; demonstrate_style_guidelines()\n\n=== PEP 8 \u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3 ===\n\u2713 \u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306e\u78ba\u8a8d\u5b8c\u4e86\nTrue\n</code></pre>"},{"location":"chapter20/#_2","title":"\u3010\u5b9f\u884c\u3011\u81ea\u52d5\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\u3068\u30ea\u30f3\u30bf\u30fc\u3092\u4f7f\u304a\u3046","text":"<pre><code>&gt;&gt;&gt; import subprocess\n&gt;&gt;&gt; import sys\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; from pathlib import Path\n\n&gt;&gt;&gt; class CodeQualityManager:\n...     \"\"\"\u30b3\u30fc\u30c9\u54c1\u8cea\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, project_path):\n...         self.project_path = Path(project_path)\n...         self.config = {\n...             'line_length': 79,\n...             'ignore_errors': ['E203', 'E501'],\n...             'exclude_dirs': ['.git', '__pycache__', '.venv']\n...         }\n...     \n...     def create_sample_code(self):\n...         \"\"\"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\"\"\"\n...         sample_code = '''# \u60aa\u3044\u30b9\u30bf\u30a4\u30eb\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n... import sys,os\n... \n... def badFunction(x,y):\n...     if x&gt;y:\n...         return x*2+y\n...     else:return y*2+x\n... \n... class badClass:\n...     def __init__(self,name):\n...         self.name=name\n...     def getName(self):return self.name\n... \n... # \u9577\u3044\u884c\u306e\u4f8b\n... very_long_variable_name = \"\u3053\u308c\u306f\u975e\u5e38\u306b\u9577\u3044\u6587\u5b57\u5217\u3067\u3001\u884c\u306e\u9577\u3055\u5236\u9650\u3092\u8d85\u3048\u3066\u3044\u308b\u305f\u3081\u3001\u9069\u5207\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n... '''\n...         \n...         sample_file = self.project_path / \"bad_style.py\"\n...         sample_file.parent.mkdir(parents=True, exist_ok=True)\n...         sample_file.write_text(sample_code)\n...         return sample_file\n...     \n...     def format_with_black(self, file_path):\n...         \"\"\"black\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\"\"\"\n...         print(f\"=== Black \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b9f\u884c ===\")\n...         print(f\"\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb: {file_path}\")\n...         \n...         # \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u524d\u306e\u30b3\u30fc\u30c9\u3092\u8868\u793a\n...         print(\"\\\\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u524d:\")\n...         with open(file_path, 'r', encoding='utf-8') as f:\n...             original_code = f.read()\n...             print(original_code[:200] + \"...\")\n...         \n...         # black\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\uff08\u5b9f\u969b\u306b\u306f\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\uff09\n...         formatted_code = '''# \u826f\u3044\u30b9\u30bf\u30a4\u30eb\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\n... import os\n... import sys\n... \n... \n... def bad_function(x, y):\n...     if x &gt; y:\n...         return x * 2 + y\n...     else:\n...         return y * 2 + x\n... \n... \n... class BadClass:\n...     def __init__(self, name):\n...         self.name = name\n... \n...     def get_name(self):\n...         return self.name\n... \n... \n... # \u9577\u3044\u884c\u306e\u4f8b\uff08\u9069\u5207\u306b\u5206\u5272\uff09\n... very_long_variable_name = (\n...     \"\u3053\u308c\u306f\u975e\u5e38\u306b\u9577\u3044\u6587\u5b57\u5217\u3067\u3001\u884c\u306e\u9577\u3055\u5236\u9650\u3092\u8d85\u3048\u3066\u3044\u308b\u305f\u3081\u3001\"\n...     \"\u9069\u5207\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n... )\n... '''\n...         \n...         with open(file_path, 'w', encoding='utf-8') as f:\n...             f.write(formatted_code)\n...         \n...         print(\"\\\\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5f8c:\")\n...         print(formatted_code[:200] + \"...\")\n...         print(\"\u2713 black\u306b\u3088\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b8c\u4e86\")\n...     \n...     def check_with_flake8(self, file_path):\n...         \"\"\"flake8\u3092\u4f7f\u3063\u305f\u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af\"\"\"\n...         print(f\"\\\\n=== Flake8 \u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af ===\")\n...         \n...         # \u30b9\u30bf\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n...         errors = [\n...             \"bad_style.py:2:10: E401 multiple imports on one line\",\n...             \"bad_style.py:4:18: E128 continuation line under-indented\",\n...             \"bad_style.py:5:12: E225 missing whitespace around operator\",\n...             \"bad_style.py:7:24: E701 multiple statements on one line\",\n...             \"bad_style.py:9:1: E302 expected 2 blank lines, found 1\",\n...             \"bad_style.py:15:80: E501 line too long (95 &gt; 79 characters)\"\n...         ]\n...         \n...         if errors:\n...             print(\"\u767a\u898b\u3055\u308c\u305f\u30b9\u30bf\u30a4\u30eb\u9055\u53cd:\")\n...             for error in errors:\n...                 print(f\"  {error}\")\n...             print(f\"\\\\n\u5408\u8a08 {len(errors)} \u500b\u306e\u554f\u984c\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\")\n...         else:\n...             print(\"\u2713 \u30b9\u30bf\u30a4\u30eb\u9055\u53cd\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\")\n...         \n...         return len(errors)\n...     \n...     def setup_pre_commit_hooks(self):\n...         \"\"\"\u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u306e\u8a2d\u5b9a\"\"\"\n...         print(\"\\\\n=== \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u306e\u8a2d\u5b9a ===\")\n...         \n...         # .pre-commit-config.yaml\u306e\u8a2d\u5b9a\u4f8b\n...         pre_commit_config = '''repos:\n... -   repo: https://github.com/psf/black\n...     rev: 23.1.0\n...     hooks:\n...     -   id: black\n...         language_version: python3\n... \n... -   repo: https://github.com/pycqa/flake8\n...     rev: 6.0.0\n...     hooks:\n...     -   id: flake8\n...         args: [--max-line-length=88]\n... \n... -   repo: https://github.com/pre-commit/mirrors-mypy\n...     rev: v1.0.1\n...     hooks:\n...     -   id: mypy\n...         additional_dependencies: [types-requests]\n... '''\n...         \n...         config_file = self.project_path / \".pre-commit-config.yaml\"\n...         config_file.write_text(pre_commit_config)\n...         \n...         print(\"\u2713 .pre-commit-config.yaml \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\")\n...         print(\"\u2713 \u30b3\u30df\u30c3\u30c8\u524d\u306b\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\")\n...         \n...         return config_file\n\n&gt;&gt;&gt; # \u30b3\u30fc\u30c9\u54c1\u8cea\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; project_path = \"/tmp/python_project\"\n&gt;&gt;&gt; quality_manager = CodeQualityManager(project_path)\n\n&gt;&gt;&gt; # \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n&gt;&gt;&gt; sample_file = quality_manager.create_sample_code()\n&gt;&gt;&gt; print(f\"\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210: {sample_file}\")\n\n&gt;&gt;&gt; # \u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af\u5b9f\u884c\n&gt;&gt;&gt; error_count = quality_manager.check_with_flake8(sample_file)\n\n&gt;&gt;&gt; # \u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b9f\u884c\n&gt;&gt;&gt; quality_manager.format_with_black(sample_file)\n\n&gt;&gt;&gt; # \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u8a2d\u5b9a\n&gt;&gt;&gt; quality_manager.setup_pre_commit_hooks()\n\n\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210: /tmp/python_project/bad_style.py\n\n=== Flake8 \u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30af ===\n\u767a\u898b\u3055\u308c\u305f\u30b9\u30bf\u30a4\u30eb\u9055\u53cd:\n  bad_style.py:2:10: E401 multiple imports on one line\n  bad_style.py:4:18: E128 continuation line under-indented\n  bad_style.py:5:12: E225 missing whitespace around operator\n  bad_style.py:7:24: E701 multiple statements on one line\n  bad_style.py:9:1: E302 expected 2 blank lines, found 1\n  bad_style.py:15:80: E501 line too long (95 &gt; 79 characters)\n\n\u5408\u8a08 6 \u500b\u306e\u554f\u984c\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\n\n=== Black \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b9f\u884c ===\n\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb: /tmp/python_project/bad_style.py\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u524d:\n# \u60aa\u3044\u30b9\u30bf\u30a4\u30eb\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nimport sys,os\n\ndef badFunction(x,y):\n    if x&gt;y:\n        return x*2+y\n    else:return y*2+x\n\nclass badClass:\n    def __init__(self,name):\n        self.name=name\n    def getName(self):return self.name\n\n# \u9577\u3044\u884c\u306e\u4f8b\nvery_long_variable_name = \"\u3053\u308c\u306f\u975e\u5e38\u306b\u9577\u3044\u6587\u5b57\u5217\u3067\u3001\u884c\u306e\u9577\u3055\u5236\u9650\u3092\u8d85\u3048\u3066\u3044\u308b\u305f\u3081\u3001\u9069\u5207\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n...\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5f8c:\n# \u826f\u3044\u30b9\u30bf\u30a4\u30eb\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307f\nimport os\nimport sys\n\n\ndef bad_function(x, y):\n    if x &gt; y:\n        return x * 2 + y\n    else:\n        return y * 2 + x\n\n\nclass BadClass:\n    def __init__(self, name):\n        self.name = name\n\n    def get_name(self):\n        return self.name\n\n\n# \u9577\u3044\u884c\u306e\u4f8b\uff08\u9069\u5207\u306b\u5206\u5272\uff09\nvery_long_variable_name = (\n    \"\u3053\u308c\u306f\u975e\u5e38\u306b\u9577\u3044\u6587\u5b57\u5217\u3067\u3001\u884c\u306e\u9577\u3055\u5236\u9650\u3092\u8d85\u3048\u3066\u3044\u308b\u305f\u3081\u3001\"\n    \"\u9069\u5207\u306b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\"\n)\n...\n\n\u2713 black\u306b\u3088\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u5b8c\u4e86\n\n=== \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u306e\u8a2d\u5b9a ===\n\u2713 .pre-commit-config.yaml \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\n\u2713 \u30b3\u30df\u30c3\u30c8\u524d\u306b\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\n</code></pre>"},{"location":"chapter20/#_3","title":"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406","text":""},{"location":"chapter20/#_4","title":"\u6a19\u6e96\u7684\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020","text":"<pre><code>&gt;&gt;&gt; import os\n&gt;&gt;&gt; from pathlib import Path\n&gt;&gt;&gt; import json\n\n&gt;&gt;&gt; class ProjectStructureManager:\n...     \"\"\"\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, project_name):\n...         self.project_name = project_name\n...         self.project_root = Path(f\"/tmp/{project_name}\")\n...     \n...     def create_project_structure(self):\n...         \"\"\"\u6a19\u6e96\u7684\u306aPython\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u3092\u4f5c\u6210\"\"\"\n...         print(f\"=== {self.project_name} \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u4f5c\u6210 ===\")\n...         \n...         # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u5b9a\u7fa9\n...         structure = {\n...             \"\": [\"README.md\", \"requirements.txt\", \"setup.py\", \".gitignore\"],\n...             \"src\": [],\n...             f\"src/{self.project_name}\": [\"__init__.py\", \"main.py\", \"config.py\"],\n...             f\"src/{self.project_name}/models\": [\"__init__.py\", \"user.py\"],\n...             f\"src/{self.project_name}/views\": [\"__init__.py\", \"web.py\"],\n...             f\"src/{self.project_name}/utils\": [\"__init__.py\", \"helpers.py\"],\n...             \"tests\": [\"__init__.py\", \"conftest.py\"],\n...             \"tests/unit\": [\"__init__.py\", \"test_models.py\"],\n...             \"tests/integration\": [\"__init__.py\", \"test_api.py\"],\n...             \"docs\": [\"index.md\", \"api.md\"],\n...             \"scripts\": [\"setup.sh\", \"deploy.sh\"],\n...             \".github/workflows\": [\"ci.yml\"],\n...         }\n...         \n...         # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n...         for directory, files in structure.items():\n...             if directory:\n...                 dir_path = self.project_root / directory\n...                 dir_path.mkdir(parents=True, exist_ok=True)\n...                 print(f\"\ud83d\udcc1 {directory}/\")\n...             \n...             for file_name in files:\n...                 file_path = self.project_root / directory / file_name\n...                 self.create_file_content(file_path)\n...                 print(f\"   \ud83d\udcc4 {file_name}\")\n...         \n...         print(\"\u2713 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u4f5c\u6210\u5b8c\u4e86\")\n...         return self.project_root\n...     \n...     def create_file_content(self, file_path):\n...         \"\"\"\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u4f5c\u6210\"\"\"\n...         file_name = file_path.name\n...         \n...         if file_name == \"README.md\":\n...             content = f'''# {self.project_name}\n... \n... ## \u6982\u8981\n... {self.project_name}\u306f\u3001Python\u3067\u958b\u767a\u3055\u308c\u305fWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n... \n... ## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... ```bash\n... pip install -r requirements.txt\n... ```\n... \n... ## \u4f7f\u7528\u65b9\u6cd5\n... ```bash\n... python -m {self.project_name}\n... ```\n... \n... ## \u958b\u767a\n... ```bash\n... # \u958b\u767a\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n... python -m venv venv\n... source venv/bin/activate\n... pip install -r requirements.txt\n... \n... # \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n... pytest tests/\n... ```\n... '''\n...         \n...         elif file_name == \"requirements.txt\":\n...             content = '''# \u672c\u756a\u74b0\u5883\u306e\u4f9d\u5b58\u95a2\u4fc2\n... fastapi==0.104.1\n... uvicorn==0.24.0\n... sqlalchemy==2.0.23\n... pydantic==2.5.0\n... \n... # \u958b\u767a\u74b0\u5883\u306e\u4f9d\u5b58\u95a2\u4fc2\n... pytest==7.4.3\n... black==23.11.0\n... flake8==6.1.0\n... mypy==1.7.1\n... '''\n...         \n...         elif file_name == \"setup.py\":\n...             content = f'''from setuptools import setup, find_packages\n... \n... setup(\n...     name=\"{self.project_name}\",\n...     version=\"0.1.0\",\n...     packages=find_packages(where=\"src\"),\n...     package_dir={{\"\": \"src\"}},\n...     install_requires=[\n...         \"fastapi&gt;=0.104.0\",\n...         \"uvicorn&gt;=0.24.0\",\n...         \"sqlalchemy&gt;=2.0.0\",\n...         \"pydantic&gt;=2.5.0\",\n...     ],\n...     extras_require={{\n...         \"dev\": [\n...             \"pytest&gt;=7.4.0\",\n...             \"black&gt;=23.11.0\",\n...             \"flake8&gt;=6.1.0\",\n...             \"mypy&gt;=1.7.0\",\n...         ]\n...     }},\n...     python_requires=\"&gt;=3.8\",\n...     author=\"Your Name\",\n...     author_email=\"your.email@example.com\",\n...     description=\"A sample Python project\",\n...     long_description=open(\"README.md\").read(),\n...     long_description_content_type=\"text/markdown\",\n... )\n... '''\n...         \n...         elif file_name == \".gitignore\":\n...             content = '''# Python\n... __pycache__/\n... *.py[cod]\n... *$py.class\n... *.so\n... .Python\n... build/\n... develop-eggs/\n... dist/\n... downloads/\n... eggs/\n... .eggs/\n... lib/\n... lib64/\n... parts/\n... sdist/\n... var/\n... wheels/\n... *.egg-info/\n... .installed.cfg\n... *.egg\n... \n... # Virtual environments\n... venv/\n... env/\n... ENV/\n... \n... # IDE\n... .vscode/\n... .idea/\n... *.swp\n... *.swo\n... \n... # OS\n... .DS_Store\n... Thumbs.db\n... \n... # Testing\n... .pytest_cache/\n... .coverage\n... htmlcov/\n... \n... # Environment variables\n... .env\n... .env.local\n... '''\n...         \n...         elif file_name == \"__init__.py\":\n...             content = f'''\"\"\"\n... {self.project_name} package\n... \"\"\"\n... \n... __version__ = \"0.1.0\"\n... __author__ = \"Your Name\"\n... '''\n...         \n...         elif file_name == \"main.py\":\n...             content = '''\"\"\"\n... \u30e1\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\n... \"\"\"\n... \n... def main():\n...     \"\"\"\u30e1\u30a4\u30f3\u95a2\u6570\"\"\"\n...     print(f\"Hello from {__package__}!\")\n... \n... \n... if __name__ == \"__main__\":\n...     main()\n... '''\n...         \n...         elif file_name == \"conftest.py\":\n...             content = '''\"\"\"\n... pytest\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n... \"\"\"\n... import pytest\n... \n... \n... @pytest.fixture\n... def sample_data():\n...     \"\"\"\u30c6\u30b9\u30c8\u7528\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\"\"\"\n...     return {\n...         \"users\": [\n...             {\"id\": 1, \"name\": \"\u7530\u4e2d\u592a\u90ce\"},\n...             {\"id\": 2, \"name\": \"\u4f50\u85e4\u82b1\u5b50\"},\n...         ]\n...     }\n... '''\n...         \n...         else:\n...             content = f'\"\"\"\\\\n{file_name} - Generated file\\\\n\"\"\"\\\\n'\n...         \n...         file_path.write_text(content, encoding='utf-8')\n\n&gt;&gt;&gt; # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u4f5c\u6210\n&gt;&gt;&gt; project_manager = ProjectStructureManager(\"mywebapp\")\n&gt;&gt;&gt; project_root = project_manager.create_project_structure()\n\n=== mywebapp \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u4f5c\u6210 ===\n   \ud83d\udcc4 README.md\n   \ud83d\udcc4 requirements.txt\n   \ud83d\udcc4 setup.py\n   \ud83d\udcc4 .gitignore\n\ud83d\udcc1 src/\n\ud83d\udcc1 src/mywebapp/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 main.py\n   \ud83d\udcc4 config.py\n\ud83d\udcc1 src/mywebapp/models/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 user.py\n\ud83d\udcc1 src/mywebapp/views/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 web.py\n\ud83d\udcc1 src/mywebapp/utils/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 helpers.py\n\ud83d\udcc1 tests/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 conftest.py\n\ud83d\udcc1 tests/unit/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 test_models.py\n\ud83d\udcc1 tests/integration/\n   \ud83d\udcc4 __init__.py\n   \ud83d\udcc4 test_api.py\n\ud83d\udcc1 docs/\n   \ud83d\udcc4 index.md\n   \ud83d\udcc4 api.md\n\ud83d\udcc1 scripts/\n   \ud83d\udcc4 setup.sh\n   \ud83d\udcc4 deploy.sh\n\ud83d\udcc1 .github/workflows/\n   \ud83d\udcc4 ci.yml\n\u2713 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u306e\u4f5c\u6210\u5b8c\u4e86\n</code></pre>"},{"location":"chapter20/#_5","title":"\u3010\u5b9f\u884c\u3011\u4eee\u60f3\u74b0\u5883\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406","text":"<pre><code>&gt;&gt;&gt; class VirtualEnvironmentManager:\n...     \"\"\"\u4eee\u60f3\u74b0\u5883\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, project_path):\n...         self.project_path = Path(project_path)\n...         self.venv_path = self.project_path / \"venv\"\n...     \n...     def demonstrate_venv_concept(self):\n...         \"\"\"\u4eee\u60f3\u74b0\u5883\u306e\u6982\u5ff5\u8aac\u660e\"\"\"\n...         print(\"=== \u4eee\u60f3\u74b0\u5883\u3068\u306f ===\")\n...         print(\"\"\"\n... \u4eee\u60f3\u74b0\u5883\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306b\u72ec\u7acb\u3057\u305fPython\u74b0\u5883\u3092\u4f5c\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n... \n... \u306a\u305c\u5fc5\u8981\uff1f\n... 1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8A\u3067\u306fDjango 3.2\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8B\u3067\u306fDjango 4.0\u3092\u4f7f\u3044\u305f\u3044\n... 2. \u672c\u756a\u74b0\u5883\u3068\u958b\u767a\u74b0\u5883\u3067\u7570\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\n... 3. \u30b0\u30ed\u30fc\u30d0\u30eb\u74b0\u5883\u3092\u6c5a\u67d3\u305b\u305a\u306b\u5b9f\u9a13\n... \n... \u4eee\u60f3\u74b0\u5883\u306a\u3057:\n... \u30b7\u30b9\u30c6\u30e0\u5168\u4f53 \u2192 Django 3.2\uff08\u3059\u3079\u3066\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5171\u6709\uff09\n... \n... \u4eee\u60f3\u74b0\u5883\u3042\u308a:\n... \u30d7\u30ed\u30b8\u30a7\u30af\u30c8A/venv \u2192 Django 3.2\n... \u30d7\u30ed\u30b8\u30a7\u30af\u30c8B/venv \u2192 Django 4.0\n... \u30d7\u30ed\u30b8\u30a7\u30af\u30c8C/venv \u2192 Flask 2.0\n... \"\"\")\n...     \n...     def create_requirements_files(self):\n...         \"\"\"\u4f9d\u5b58\u95a2\u4fc2\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== \u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210 ===\")\n...         \n...         # requirements.txt\uff08\u672c\u756a\u7528\uff09\n...         requirements_txt = '''# Web \u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n... fastapi==0.104.1\n... uvicorn[standard]==0.24.0\n... \n... # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\n... sqlalchemy==2.0.23\n... alembic==1.12.1\n... psycopg2-binary==2.9.9\n... \n... # \u30c7\u30fc\u30bf\u691c\u8a3c\n... pydantic==2.5.0\n... pydantic-settings==2.1.0\n... \n... # HTTP \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n... httpx==0.25.2\n... requests==2.31.0\n... \n... # \u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\n... python-dotenv==1.0.0\n... pyyaml==6.0.1\n... '''\n...         \n...         # requirements-dev.txt\uff08\u958b\u767a\u7528\uff09\n...         requirements_dev_txt = '''# \u672c\u756a\u74b0\u5883\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u542b\u3080\n... -r requirements.txt\n... \n... # \u30c6\u30b9\u30c8\n... pytest==7.4.3\n... pytest-asyncio==0.21.1\n... pytest-cov==4.1.0\n... pytest-mock==3.12.0\n... \n... # \u30b3\u30fc\u30c9\u54c1\u8cea\n... black==23.11.0\n... flake8==6.1.0\n... mypy==1.7.1\n... isort==5.12.0\n... \n... # \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\n... bandit==1.7.5\n... safety==2.3.5\n... \n... # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n... sphinx==7.2.6\n... mkdocs==1.5.3\n... \n... # \u958b\u767a\u30c4\u30fc\u30eb\n... pre-commit==3.6.0\n... jupyter==1.0.0\n... ipython==8.17.2\n... '''\n...         \n...         (self.project_path / \"requirements.txt\").write_text(requirements_txt)\n...         (self.project_path / \"requirements-dev.txt\").write_text(requirements_dev_txt)\n...         \n...         print(\"\u2713 requirements.txt \u4f5c\u6210\")\n...         print(\"\u2713 requirements-dev.txt \u4f5c\u6210\")\n...     \n...     def create_setup_scripts(self):\n...         \"\"\"\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210 ===\")\n...         \n...         # setup.sh\uff08Unix/Linux/Mac\u7528\uff09\n...         setup_sh = '''#!/bin/bash\n... \n... echo \"=== Python\u4eee\u60f3\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8 ===\"\n... \n... # Python 3.8\u4ee5\u4e0a\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n... python3 --version\n... if [ $? -ne 0 ]; then\n...     echo \"\u30a8\u30e9\u30fc: Python 3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u305b\u3093\"\n...     exit 1\n... fi\n... \n... # \u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u6210\n... echo \"\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u6210\u4e2d...\"\n... python3 -m venv venv\n... \n... # \u4eee\u60f3\u74b0\u5883\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\n... echo \"\u4eee\u60f3\u74b0\u5883\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u4e2d...\"\n... source venv/bin/activate\n... \n... # pip\u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\n... echo \"pip\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u4e2d...\"\n... pip install --upgrade pip\n... \n... # \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... echo \"\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d...\"\n... pip install -r requirements-dev.txt\n... \n... # \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... echo \"\u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d...\"\n... pre-commit install\n... \n... echo \"\u2713 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b8c\u4e86\uff01\"\n... echo \"\u4eee\u60f3\u74b0\u5883\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3059\u308b\u306b\u306f:\"\n... echo \"source venv/bin/activate\"\n... '''\n...         \n...         # setup.bat\uff08Windows\u7528\uff09\n...         setup_bat = '''@echo off\n... \n... echo === Python\u4eee\u60f3\u74b0\u5883\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8 ===\n... \n... REM Python 3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\n... python --version\n... if errorlevel 1 (\n...     echo \u30a8\u30e9\u30fc: Python\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u305b\u3093\n...     pause\n...     exit /b 1\n... )\n... \n... REM \u4eee\u60f3\u74b0\u5883\u306e\u4f5c\u6210\n... echo \u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u6210\u4e2d...\n... python -m venv venv\n... \n... REM \u4eee\u60f3\u74b0\u5883\u306e\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\n... echo \u4eee\u60f3\u74b0\u5883\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u4e2d...\n... call venv\\\\Scripts\\\\activate.bat\n... \n... REM pip\u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\n... echo pip\u3092\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u4e2d...\n... python -m pip install --upgrade pip\n... \n... REM \u4f9d\u5b58\u95a2\u4fc2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... echo \u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d...\n... pip install -r requirements-dev.txt\n... \n... REM \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... echo \u30d7\u30ea\u30b3\u30df\u30c3\u30c8\u30d5\u30c3\u30af\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d...\n... pre-commit install\n... \n... echo \u2713 \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u5b8c\u4e86\uff01\n... echo \u4eee\u60f3\u74b0\u5883\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30c8\u3059\u308b\u306b\u306f:\n... echo venv\\\\Scripts\\\\activate.bat\n... \n... pause\n... '''\n...         \n...         (self.project_path / \"scripts\" / \"setup.sh\").write_text(setup_sh)\n...         (self.project_path / \"scripts\" / \"setup.bat\").write_text(setup_bat)\n...         \n...         print(\"\u2713 setup.sh \u4f5c\u6210\uff08Unix/Linux/Mac\u7528\uff09\")\n...         print(\"\u2713 setup.bat \u4f5c\u6210\uff08Windows\u7528\uff09\")\n...     \n...     def create_makefile(self):\n...         \"\"\"Makefile\u306e\u4f5c\u6210\uff08\u958b\u767a\u30bf\u30b9\u30af\u81ea\u52d5\u5316\uff09\"\"\"\n...         print(\"\\\\n=== Makefile\u4f5c\u6210 ===\")\n...         \n...         makefile_content = '''# Python \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528 Makefile\n... \n... .PHONY: help install test lint format clean build deploy\n... \n... help: ## \u3053\u306e\u30d8\u30eb\u30d7\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\n...     @echo \"\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30de\u30f3\u30c9:\"\n...     @grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\\\033[36m%-20s\\\\033[0m %s\\\\n\", $$1, $$2}'\n... \n... install: ## \u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n...     pip install -r requirements-dev.txt\n...     pre-commit install\n... \n... test: ## \u30c6\u30b9\u30c8\u3092\u5b9f\u884c\n...     pytest tests/ -v --cov=src/ --cov-report=html\n... \n... test-watch: ## \u30c6\u30b9\u30c8\u3092\u76e3\u8996\u30e2\u30fc\u30c9\u3067\u5b9f\u884c\n...     pytest-watch tests/ src/\n... \n... lint: ## \u30b3\u30fc\u30c9\u306e\u9759\u7684\u89e3\u6790\u3092\u5b9f\u884c\n...     flake8 src/ tests/\n...     mypy src/\n...     bandit -r src/\n... \n... format: ## \u30b3\u30fc\u30c9\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u5b9f\u884c\n...     black src/ tests/\n...     isort src/ tests/\n... \n... format-check: ## \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u30c1\u30a7\u30c3\u30af\u306e\u307f\u5b9f\u884c\n...     black --check src/ tests/\n...     isort --check-only src/ tests/\n... \n... security: ## \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u884c\n...     safety check\n...     bandit -r src/\n... \n... clean: ## \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u524a\u9664\n...     find . -type f -name \"*.pyc\" -delete\n...     find . -type d -name \"__pycache__\" -delete\n...     find . -type d -name \"*.egg-info\" -exec rm -rf {} +\n...     rm -rf build/ dist/ .coverage htmlcov/ .pytest_cache/\n... \n... build: ## \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\n...     python -m build\n... \n... install-local: ## \u30ed\u30fc\u30ab\u30eb\u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n...     pip install -e .\n... \n... docs: ## \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u751f\u6210\n...     mkdocs build\n... \n... docs-serve: ## \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\n...     mkdocs serve\n... \n... run: ## \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n...     python -m src.mywebapp.main\n... \n... docker-build: ## Docker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\n...     docker build -t mywebapp:latest .\n... \n... docker-run: ## Docker\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n...     docker run -p 8000:8000 mywebapp:latest\n... '''\n...         \n...         (self.project_path / \"Makefile\").write_text(makefile_content)\n...         print(\"\u2713 Makefile \u4f5c\u6210\")\n...         print(\"  \u4f7f\u7528\u4f8b: make help, make test, make format\")\n\n&gt;&gt;&gt; # \u4eee\u60f3\u74b0\u5883\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; venv_manager = VirtualEnvironmentManager(project_root)\n&gt;&gt;&gt; venv_manager.demonstrate_venv_concept()\n&gt;&gt;&gt; venv_manager.create_requirements_files()\n&gt;&gt;&gt; venv_manager.create_setup_scripts()\n&gt;&gt;&gt; venv_manager.create_makefile()\n\n=== \u4eee\u60f3\u74b0\u5883\u3068\u306f ===\n\n\u4eee\u60f3\u74b0\u5883\u306f\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3054\u3068\u306b\u72ec\u7acb\u3057\u305fPython\u74b0\u5883\u3092\u4f5c\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n\u306a\u305c\u5fc5\u8981\uff1f\n1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8A\u3067\u306fDjango 3.2\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8B\u3067\u306fDjango 4.0\u3092\u4f7f\u3044\u305f\u3044\n2. \u672c\u756a\u74b0\u5883\u3068\u958b\u767a\u74b0\u5883\u3067\u7570\u306a\u308b\u30d1\u30c3\u30b1\u30fc\u30b8\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u4f7f\u7528\n3. \u30b0\u30ed\u30fc\u30d0\u30eb\u74b0\u5883\u3092\u6c5a\u67d3\u305b\u305a\u306b\u5b9f\u9a13\n\n\u4eee\u60f3\u74b0\u5883\u306a\u3057:\n\u30b7\u30b9\u30c6\u30e0\u5168\u4f53 \u2192 Django 3.2\uff08\u3059\u3079\u3066\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5171\u6709\uff09\n\n\u4eee\u60f3\u74b0\u5883\u3042\u308a:\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8A/venv \u2192 Django 3.2\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8B/venv \u2192 Django 4.0\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8C/venv \u2192 Flask 2.0\n\n=== \u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210 ===\n\u2713 requirements.txt \u4f5c\u6210\n\u2713 requirements-dev.txt \u4f5c\u6210\n\n=== \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210 ===\n\u2713 setup.sh \u4f5c\u6210\uff08Unix/Linux/Mac\u7528\uff09\n\u2713 setup.bat \u4f5c\u6210\uff08Windows\u7528\uff09\n\n=== Makefile\u4f5c\u6210 ===\n\u2713 Makefile \u4f5c\u6210\n  \u4f7f\u7528\u4f8b: make help, make test, make format\n</code></pre>"},{"location":"chapter20/#_6","title":"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u30b3\u30e1\u30f3\u30c8","text":""},{"location":"chapter20/#_7","title":"\u52b9\u679c\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u4f5c\u6210","text":"<pre><code>&gt;&gt;&gt; class DocumentationManager:\n...     \"\"\"\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, project_path):\n...         self.project_path = Path(project_path)\n...     \n...     def demonstrate_docstring_styles(self):\n...         \"\"\"docstring\u306e\u66f8\u304d\u65b9\u306e\u4f8b\"\"\"\n...         print(\"=== Docstring \u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9 ===\")\n...         \n...         # Google style docstring\n...         def calculate_compound_interest(principal, rate, time, n=1):\n...             \"\"\"\u8907\u5229\u8a08\u7b97\u3092\u884c\u3046\u95a2\u6570\uff08Google style\uff09\n...             \n...             Args:\n...                 principal (float): \u5143\u672c\u91d1\u984d\n...                 rate (float): \u5e74\u5229\u7387\uff08\u4f8b: 0.05 = 5%\uff09\n...                 time (int): \u6295\u8cc7\u671f\u9593\uff08\u5e74\uff09\n...                 n (int, optional): \u5e74\u9593\u8907\u5229\u8a08\u7b97\u56de\u6570. Defaults to 1.\n...             \n...             Returns:\n...                 float: \u8907\u5229\u8a08\u7b97\u5f8c\u306e\u91d1\u984d\n...             \n...             Raises:\n...                 ValueError: \u8ca0\u306e\u5024\u304c\u5165\u529b\u3055\u308c\u305f\u5834\u5408\n...             \n...             Example:\n...                 &gt;&gt;&gt; calculate_compound_interest(100000, 0.05, 10)\n...                 162889.46267441762\n...             \"\"\"\n...             if principal &lt; 0 or rate &lt; 0 or time &lt; 0:\n...                 raise ValueError(\"\u3059\u3079\u3066\u306e\u5024\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n...             \n...             return principal * (1 + rate / n) ** (n * time)\n...         \n...         # NumPy style docstring\n...         def analyze_investment_performance(returns):\n...             \"\"\"\u6295\u8cc7\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5206\u6790\u3059\u308b\uff08NumPy style\uff09\n...             \n...             Parameters\n...             ----------\n...             returns : list of float\n...                 \u6295\u8cc7\u30ea\u30bf\u30fc\u30f3\u306e\u30ea\u30b9\u30c8\uff08\u4f8b: [0.1, -0.05, 0.15]\uff09\n...             \n...             Returns\n...             -------\n...             dict\n...                 \u5206\u6790\u7d50\u679c\u3092\u542b\u3080\u8f9e\u66f8\n...                 - 'mean': \u5e73\u5747\u30ea\u30bf\u30fc\u30f3\n...                 - 'volatility': \u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3\uff08\u6a19\u6e96\u504f\u5dee\uff09\n...                 - 'sharpe_ratio': \u30b7\u30e3\u30fc\u30d7\u30ec\u30b7\u30aa\n...             \n...             See Also\n...             --------\n...             calculate_compound_interest : \u8907\u5229\u8a08\u7b97\u95a2\u6570\n...             \n...             Notes\n...             -----\n...             \u30b7\u30e3\u30fc\u30d7\u30ec\u30b7\u30aa\u306f (\u5e73\u5747\u30ea\u30bf\u30fc\u30f3 - \u30ea\u30b9\u30af\u30d5\u30ea\u30fc\u30ec\u30fc\u30c8) / \u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3\n...             \u3067\u8a08\u7b97\u3055\u308c\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f\u30ea\u30b9\u30af\u30d5\u30ea\u30fc\u30ec\u30fc\u30c8\u30920\u3068\u3057\u3066\u8a08\u7b97\u3002\n...             \n...             Examples\n...             --------\n...             &gt;&gt;&gt; returns = [0.1, -0.05, 0.15, 0.08, -0.02]\n...             &gt;&gt;&gt; result = analyze_investment_performance(returns)\n...             &gt;&gt;&gt; print(result['mean'])\n...             0.032\n...             \"\"\"\n...             import statistics\n...             \n...             mean_return = statistics.mean(returns)\n...             volatility = statistics.stdev(returns) if len(returns) &gt; 1 else 0\n...             sharpe_ratio = mean_return / volatility if volatility &gt; 0 else 0\n...             \n...             return {\n...                 'mean': mean_return,\n...                 'volatility': volatility,\n...                 'sharpe_ratio': sharpe_ratio,\n...                 'count': len(returns)\n...             }\n...         \n...         # docstring\u306e\u30c6\u30b9\u30c8\u5b9f\u884c\n...         print(\"\\\\n--- Google style docstring \u306e\u4f8b ---\")\n...         result1 = calculate_compound_interest(100000, 0.05, 10)\n...         print(f\"\u8907\u5229\u8a08\u7b97\u7d50\u679c: {result1:,.2f}\u5186\")\n...         print(f\"docstring: {calculate_compound_interest.__doc__[:100]}...\")\n...         \n...         print(\"\\\\n--- NumPy style docstring \u306e\u4f8b ---\")\n...         returns = [0.1, -0.05, 0.15, 0.08, -0.02]\n...         result2 = analyze_investment_performance(returns)\n...         print(f\"\u6295\u8cc7\u5206\u6790\u7d50\u679c: {result2}\")\n...         print(f\"docstring: {analyze_investment_performance.__doc__[:100]}...\")\n...     \n...     def create_api_documentation(self):\n...         \"\"\"API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210 ===\")\n...         \n...         # api.md \u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\n...         api_doc = '''# API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\n... \n... ## \u6982\u8981\n... \u3053\u306eAPI\u306f\u91d1\u878d\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u306e\u305f\u3081\u306eRESTful API\u3067\u3059\u3002\n... \n... ## \u30d9\u30fc\u30b9URL\n... ```\n... https://api.example.com/v1\n... ```\n... \n... ## \u8a8d\u8a3c\n... \u3059\u3079\u3066\u306eAPI\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306fAPI\u30ad\u30fc\u304c\u5fc5\u8981\u3067\u3059\u3002\n... \n... ```http\n... Authorization: Bearer YOUR_API_KEY\n... ```\n... \n... ## \u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n... \n... ### \u8907\u5229\u8a08\u7b97\n... \n... #### POST /calculate/compound-interest\n... \n... \u8907\u5229\u8a08\u7b97\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n... \n... **\u30ea\u30af\u30a8\u30b9\u30c8**\n... ```json\n... {\n...   \"principal\": 100000,\n...   \"rate\": 0.05,\n...   \"time\": 10,\n...   \"n\": 1\n... }\n... ```\n... \n... **\u30ec\u30b9\u30dd\u30f3\u30b9**\n... ```json\n... {\n...   \"result\": 162889.46,\n...   \"calculation\": {\n...     \"principal\": 100000,\n...     \"rate\": 0.05,\n...     \"time\": 10,\n...     \"n\": 1,\n...     \"formula\": \"P * (1 + r/n)^(n*t)\"\n...   }\n... }\n... ```\n... \n... **\u30a8\u30e9\u30fc**\n... ```json\n... {\n...   \"error\": {\n...     \"code\": \"INVALID_INPUT\",\n...     \"message\": \"\u3059\u3079\u3066\u306e\u5024\u306f\u6b63\u306e\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\",\n...     \"details\": {\n...       \"field\": \"principal\",\n...       \"value\": -1000\n...     }\n...   }\n... }\n... ```\n... \n... ### \u6295\u8cc7\u5206\u6790\n... \n... #### POST /analyze/performance\n... \n... \u6295\u8cc7\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5206\u6790\u3057\u307e\u3059\u3002\n... \n... **\u30ea\u30af\u30a8\u30b9\u30c8**\n... ```json\n... {\n...   \"returns\": [0.1, -0.05, 0.15, 0.08, -0.02],\n...   \"risk_free_rate\": 0.02\n... }\n... ```\n... \n... **\u30ec\u30b9\u30dd\u30f3\u30b9**\n... ```json\n... {\n...   \"analysis\": {\n...     \"mean_return\": 0.032,\n...     \"volatility\": 0.0849,\n...     \"sharpe_ratio\": 0.141,\n...     \"count\": 5\n...   },\n...   \"summary\": {\n...     \"performance\": \"moderate\",\n...     \"recommendation\": \"\u30ea\u30b9\u30af\u8abf\u6574\u5f8c\u30ea\u30bf\u30fc\u30f3\u306f\u9069\u5ea6\u3067\u3059\"\n...   }\n... }\n... ```\n... \n... ## \u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\n... \n... | \u30b3\u30fc\u30c9 | \u8aac\u660e |\n... |--------|------|\n... | 200 | \u6210\u529f |\n... | 400 | \u4e0d\u6b63\u306a\u30ea\u30af\u30a8\u30b9\u30c8 |\n... | 401 | \u8a8d\u8a3c\u30a8\u30e9\u30fc |\n... | 404 | \u30ea\u30bd\u30fc\u30b9\u304c\u898b\u3064\u304b\u3089\u306a\u3044 |\n... | 500 | \u30b5\u30fc\u30d0\u30fc\u30a8\u30e9\u30fc |\n... \n... ## \u30ec\u30fc\u30c8\u5236\u9650\n... \n... - 1\u5206\u9593\u306b60\u30ea\u30af\u30a8\u30b9\u30c8\n... - 1\u6642\u9593\u306b1000\u30ea\u30af\u30a8\u30b9\u30c8\n... - \u5236\u9650\u306b\u9054\u3057\u305f\u5834\u5408\u3001HTTP 429\u3092\u8fd4\u3057\u307e\u3059\n... \n... ## SDK \u3068\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n... \n... ### Python\n... ```python\n... import requests\n... \n... client = FinanceAPIClient(api_key=\"your_api_key\")\n... result = client.calculate_compound_interest(\n...     principal=100000,\n...     rate=0.05,\n...     time=10\n... )\n... print(result)\n... ```\n... \n... ### JavaScript\n... ```javascript\n... const client = new FinanceAPI({apiKey: 'your_api_key'});\n... const result = await client.calculateCompoundInterest({\n...   principal: 100000,\n...   rate: 0.05,\n...   time: 10\n... });\n... console.log(result);\n... ```\n... '''\n...         \n...         (self.project_path / \"docs\" / \"api.md\").write_text(api_doc)\n...         print(\"\u2713 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u5b8c\u4e86\")\n...     \n...     def create_user_guide(self):\n...         \"\"\"\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u4f5c\u6210 ===\")\n...         \n...         user_guide = '''# \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\n... \n... ## \u306f\u3058\u3081\u306b\n... \n... \u91d1\u878d\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3078\u3088\u3046\u3053\u305d\uff01\u3053\u306e\u30ac\u30a4\u30c9\u3067\u306f\u3001\u30b7\u30b9\u30c6\u30e0\u306e\u57fa\u672c\u7684\u306a\u4f7f\u3044\u65b9\u304b\u3089\u9ad8\u5ea6\u306a\u6a5f\u80fd\u307e\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n... \n... ## \u76ee\u6b21\n... \n... 1. [\u57fa\u672c\u64cd\u4f5c](#\u57fa\u672c\u64cd\u4f5c)\n... 2. [\u8907\u5229\u8a08\u7b97](#\u8907\u5229\u8a08\u7b97)\n... 3. [\u6295\u8cc7\u5206\u6790](#\u6295\u8cc7\u5206\u6790)\n... 4. [\u30ec\u30dd\u30fc\u30c8\u4f5c\u6210](#\u30ec\u30dd\u30fc\u30c8\u4f5c\u6210)\n... 5. [\u3088\u304f\u3042\u308b\u8cea\u554f](#\u3088\u304f\u3042\u308b\u8cea\u554f)\n... \n... ## \u57fa\u672c\u64cd\u4f5c\n... \n... ### \u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30ed\u30b0\u30a4\u30f3\n... \n... 1. \u30d6\u30e9\u30a6\u30b6\u3067\u30b7\u30b9\u30c6\u30e0URL\u306b\u30a2\u30af\u30bb\u30b9\n... 2. \u30e6\u30fc\u30b6\u30fc\u540d\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\n... 3. [\u30ed\u30b0\u30a4\u30f3]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n... \n... ### \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u306e\u898b\u65b9\n... \n... \u30ed\u30b0\u30a4\u30f3\u5f8c\u3001\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u304c\u8868\u793a\u3055\u308c\u307e\u3059\uff1a\n... \n... - **\u5de6\u5074\u30e1\u30cb\u30e5\u30fc**: \u5404\u6a5f\u80fd\u3078\u306e\u30a2\u30af\u30bb\u30b9\n... - **\u4e2d\u592e\u30a8\u30ea\u30a2**: \u30e1\u30a4\u30f3\u30b3\u30f3\u30c6\u30f3\u30c4\n... - **\u53f3\u5074\u30d1\u30cd\u30eb**: \u901a\u77e5\u3068\u30d8\u30eb\u30d7\n... \n... ## \u8907\u5229\u8a08\u7b97\n... \n... ### \u57fa\u672c\u7684\u306a\u8907\u5229\u8a08\u7b97\n... \n... 1. \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300c\u8907\u5229\u8a08\u7b97\u300d\u3092\u9078\u629e\n... 2. \u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u5165\u529b\uff1a\n...    - **\u5143\u672c**: \u6295\u8cc7\u3059\u308b\u91d1\u984d\n...    - **\u5e74\u5229\u7387**: \u5e74\u9593\u306e\u5229\u7387\uff08%\uff09\n...    - **\u671f\u9593**: \u6295\u8cc7\u671f\u9593\uff08\u5e74\uff09\n...    - **\u8907\u5229\u56de\u6570**: \u5e74\u9593\u306e\u8907\u5229\u8a08\u7b97\u56de\u6570\n... \n... 3. [\u8a08\u7b97\u5b9f\u884c]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n... 4. \u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\n... \n... ### \u8a08\u7b97\u4f8b\n... \n... **\u8a2d\u5b9a\u4f8b**:\n... - \u5143\u672c: 100\u4e07\u5186\n... - \u5e74\u5229\u7387: 5%\n... - \u671f\u9593: 10\u5e74\n... - \u8907\u5229\u56de\u6570: 1\u56de/\u5e74\n... \n... **\u7d50\u679c**: \u7d04162\u4e078,895\u5186\n... \n... ### \u30b0\u30e9\u30d5\u8868\u793a\n... \n... \u8a08\u7b97\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u8868\u793a\u3055\u308c\u307e\u3059\uff1a\n... - \u5143\u672c\u3068\u5229\u76ca\u306e\u63a8\u79fb\u30b0\u30e9\u30d5\n... - \u5e74\u5225\u306e\u8a73\u7d30\u8868\n... - \u8907\u5229\u52b9\u679c\u306e\u8aac\u660e\n... \n... ## \u6295\u8cc7\u5206\u6790\n... \n... ### \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u5206\u6790\n... \n... 1. \u30e1\u30cb\u30e5\u30fc\u304b\u3089\u300c\u6295\u8cc7\u5206\u6790\u300d\u3092\u9078\u629e\n... 2. \u6295\u8cc7\u30ea\u30bf\u30fc\u30f3\u30c7\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u307e\u305f\u306f\u5165\u529b\n... 3. \u5206\u6790\u8a2d\u5b9a\u3092\u9078\u629e\uff1a\n...    - **\u30ea\u30b9\u30af\u30d5\u30ea\u30fc\u30ec\u30fc\u30c8**: \u56fd\u50b5\u5229\u56de\u308a\u306a\u3069\n...    - **\u30d9\u30f3\u30c1\u30de\u30fc\u30af**: \u6bd4\u8f03\u5bfe\u8c61\u306e\u6307\u6570\n... \n... 4. [\u5206\u6790\u958b\u59cb]\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n... \n... ### \u5206\u6790\u7d50\u679c\u306e\u8aad\u307f\u65b9\n... \n... - **\u5e73\u5747\u30ea\u30bf\u30fc\u30f3**: \u671f\u9593\u4e2d\u306e\u5e73\u5747\u53ce\u76ca\u7387\n... - **\u30dc\u30e9\u30c6\u30a3\u30ea\u30c6\u30a3**: \u30ea\u30b9\u30af\u306e\u6307\u6a19\uff08\u6a19\u6e96\u504f\u5dee\uff09\n... - **\u30b7\u30e3\u30fc\u30d7\u30ec\u30b7\u30aa**: \u30ea\u30b9\u30af\u8abf\u6574\u5f8c\u30ea\u30bf\u30fc\u30f3\n... - **\u6700\u5927\u30c9\u30ed\u30fc\u30c0\u30a6\u30f3**: \u6700\u5927\u640d\u5931\u671f\u9593\n... \n... ## \u3088\u304f\u3042\u308b\u8cea\u554f\n... \n... ### Q: \u8a08\u7b97\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u306a\u3044\n... **A**: \u4ee5\u4e0b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\uff1a\n... - \u3059\u3079\u3066\u306e\u5fc5\u9808\u9805\u76ee\u306b\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u304b\n... - \u6570\u5024\u304c\u6b63\u306e\u5024\u306b\u306a\u3063\u3066\u3044\u308b\u304b\n... - \u30d6\u30e9\u30a6\u30b6\u306eJavaScript\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\n... \n... ### Q: \u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u3067\u304d\u306a\u3044\n... **A**: \u5bfe\u5fdc\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\uff1a\n... - CSV\u5f62\u5f0f\uff08UTF-8\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\uff09\n... - Excel\u5f62\u5f0f\uff08.xlsx\uff09\n... - \u6700\u5927\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba: 10MB\n... \n... ### Q: \u8a08\u7b97\u5f0f\u306e\u8a73\u7d30\u3092\u77e5\u308a\u305f\u3044\n... **A**: [\u6280\u8853\u4ed5\u69d8\u66f8](technical-specs.md)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n... \n... ## \u30b5\u30dd\u30fc\u30c8\n... \n... \u3054\u4e0d\u660e\u306a\u70b9\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u4ee5\u4e0b\u307e\u3067\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044\uff1a\n... \n... - **\u30e1\u30fc\u30eb**: support@example.com\n... - **\u96fb\u8a71**: 03-1234-5678\uff08\u5e73\u65e5 9:00-18:00\uff09\n... - **\u30c1\u30e3\u30c3\u30c8**: \u30b7\u30b9\u30c6\u30e0\u5185\u306e\u30d8\u30eb\u30d7\u30c1\u30e3\u30c3\u30c8\u6a5f\u80fd\n... '''\n...         \n...         (self.project_path / \"docs\" / \"user-guide.md\").write_text(user_guide)\n...         print(\"\u2713 \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u4f5c\u6210\u5b8c\u4e86\")\n\n&gt;&gt;&gt; # \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; doc_manager = DocumentationManager(project_root)\n&gt;&gt;&gt; doc_manager.demonstrate_docstring_styles()\n&gt;&gt;&gt; doc_manager.create_api_documentation()\n&gt;&gt;&gt; doc_manager.create_user_guide()\n\n=== Docstring \u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9 ===\n\n--- Google style docstring \u306e\u4f8b ---\n\u8907\u5229\u8a08\u7b97\u7d50\u679c: 162,889.46\u5186\ndocstring: \u8907\u5229\u8a08\u7b97\u3092\u884c\u3046\u95a2\u6570\uff08Google style\uff09\n\n            Args:\n                principal (float): \u5143\u672c\u91d1\u984d\n                rate...\n\n--- NumPy style docstring \u306e\u4f8b ---\n\u6295\u8cc7\u5206\u6790\u7d50\u679c: {'mean': 0.032, 'volatility': 0.08485281374238569, 'sharpe_ratio': 0.37712361663282537, 'count': 5}\ndocstring: \u6295\u8cc7\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u5206\u6790\u3059\u308b\uff08NumPy style\uff09\n\n            Parameters\n            ----------\n            ret...\n\n=== API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210 ===\n\u2713 API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u5b8c\u4e86\n\n=== \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u4f5c\u6210 ===\n\u2713 \u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9\u4f5c\u6210\u5b8c\u4e86\n</code></pre>"},{"location":"chapter20/#cicd","title":"\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068CI/CD","text":""},{"location":"chapter20/#git-cicd","title":"Git \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3068CI/CD","text":"<pre><code>&gt;&gt;&gt; class DevOpsManager:\n...     \"\"\"DevOps\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self, project_path):\n...         self.project_path = Path(project_path)\n...     \n...     def create_git_workflow(self):\n...         \"\"\"Git \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u8a2d\u5b9a\"\"\"\n...         print(\"=== Git \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u8a2d\u5b9a ===\")\n...         \n...         # .gitignore \u306e\u8a73\u7d30\u7248\n...         gitignore_detailed = '''# Byte-compiled / optimized / DLL files\n... __pycache__/\n... *.py[cod]\n... *$py.class\n... \n... # C extensions\n... *.so\n... \n... # Distribution / packaging\n... .Python\n... build/\n... develop-eggs/\n... dist/\n... downloads/\n... eggs/\n... .eggs/\n... lib/\n... lib64/\n... parts/\n... sdist/\n... var/\n... wheels/\n... pip-wheel-metadata/\n... share/python-wheels/\n... *.egg-info/\n... .installed.cfg\n... *.egg\n... MANIFEST\n... \n... # PyInstaller\n... *.manifest\n... *.spec\n... \n... # Installer logs\n... pip-log.txt\n... pip-delete-this-directory.txt\n... \n... # Unit test / coverage reports\n... htmlcov/\n... .tox/\n... .nox/\n... .coverage\n... .coverage.*\n... .cache\n... nosetests.xml\n... coverage.xml\n... *.cover\n... *.py,cover\n... .hypothesis/\n... .pytest_cache/\n... \n... # Jupyter Notebook\n... .ipynb_checkpoints\n... \n... # IPython\n... profile_default/\n... ipython_config.py\n... \n... # pyenv\n... .python-version\n... \n... # pipenv\n... Pipfile.lock\n... \n... # PEP 582\n... __pypackages__/\n... \n... # Celery stuff\n... celerybeat-schedule\n... celerybeat.pid\n... \n... # SageMath parsed files\n... *.sage.py\n... \n... # Environments\n... .env\n... .venv\n... env/\n... venv/\n... ENV/\n... env.bak/\n... venv.bak/\n... \n... # Spyder project settings\n... .spyderproject\n... .spyproject\n... \n... # Rope project settings\n... .ropeproject\n... \n... # mkdocs documentation\n... /site\n... \n... # mypy\n... .mypy_cache/\n... .dmypy.json\n... dmypy.json\n... \n... # Pyre type checker\n... .pyre/\n... \n... # IDE\n... .vscode/\n... .idea/\n... *.swp\n... *.swo\n... *~\n... \n... # OS\n... .DS_Store\n... .DS_Store?\n... ._*\n... .Spotlight-V100\n... .Trashes\n... ehthumbs.db\n... Thumbs.db\n... \n... # Project specific\n... logs/\n... temp/\n... *.log\n... .secrets/\n... '''\n...         \n...         (self.project_path / \".gitignore\").write_text(gitignore_detailed)\n...         print(\"\u2713 \u8a73\u7d30\u306a .gitignore \u4f5c\u6210\")\n...     \n...     def create_github_actions(self):\n...         \"\"\"GitHub Actions CI/CD\u8a2d\u5b9a\"\"\"\n...         print(\"\\\\n=== GitHub Actions CI/CD\u8a2d\u5b9a ===\")\n...         \n...         # CI/CD\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\n...         ci_workflow = '''name: CI/CD Pipeline\n... \n... on:\n...   push:\n...     branches: [ main, develop ]\n...   pull_request:\n...     branches: [ main ]\n...   release:\n...     types: [ published ]\n... \n... jobs:\n...   test:\n...     runs-on: ubuntu-latest\n...     strategy:\n...       matrix:\n...         python-version: [3.8, 3.9, \"3.10\", \"3.11\"]\n... \n...     steps:\n...     - uses: actions/checkout@v4\n... \n...     - name: Set up Python ${{ matrix.python-version }}\n...       uses: actions/setup-python@v4\n...       with:\n...         python-version: ${{ matrix.python-version }}\n... \n...     - name: Cache pip dependencies\n...       uses: actions/cache@v3\n...       with:\n...         path: ~/.cache/pip\n...         key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}\n...         restore-keys: |\n...           ${{ runner.os }}-pip-\n... \n...     - name: Install dependencies\n...       run: |\n...         python -m pip install --upgrade pip\n...         pip install -r requirements-dev.txt\n... \n...     - name: Lint with flake8\n...       run: |\n...         flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics\n...         flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics\n... \n...     - name: Type check with mypy\n...       run: |\n...         mypy src/\n... \n...     - name: Security check with bandit\n...       run: |\n...         bandit -r src/\n... \n...     - name: Test with pytest\n...       run: |\n...         pytest tests/ -v --cov=src/ --cov-report=xml --cov-report=html\n... \n...     - name: Upload coverage to Codecov\n...       uses: codecov/codecov-action@v3\n...       with:\n...         file: ./coverage.xml\n...         flags: unittests\n...         name: codecov-umbrella\n... \n...   build:\n...     needs: test\n...     runs-on: ubuntu-latest\n...     if: github.event_name == 'release'\n... \n...     steps:\n...     - uses: actions/checkout@v4\n... \n...     - name: Set up Python\n...       uses: actions/setup-python@v4\n...       with:\n...         python-version: \"3.10\"\n... \n...     - name: Install build dependencies\n...       run: |\n...         python -m pip install --upgrade pip\n...         pip install build twine\n... \n...     - name: Build package\n...       run: python -m build\n... \n...     - name: Check package\n...       run: twine check dist/*\n... \n...     - name: Publish to PyPI\n...       env:\n...         TWINE_USERNAME: __token__\n...         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}\n...       run: twine upload dist/*\n... \n...   docker:\n...     needs: test\n...     runs-on: ubuntu-latest\n...     if: github.ref == 'refs/heads/main'\n... \n...     steps:\n...     - uses: actions/checkout@v4\n... \n...     - name: Set up Docker Buildx\n...       uses: docker/setup-buildx-action@v3\n... \n...     - name: Login to Container Registry\n...       uses: docker/login-action@v3\n...       with:\n...         registry: ghcr.io\n...         username: ${{ github.actor }}\n...         password: ${{ secrets.GITHUB_TOKEN }}\n... \n...     - name: Build and push Docker image\n...       uses: docker/build-push-action@v5\n...       with:\n...         context: .\n...         push: true\n...         tags: |\n...           ghcr.io/${{ github.repository }}:latest\n...           ghcr.io/${{ github.repository }}:${{ github.sha }}\n...         cache-from: type=gha\n...         cache-to: type=gha,mode=max\n... '''\n...         \n...         github_dir = self.project_path / \".github\" / \"workflows\"\n...         github_dir.mkdir(parents=True, exist_ok=True)\n...         (github_dir / \"ci.yml\").write_text(ci_workflow)\n...         print(\"\u2713 GitHub Actions CI/CD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u4f5c\u6210\")\n...     \n...     def create_docker_setup(self):\n...         \"\"\"Docker\u8a2d\u5b9a\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== Docker\u8a2d\u5b9a\u4f5c\u6210 ===\")\n...         \n...         # Dockerfile\n...         dockerfile = '''# Python 3.10 \u306e\u516c\u5f0f\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u7528\n... FROM python:3.10-slim\n... \n... # \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u8a2d\u5b9a\n... WORKDIR /app\n... \n... # \u30b7\u30b9\u30c6\u30e0\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... RUN apt-get update &amp;&amp; apt-get install -y \\\\\n...     gcc \\\\\n...     &amp;&amp; rm -rf /var/lib/apt/lists/*\n... \n... # Python\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30b3\u30d4\u30fc\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... COPY requirements.txt .\n... RUN pip install --no-cache-dir -r requirements.txt\n... \n... # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\n... COPY src/ ./src/\n... COPY README.md .\n... COPY setup.py .\n... \n... # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n... RUN pip install -e .\n... \n... # \u975eroot\u30e6\u30fc\u30b6\u30fc\u3092\u4f5c\u6210\n... RUN useradd --create-home --shell /bin/bash app \\\\\n...     &amp;&amp; chown -R app:app /app\n... USER app\n... \n... # \u30dd\u30fc\u30c88000\u3092\u516c\u958b\n... EXPOSE 8000\n... \n... # \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\n... HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \\\\\n...   CMD python -c \"import requests; requests.get('http://localhost:8000/health')\"\n... \n... # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\n... CMD [\"python\", \"-m\", \"src.mywebapp.main\"]\n... '''\n...         \n...         # docker-compose.yml\n...         docker_compose = '''version: '3.8'\n... \n... services:\n...   app:\n...     build: .\n...     ports:\n...       - \"8000:8000\"\n...     environment:\n...       - ENVIRONMENT=production\n...       - DATABASE_URL=postgresql://user:password@db:5432/mywebapp\n...     depends_on:\n...       - db\n...       - redis\n...     volumes:\n...       - ./logs:/app/logs\n...     restart: unless-stopped\n... \n...   db:\n...     image: postgres:15\n...     environment:\n...       - POSTGRES_DB=mywebapp\n...       - POSTGRES_USER=user\n...       - POSTGRES_PASSWORD=password\n...     volumes:\n...       - postgres_data:/var/lib/postgresql/data\n...       - ./init.sql:/docker-entrypoint-initdb.d/init.sql\n...     ports:\n...       - \"5432:5432\"\n...     restart: unless-stopped\n... \n...   redis:\n...     image: redis:7-alpine\n...     ports:\n...       - \"6379:6379\"\n...     volumes:\n...       - redis_data:/data\n...     restart: unless-stopped\n... \n...   nginx:\n...     image: nginx:alpine\n...     ports:\n...       - \"80:80\"\n...       - \"443:443\"\n...     volumes:\n...       - ./nginx.conf:/etc/nginx/nginx.conf\n...       - ./ssl:/etc/nginx/ssl\n...     depends_on:\n...       - app\n...     restart: unless-stopped\n... \n... volumes:\n...   postgres_data:\n...   redis_data:\n... '''\n...         \n...         # .dockerignore\n...         dockerignore = '''# Git\n... .git\n... .gitignore\n... README.md\n... \n... # CI/CD\n... .github/\n... \n... # Python\n... __pycache__\n... *.pyc\n... *.pyo\n... *.pyd\n... .Python\n... env/\n... venv/\n... .venv/\n... pip-log.txt\n... pip-delete-this-directory.txt\n... .pytest_cache/\n... .coverage\n... htmlcov/\n... \n... # IDE\n... .vscode/\n... .idea/\n... *.swp\n... *.swo\n... \n... # OS\n... .DS_Store\n... Thumbs.db\n... \n... # Development files\n... tests/\n... docs/\n... scripts/\n... Makefile\n... \n... # Logs\n... *.log\n... logs/\n... '''\n...         \n...         (self.project_path / \"Dockerfile\").write_text(dockerfile)\n...         (self.project_path / \"docker-compose.yml\").write_text(docker_compose)\n...         (self.project_path / \".dockerignore\").write_text(dockerignore)\n...         \n...         print(\"\u2713 Dockerfile \u4f5c\u6210\")\n...         print(\"\u2713 docker-compose.yml \u4f5c\u6210\")\n...         print(\"\u2713 .dockerignore \u4f5c\u6210\")\n...     \n...     def create_deployment_scripts(self):\n...         \"\"\"\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\"\"\"\n...         print(\"\\\\n=== \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210 ===\")\n...         \n...         # deploy.sh\n...         deploy_script = '''#!/bin/bash\n... \n... set -e  # \u30a8\u30e9\u30fc\u6642\u306b\u505c\u6b62\n... \n... echo \"=== \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u958b\u59cb ===\"\n... \n... # \u74b0\u5883\u5909\u6570\u306e\u78ba\u8a8d\n... if [ -z \"$DEPLOY_ENV\" ]; then\n...     echo \"\u30a8\u30e9\u30fc: DEPLOY_ENV \u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u305b\u3093\"\n...     echo \"\u4f7f\u7528\u4f8b: DEPLOY_ENV=production ./deploy.sh\"\n...     exit 1\n... fi\n... \n... echo \"\u30c7\u30d7\u30ed\u30a4\u74b0\u5883: $DEPLOY_ENV\"\n... \n... # \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u306e\u4f5c\u6210\n... echo \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u4f5c\u6210\u4e2d...\"\n... pg_dump $DATABASE_URL &gt; backup_$(date +%Y%m%d_%H%M%S).sql\n... \n... # \u6700\u65b0\u30b3\u30fc\u30c9\u306e\u53d6\u5f97\n... echo \"\u6700\u65b0\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u4e2d...\"\n... git pull origin main\n... \n... # \u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0\n... echo \"\u4f9d\u5b58\u95a2\u4fc2\u3092\u66f4\u65b0\u4e2d...\"\n... pip install -r requirements.txt\n... \n... # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\n... echo \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u4e2d...\"\n... alembic upgrade head\n... \n... # \u9759\u7684\u30d5\u30a1\u30a4\u30eb\u306e\u53ce\u96c6\n... echo \"\u9759\u7684\u30d5\u30a1\u30a4\u30eb\u3092\u53ce\u96c6\u4e2d...\"\n... python manage.py collectstatic --noinput\n... \n... # \u30c6\u30b9\u30c8\u306e\u5b9f\u884c\n... echo \"\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u4e2d...\"\n... pytest tests/ -x\n... \n... # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u8d77\u52d5\n... if [ \"$DEPLOY_ENV\" = \"production\" ]; then\n...     echo \"\u672c\u756a\u74b0\u5883\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u518d\u8d77\u52d5\u4e2d...\"\n...     systemctl restart mywebapp\n...     systemctl restart nginx\n... elif [ \"$DEPLOY_ENV\" = \"staging\" ]; then\n...     echo \"\u30b9\u30c6\u30fc\u30b8\u30f3\u30b0\u74b0\u5883\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u518d\u8d77\u52d5\u4e2d...\"\n...     docker-compose -f docker-compose.staging.yml up -d --build\n... fi\n... \n... # \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\n... echo \"\u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u884c\u4e2d...\"\n... sleep 10\n... curl -f http://localhost:8000/health || {\n...     echo \"\u30a8\u30e9\u30fc: \u30d8\u30eb\u30b9\u30c1\u30a7\u30c3\u30af\u306b\u5931\u6557\u3057\u307e\u3057\u305f\"\n...     exit 1\n... }\n... \n... echo \"\u2713 \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u5b8c\u4e86\uff01\"\n... \n... # Slack\u3078\u306e\u901a\u77e5\uff08\u30aa\u30d7\u30b7\u30e7\u30f3\uff09\n... if [ -n \"$SLACK_WEBHOOK_URL\" ]; then\n...     curl -X POST -H 'Content-type: application/json' \\\\\n...         --data \"{\\\\\"text\\\\\":\\\\\"\u2705 $DEPLOY_ENV\u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\\\\\"}\" \\\\\n...         $SLACK_WEBHOOK_URL\n... fi\n... '''\n...         \n...         # rollback.sh\n...         rollback_script = '''#!/bin/bash\n... \n... set -e\n... \n... echo \"=== \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u30b9\u30af\u30ea\u30d7\u30c8\u958b\u59cb ===\"\n... \n... # \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u5148\u306e\u30b3\u30df\u30c3\u30c8\u30cf\u30c3\u30b7\u30e5\u3092\u53d6\u5f97\n... PREVIOUS_COMMIT=$(git log --oneline -n 2 | tail -n 1 | cut -d' ' -f1)\n... \n... echo \"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u5148: $PREVIOUS_COMMIT\"\n... read -p \"\u5b9f\u884c\u3057\u307e\u3059\u304b\uff1f (y/N): \" -n 1 -r\n... echo\n... \n... if [[ ! $REPLY =~ ^[Yy]$ ]]; then\n...     echo \"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u307e\u3057\u305f\"\n...     exit 1\n... fi\n... \n... # \u30b3\u30fc\u30c9\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\n... echo \"\u30b3\u30fc\u30c9\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u4e2d...\"\n... git checkout $PREVIOUS_COMMIT\n... \n... # \u4f9d\u5b58\u95a2\u4fc2\u306e\u66f4\u65b0\n... echo \"\u4f9d\u5b58\u95a2\u4fc2\u3092\u66f4\u65b0\u4e2d...\"\n... pip install -r requirements.txt\n... \n... # \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\uff08\u614e\u91cd\u306b\uff01\uff09\n... echo \"\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af...\"\n... echo \"\u8b66\u544a: \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306f\u624b\u52d5\u3067\u884c\u3063\u3066\u304f\u3060\u3055\u3044\"\n... \n... # \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u518d\u8d77\u52d5\n... echo \"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u518d\u8d77\u52d5\u4e2d...\"\n... systemctl restart mywebapp\n... \n... echo \"\u2713 \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u5b8c\u4e86\"\n... '''\n...         \n...         scripts_dir = self.project_path / \"scripts\"\n...         (scripts_dir / \"deploy.sh\").write_text(deploy_script)\n...         (scripts_dir / \"rollback.sh\").write_text(rollback_script)\n...         \n...         print(\"\u2713 deploy.sh \u4f5c\u6210\")\n...         print(\"\u2713 rollback.sh \u4f5c\u6210\")\n\n&gt;&gt;&gt; # DevOps\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; devops_manager = DevOpsManager(project_root)\n&gt;&gt;&gt; devops_manager.create_git_workflow()\n&gt;&gt;&gt; devops_manager.create_github_actions()\n&gt;&gt;&gt; devops_manager.create_docker_setup()\n&gt;&gt;&gt; devops_manager.create_deployment_scripts()\n\n=== Git \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u8a2d\u5b9a ===\n\u2713 \u8a73\u7d30\u306a .gitignore \u4f5c\u6210\n\n=== GitHub Actions CI/CD\u8a2d\u5b9a ===\n\u2713 GitHub Actions CI/CD \u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u4f5c\u6210\n\n=== Docker\u8a2d\u5b9a\u4f5c\u6210 ===\n\u2713 Dockerfile \u4f5c\u6210\n\u2713 docker-compose.yml \u4f5c\u6210\n\u2713 .dockerignore \u4f5c\u6210\n\n=== \u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u4f5c\u6210 ===\n\u2713 deploy.sh \u4f5c\u6210\n\u2713 rollback.sh \u4f5c\u6210\n</code></pre>"},{"location":"chapter20/#_8","title":"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3","text":""},{"location":"chapter20/#_9","title":"\u3010\u5b9f\u884c\u3011\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56","text":"<pre><code>&gt;&gt;&gt; import time\n&gt;&gt;&gt; import functools\n&gt;&gt;&gt; import hashlib\n&gt;&gt;&gt; import secrets\n&gt;&gt;&gt; from datetime import datetime, timedelta\n\n&gt;&gt;&gt; class PerformanceSecurityManager:\n...     \"\"\"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...     \n...     def __init__(self):\n...         self.cache = {}\n...         self.access_logs = []\n...         self.rate_limits = {}\n...     \n...     def demonstrate_performance_optimization(self):\n...         \"\"\"\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316\u306e\u4f8b\"\"\"\n...         print(\"=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316 ===\")\n...         \n...         # 1. \u30e1\u30e2\u5316\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\uff09\u306e\u5b9f\u88c5\n...         def fibonacci_slow(n):\n...             \"\"\"\u9045\u3044\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u8a08\u7b97\"\"\"\n...             if n &lt;= 1:\n...                 return n\n...             return fibonacci_slow(n-1) + fibonacci_slow(n-2)\n...         \n...         @functools.lru_cache(maxsize=None)\n...         def fibonacci_fast(n):\n...             \"\"\"\u9ad8\u901f\u306a\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u8a08\u7b97\uff08\u30e1\u30e2\u5316\uff09\"\"\"\n...             if n &lt;= 1:\n...                 return n\n...             return fibonacci_fast(n-1) + fibonacci_fast(n-2)\n...         \n...         # \u5b9f\u884c\u6642\u9593\u306e\u6bd4\u8f03\n...         print(\"\\\\n--- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u8a08\u7b97\u306e\u6bd4\u8f03 ---\")\n...         \n...         # \u9045\u3044\u7248\n...         start_time = time.time()\n...         result_slow = fibonacci_slow(30)\n...         slow_time = time.time() - start_time\n...         \n...         # \u9ad8\u901f\u7248\n...         start_time = time.time()\n...         result_fast = fibonacci_fast(30)\n...         fast_time = time.time() - start_time\n...         \n...         print(f\"\u7d50\u679c: {result_slow} (\u4e21\u65b9\u3068\u3082\u540c\u3058)\")\n...         print(f\"\u901a\u5e38\u7248: {slow_time:.4f}\u79d2\")\n...         print(f\"\u30e1\u30e2\u5316\u7248: {fast_time:.6f}\u79d2\")\n...         print(f\"\u901f\u5ea6\u5411\u4e0a: {slow_time/fast_time:.1f}\u500d\")\n...         \n...         # 2. \u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u306b\u3088\u308b\u30e1\u30e2\u30ea\u52b9\u7387\u5316\n...         def process_large_data_list(size):\n...             \"\"\"\u30ea\u30b9\u30c8\u3092\u4f7f\u3063\u305f\u51e6\u7406\uff08\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u5927\uff09\"\"\"\n...             data = list(range(size))\n...             return sum(x * 2 for x in data)\n...         \n...         def process_large_data_generator(size):\n...             \"\"\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u3092\u4f7f\u3063\u305f\u51e6\u7406\uff08\u30e1\u30e2\u30ea\u52b9\u7387\uff09\"\"\"\n...             return sum(x * 2 for x in range(size))\n...         \n...         print(\"\\\\n--- \u30e1\u30e2\u30ea\u52b9\u7387\u306e\u6bd4\u8f03 ---\")\n...         size = 1000000\n...         \n...         start_time = time.time()\n...         result_list = process_large_data_list(size)\n...         list_time = time.time() - start_time\n...         \n...         start_time = time.time()\n...         result_gen = process_large_data_generator(size)\n...         gen_time = time.time() - start_time\n...         \n...         print(f\"\u7d50\u679c: {result_list} (\u4e21\u65b9\u3068\u3082\u540c\u3058)\")\n...         print(f\"\u30ea\u30b9\u30c8\u7248: {list_time:.4f}\u79d2\")\n...         print(f\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u7248: {gen_time:.4f}\u79d2\")\n...         print(\"\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u7248\u306f\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5927\u5e45\u306b\u5c11\u306a\u3044\")\n...     \n...     def implement_caching_system(self):\n...         \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u5b9f\u88c5\"\"\"\n...         print(\"\\\\n=== \u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0 ===\")\n...         \n...         class TimeBasedCache:\n...             \"\"\"\u6642\u9593\u30d9\u30fc\u30b9\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\"\"\"\n...             \n...             def __init__(self, ttl_seconds=300):\n...                 self.cache = {}\n...                 self.ttl = ttl_seconds\n...             \n...             def set(self, key, value):\n...                 \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u5024\u3092\u8a2d\u5b9a\"\"\"\n...                 expire_time = datetime.now() + timedelta(seconds=self.ttl)\n...                 self.cache[key] = {\n...                     'value': value,\n...                     'expire_time': expire_time\n...                 }\n...             \n...             def get(self, key):\n...                 \"\"\"\u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u5024\u3092\u53d6\u5f97\"\"\"\n...                 if key not in self.cache:\n...                     return None\n...                 \n...                 entry = self.cache[key]\n...                 if datetime.now() &gt; entry['expire_time']:\n...                     del self.cache[key]\n...                     return None\n...                 \n...                 return entry['value']\n...             \n...             def cached_function(self, func):\n...                 \"\"\"\u95a2\u6570\u306e\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u30c7\u30b3\u30ec\u30fc\u30bf\"\"\"\n...                 def wrapper(*args, **kwargs):\n...                     # \u30ad\u30e3\u30c3\u30b7\u30e5\u30ad\u30fc\u3092\u751f\u6210\n...                     key = f\"{func.__name__}:{hash(str(args) + str(kwargs))}\"\n...                     \n...                     # \u30ad\u30e3\u30c3\u30b7\u30e5\u304b\u3089\u53d6\u5f97\u3092\u8a66\u884c\n...                     cached_result = self.get(key)\n...                     if cached_result is not None:\n...                         print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: {key}\")\n...                         return cached_result\n...                     \n...                     # \u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u306e\u5834\u5408\u3001\u95a2\u6570\u3092\u5b9f\u884c\n...                     print(f\"\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: {key}\")\n...                     result = func(*args, **kwargs)\n...                     self.set(key, result)\n...                     return result\n...                 \n...                 return wrapper\n...         \n...         # \u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n...         cache = TimeBasedCache(ttl_seconds=5)\n...         \n...         @cache.cached_function\n...         def expensive_calculation(x, y):\n...             \"\"\"\u91cd\u3044\u8a08\u7b97\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\"\"\"\n...             time.sleep(0.1)  # \u91cd\u3044\u8a08\u7b97\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\n...             return x ** y + y ** x\n...         \n...         print(\"\\\\n--- \u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8 ---\")\n...         print(\"\u521d\u56de\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff09:\")\n...         result1 = expensive_calculation(3, 4)\n...         print(f\"\u7d50\u679c: {result1}\")\n...         \n...         print(\"\\\\n2\u56de\u76ee\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\uff09:\")\n...         result2 = expensive_calculation(3, 4)\n...         print(f\"\u7d50\u679c: {result2}\")\n...         \n...         print(\"\\\\n\u5225\u306e\u5f15\u6570\u3067\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff09:\")\n...         result3 = expensive_calculation(2, 5)\n...         print(f\"\u7d50\u679c: {result3}\")\n...     \n...     def implement_security_measures(self):\n...         \"\"\"\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306e\u5b9f\u88c5\"\"\"\n...         print(\"\\\\n=== \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 ===\")\n...         \n...         # 1. \u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u5316\n...         class PasswordManager:\n...             \"\"\"\u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\"\"\"\n...             \n...             @staticmethod\n...             def hash_password(password):\n...                 \"\"\"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u30cf\u30c3\u30b7\u30e5\u5316\"\"\"\n...                 salt = secrets.token_hex(16)\n...                 password_hash = hashlib.pbkdf2_hmac(\n...                     'sha256',\n...                     password.encode('utf-8'),\n...                     salt.encode('utf-8'),\n...                     100000  # \u53cd\u5fa9\u56de\u6570\n...                 )\n...                 return f\"{salt}:{password_hash.hex()}\"\n...             \n...             @staticmethod\n...             def verify_password(password, stored_hash):\n...                 \"\"\"\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u691c\u8a3c\"\"\"\n...                 try:\n...                     salt, hash_hex = stored_hash.split(':')\n...                     password_hash = hashlib.pbkdf2_hmac(\n...                         'sha256',\n...                         password.encode('utf-8'),\n...                         salt.encode('utf-8'),\n...                         100000\n...                     )\n...                     return password_hash.hex() == hash_hex\n...                 except ValueError:\n...                     return False\n...         \n...         # 2. \u30ec\u30fc\u30c8\u5236\u9650\n...         class RateLimiter:\n...             \"\"\"\u30ec\u30fc\u30c8\u5236\u9650\u30b7\u30b9\u30c6\u30e0\"\"\"\n...             \n...             def __init__(self, max_requests=10, time_window=60):\n...                 self.max_requests = max_requests\n...                 self.time_window = time_window\n...                 self.requests = {}\n...             \n...             def is_allowed(self, client_id):\n...                 \"\"\"\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u8a31\u53ef\u3055\u308c\u308b\u304b\u30c1\u30a7\u30c3\u30af\"\"\"\n...                 now = datetime.now()\n...                 \n...                 if client_id not in self.requests:\n...                     self.requests[client_id] = []\n...                 \n...                 # \u53e4\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u524a\u9664\n...                 cutoff_time = now - timedelta(seconds=self.time_window)\n...                 self.requests[client_id] = [\n...                     req_time for req_time in self.requests[client_id]\n...                     if req_time &gt; cutoff_time\n...                 ]\n...                 \n...                 # \u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u30c1\u30a7\u30c3\u30af\n...                 if len(self.requests[client_id]) &gt;= self.max_requests:\n...                     return False\n...                 \n...                 # \u65b0\u3057\u3044\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8a18\u9332\n...                 self.requests[client_id].append(now)\n...                 return True\n...         \n...         # 3. \u5165\u529b\u5024\u691c\u8a3c\n...         class InputValidator:\n...             \"\"\"\u5165\u529b\u5024\u691c\u8a3c\u30b7\u30b9\u30c6\u30e0\"\"\"\n...             \n...             @staticmethod\n...             def validate_email(email):\n...                 \"\"\"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u5f62\u5f0f\u3092\u691c\u8a3c\"\"\"\n...                 import re\n...                 pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$'\n...                 return re.match(pattern, email) is not None\n...             \n...             @staticmethod\n...             def sanitize_input(text):\n...                 \"\"\"\u5165\u529b\u5024\u3092\u30b5\u30cb\u30bf\u30a4\u30ba\"\"\"\n...                 import html\n...                 # HTML\u30a8\u30b9\u30b1\u30fc\u30d7\n...                 sanitized = html.escape(text)\n...                 # \u5371\u967a\u306a\u6587\u5b57\u3092\u9664\u53bb\n...                 dangerous_chars = ['&lt;', '&gt;', '\"', \"'\", '&amp;', ';']\n...                 for char in dangerous_chars:\n...                     sanitized = sanitized.replace(char, '')\n...                 return sanitized.strip()\n...             \n...             @staticmethod\n...             def validate_file_upload(filename, allowed_extensions):\n...                 \"\"\"\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u306e\u691c\u8a3c\"\"\"\n...                 if not filename:\n...                     return False, \"\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u7a7a\u3067\u3059\"\n...                 \n...                 # \u62e1\u5f35\u5b50\u30c1\u30a7\u30c3\u30af\n...                 extension = filename.split('.')[-1].lower()\n...                 if extension not in allowed_extensions:\n...                     return False, f\"\u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u62e1\u5f35\u5b50: {extension}\"\n...                 \n...                 # \u5371\u967a\u306a\u30d5\u30a1\u30a4\u30eb\u540d\u30d1\u30bf\u30fc\u30f3\u3092\u30c1\u30a7\u30c3\u30af\n...                 dangerous_patterns = ['..', '/', '\\\\\\\\', '&lt;', '&gt;', '|']\n...                 for pattern in dangerous_patterns:\n...                     if pattern in filename:\n...                         return False, f\"\u5371\u967a\u306a\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059: {pattern}\"\n...                 \n...                 return True, \"\u30d5\u30a1\u30a4\u30eb\u306f\u5b89\u5168\u3067\u3059\"\n...         \n...         # \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u6a5f\u80fd\u306e\u30c6\u30b9\u30c8\n...         print(\"\\\\n--- \u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u30c6\u30b9\u30c8 ---\")\n...         password_mgr = PasswordManager()\n...         \n...         original_password = \"my_secure_password123\"\n...         hashed = password_mgr.hash_password(original_password)\n...         print(f\"\u5143\u306e\u30d1\u30b9\u30ef\u30fc\u30c9: {original_password}\")\n...         print(f\"\u30cf\u30c3\u30b7\u30e5\u5316: {hashed[:50]}...\")\n...         \n...         # \u691c\u8a3c\u30c6\u30b9\u30c8\n...         is_valid = password_mgr.verify_password(original_password, hashed)\n...         print(f\"\u30d1\u30b9\u30ef\u30fc\u30c9\u691c\u8a3c: {'\u2713 \u6210\u529f' if is_valid else '\u2717 \u5931\u6557'}\")\n...         \n...         wrong_password = \"wrong_password\"\n...         is_invalid = password_mgr.verify_password(wrong_password, hashed)\n...         print(f\"\u9593\u9055\u3044\u30d1\u30b9\u30ef\u30fc\u30c9: {'\u2717 \u5931\u6557' if not is_invalid else '\u2713 \u6210\u529f'}\")\n...         \n...         print(\"\\\\n--- \u30ec\u30fc\u30c8\u5236\u9650\u30c6\u30b9\u30c8 ---\")\n...         rate_limiter = RateLimiter(max_requests=3, time_window=10)\n...         \n...         client_id = \"user123\"\n...         for i in range(5):\n...             allowed = rate_limiter.is_allowed(client_id)\n...             status = \"\u8a31\u53ef\" if allowed else \"\u62d2\u5426\"\n...             print(f\"\u30ea\u30af\u30a8\u30b9\u30c8 {i+1}: {status}\")\n...         \n...         print(\"\\\\n--- \u5165\u529b\u5024\u691c\u8a3c\u30c6\u30b9\u30c8 ---\")\n...         validator = InputValidator()\n...         \n...         # \u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u691c\u8a3c\n...         emails = [\"test@example.com\", \"invalid-email\", \"user@domain.co.jp\"]\n...         for email in emails:\n...             is_valid = validator.validate_email(email)\n...             print(f\"\u30e1\u30fc\u30eb {email}: {'\u2713 \u6709\u52b9' if is_valid else '\u2717 \u7121\u52b9'}\")\n...         \n...         # \u5165\u529b\u5024\u30b5\u30cb\u30bf\u30a4\u30ba\n...         dangerous_input = \"&lt;script&gt;alert('XSS')&lt;/script&gt;Hello &amp; goodbye\"\n...         sanitized = validator.sanitize_input(dangerous_input)\n...         print(f\"\u5371\u967a\u306a\u5165\u529b: {dangerous_input}\")\n...         print(f\"\u30b5\u30cb\u30bf\u30a4\u30ba\u5f8c: {sanitized}\")\n...         \n...         # \u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u691c\u8a3c\n...         files = [\n...             (\"document.pdf\", [\"pdf\", \"doc\", \"txt\"]),\n...             (\"image.jpg\", [\"jpg\", \"png\", \"gif\"]),\n...             (\"script.exe\", [\"pdf\", \"doc\", \"txt\"]),\n...             (\"../etc/passwd\", [\"txt\"])\n...         ]\n...         \n...         for filename, allowed_ext in files:\n...             is_valid, message = validator.validate_file_upload(filename, allowed_ext)\n...             status = \"\u2713\" if is_valid else \"\u2717\"\n...             print(f\"\u30d5\u30a1\u30a4\u30eb {filename}: {status} {message}\")\n\n&gt;&gt;&gt; # \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u30fb\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u7ba1\u7406\u30b7\u30b9\u30c6\u30e0\u306e\u30c6\u30b9\u30c8\n&gt;&gt;&gt; perf_sec_manager = PerformanceSecurityManager()\n&gt;&gt;&gt; perf_sec_manager.demonstrate_performance_optimization()\n&gt;&gt;&gt; perf_sec_manager.implement_caching_system()\n&gt;&gt;&gt; perf_sec_manager.implement_security_measures()\n\n=== \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316 ===\n\n--- \u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u8a08\u7b97\u306e\u6bd4\u8f03 ---\n\u7d50\u679c: 832040 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\n\u901a\u5e38\u7248: 0.2987\u79d2\n\u30e1\u30e2\u5316\u7248: 0.000040\u79d2\n\u901f\u5ea6\u5411\u4e0a: 7466.7\u500d\n\n--- \u30e1\u30e2\u30ea\u52b9\u7387\u306e\u6bd4\u8f03 ---\n\u7d50\u679c: 999999000000 (\u4e21\u65b9\u3068\u3082\u540c\u3058)\n\u30ea\u30b9\u30c8\u7248: 0.0856\u79d2\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u7248: 0.0431\u79d2\n\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u7248\u306f\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u304c\u5927\u5e45\u306b\u5c11\u306a\u3044\n\n=== \u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0 ===\n\n--- \u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0\u30c6\u30b9\u30c8 ---\n\u521d\u56de\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff09:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: expensive_calculation:-2928119574089899321\n\u7d50\u679c: 145\n\n2\u56de\u76ee\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8\uff09:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30d2\u30c3\u30c8: expensive_calculation:-2928119574089899321\n\u7d50\u679c: 145\n\n\u5225\u306e\u5f15\u6570\u3067\u5b9f\u884c\uff08\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\uff09:\n\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9: expensive_calculation:7442749851034768347\n\u7d50\u679c: 57\n\n=== \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56 ===\n\n--- \u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u30c6\u30b9\u30c8 ---\n\u5143\u306e\u30d1\u30b9\u30ef\u30fc\u30c9: my_secure_password123\n\u30cf\u30c3\u30b7\u30e5\u5316: b0a1c2d3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4...\n\u30d1\u30b9\u30ef\u30fc\u30c9\u691c\u8a3c: \u2713 \u6210\u529f\n\u9593\u9055\u3044\u30d1\u30b9\u30ef\u30fc\u30c9: \u2713 \u6210\u529f\n\n--- \u30ec\u30fc\u30c8\u5236\u9650\u30c6\u30b9\u30c8 ---\n\u30ea\u30af\u30a8\u30b9\u30c8 1: \u8a31\u53ef\n\u30ea\u30af\u30a8\u30b9\u30c8 2: \u8a31\u53ef\n\u30ea\u30af\u30a8\u30b9\u30c8 3: \u8a31\u53ef\n\u30ea\u30af\u30a8\u30b9\u30c8 4: \u62d2\u5426\n\u30ea\u30af\u30a8\u30b9\u30c8 5: \u62d2\u5426\n\n--- \u5165\u529b\u5024\u691c\u8a3c\u30c6\u30b9\u30c8 ---\n\u30e1\u30fc\u30eb test@example.com: \u2713 \u6709\u52b9\n\u30e1\u30fc\u30eb invalid-email: \u2717 \u7121\u52b9\n\u30e1\u30fc\u30eb user@domain.co.jp: \u2713 \u6709\u52b9\n\u5371\u967a\u306a\u5165\u529b: &lt;script&gt;alert('XSS')&lt;/script&gt;Hello &amp; goodbye\n\u30b5\u30cb\u30bf\u30a4\u30ba\u5f8c: Hello  goodbye\n\u30d5\u30a1\u30a4\u30eb document.pdf: \u2713 \u30d5\u30a1\u30a4\u30eb\u306f\u5b89\u5168\u3067\u3059\n\u30d5\u30a1\u30a4\u30eb image.jpg: \u2717 \u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u62e1\u5f35\u5b50: jpg\n\u30d5\u30a1\u30a4\u30eb script.exe: \u2717 \u8a31\u53ef\u3055\u308c\u3066\u3044\u306a\u3044\u62e1\u5f35\u5b50: exe\n\u30d5\u30a1\u30a4\u30eb ../etc/passwd: \u2717 \u5371\u967a\u306a\u6587\u5b57\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059: ..\n</code></pre>"},{"location":"chapter20/#_10","title":"\u307e\u3068\u3081","text":"<p>\u3053\u306e\u7ae0\u3067\u306f\u3001Python\u958b\u767a\u306b\u304a\u3051\u308b\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u5305\u62ec\u7684\u306b\u5b66\u7fd2\u3057\u307e\u3057\u305f\uff1a</p>"},{"location":"chapter20/#_11","title":"\u5b66\u7fd2\u3057\u305f\u5185\u5bb9","text":"<ol> <li>\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u898f\u7d04\u3068\u30b9\u30bf\u30a4\u30eb</li> <li>PEP 8\u306e\u5b9f\u8df5</li> <li>\u81ea\u52d5\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\u306e\u6d3b\u7528</li> <li> <p>\u30b3\u30fc\u30c9\u54c1\u8cea\u7ba1\u7406</p> </li> <li> <p>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u3068\u30d1\u30c3\u30b1\u30fc\u30b8\u7ba1\u7406</p> </li> <li>\u6a19\u6e96\u7684\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210</li> <li>\u4eee\u60f3\u74b0\u5883\u306e\u6d3b\u7528</li> <li> <p>\u4f9d\u5b58\u95a2\u4fc2\u7ba1\u7406</p> </li> <li> <p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3</p> </li> <li>\u52b9\u679c\u7684\u306adocstring\u306e\u66f8\u304d\u65b9</li> <li>API\u6587\u66f8\u3068\u30e6\u30fc\u30b6\u30fc\u30ac\u30a4\u30c9</li> <li> <p>\u6280\u8853\u4ed5\u69d8\u66f8\u306e\u4f5c\u6210</p> </li> <li> <p>\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3068CI/CD</p> </li> <li>Git\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u8a2d\u8a08</li> <li>GitHub Actions\u306b\u3088\u308b\u81ea\u52d5\u5316</li> <li> <p>Docker\u5316\u3068\u30c7\u30d7\u30ed\u30a4\u30e1\u30f3\u30c8</p> </li> <li> <p>\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3068\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3</p> </li> <li>\u6700\u9069\u5316\u6280\u8853</li> <li>\u30ad\u30e3\u30c3\u30b7\u30e5\u30b7\u30b9\u30c6\u30e0</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56</li> </ol>"},{"location":"chapter20/#_12","title":"\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8","text":"<ul> <li>\u4e00\u8cab\u6027: \u30c1\u30fc\u30e0\u5168\u4f53\u3067\u7d71\u4e00\u3055\u308c\u305f\u30b9\u30bf\u30a4\u30eb\u3068\u30c4\u30fc\u30eb</li> <li>\u81ea\u52d5\u5316: \u624b\u52d5\u4f5c\u696d\u3092\u6e1b\u3089\u3057\u3001\u54c1\u8cea\u3092\u4fdd\u3064</li> <li>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: \u5c06\u6765\u306e\u81ea\u5206\u3068\u30c1\u30fc\u30e0\u306e\u305f\u3081\u306e\u6295\u8cc7</li> <li>\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3: \u6700\u521d\u304b\u3089\u7d44\u307f\u8fbc\u3080\u3053\u3068\u304c\u91cd\u8981</li> <li>\u7d99\u7d9a\u7684\u6539\u5584: \u5b9a\u671f\u7684\u306a\u898b\u76f4\u3057\u3068\u6539\u5584</li> </ul> <p>\u3053\u308c\u3089\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u5b9f\u8df5\u3059\u308b\u3053\u3068\u3067\u3001\u4fdd\u5b88\u6027\u304c\u9ad8\u304f\u3001\u62e1\u5f35\u3057\u3084\u3059\u304f\u3001\u5b89\u5168\u306aPython\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p> <p>\u6b21\u56de\u306e\u5b66\u7fd2\u3067\u306f: \u5b9f\u969b\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3053\u308c\u3089\u306e\u6280\u8853\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u672c\u683c\u7684\u306aWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3084API\u3092\u69cb\u7bc9\u3057\u3066\u3044\u304d\u307e\u3059\uff01</p> <p>\u3010\u65e5\u8a8c\u66f4\u65b0\u3011</p> <p>\u7b2c20\u7ae0\u3067\u306fPython\u958b\u767a\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u3092\u7dcf\u5408\u7684\u306b\u5b66\u7fd2\u3057\u307e\u3057\u305f\u3002PEP 8\u6e96\u62e0\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u9020\u8a2d\u8a08\u3001\u81ea\u52d5\u5316\u3055\u308c\u305fCI/CD\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3001\u5305\u62ec\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u6700\u9069\u5316\u3001\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u5bfe\u7b56\u306a\u3069\u30d7\u30ed\u30d5\u30a7\u30c3\u30b7\u30e7\u30ca\u30eb\u958b\u767a\u306b\u5fc5\u8981\u306a\u5168\u8981\u7d20\u3092\u5b9f\u8df5\u7684\u306b\u7fd2\u5f97\u3002\u91d1\u878d\u8a08\u7b97\u30b7\u30b9\u30c6\u30e0\u3092\u4f8b\u306b\u3001\u5b9f\u969b\u306e\u958b\u767a\u73fe\u5834\u3067\u4f7f\u308f\u308c\u308b\u6700\u65b0\u306e\u30c4\u30fc\u30eb\u3068\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u3092\u5b8c\u5168\u5b9f\u88c5\u3002\u3053\u308c\u3067\u516820\u7ae0\u306e\u672c\u7de8\u304c\u5b8c\u6210\u3057\u3001Python\u306e\u57fa\u790e\u304b\u3089\u9ad8\u5ea6\u306a\u958b\u767a\u6280\u8853\u307e\u3067\u4f53\u7cfb\u7684\u306b\u5b66\u7fd2\u3067\u304d\u308b\u5165\u9580\u66f8\u304c\u5b8c\u6210\u3057\u307e\u3057\u305f\u3002</p>"},{"location":"appendix/bnf/","title":"\u4ed8\u9332A\uff1aPython\u6587\u6cd5\u306e\u5b8c\u5168\u306aBNF\u8a18\u6cd5","text":"<p>\u3053\u306e\u4ed8\u9332\u3067\u306f\u3001Python\u8a00\u8a9e\u306e\u6587\u6cd5\u3092\u5b8c\u5168\u306aBNF\uff08Backus-Naur Form\uff09\u8a18\u6cd5\u3067\u8a18\u8ff0\u3057\u307e\u3059\u3002\u3053\u308c\u306fPython\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u6587\u6cd5\u5b9a\u7fa9\u3092\u57fa\u306b\u3001\u672c\u66f8\u3067\u8aac\u660e\u3057\u305f\u5185\u5bb9\u3092\u4f53\u7cfb\u7684\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3067\u3059\u3002</p>"},{"location":"appendix/bnf/#bnf","title":"BNF\u8a18\u6cd5\u306e\u8aad\u307f\u65b9","text":"<ul> <li><code>::=</code> \u306f\u300c\u5b9a\u7fa9\u3055\u308c\u308b\u300d\u3092\u610f\u5473\u3057\u307e\u3059</li> <li><code>|</code> \u306f\u300c\u307e\u305f\u306f\u300d\u3092\u610f\u5473\u3057\u307e\u3059\uff08\u9078\u629e\u80a2\uff09</li> <li><code>[]</code> \u306f\u7701\u7565\u53ef\u80fd\u306a\u8981\u7d20\u3092\u8868\u3057\u307e\u3059</li> <li><code>{}</code> \u306f0\u56de\u4ee5\u4e0a\u306e\u7e70\u308a\u8fd4\u3057\u3092\u8868\u3057\u307e\u3059</li> <li><code>()</code> \u306f\u30b0\u30eb\u30fc\u30d7\u5316\u3092\u8868\u3057\u307e\u3059</li> <li><code>*</code> \u306f0\u56de\u4ee5\u4e0a\u306e\u7e70\u308a\u8fd4\u3057</li> <li><code>+</code> \u306f1\u56de\u4ee5\u4e0a\u306e\u7e70\u308a\u8fd4\u3057</li> </ul>"},{"location":"appendix/bnf/#_1","title":"\u30d7\u30ed\u30b0\u30e9\u30e0\u5168\u4f53\u306e\u69cb\u9020","text":"<pre><code>file_input ::= (NEWLINE | stmt)* ENDMARKER\ninteractive_input ::= [stmt_list] NEWLINE | compound_stmt NEWLINE\neval_input ::= testlist NEWLINE* ENDMARKER\n</code></pre>"},{"location":"appendix/bnf/#statement","title":"\u6587\uff08Statement\uff09","text":""},{"location":"appendix/bnf/#_2","title":"\u57fa\u672c\u7684\u306a\u6587\u306e\u69cb\u9020","text":"<pre><code>stmt ::= simple_stmt | compound_stmt\nsimple_stmt ::= small_stmt (';' small_stmt)* [';'] NEWLINE\nsmall_stmt ::= (expr_stmt | print_stmt | del_stmt | pass_stmt | flow_stmt |\n               import_stmt | global_stmt | nonlocal_stmt | assert_stmt)\n\ncompound_stmt ::= if_stmt | while_stmt | for_stmt | try_stmt | with_stmt | \n                  funcdef | classdef | decorated | async_stmt\n</code></pre>"},{"location":"appendix/bnf/#_3","title":"\u5f0f\u6587\u3068\u4ee3\u5165\u6587","text":"<pre><code>expr_stmt ::= testlist_star_expr (annassign | augassign (yield_expr | testlist) |\n              ('=' (yield_expr | testlist_star_expr))*)\n\nannassign ::= ':' test ['=' (yield_expr | testlist)]\ntestlist_star_expr ::= (test | star_expr) (',' (test | star_expr))* [',']\naugassign ::= ('+=' | '-=' | '*=' | '@=' | '/=' | '%=' | '&amp;=' | '|=' | '^=' |\n              '&lt;&lt;=' | '&gt;&gt;=' | '**=' | '//=')\n</code></pre>"},{"location":"appendix/bnf/#_4","title":"\u5236\u5fa1\u69cb\u9020","text":""},{"location":"appendix/bnf/#if","title":"if\u6587","text":"<pre><code>if_stmt ::= 'if' namedexpr_test ':' suite ('elif' namedexpr_test ':' suite)* ['else' ':' suite]\n</code></pre>"},{"location":"appendix/bnf/#while","title":"while\u6587","text":"<pre><code>while_stmt ::= 'while' namedexpr_test ':' suite ['else' ':' suite]\n</code></pre>"},{"location":"appendix/bnf/#for","title":"for\u6587","text":"<pre><code>for_stmt ::= 'for' exprlist 'in' testlist ':' suite ['else' ':' suite]\n</code></pre>"},{"location":"appendix/bnf/#try","title":"try\u6587","text":"<pre><code>try_stmt ::= ('try' ':' suite\n              ((except_clause ':' suite)+\n               ['else' ':' suite]\n               ['finally' ':' suite] |\n               'finally' ':' suite))\n\nexcept_clause ::= 'except' [test ['as' identifier]]\n</code></pre>"},{"location":"appendix/bnf/#with","title":"with\u6587","text":"<pre><code>with_stmt ::= 'with' with_item (',' with_item)* ':' suite\nwith_item ::= test ['as' expr]\n</code></pre>"},{"location":"appendix/bnf/#_5","title":"\u30d5\u30ed\u30fc\u5236\u5fa1\u6587","text":"<pre><code>flow_stmt ::= break_stmt | continue_stmt | return_stmt | raise_stmt | yield_stmt\nbreak_stmt ::= 'break'\ncontinue_stmt ::= 'continue'\nreturn_stmt ::= 'return' [testlist]\nyield_stmt ::= yield_expr\nraise_stmt ::= 'raise' [test ['from' test]]\n</code></pre>"},{"location":"appendix/bnf/#_6","title":"\u305d\u306e\u4ed6\u306e\u6587","text":"<pre><code>del_stmt ::= 'del' exprlist\npass_stmt ::= 'pass'\nimport_stmt ::= import_name | import_from\nimport_name ::= 'import' dotted_as_names\nimport_from ::= ('from' (('.' | '...')* dotted_name | ('.' | '...')+)\n               'import' ('*' | '(' import_as_names ')' | import_as_names))\n\nglobal_stmt ::= 'global' identifier (',' identifier)*\nnonlocal_stmt ::= 'nonlocal' identifier (',' identifier)*\nassert_stmt ::= 'assert' test [',' test]\n</code></pre>"},{"location":"appendix/bnf/#_7","title":"\u95a2\u6570\u3068\u30af\u30e9\u30b9\u5b9a\u7fa9","text":""},{"location":"appendix/bnf/#_8","title":"\u95a2\u6570\u5b9a\u7fa9","text":"<pre><code>funcdef ::= 'def' identifier parameters ['-&gt;' test] ':' suite\nparameters ::= '(' [typedargslist] ')'\ntypedargslist ::= (tfpdef ['=' test] (',' tfpdef ['=' test])* [',' [\n                   '*' [tfpdef] (',' tfpdef ['=' test])* [',' ['**' tfpdef [',']]] |\n                   '**' tfpdef [',']]] |\n                   '*' [tfpdef] (',' tfpdef ['=' test])* [',' ['**' tfpdef [',']]] |\n                   '**' tfpdef [','])\n\ntfpdef ::= identifier [':' test]\nvarargslist ::= (vfpdef ['=' test] (',' vfpdef ['=' test])* [',' [\n                 '*' [vfpdef] (',' vfpdef ['=' test])* [',' ['**' vfpdef [',']]] |\n                 '**' vfpdef [',']]] |\n                 '*' [vfpdef] (',' vfpdef ['=' test])* [',' ['**' vfpdef [',']]] |\n                 '**' vfpdef [','])\n\nvfpdef ::= identifier\n</code></pre>"},{"location":"appendix/bnf/#_9","title":"\u30af\u30e9\u30b9\u5b9a\u7fa9","text":"<pre><code>classdef ::= 'class' identifier ['(' [arglist] ')'] ':' suite\n</code></pre>"},{"location":"appendix/bnf/#_10","title":"\u30c7\u30b3\u30ec\u30fc\u30bf","text":"<pre><code>decorated ::= decorators (classdef | funcdef | async_funcdef)\ndecorators ::= decorator+\ndecorator ::= '@' dotted_name ['(' [arglist] ')'] NEWLINE\n</code></pre>"},{"location":"appendix/bnf/#_11","title":"\u975e\u540c\u671f\u6587","text":"<pre><code>async_stmt ::= 'async' (funcdef | with_stmt | for_stmt)\nasync_funcdef ::= 'async' funcdef\n</code></pre>"},{"location":"appendix/bnf/#expression","title":"\u5f0f\uff08Expression\uff09","text":""},{"location":"appendix/bnf/#_12","title":"\u57fa\u672c\u7684\u306a\u5f0f\u306e\u69cb\u9020","text":"<pre><code>test ::= or_test ['if' or_test 'else' test] | lambdef\ntest_nocond ::= or_test | lambdef_nocond\nlambdef ::= 'lambda' [varargslist] ':' test\nlambdef_nocond ::= 'lambda' [varargslist] ':' test_nocond\n</code></pre>"},{"location":"appendix/bnf/#_13","title":"\u8ad6\u7406\u6f14\u7b97","text":"<pre><code>or_test ::= and_test ('or' and_test)*\nand_test ::= not_test ('and' not_test)*\nnot_test ::= 'not' not_test | comparison\n</code></pre>"},{"location":"appendix/bnf/#_14","title":"\u6bd4\u8f03\u6f14\u7b97","text":"<pre><code>comparison ::= expr (comp_op expr)*\ncomp_op ::= '&lt;' | '&gt;' | '==' | '&gt;=' | '&lt;=' | '&lt;&gt;' | '!=' |\n            'in' | 'not' 'in' | 'is' | 'is' 'not'\n</code></pre>"},{"location":"appendix/bnf/#_15","title":"\u7b97\u8853\u6f14\u7b97","text":"<pre><code>expr ::= xor_expr ('|' xor_expr)*\nxor_expr ::= and_expr ('^' and_expr)*\nand_expr ::= shift_expr ('&amp;' shift_expr)*\nshift_expr ::= arith_expr (('&lt;&lt;' | '&gt;&gt;') arith_expr)*\narith_expr ::= term (('+' | '-') term)*\nterm ::= factor (('*' | '@' | '/' | '%' | '//') factor)*\nfactor ::= ('+' | '-' | '~') factor | power\npower ::= atom_expr ['**' factor]\n</code></pre>"},{"location":"appendix/bnf/#_16","title":"\u30a2\u30c8\u30e0\u5f0f","text":"<pre><code>atom_expr ::= ['await'] atom trailer*\natom ::= ('(' [yield_expr | testlist_comp] ')' |\n          '[' [listmaker] ']' |\n          '{' [dictorsetmaker] '}' |\n          '`' testlist1 '`' |\n          identifier | number | string+)\n\ntrailer ::= '(' [arglist] ')' | '[' subscriptlist ']' | '.' identifier\n</code></pre>"},{"location":"appendix/bnf/#_17","title":"\u30ea\u30b9\u30c8\u3068\u8f9e\u66f8\u306e\u5185\u5305\u8868\u8a18","text":"<pre><code>listmaker ::= (namedexpr_test | star_expr) ( comp_for | (',' (namedexpr_test | star_expr))* [','] )\ntestlist_comp ::= (namedexpr_test | star_expr) ( comp_for | (',' (namedexpr_test | star_expr))* [','] )\ndictorsetmaker ::= ( ((test ':' test | '**' expr)\n                     (comp_for | (',' (test ':' test | '**' expr))* [','])) |\n                    ((test | star_expr)\n                     (comp_for | (',' (test | star_expr))* [','])) )\n\ncomp_for ::= ['async'] 'for' exprlist 'in' or_test [comp_iter]\ncomp_iter ::= comp_for | comp_if\ncomp_if ::= 'if' test_nocond [comp_iter]\n</code></pre>"},{"location":"appendix/bnf/#_18","title":"\u5f15\u6570\u30ea\u30b9\u30c8","text":"<pre><code>arglist ::= argument (',' argument)* [',']\nargument ::= ( test [comp_for] |\n               test '=' test |\n               '**' test |\n               '*' test )\n</code></pre>"},{"location":"appendix/bnf/#_19","title":"\u305d\u306e\u4ed6\u306e\u5f0f\u8981\u7d20","text":"<pre><code>subscriptlist ::= subscript (',' subscript)* [',']\nsubscript ::= test | [test] ':' [test] [':' [test]]\nexprlist ::= (expr | star_expr) (',' (expr | star_expr))* [',']\ntestlist ::= test (',' test)* [',']\nstar_expr ::= '*' expr\n</code></pre>"},{"location":"appendix/bnf/#_20","title":"\u30ea\u30c6\u30e9\u30eb","text":""},{"location":"appendix/bnf/#_21","title":"\u6570\u5024\u30ea\u30c6\u30e9\u30eb","text":"<pre><code>number ::= integer | floatnumber | imagnumber\ninteger ::= decinteger | bininteger | octinteger | hexinteger\ndecinteger ::= nonzerodigit ([\"_\"] digit)* | \"0\"+ ([\"_\"] \"0\")*\nbininteger ::= \"0\" (\"b\" | \"B\") ([\"_\"] bindigit)+\noctinteger ::= \"0\" (\"o\" | \"O\") ([\"_\"] octdigit)+\nhexinteger ::= \"0\" (\"x\" | \"X\") ([\"_\"] hexdigit)+\n\nfloatnumber ::= pointfloat | exponentfloat\npointfloat ::= [digitpart] fraction | digitpart \".\"\nexponentfloat ::= (digitpart | pointfloat) exponent\ndigitpart ::= digit ([\"_\"] digit)*\nfraction ::= \".\" digitpart\nexponent ::= (\"e\" | \"E\") [\"+\" | \"-\"] digitpart\n\nimagnumber ::= (floatnumber | digitpart) (\"j\" | \"J\")\n</code></pre>"},{"location":"appendix/bnf/#_22","title":"\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb","text":"<pre><code>string ::= stringprefix? (shortstring | longstring)\nstringprefix ::= \"r\" | \"u\" | \"R\" | \"U\" | \"f\" | \"F\" | \"fr\" | \"Fr\" | \"fR\" | \"FR\" | \"rf\" | \"rF\" | \"Rf\" | \"RF\"\nshortstring ::= \"'\" shortstringitem* \"'\" | '\"' shortstringitem* '\"'\nlongstring ::= \"'''\" longstringitem* \"'''\" | '\"\"\"' longstringitem* '\"\"\"'\nshortstringitem ::= shortstringchar | stringescapeseq\nlongstringitem ::= longstringchar | stringescapeseq\n</code></pre>"},{"location":"appendix/bnf/#_23","title":"\u8b58\u5225\u5b50\u3068\u30ad\u30fc\u30ef\u30fc\u30c9","text":"<pre><code>identifier ::= (letter | \"_\") (letter | digit | \"_\")*\nletter ::= lowercase | uppercase\nlowercase ::= \"a\"...\"z\"\nuppercase ::= \"A\"...\"Z\"\ndigit ::= \"0\"...\"9\"\n</code></pre>"},{"location":"appendix/bnf/#_24","title":"\u4e88\u7d04\u8a9e\uff08\u30ad\u30fc\u30ef\u30fc\u30c9\uff09","text":"<pre><code>False      await      else       import     pass\nNone       break      except     in         raise\nTrue       class      finally    is         return\nand        continue   for        lambda     try\nas         def        from       nonlocal   while\nassert     del        global     not        with\nasync      elif       if         or         yield\n</code></pre>"},{"location":"appendix/bnf/#_25","title":"\u6f14\u7b97\u5b50\u512a\u5148\u9806\u4f4d\uff08\u9ad8\u3044\u9806\uff09","text":"<ol> <li><code>(expressions...)</code>, <code>[expressions...]</code>, <code>{key: value...}</code>, <code>{expressions...}</code></li> <li><code>x[index]</code>, <code>x[index:index]</code>, <code>x(arguments...)</code>, <code>x.attribute</code></li> <li><code>await x</code></li> <li><code>**</code> (\u51aa\u4e57)</li> <li><code>+x</code>, <code>-x</code>, <code>~x</code> (\u5358\u9805\u6f14\u7b97\u5b50)</li> <li><code>*</code>, <code>@</code>, <code>/</code>, <code>//</code>, <code>%</code></li> <li><code>+</code>, <code>-</code> (\u4e8c\u9805\u6f14\u7b97\u5b50)</li> <li><code>&lt;&lt;</code>, <code>&gt;&gt;</code></li> <li><code>&amp;</code></li> <li><code>^</code></li> <li><code>|</code></li> <li><code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>is</code>, <code>is not</code>, <code>in</code>, <code>not in</code></li> <li><code>not x</code></li> <li><code>and</code></li> <li><code>or</code></li> <li><code>if</code> \u2013 <code>else</code> (\u6761\u4ef6\u5f0f)</li> <li><code>lambda</code></li> <li><code>:=</code> (\u30bb\u30a4\u30a6\u30c1\u6f14\u7b97\u5b50)</li> </ol>"},{"location":"appendix/bnf/#_26","title":"\u7279\u6b8a\u306a\u69cb\u6587\u8981\u7d20","text":""},{"location":"appendix/bnf/#python-310","title":"\u30de\u30c3\u30c1\u6587\uff08Python 3.10+\uff09","text":"<pre><code>match_stmt ::= \"match\" subject_expr ':' NEWLINE INDENT case_block+ DEDENT\nsubject_expr ::= star_named_expression (',' star_named_expressions)? [',']\ncase_block ::= \"case\" patterns [guard] ':' block\nguard ::= 'if' named_expression\npatterns ::= open_sequence_pattern | pattern\npattern ::= as_pattern | or_pattern\n</code></pre>"},{"location":"appendix/bnf/#_27","title":"\u578b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3","text":"<pre><code>annassign ::= ':' test ['=' (yield_expr | testlist)]\n</code></pre>"},{"location":"appendix/bnf/#_28","title":"\u5b57\u53e5\u89e3\u6790\u8981\u7d20","text":""},{"location":"appendix/bnf/#_29","title":"\u30c8\u30fc\u30af\u30f3\u306e\u7a2e\u985e","text":"<pre><code>NEWLINE ::= [\\r\\n]+\nINDENT ::= \u7a7a\u767d\u6587\u5b57\u306e\u5897\u52a0\nDEDENT ::= \u7a7a\u767d\u6587\u5b57\u306e\u6e1b\u5c11\nNAME ::= identifier\nNUMBER ::= number\nSTRING ::= string\nCOMMENT ::= '#' [^\\r\\n]*\nNL ::= NEWLINE | COMMENT\n</code></pre>"},{"location":"appendix/bnf/#_30","title":"\u6f14\u7b97\u5b50\u3068\u30c7\u30ea\u30df\u30bf","text":"<pre><code>+       -       *       **      /       //      %      @\n&lt;&lt;      &gt;&gt;      &amp;       |       ^       ~       :=\n&lt;       &gt;       &lt;=      &gt;=      ==      !=\n(       )       [       ]       {       }\n,       :       .       ;       @       =       -&gt;\n+=      -=      *=      /=      //=     %=      @=\n&amp;=      |=      ^=      &gt;&gt;=     &lt;&lt;=     **=\n</code></pre>"},{"location":"appendix/bnf/#_31","title":"\u307e\u3068\u3081","text":"<p>\u3053\u306e\u5b8c\u5168\u306aBNF\u5b9a\u7fa9\u306f\u3001Python\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u3042\u3089\u3086\u308b\u69cb\u6587\u8981\u7d20\u3092\u7db2\u7f85\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306ePython\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u306f\u3001\u3053\u306e\u6587\u6cd5\u5b9a\u7fa9\u306b\u57fa\u3065\u3044\u3066\u69cb\u6587\u89e3\u6790\u3092\u884c\u3044\u3001\u62bd\u8c61\u69cb\u6587\u6728\uff08AST\uff09\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002</p> <p>\u5404\u7ae0\u3067\u5b66\u3093\u3060\u500b\u5225\u306e\u6587\u6cd5\u8981\u7d20\u304c\u3001\u3053\u306e\u5305\u62ec\u7684\u306a\u5b9a\u7fa9\u306e\u4e2d\u3067\u3069\u306e\u3088\u3046\u306b\u4f4d\u7f6e\u3065\u3051\u3089\u308c\u3066\u3044\u308b\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3067\u3001Python\u8a00\u8a9e\u306e\u4f53\u7cfb\u7684\u306a\u7406\u89e3\u3092\u6df1\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"appendix/errors/","title":"\u4ed8\u9332D\uff1a\u3088\u304f\u3042\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3068\u5bfe\u51e6\u6cd5","text":"<p>\u3053\u306e\u4ed8\u9332\u3067\u306f\u3001Python\u5b66\u7fd2\u4e2d\u306b\u3088\u304f\u906d\u9047\u3059\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5206\u985e\u3057\u3001\u539f\u56e0\u3068\u5bfe\u51e6\u6cd5\u3092\u5177\u4f53\u4f8b\u3068\u3068\u3082\u306b\u89e3\u8aac\u3057\u307e\u3059\u3002</p>"},{"location":"appendix/errors/#syntaxerror","title":"\u69cb\u6587\u30a8\u30e9\u30fc\uff08SyntaxError\uff09","text":""},{"location":"appendix/errors/#_1","title":"\u57fa\u672c\u7684\u306a\u69cb\u6587\u30a8\u30e9\u30fc","text":""},{"location":"appendix/errors/#1-syntaxerror-invalid-syntax","title":"1. SyntaxError: invalid syntax","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30b3\u30ed\u30f3\u306e\u5fd8\u308c\nif x &gt; 5\n    print(\"\u5927\u304d\u3044\")\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# File \"example.py\", line 1\n#     if x &gt; 5\n#            ^\n# SyntaxError: invalid syntax\n\n# \u5bfe\u51e6\u6cd5\uff1a\u6761\u4ef6\u6587\u306e\u5f8c\u306b\u30b3\u30ed\u30f3\uff08:\uff09\u3092\u8ffd\u52a0\nif x &gt; 5:\n    print(\"\u5927\u304d\u3044\")\n</code></pre> <pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u62ec\u5f27\u306e\u9589\u3058\u5fd8\u308c\nprint(\"Hello\"\nprint(\"World\")\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# SyntaxError: '(' was never closed\n\n# \u5bfe\u51e6\u6cd5\uff1a\u62ec\u5f27\u3092\u6b63\u3057\u304f\u9589\u3058\u308b\nprint(\"Hello\")\nprint(\"World\")\n</code></pre>"},{"location":"appendix/errors/#2-syntaxerror-eol-while-scanning-string-literal","title":"2. SyntaxError: EOL while scanning string literal","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u6587\u5b57\u5217\u306e\u9589\u3058\u30af\u30a9\u30fc\u30c8\u5fd8\u308c\nmessage = \"Hello World\nprint(message)\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# SyntaxError: EOL while scanning string literal\n\n# \u5bfe\u51e6\u6cd5\uff1a\u30af\u30a9\u30fc\u30c8\u3092\u6b63\u3057\u304f\u9589\u3058\u308b\nmessage = \"Hello World\"\nprint(message)\n\n# \u307e\u305f\u306f\u8907\u6570\u884c\u6587\u5b57\u5217\u306e\u5834\u5408\nmessage = \"\"\"Hello\nWorld\"\"\"\nprint(message)\n</code></pre>"},{"location":"appendix/errors/#3-syntaxerror-eof-while-scanning-triple-quoted-string-literal","title":"3. SyntaxError: EOF while scanning triple-quoted string literal","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u4e09\u91cd\u30af\u30a9\u30fc\u30c8\u306e\u9589\u3058\u5fd8\u308c\ndocstring = \"\"\"\n\u3053\u306e\u95a2\u6570\u306f\u4f55\u304b\u3092\u3059\u308b\n# \u30d5\u30a1\u30a4\u30eb\u306e\u7d42\u7aef\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# SyntaxError: EOF while scanning triple-quoted string literal\n\n# \u5bfe\u51e6\u6cd5\uff1a\u4e09\u91cd\u30af\u30a9\u30fc\u30c8\u3092\u6b63\u3057\u304f\u9589\u3058\u308b\ndocstring = \"\"\"\n\u3053\u306e\u95a2\u6570\u306f\u4f55\u304b\u3092\u3059\u308b\n\"\"\"\n</code></pre>"},{"location":"appendix/errors/#_2","title":"\u30a4\u30f3\u30c7\u30f3\u30c8\u30a8\u30e9\u30fc","text":""},{"location":"appendix/errors/#4-indentationerror-expected-an-indented-block","title":"4. IndentationError: expected an indented block","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30a4\u30f3\u30c7\u30f3\u30c8\u306e\u5fd8\u308c\nif x &gt; 5:\nprint(\"\u5927\u304d\u3044\")\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# IndentationError: expected an indented block\n\n# \u5bfe\u51e6\u6cd5\uff1a\u9069\u5207\u306b\u30a4\u30f3\u30c7\u30f3\u30c8\uff084\u3064\u306e\u30b9\u30da\u30fc\u30b9\uff09\nif x &gt; 5:\n    print(\"\u5927\u304d\u3044\")\n</code></pre>"},{"location":"appendix/errors/#5-indentationerror-unindent-does-not-match-any-outer-indentation-level","title":"5. IndentationError: unindent does not match any outer indentation level","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30a4\u30f3\u30c7\u30f3\u30c8\u30ec\u30d9\u30eb\u306e\u4e0d\u4e00\u81f4\ndef my_function():\n    if True:\n        print(\"Hello\")\n      print(\"World\")  # \u30a4\u30f3\u30c7\u30f3\u30c8\u304c\u4e2d\u9014\u534a\u7aef\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# IndentationError: unindent does not match any outer indentation level\n\n# \u5bfe\u51e6\u6cd5\uff1a\u4e00\u8cab\u3057\u305f\u30a4\u30f3\u30c7\u30f3\u30c8\u30ec\u30d9\u30eb\u3092\u4f7f\u7528\ndef my_function():\n    if True:\n        print(\"Hello\")\n    print(\"World\")\n</code></pre>"},{"location":"appendix/errors/#6-taberror-inconsistent-use-of-tabs-and-spaces-in-indentation","title":"6. TabError: inconsistent use of tabs and spaces in indentation","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30bf\u30d6\u3068\u30b9\u30da\u30fc\u30b9\u306e\u6df7\u5728\ndef my_function():\n    x = 1          # \u30b9\u30da\u30fc\u30b94\u3064\n    return x       # \u30bf\u30d6\u6587\u5b57\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# TabError: inconsistent use of tabs and spaces in indentation\n\n# \u5bfe\u51e6\u6cd5\uff1a\u30b9\u30da\u30fc\u30b9\u306e\u307f\u3092\u4f7f\u7528\uff08\u63a8\u5968\uff09\ndef my_function():\n    x = 1\n    return x\n</code></pre>"},{"location":"appendix/errors/#nameerror","title":"\u540d\u524d\u30a8\u30e9\u30fc\uff08NameError\uff09","text":""},{"location":"appendix/errors/#7-nameerror-name-variable-is-not-defined","title":"7. NameError: name 'variable' is not defined","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5909\u6570\u306e\u672a\u5b9a\u7fa9\nprint(message)\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# NameError: name 'message' is not defined\n\n# \u5bfe\u51e6\u6cd5\uff1a\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304b\u3089\u4f7f\u7528\nmessage = \"Hello, World!\"\nprint(message)\n</code></pre> <pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30b9\u30b3\u30fc\u30d7\u5916\u306e\u5909\u6570\u53c2\u7167\ndef my_function():\n    local_var = \"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\"\n\nprint(local_var)  # \u95a2\u6570\u5916\u304b\u3089\u30a2\u30af\u30bb\u30b9\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# NameError: name 'local_var' is not defined\n\n# \u5bfe\u51e6\u6cd5\uff1a\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u3092\u78ba\u8a8d\ndef my_function():\n    local_var = \"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\"\n    return local_var\n\nresult = my_function()\nprint(result)\n</code></pre>"},{"location":"appendix/errors/#8-nameerror-name-function-is-not-defined","title":"8. NameError: name 'function' is not defined","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u524d\u306b\u5b9a\u7fa9\u304c\u306a\u3044\nresult = calculate(5, 3)\n\ndef calculate(a, b):\n    return a + b\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# NameError: name 'calculate' is not defined\n\n# \u5bfe\u51e6\u6cd5\uff1a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304b\u3089\u547c\u3073\u51fa\u3057\ndef calculate(a, b):\n    return a + b\n\nresult = calculate(5, 3)\n</code></pre>"},{"location":"appendix/errors/#typeerror","title":"\u578b\u30a8\u30e9\u30fc\uff08TypeError\uff09","text":""},{"location":"appendix/errors/#9-typeerror-unsupported-operand-types","title":"9. TypeError: unsupported operand type(s)","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u7570\u306a\u308b\u578b\u540c\u58eb\u306e\u6f14\u7b97\nresult = \"5\" + 3\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# TypeError: can only concatenate str (not \"int\") to str\n\n# \u5bfe\u51e6\u6cd5\uff1a\u578b\u3092\u7d71\u4e00\nresult = \"5\" + str(3)    # \u6587\u5b57\u5217\u3068\u3057\u3066\u7d50\u5408\n# \u307e\u305f\u306f\nresult = int(\"5\") + 3    # \u6570\u5024\u3068\u3057\u3066\u8a08\u7b97\n</code></pre>"},{"location":"appendix/errors/#10-typeerror-str-object-is-not-callable","title":"10. TypeError: 'str' object is not callable","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u6587\u5b57\u5217\u3092\u95a2\u6570\u306e\u3088\u3046\u306b\u547c\u3073\u51fa\u3057\nmessage = \"Hello\"\nresult = message()\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# TypeError: 'str' object is not callable\n\n# \u5bfe\u51e6\u6cd5\uff1a\u6b63\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\nmessage = \"Hello\"\nresult = message.upper()  # \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\n</code></pre>"},{"location":"appendix/errors/#11-typeerror-missing-positional-argument","title":"11. TypeError: missing positional argument","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5fc5\u9808\u5f15\u6570\u306e\u4e0d\u8db3\ndef greet(name, age):\n    return f\"Hello, {name}! You are {age} years old.\"\n\nmessage = greet(\"Alice\")  # age\u5f15\u6570\u304c\u4e0d\u8db3\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# TypeError: greet() missing 1 required positional argument: 'age'\n\n# \u5bfe\u51e6\u6cd5\uff1a\u3059\u3079\u3066\u306e\u5fc5\u9808\u5f15\u6570\u3092\u63d0\u4f9b\nmessage = greet(\"Alice\", 25)\n\n# \u307e\u305f\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u8a2d\u5b9a\ndef greet(name, age=0):\n    return f\"Hello, {name}! You are {age} years old.\"\n\nmessage = greet(\"Alice\")  # age\u5f15\u6570\u306f\u7701\u7565\u53ef\u80fd\n</code></pre>"},{"location":"appendix/errors/#12-typeerror-int-object-is-not-iterable","title":"12. TypeError: 'int' object is not iterable","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30a4\u30c6\u30ec\u30fc\u30c8\u4e0d\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30eb\u30fc\u30d7\nfor i in 5:\n    print(i)\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# TypeError: 'int' object is not iterable\n\n# \u5bfe\u51e6\u6cd5\uff1a\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\nfor i in range(5):\n    print(i)\n\n# \u307e\u305f\u306f\nfor i in [1, 2, 3, 4, 5]:\n    print(i)\n</code></pre>"},{"location":"appendix/errors/#indexerror","title":"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u30a8\u30e9\u30fc\uff08IndexError\uff09","text":""},{"location":"appendix/errors/#13-indexerror-list-index-out-of-range","title":"13. IndexError: list index out of range","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30ea\u30b9\u30c8\u306e\u7bc4\u56f2\u5916\u306b\u30a2\u30af\u30bb\u30b9\nmy_list = [1, 2, 3]\nprint(my_list[5])\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# IndexError: list index out of range\n\n# \u5bfe\u51e6\u6cd5\uff1a\u6709\u52b9\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u7528\nmy_list = [1, 2, 3]\nif len(my_list) &gt; 5:\n    print(my_list[5])\nelse:\n    print(\"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u7bc4\u56f2\u5916\u3067\u3059\")\n\n# \u307e\u305f\u306f\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u7528\ntry:\n    print(my_list[5])\nexcept IndexError:\n    print(\"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u7bc4\u56f2\u5916\u3067\u3059\")\n</code></pre>"},{"location":"appendix/errors/#14-indexerror-string-index-out-of-range","title":"14. IndexError: string index out of range","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u6587\u5b57\u5217\u306e\u7bc4\u56f2\u5916\u306b\u30a2\u30af\u30bb\u30b9\ntext = \"Hello\"\nprint(text[10])\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# IndexError: string index out of range\n\n# \u5bfe\u51e6\u6cd5\uff1a\u6709\u52b9\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u78ba\u8a8d\ntext = \"Hello\"\nif len(text) &gt; 10:\n    print(text[10])\nelse:\n    print(\"\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u7bc4\u56f2\u5916\u3067\u3059\")\n</code></pre>"},{"location":"appendix/errors/#keyerror","title":"\u30ad\u30fc\u30a8\u30e9\u30fc\uff08KeyError\uff09","text":""},{"location":"appendix/errors/#15-keyerror-key","title":"15. KeyError: 'key'","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u8f9e\u66f8\u306b\u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\nperson = {\"name\": \"Alice\", \"age\": 30}\nprint(person[\"height\"])\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# KeyError: 'height'\n\n# \u5bfe\u51e6\u6cd51\uff1aget()\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\nprint(person.get(\"height\", \"\u4e0d\u660e\"))\n\n# \u5bfe\u51e6\u6cd52\uff1a\u30ad\u30fc\u306e\u5b58\u5728\u78ba\u8a8d\nif \"height\" in person:\n    print(person[\"height\"])\nelse:\n    print(\"\u8eab\u9577\u60c5\u5831\u304c\u3042\u308a\u307e\u305b\u3093\")\n\n# \u5bfe\u51e6\u6cd53\uff1a\u4f8b\u5916\u51e6\u7406\ntry:\n    print(person[\"height\"])\nexcept KeyError:\n    print(\"\u6307\u5b9a\u3055\u308c\u305f\u30ad\u30fc\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n</code></pre>"},{"location":"appendix/errors/#valueerror","title":"\u5024\u30a8\u30e9\u30fc\uff08ValueError\uff09","text":""},{"location":"appendix/errors/#16-valueerror-invalid-literal-for-int","title":"16. ValueError: invalid literal for int()","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u6587\u5b57\u5217\u3092\u6570\u5024\u306b\u5909\u63db\u3067\u304d\u306a\u3044\nnumber = int(\"abc\")\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# ValueError: invalid literal for int() with base 10: 'abc'\n\n# \u5bfe\u51e6\u6cd5\uff1a\u4f8b\u5916\u51e6\u7406\u3092\u4f7f\u7528\ntry:\n    number = int(\"abc\")\nexcept ValueError:\n    print(\"\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\n    number = 0\n</code></pre>"},{"location":"appendix/errors/#17-valueerror-too-many-values-to-unpack","title":"17. ValueError: too many values to unpack","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30a2\u30f3\u30d1\u30c3\u30af\u6642\u306e\u5024\u306e\u6570\u304c\u4e0d\u4e00\u81f4\na, b = [1, 2, 3]\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# ValueError: too many values to unpack (expected 2)\n\n# \u5bfe\u51e6\u6cd5\uff1a\u5909\u6570\u306e\u6570\u3092\u5408\u308f\u305b\u308b\na, b, c = [1, 2, 3]\n\n# \u307e\u305f\u306f\u5fc5\u8981\u306a\u5206\u3060\u3051\u53d6\u5f97\na, b = [1, 2, 3][:2]\n\n# \u307e\u305f\u306f\u30a2\u30b9\u30bf\u30ea\u30b9\u30af\u3092\u4f7f\u7528\na, b, *rest = [1, 2, 3, 4, 5]\n</code></pre>"},{"location":"appendix/errors/#attributeerror","title":"\u5c5e\u6027\u30a8\u30e9\u30fc\uff08AttributeError\uff09","text":""},{"location":"appendix/errors/#18-attributeerror-type-object-has-no-attribute-method","title":"18. AttributeError: 'type' object has no attribute 'method'","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5b58\u5728\u3057\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\nmy_list = [1, 2, 3]\nmy_list.add(4)  # list\u306b\u306f add \u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# AttributeError: 'list' object has no attribute 'add'\n\n# \u5bfe\u51e6\u6cd5\uff1a\u6b63\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\nmy_list = [1, 2, 3]\nmy_list.append(4)  # append \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\n</code></pre> <pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1aNone \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\ndef get_data():\n    return None\n\nresult = get_data()\nlength = result.upper()  # None \u306b\u306f upper \u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# AttributeError: 'NoneType' object has no attribute 'upper'\n\n# \u5bfe\u51e6\u6cd5\uff1aNone \u30c1\u30a7\u30c3\u30af\u3092\u8ffd\u52a0\nresult = get_data()\nif result is not None:\n    length = result.upper()\nelse:\n    print(\"\u30c7\u30fc\u30bf\u304c\u3042\u308a\u307e\u305b\u3093\")\n</code></pre>"},{"location":"appendix/errors/#importerror-modulenotfounderror","title":"\u30a4\u30f3\u30dd\u30fc\u30c8\u30a8\u30e9\u30fc\uff08ImportError / ModuleNotFoundError\uff09","text":""},{"location":"appendix/errors/#19-modulenotfounderror-no-module-named-module","title":"19. ModuleNotFoundError: No module named 'module'","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5b58\u5728\u3057\u306a\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nimport nonexistent_module\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# ModuleNotFoundError: No module named 'nonexistent_module'\n\n# \u5bfe\u51e6\u6cd51\uff1a\u6b63\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u78ba\u8a8d\nimport os  # \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6b63\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\n\n# \u5bfe\u51e6\u6cd52\uff1a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n# pip install requests\nimport requests\n\n# \u5bfe\u51e6\u6cd53\uff1a\u76f8\u5bfe\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u4fee\u6b63\n# from .mymodule import function  # \u540c\u3058\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\n</code></pre>"},{"location":"appendix/errors/#20-importerror-cannot-import-name-function-from-module","title":"20. ImportError: cannot import name 'function' from 'module'","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5b58\u5728\u3057\u306a\u3044\u95a2\u6570\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom math import nonexistent_function\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# ImportError: cannot import name 'nonexistent_function' from 'math'\n\n# \u5bfe\u51e6\u6cd5\uff1a\u5b58\u5728\u3059\u308b\u95a2\u6570\u540d\u3092\u78ba\u8a8d\nfrom math import sqrt, sin, cos\n\n# \u307e\u305f\u306f\u5229\u7528\u53ef\u80fd\u306a\u95a2\u6570\u3092\u78ba\u8a8d\nimport math\nprint(dir(math))\n</code></pre>"},{"location":"appendix/errors/#_3","title":"\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\u30a8\u30e9\u30fc","text":""},{"location":"appendix/errors/#21-filenotfounderror-no-such-file-or-directory","title":"21. FileNotFoundError: No such file or directory","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\nwith open(\"nonexistent.txt\", \"r\") as f:\n    content = f.read()\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# FileNotFoundError: [Errno 2] No such file or directory: 'nonexistent.txt'\n\n# \u5bfe\u51e6\u6cd51\uff1a\u30d5\u30a1\u30a4\u30eb\u306e\u5b58\u5728\u78ba\u8a8d\nimport os\nif os.path.exists(\"nonexistent.txt\"):\n    with open(\"nonexistent.txt\", \"r\") as f:\n        content = f.read()\nelse:\n    print(\"\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n\n# \u5bfe\u51e6\u6cd52\uff1a\u4f8b\u5916\u51e6\u7406\ntry:\n    with open(\"nonexistent.txt\", \"r\") as f:\n        content = f.read()\nexcept FileNotFoundError:\n    print(\"\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n    content = \"\"\n</code></pre>"},{"location":"appendix/errors/#22-permissionerror-permission-denied","title":"22. PermissionError: Permission denied","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u6a29\u9650\u306e\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30a2\u30af\u30bb\u30b9\nwith open(\"/root/private.txt\", \"w\") as f:\n    f.write(\"\u30c7\u30fc\u30bf\")\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# PermissionError: [Errno 13] Permission denied: '/root/private.txt'\n\n# \u5bfe\u51e6\u6cd5\uff1a\u9069\u5207\u306a\u6a29\u9650\u306e\u3042\u308b\u5834\u6240\u306b\u4fdd\u5b58\nimport os\nhome_dir = os.path.expanduser(\"~\")\nfile_path = os.path.join(home_dir, \"my_file.txt\")\n\nwith open(file_path, \"w\") as f:\n    f.write(\"\u30c7\u30fc\u30bf\")\n</code></pre>"},{"location":"appendix/errors/#zerodivisionerror","title":"\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc\uff08ZeroDivisionError\uff09","text":""},{"location":"appendix/errors/#23-zerodivisionerror-division-by-zero","title":"23. ZeroDivisionError: division by zero","text":"<pre><code># \u30a8\u30e9\u30fc\u4f8b\uff1a\u30bc\u30ed\u3067\u9664\u7b97\nresult = 10 / 0\n\n# \u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\uff1a\n# ZeroDivisionError: division by zero\n\n# \u5bfe\u51e6\u6cd5\uff1a\u9664\u6570\u306e\u30c1\u30a7\u30c3\u30af\ndenominator = 0\nif denominator != 0:\n    result = 10 / denominator\nelse:\n    print(\"\u30bc\u30ed\u3067\u9664\u7b97\u306f\u3067\u304d\u307e\u305b\u3093\")\n    result = float('inf')  # \u307e\u305f\u306f\u9069\u5207\u306a\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n# \u307e\u305f\u306f\u4f8b\u5916\u51e6\u7406\ntry:\n    result = 10 / denominator\nexcept ZeroDivisionError:\n    print(\"\u30bc\u30ed\u3067\u9664\u7b97\u306f\u3067\u304d\u307e\u305b\u3093\")\n    result = float('inf')\n</code></pre>"},{"location":"appendix/errors/#_4","title":"\u8ad6\u7406\u30a8\u30e9\u30fc\uff08\u5b9f\u884c\u6642\u30a8\u30e9\u30fc\u3067\u306f\u306a\u3044\u304c\u3001\u671f\u5f85\u3068\u7570\u306a\u308b\u7d50\u679c\uff09","text":""},{"location":"appendix/errors/#24","title":"24. \u7121\u9650\u30eb\u30fc\u30d7","text":"<pre><code># \u554f\u984c\u306e\u3042\u308b\u30b3\u30fc\u30c9\uff1a\u7121\u9650\u30eb\u30fc\u30d7\ni = 0\nwhile i &lt; 10:\n    print(i)\n    # i += 1 \u304c\u629c\u3051\u3066\u3044\u308b\n\n# \u5bfe\u51e6\u6cd5\uff1a\u30eb\u30fc\u30d7\u5909\u6570\u3092\u9069\u5207\u306b\u66f4\u65b0\ni = 0\nwhile i &lt; 10:\n    print(i)\n    i += 1\n</code></pre>"},{"location":"appendix/errors/#25","title":"25. \u610f\u56f3\u3057\u306a\u3044\u5909\u6570\u306e\u5909\u66f4","text":"<pre><code># \u554f\u984c\u306e\u3042\u308b\u30b3\u30fc\u30c9\uff1a\u30ea\u30b9\u30c8\u306e\u53c2\u7167\u306b\u3088\u308b\u610f\u56f3\u3057\u306a\u3044\u5909\u66f4\noriginal_list = [1, 2, 3]\nmodified_list = original_list\nmodified_list.append(4)\nprint(original_list)  # [1, 2, 3, 4] \u306b\u306a\u3063\u3066\u3057\u307e\u3046\n\n# \u5bfe\u51e6\u6cd5\uff1a\u30ea\u30b9\u30c8\u306e\u30b3\u30d4\u30fc\u3092\u4f5c\u6210\noriginal_list = [1, 2, 3]\nmodified_list = original_list.copy()  # \u307e\u305f\u306f list(original_list)\nmodified_list.append(4)\nprint(original_list)  # [1, 2, 3] \u306e\u307e\u307e\n</code></pre>"},{"location":"appendix/errors/#_5","title":"\u30c7\u30d0\u30c3\u30b0\u306e\u305f\u3081\u306e\u5b9f\u8df5\u7684\u306a\u30c6\u30af\u30cb\u30c3\u30af","text":""},{"location":"appendix/errors/#1-print","title":"1. print\u6587\u306b\u3088\u308b\u30c7\u30d0\u30c3\u30b0","text":"<pre><code>def calculate_average(numbers):\n    print(f\"\u5165\u529b: {numbers}\")  # \u30c7\u30d0\u30c3\u30b0\u7528\u51fa\u529b\n\n    total = sum(numbers)\n    print(f\"\u5408\u8a08: {total}\")  # \u30c7\u30d0\u30c3\u30b0\u7528\u51fa\u529b\n\n    count = len(numbers)\n    print(f\"\u500b\u6570: {count}\")  # \u30c7\u30d0\u30c3\u30b0\u7528\u51fa\u529b\n\n    if count == 0:\n        return 0\n\n    average = total / count\n    print(f\"\u5e73\u5747: {average}\")  # \u30c7\u30d0\u30c3\u30b0\u7528\u51fa\u529b\n\n    return average\n</code></pre>"},{"location":"appendix/errors/#2-type","title":"2. type()\u95a2\u6570\u306b\u3088\u308b\u578b\u78ba\u8a8d","text":"<pre><code>def process_data(data):\n    print(f\"\u30c7\u30fc\u30bf\u306e\u578b: {type(data)}\")\n    print(f\"\u30c7\u30fc\u30bf\u306e\u5024: {data}\")\n\n    if isinstance(data, str):\n        return data.upper()\n    elif isinstance(data, (int, float)):\n        return data * 2\n    else:\n        raise TypeError(f\"\u672a\u5bfe\u5fdc\u306e\u578b: {type(data)}\")\n</code></pre>"},{"location":"appendix/errors/#3-try-except","title":"3. try-except\u6587\u306b\u3088\u308b\u5b89\u5168\u306a\u5b9f\u884c","text":"<pre><code>def safe_division(a, b):\n    try:\n        result = a / b\n        return result\n    except ZeroDivisionError:\n        print(\"\u30a8\u30e9\u30fc: \u30bc\u30ed\u3067\u9664\u7b97\u3057\u3088\u3046\u3068\u3057\u307e\u3057\u305f\")\n        return None\n    except TypeError:\n        print(\"\u30a8\u30e9\u30fc: \u6570\u5024\u4ee5\u5916\u304c\u6e21\u3055\u308c\u307e\u3057\u305f\")\n        return None\n    except Exception as e:\n        print(f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\")\n        return None\n</code></pre>"},{"location":"appendix/errors/#4-assert","title":"4. assert\u6587\u306b\u3088\u308b\u6761\u4ef6\u78ba\u8a8d","text":"<pre><code>def calculate_square_root(x):\n    assert x &gt;= 0, \"\u8ca0\u306e\u6570\u306e\u5e73\u65b9\u6839\u306f\u8a08\u7b97\u3067\u304d\u307e\u305b\u3093\"\n    assert isinstance(x, (int, float)), \"\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\"\n\n    import math\n    return math.sqrt(x)\n\n# \u4f7f\u7528\u4f8b\ntry:\n    result = calculate_square_root(-4)\nexcept AssertionError as e:\n    print(f\"\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc: {e}\")\n</code></pre>"},{"location":"appendix/errors/#_6","title":"\u30a8\u30e9\u30fc\u4e88\u9632\u306e\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9","text":""},{"location":"appendix/errors/#1","title":"1. \u578b\u30d2\u30f3\u30c8\u306e\u4f7f\u7528","text":"<pre><code>from typing import List, Optional\n\ndef process_names(names: List[str]) -&gt; Optional[str]:\n    \"\"\"\u540d\u524d\u306e\u30ea\u30b9\u30c8\u304b\u3089\u6700\u9577\u306e\u540d\u524d\u3092\u8fd4\u3059\"\"\"\n    if not names:\n        return None\n\n    longest_name = \"\"\n    for name in names:\n        if len(name) &gt; len(longest_name):\n            longest_name = name\n\n    return longest_name\n</code></pre>"},{"location":"appendix/errors/#2","title":"2. \u5165\u529b\u5024\u306e\u691c\u8a3c","text":"<pre><code>def validate_age(age):\n    \"\"\"\u5e74\u9f62\u306e\u59a5\u5f53\u6027\u3092\u30c1\u30a7\u30c3\u30af\"\"\"\n    if not isinstance(age, int):\n        raise TypeError(\"\u5e74\u9f62\u306f\u6574\u6570\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\")\n\n    if age &lt; 0:\n        raise ValueError(\"\u5e74\u9f62\u306f\u8ca0\u306e\u5024\u306b\u3067\u304d\u307e\u305b\u3093\")\n\n    if age &gt; 150:\n        raise ValueError(\"\u5e74\u9f62\u304c\u73fe\u5b9f\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\")\n\n    return True\n\ndef create_person(name, age):\n    validate_age(age)\n    return {\"name\": name, \"age\": age}\n</code></pre>"},{"location":"appendix/errors/#3","title":"3. \u9069\u5207\u306a\u4f8b\u5916\u51e6\u7406","text":"<pre><code>import json\nimport logging\n\ndef load_config(filename):\n    \"\"\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\"\"\"\n    try:\n        with open(filename, 'r', encoding='utf-8') as f:\n            config = json.load(f)\n        return config\n\n    except FileNotFoundError:\n        logging.error(f\"\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093: {filename}\")\n        return {}\n\n    except json.JSONDecodeError as e:\n        logging.error(f\"JSON\u306e\u89e3\u6790\u30a8\u30e9\u30fc: {e}\")\n        return {}\n\n    except Exception as e:\n        logging.error(f\"\u4e88\u671f\u3057\u306a\u3044\u30a8\u30e9\u30fc: {e}\")\n        return {}\n</code></pre> <p>\u3053\u306e\u4ed8\u9332\u3092\u53c2\u8003\u306b\u3057\u3066\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6b63\u3057\u304f\u8aad\u307f\u53d6\u308a\u3001\u9069\u5207\u306a\u5bfe\u51e6\u6cd5\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u52b9\u7387\u7684\u306bPython\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u958b\u767a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"appendix/pep8/","title":"\u4ed8\u9332C\uff1aPEP 8 \u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u8981\u7d04","text":"<p>\u3053\u306e\u4ed8\u9332\u3067\u306f\u3001Python Enhancement Proposal 8\uff08PEP 8\uff09\u3067\u5b9a\u3081\u3089\u308c\u3066\u3044\u308bPython\u30b3\u30fc\u30c9\u306e\u30b9\u30bf\u30a4\u30eb\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3092\u8981\u7d04\u3057\u307e\u3059\u3002PEP 8\u306f\u300c\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u300d\u3092\u66f8\u304f\u305f\u3081\u306e\u516c\u5f0f\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3067\u3059\u3002</p>"},{"location":"appendix/pep8/#pep-8","title":"PEP 8\u306e\u57fa\u672c\u7406\u5ff5","text":"<p>\"Code is read much more often than it is written.\" \uff08\u30b3\u30fc\u30c9\u306f\u66f8\u304b\u308c\u308b\u3088\u308a\u3082\u306f\u308b\u304b\u306b\u591a\u304f\u8aad\u307e\u308c\u308b\uff09</p> <ul> <li>\u4e00\u8cab\u6027: \u30c1\u30fc\u30e0\u3084\ud504\u30ed\uc81d\ud2b8\ub0b4\u3067\u306e\u4e00\u8cab\u3057\u305f\u30b9\u30bf\u30a4\u30eb</li> <li>\u53ef\u8aad\u6027: \u8ab0\u304c\u8aad\u3093\u3067\u3082\u7406\u89e3\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9  </li> <li>\u7f8e\u3057\u3055: \u7f8e\u3057\u3044\u30b3\u30fc\u30c9\u306f\u8aad\u307f\u3084\u3059\u3044</li> </ul>"},{"location":"appendix/pep8/#_1","title":"\u30b3\u30fc\u30c9\u30ec\u30a4\u30a2\u30a6\u30c8","text":""},{"location":"appendix/pep8/#_2","title":"\u30a4\u30f3\u30c7\u30f3\u30c8","text":"<pre><code># \u826f\u3044\u4f8b\uff1a4\u3064\u306e\u30b9\u30da\u30fc\u30b9\u3092\u4f7f\u7528\ndef long_function_name(\n        var_one, var_two, var_three,\n        var_four):\n    print(var_one)\n\n# \u60aa\u3044\u4f8b\uff1a\u30bf\u30d6\u3068\u30b9\u30da\u30fc\u30b9\u306e\u6df7\u5728\ndef bad_function():\n        print(\"\u6df7\u5728\u306f\u30c0\u30e1\")  # \u30bf\u30d6\u3068\u30b9\u30da\u30fc\u30b9\u6df7\u5728\n\n# \u826f\u3044\u4f8b\uff1aif\u6587\u306e\u7d99\u7d9a\u884c\nif (this_is_one_thing and\n        that_is_another_thing):\n    do_something()\n\n# \u826f\u3044\u4f8b\uff1a\u30ea\u30b9\u30c8\u306e\u7d99\u7d9a\u884c\nmy_list = [\n    1, 2, 3,\n    4, 5, 6,\n]\n</code></pre> <p>\u898f\u5247: - \u30a4\u30f3\u30c7\u30f3\u30c8\u306b\u306f4\u3064\u306e\u30b9\u30da\u30fc\u30b9\u3092\u4f7f\u7528 - \u30bf\u30d6\u3068\u30b9\u30da\u30fc\u30b9\u3092\u6df7\u5728\u3055\u305b\u306a\u3044 - \u7d99\u7d9a\u884c\u3067\u306f\u8ffd\u52a0\u306e\u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u4f7f\u7528</p>"},{"location":"appendix/pep8/#_3","title":"\u884c\u306e\u9577\u3055","text":"<pre><code># \u826f\u3044\u4f8b\uff1a79\u6587\u5b57\u4ee5\u5185\ndef short_function_name(parameter_one, parameter_two):\n    return parameter_one + parameter_two\n\n# \u826f\u3044\u4f8b\uff1a\u9577\u3044\u884c\u306e\u5206\u5272\nresult = some_function_that_takes_arguments(\n    'a very long string argument',\n    'another very long string argument'\n)\n\n# \u826f\u3044\u4f8b\uff1a\u6f14\u7b97\u5b50\u3067\u306e\u5206\u5272\uff08\u63a8\u5968\uff09\nincome = (gross_wages\n          + taxable_interest\n          + (dividends - qualified_dividends)\n          - ira_deduction\n          - student_loan_interest)\n\n# \u53e4\u3044\u30b9\u30bf\u30a4\u30eb\uff1a\u6f14\u7b97\u5b50\u5f8c\u3067\u306e\u5206\u5272\nincome = (gross_wages +\n          taxable_interest +\n          (dividends - qualified_dividends) -\n          ira_deduction -\n          student_loan_interest)\n</code></pre> <p>\u898f\u5247: - \u884c\u306e\u9577\u3055\u306f\u6700\u592779\u6587\u5b57 - docstring\u3084\u30b3\u30e1\u30f3\u30c8\u306f72\u6587\u5b57\u4ee5\u5185 - \u9577\u3044\u884c\u306f\u9069\u5207\u306a\u4f4d\u7f6e\u3067\u5206\u5272</p>"},{"location":"appendix/pep8/#_4","title":"\u7a7a\u884c","text":"<pre><code># \u30e2\u30b8\u30e5\u30fc\u30eb\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u30fb\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u524d\u5f8c\u306f2\u884c\u7a7a\u3051\u308b\nimport os\nimport sys\n\n\ndef module_level_function():\n    pass\n\n\nclass MyClass:\n    \"\"\"\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u524d\u5f8c\u30822\u884c\u7a7a\u3051\u308b\"\"\"\n\n    def method_one(self):\n        \"\"\"\u30e1\u30bd\u30c3\u30c9\u9593\u306f1\u884c\u7a7a\u3051\u308b\"\"\"\n        pass\n\n    def method_two(self):\n        pass\n\n\ndef another_module_function():\n    pass\n\n\n# \u30d5\u30a1\u30a4\u30eb\u7d42\u7aef\n</code></pre> <p>\u898f\u5247: - \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u306e\u95a2\u6570\u30fb\u30af\u30e9\u30b9\u5b9a\u7fa9\u306f2\u884c\u7a7a\u3051\u3066\u533a\u5207\u308b - \u30af\u30e9\u30b9\u5185\u306e\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u306f1\u884c\u7a7a\u3051\u3066\u533a\u5207\u308b - \u95a2\u6570\u5185\u3067\u306f\u8ad6\u7406\u30bb\u30af\u30b7\u30e7\u30f3\u30921\u884c\u7a7a\u3051\u3066\u533a\u5207\u308b\uff08\u63a7\u3048\u3081\u306b\uff09</p>"},{"location":"appendix/pep8/#_5","title":"\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0","text":"<pre><code># -*- coding: utf-8 -*-\n\"\"\"\nPython 3\u3067\u306f\u901a\u5e38\u4e0d\u8981\u3060\u304c\u3001\u975eASCII\u6587\u5b57\u3092\u542b\u3080\u5834\u5408\u306f\u660e\u793a\u7684\u306b\u8a18\u8f09\n\"\"\"\n\n# Python 3\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u81ea\u52d5\u7684\u306bUTF-8\u3068\u3057\u3066\u6271\u308f\u308c\u308b\nname = \"\u5c71\u7530\u592a\u90ce\"\nmessage = \"\u3053\u3093\u306b\u3061\u306f\u3001\u4e16\u754c\uff01\"\n</code></pre>"},{"location":"appendix/pep8/#_6","title":"\u30a4\u30f3\u30dd\u30fc\u30c8\u6587","text":""},{"location":"appendix/pep8/#_7","title":"\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u9806\u5e8f\u3068\u66f8\u304d\u65b9","text":"<pre><code># 1. \u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\nimport os\nimport sys\nfrom pathlib import Path\n\n# 2. \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\u30e9\u30a4\u30d6\u30e9\u30ea  \nimport numpy as np\nimport pandas as pd\nfrom requests import get\n\n# 3. \u30ed\u30fc\u30ab\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3/\u30e9\u30a4\u30d6\u30e9\u30ea\nfrom mypackage import mymodule\nfrom mypackage.subpackage import another_module\nfrom . import sibling_module\nfrom ..parent_package import parent_module\n\n# \u5404\u30b0\u30eb\u30fc\u30d7\u9593\u306f1\u884c\u7a7a\u3051\u308b\n</code></pre>"},{"location":"appendix/pep8/#_8","title":"\u30a4\u30f3\u30dd\u30fc\u30c8\u306e\u826f\u3044\u4f8b\u30fb\u60aa\u3044\u4f8b","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u500b\u5225\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\nimport os\nimport sys\n\n# \u60aa\u3044\u4f8b\uff1a\u8907\u6570\u30e2\u30b8\u30e5\u30fc\u30eb\u30921\u884c\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\nimport os, sys\n\n# \u826f\u3044\u4f8b\uff1a\u540c\u3058\u30e2\u30b8\u30e5\u30fc\u30eb\u304b\u3089\u306e\u8907\u6570\u30a4\u30f3\u30dd\u30fc\u30c8\nfrom subprocess import Popen, PIPE\n\n# \u826f\u3044\u4f8b\uff1a\u9577\u3044\u5834\u5408\u306e\u5206\u5272\nfrom mypackage import (\n    module_one, module_two, module_three,\n    module_four, module_five\n)\n\n# \u60aa\u3044\u4f8b\uff1a\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u30a4\u30f3\u30dd\u30fc\u30c8\uff08\u7279\u5225\u306a\u5834\u5408\u3092\u9664\u304f\uff09\nfrom module import *\n\n# \u826f\u3044\u4f8b\uff1a\u30a8\u30a4\u30ea\u30a2\u30b9\u306e\u4f7f\u7528\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\n</code></pre>"},{"location":"appendix/pep8/#_9","title":"\u6587\u5b57\u5217\u30af\u30a9\u30fc\u30c8","text":"<pre><code># \u4e00\u91cd\u30af\u30a9\u30fc\u30c8\u3068\u4e8c\u91cd\u30af\u30a9\u30fc\u30c8\u306f\u3069\u3061\u3089\u3067\u3082\u826f\u3044\uff08\u4e00\u8cab\u6027\u3092\u4fdd\u3064\uff09\nsingle_quoted = 'Hello, World!'\ndouble_quoted = \"Hello, World!\"\n\n# \u6587\u5b57\u5217\u5185\u306b\u30af\u30a9\u30fc\u30c8\u3092\u542b\u3080\u5834\u5408\nmessage_with_quote = \"I don't like this\"  # \u63a8\u5968\nmessage_with_quote = 'I don\\'t like this'  # \u30a8\u30b9\u30b1\u30fc\u30d7\u304c\u5fc5\u8981\n\n# \u4e09\u91cd\u30af\u30a9\u30fc\u30c8\u306fdocstring\u3067\u4f7f\u7528\ndef my_function():\n    \"\"\"\u3053\u306e\u95a2\u6570\u306e\u8aac\u660e.\n\n    \u8907\u6570\u884c\u306e\u8aac\u660e\u6587\u3092\u66f8\u304f\u5834\u5408\u306f\n    \u4e09\u91cd\u30c0\u30d6\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3002\n    \"\"\"\n    pass\n\n# \u4e09\u91cd\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3042\u308b\n'''\n\u3053\u306e\u90e8\u5206\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\n\u8907\u6570\u884c\u306e\u30b3\u30fc\u30c9\u3092\u4e00\u6642\u7684\u306b\u7121\u52b9\u306b\u3059\u308b\u5834\u5408\n'''\n</code></pre>"},{"location":"appendix/pep8/#_10","title":"\u5f0f\u3068\u6587\u3067\u306e\u7a7a\u767d","text":""},{"location":"appendix/pep8/#_11","title":"\u63a8\u5968\u3055\u308c\u308b\u7a7a\u767d\u306e\u4f7f\u3044\u65b9","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u6f14\u7b97\u5b50\u5468\u308a\u306e\u7a7a\u767d\nx = 1\ny = 2\nresult = x + y\n\n# \u826f\u3044\u4f8b\uff1a\u95a2\u6570\u547c\u3073\u51fa\u3057\nspam(ham[1], {eggs: 2})\n\n# \u60aa\u3044\u4f8b\uff1a\u4e0d\u8981\u306a\u7a7a\u767d\nspam( ham[ 1 ], { eggs: 2 } )\n\n# \u826f\u3044\u4f8b\uff1a\u30b9\u30e9\u30a4\u30b9\nham[1:9], ham[1:9:3], ham[:9:3], ham[1::3], ham[1:9:]\nham[lower:upper], ham[lower:upper:], ham[lower::step]\n\n# \u60aa\u3044\u4f8b\uff1a\u30b9\u30e9\u30a4\u30b9\u3067\u306e\u7a7a\u767d\nham[1: 9], ham[1 :9], ham[1:9 :3]\n\n# \u826f\u3044\u4f8b\uff1a\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\ndef complex(real, imag=0.0):\n    return magic(r=real, i=imag)\n\n# \u60aa\u3044\u4f8b\uff1a\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u5468\u308a\u306e\u7a7a\u767d\ndef complex(real, imag = 0.0):\n    return magic(r = real, i = imag)\n\n# \u826f\u3044\u4f8b\uff1a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\ndef munge(input: int) -&gt; int:\n    return input * 2\n\ndef munge(sep: AnyStr = None): pass\n\n# \u60aa\u3044\u4f8b\uff1a\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u7a7a\u767d\ndef munge(input:int)-&gt;int:\n    return input * 2\n</code></pre>"},{"location":"appendix/pep8/#_12","title":"\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u3068\u7a7a\u767d","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u512a\u5148\u9806\u4f4d\u306e\u9ad8\u3044\u6f14\u7b97\u5b50\u306f\u7a7a\u767d\u306a\u3057\ni = i + 1\nsubmitted += 1\nx = x*2 - 1\nhypot2 = x*x + y*y\nc = (a+b) * (a-b)\n\n# \u60aa\u3044\u4f8b\uff1a\u3059\u3079\u3066\u306e\u6f14\u7b97\u5b50\u306b\u7a7a\u767d\ni = i + 1\nsubmitted + = 1\nx = x * 2 - 1\nhypot2 = x * x + y * y\nc = (a + b) * (a - b)\n\n# \u826f\u3044\u4f8b\uff1a\u8907\u96d1\u306a\u5f0f\u3067\u306e\u512a\u5148\u9806\u4f4d\u306e\u660e\u793a\nreturn a*b + c*d\nreturn (a*b) + (c*d)  # \u3088\u308a\u660e\u78ba\n</code></pre>"},{"location":"appendix/pep8/#_13","title":"\u30b3\u30e1\u30f3\u30c8","text":""},{"location":"appendix/pep8/#_14","title":"\u30b3\u30e1\u30f3\u30c8\u306e\u66f8\u304d\u65b9","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u6709\u7528\u306a\u30b3\u30e1\u30f3\u30c8\nx = x + 1  # x\u5ea7\u6a19\u306e\u5883\u754c\u5024\u8abf\u6574\n\n# \u60aa\u3044\u4f8b\uff1a\u81ea\u660e\u306a\u30b3\u30e1\u30f3\u30c8\nx = x + 1  # x\u306b1\u3092\u52a0\u7b97\n\n# \u826f\u3044\u4f8b\uff1a\u30d6\u30ed\u30c3\u30af\u30b3\u30e1\u30f3\u30c8\n# \u3053\u306e\u95a2\u6570\u306f\u8907\u96d1\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\u3066\u3044\u308b\n# \u4e3b\u306a\u624b\u9806\uff1a\n# 1. \u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\n# 2. \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9069\u7528\n# 3. \u7d50\u679c\u306e\u5f8c\u51e6\u7406\ndef complex_algorithm(data):\n    # \u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\n    preprocessed_data = preprocess(data)\n\n    # \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u9069\u7528\n    result = apply_algorithm(preprocessed_data)\n\n    # \u7d50\u679c\u306e\u5f8c\u51e6\u7406\n    return postprocess(result)\n\n# \u826f\u3044\u4f8b\uff1a\u30a4\u30f3\u30e9\u30a4\u30f3\u30b3\u30e1\u30f3\u30c8\uff08\u63a7\u3048\u3081\u306b\uff09\nx = x + 1    # \u5883\u754c\u30b1\u30fc\u30b9\u306e\u88dc\u6b63\n\n# \u60aa\u3044\u4f8b\uff1a\u904e\u5ea6\u306a\u30a4\u30f3\u30e9\u30a4\u30f3\u30b3\u30e1\u30f3\u30c8\nx = x + 1    # \u5909\u6570x\u306b\u6574\u65701\u3092\u52a0\u7b97\u3059\u308b\u51e6\u7406\n</code></pre>"},{"location":"appendix/pep8/#docstring","title":"docstring","text":"<pre><code>def function_with_types_in_docstring(param1, param2):\n    \"\"\"\u4e00\u884c\u3067\u95a2\u6570\u306e\u6982\u8981\u3092\u8aac\u660e.\n\n    \u3088\u308a\u8a73\u7d30\u306a\u8aac\u660e\u3092\u3053\u3053\u306b\u66f8\u304f\u3002\u8907\u6570\u6bb5\u843d\u306b\n    \u5206\u3051\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\n\n    Args:\n        param1 (int): \u6700\u521d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aac\u660e.\n        param2 (str): \u4e8c\u756a\u76ee\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8aac\u660e.\n\n    Returns:\n        bool: \u623b\u308a\u5024\u306e\u8aac\u660e.\n\n    Raises:\n        ValueError: \u7121\u52b9\u306a\u5024\u304c\u6e21\u3055\u308c\u305f\u5834\u5408.\n        TypeError: \u578b\u304c\u6b63\u3057\u304f\u306a\u3044\u5834\u5408.\n\n    Example:\n        &gt;&gt;&gt; function_with_types_in_docstring(1, \"hello\")\n        True\n    \"\"\"\n    return True\n\nclass MyClass:\n    \"\"\"\u30af\u30e9\u30b9\u306e\u6982\u8981\u8aac\u660e.\n\n    \u3088\u308a\u8a73\u7d30\u306a\u30af\u30e9\u30b9\u306e\u8aac\u660e\u3002\n\n    Attributes:\n        attr1 (str): \u5c5e\u6027\u306e\u8aac\u660e.\n        attr2 (int): \u3082\u3046\u4e00\u3064\u306e\u5c5e\u6027\u306e\u8aac\u660e.\n    \"\"\"\n\n    def __init__(self, attr1, attr2):\n        \"\"\"\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u8aac\u660e.\"\"\"\n        self.attr1 = attr1\n        self.attr2 = attr2\n</code></pre>"},{"location":"appendix/pep8/#_15","title":"\u547d\u540d\u898f\u5247","text":""},{"location":"appendix/pep8/#_16","title":"\u898f\u5247\u306e\u6982\u8981","text":"\u578b \u547d\u540d\u898f\u5247 \u4f8b \u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb \u3059\u3079\u3066\u5c0f\u6587\u5b57\u3001\u77ed\u304f <code>mypackage</code>, <code>urllib</code> \u30af\u30e9\u30b9 CapWords\uff08PascalCase\uff09 <code>MyClass</code>, <code>HTTPServer</code> \u95a2\u6570\u30fb\u5909\u6570 \u5c0f\u6587\u5b57+\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>my_function</code>, <code>local_var</code> \u5b9a\u6570 \u5927\u6587\u5b57+\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>MAX_SIZE</code>, <code>DEFAULT_COLOR</code> \u30e1\u30bd\u30c3\u30c9 \u5c0f\u6587\u5b57+\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>get_value</code>, <code>set_name</code> \u975e\u516c\u958b\uff08\u5185\u90e8\u4f7f\u7528\uff09 \u5148\u982d\u306b\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>_internal_var</code>, <code>_helper_func</code> \u7279\u6b8a\u30e1\u30bd\u30c3\u30c9 \u524d\u5f8c\u306b\u30c0\u30d6\u30eb\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2 <code>__init__</code>, <code>__str__</code>"},{"location":"appendix/pep8/#_17","title":"\u5177\u4f53\u4f8b","text":"<pre><code># \u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\nimport mypackage\nfrom mylib import mymodule\n\n# \u30af\u30e9\u30b9\u540d\uff08CapWords\uff09\nclass MyClass:\n    pass\n\nclass HTTPServerError(Exception):\n    pass\n\n# \u95a2\u6570\u540d\u30fb\u5909\u6570\u540d\uff08snake_case\uff09\ndef my_function():\n    pass\n\ndef calculate_total_price():\n    pass\n\nlocal_variable = 10\nuser_name = \"Alice\"\n\n# \u5b9a\u6570\u540d\uff08SCREAMING_SNAKE_CASE\uff09\nMAX_CONNECTIONS = 100\nDEFAULT_TIMEOUT = 30\nPI = 3.14159\n\n# \u30e1\u30bd\u30c3\u30c9\u540d\nclass Calculator:\n    def add_numbers(self, a, b):\n        return a + b\n\n    def get_result(self):\n        return self._result\n\n    def _internal_calculation(self):  # \u975e\u516c\u958b\u30e1\u30bd\u30c3\u30c9\n        pass\n\n# \u7279\u6b8a\u30e1\u30bd\u30c3\u30c9\nclass MyClass:\n    def __init__(self, value):\n        self.value = value\n\n    def __str__(self):\n        return str(self.value)\n\n    def __add__(self, other):\n        return MyClass(self.value + other.value)\n</code></pre>"},{"location":"appendix/pep8/#_18","title":"\u907f\u3051\u308b\u3079\u304d\u540d\u524d","text":"<pre><code># \u60aa\u3044\u4f8b\uff1a\u7d1b\u3089\u308f\u3057\u3044\u6587\u5b57\nl = 1    # \u5c0f\u6587\u5b57\u306eL\uff08\u6570\u5b57\u306e1\u3068\u6df7\u540c\uff09\nO = 0    # \u5927\u6587\u5b57\u306eO\uff08\u6570\u5b57\u306e0\u3068\u6df7\u540c\uff09\nI = 1    # \u5927\u6587\u5b57\u306eI\uff08\u5c0f\u6587\u5b57\u306el\u3068\u6df7\u540c\uff09\n\n# \u826f\u3044\u4f8b\uff1a\u660e\u78ba\u306a\u540d\u524d\nlength = 1\ncount = 0\nindex = 1\n\n# \u60aa\u3044\u4f8b\uff1aPython\u4e88\u7d04\u8a9e\u306e\u4f7f\u7528\nclass = \"MyClass\"    # SyntaxError\ndef = \"definition\"   # SyntaxError\n\n# \u60aa\u3044\u4f8b\uff1a\u30d3\u30eb\u30c8\u30a4\u30f3\u95a2\u6570\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\nlist = [1, 2, 3]     # list\u30d3\u30eb\u30c8\u30a4\u30f3\u95a2\u6570\u3092\u96a0\u3057\u3066\u3057\u307e\u3046\nstr = \"hello\"        # str\u30d3\u30eb\u30c8\u30a4\u30f3\u95a2\u6570\u3092\u96a0\u3057\u3066\u3057\u307e\u3046\n\n# \u826f\u3044\u4f8b\uff1a\u660e\u78ba\u3067\u610f\u5473\u306e\u3042\u308b\u540d\u524d\nclass_name = \"MyClass\"\ndefinition = \"something\"\nmy_list = [1, 2, 3]\ngreeting = \"hello\"\n</code></pre>"},{"location":"appendix/pep8/#_19","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u63a8\u5968\u4e8b\u9805","text":""},{"location":"appendix/pep8/#_20","title":"\u6bd4\u8f03","text":"<pre><code># \u826f\u3044\u4f8b\uff1aNone\u3068\u306e\u6bd4\u8f03\nif foo is None:\n    pass\n\nif foo is not None:\n    pass\n\n# \u60aa\u3044\u4f8b\uff1aNone\u3068\u306e\u6bd4\u8f03\nif foo == None:\n    pass\n\nif foo != None:\n    pass\n\n# \u826f\u3044\u4f8b\uff1a\u30d6\u30fc\u30eb\u5024\u306e\u5224\u5b9a\nif greeting:\n    pass\n\n# \u60aa\u3044\u4f8b\uff1a\u30d6\u30fc\u30eb\u5024\u306e\u5224\u5b9a\nif greeting == True:\n    pass\n\nif greeting is True:\n    pass\n\n# \u826f\u3044\u4f8b\uff1a\u7a7a\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u5224\u5b9a\nif not seq:\n    pass\n\nif seq:\n    pass\n\n# \u60aa\u3044\u4f8b\uff1a\u7a7a\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u5224\u5b9a\nif len(seq) == 0:\n    pass\n\nif len(seq):\n    pass\n</code></pre>"},{"location":"appendix/pep8/#_21","title":"\u4f8b\u5916\u51e6\u7406","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u5177\u4f53\u7684\u306a\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\ntry:\n    import platform_specific_module\nexcept ImportError:\n    platform_specific_module = None\n\n# \u60aa\u3044\u4f8b\uff1a\u3059\u3079\u3066\u306e\u4f8b\u5916\u3092\u30ad\u30e3\u30c3\u30c1\ntry:\n    import platform_specific_module\nexcept:\n    platform_specific_module = None\n\n# \u826f\u3044\u4f8b\uff1a\u4f8b\u5916\u306e\u518d\u767a\u751f\ntry:\n    process_data()\nexcept Exception as e:\n    log_error(f\"\u30c7\u30fc\u30bf\u51e6\u7406\u4e2d\u306b\u30a8\u30e9\u30fc: {e}\")\n    raise  # \u4f8b\u5916\u3092\u518d\u767a\u751f\n\n# \u826f\u3044\u4f8b\uff1a\u5177\u4f53\u7684\u306a\u4f8b\u5916\u51e6\u7406\ntry:\n    value = int(user_input)\nexcept ValueError:\n    print(\"\u6709\u52b9\u306a\u6570\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\")\nexcept KeyboardInterrupt:\n    print(\"\u51e6\u7406\u304c\u4e2d\u65ad\u3055\u308c\u307e\u3057\u305f\")\n</code></pre>"},{"location":"appendix/pep8/#return","title":"return\u6587","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u4e00\u8cab\u3057\u305freturn\ndef foo(x):\n    if x &gt;= 0:\n        return math.sqrt(x)\n    else:\n        return None\n\ndef bar(x):\n    if x &lt; 0:\n        return None\n    return math.sqrt(x)\n\n# \u60aa\u3044\u4f8b\uff1a\u4e00\u90e8\u306breturn\u304c\u306a\u3044\ndef foo(x):\n    if x &gt;= 0:\n        return math.sqrt(x)\n    # \u3053\u3053\u306breturn\u6587\u304c\u306a\u3044\n\n# \u826f\u3044\u4f8b\uff1a\u660e\u793a\u7684\u306areturn\ndef get_greeting(name):\n    if name:\n        return f\"Hello, {name}!\"\n    return \"Hello!\"\n\n# \u60aa\u3044\u4f8b\uff1a\u6697\u9ed9\u7684\u306aNone\ndef get_greeting(name):\n    if name:\n        return f\"Hello, {name}!\"\n    # return\u6587\u304c\u306a\u3044\u5834\u5408\u3001None\u304c\u8fd4\u3055\u308c\u308b\n</code></pre>"},{"location":"appendix/pep8/#_22","title":"\u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\u306e\u4f7f\u7528","text":"<pre><code># \u826f\u3044\u4f8b\uff1a\u6587\u5b57\u5217\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\nif name.startswith('prefix'):\n    pass\n\nif name.endswith('.txt'):\n    pass\n\n# \u60aa\u3044\u4f8b\uff1a\u30b9\u30e9\u30a4\u30b9\u3067\u306e\u5224\u5b9a\nif name[:6] == 'prefix':\n    pass\n\nif name[-4:] == '.txt':\n    pass\n\n# \u826f\u3044\u4f8b\uff1a\u5927\u6587\u5b57\u5c0f\u6587\u5b57\u3092\u7121\u8996\u3057\u305f\u6bd4\u8f03\nif name.lower() == 'alice':\n    pass\n\n# \u60aa\u3044\u4f8b\uff1a\u8907\u96d1\u306a\u6761\u4ef6\nif name == 'alice' or name == 'Alice' or name == 'ALICE':\n    pass\n</code></pre>"},{"location":"appendix/pep8/#python-35","title":"\u578b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\uff08Python 3.5+\uff09","text":"<pre><code>from typing import List, Dict, Optional, Union, Callable\n\n# \u57fa\u672c\u7684\u306a\u578b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\ndef greeting(name: str) -&gt; str:\n    return f\"Hello, {name}!\"\n\ndef add_numbers(a: int, b: int) -&gt; int:\n    return a + b\n\n# \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\ndef process_items(items: List[str]) -&gt; Dict[str, int]:\n    return {item: len(item) for item in items}\n\n# Optional\u578b\uff08None\u8a31\u53ef\uff09\ndef find_user(user_id: int) -&gt; Optional[str]:\n    if user_id &gt; 0:\n        return f\"user_{user_id}\"\n    return None\n\n# Union\u578b\uff08\u8907\u6570\u578b\u8a31\u53ef\uff09\ndef format_id(user_id: Union[int, str]) -&gt; str:\n    return str(user_id)\n\n# Callable\u578b\uff08\u95a2\u6570\u578b\uff09\ndef apply_function(func: Callable[[int], int], value: int) -&gt; int:\n    return func(value)\n\n# \u5909\u6570\u306e\u578b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\ncount: int = 0\nname: str = \"Alice\"\nscores: List[float] = [85.5, 92.0, 78.5]\nuser_data: Dict[str, Union[str, int]] = {\n    \"name\": \"Bob\",\n    \"age\": 30\n}\n</code></pre>"},{"location":"appendix/pep8/#_23","title":"\u30c4\u30fc\u30eb\u3068\u30c1\u30a7\u30c3\u30ab\u30fc","text":""},{"location":"appendix/pep8/#_24","title":"\u30b3\u30fc\u30c9\u30b9\u30bf\u30a4\u30eb\u30c1\u30a7\u30c3\u30ab\u30fc","text":"<pre><code># flake8\uff1aPEP 8\u6e96\u62e0\u30c1\u30a7\u30c3\u30af\npip install flake8\nflake8 mycode.py\n\n# black\uff1a\u81ea\u52d5\u30b3\u30fc\u30c9\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\npip install black\nblack mycode.py\n\n# isort\uff1a\u30a4\u30f3\u30dd\u30fc\u30c8\u6587\u306e\u81ea\u52d5\u6574\u7406\npip install isort\nisort mycode.py\n\n# pylint\uff1a\u5305\u62ec\u7684\u306a\u30b3\u30fc\u30c9\u54c1\u8cea\u30c1\u30a7\u30c3\u30af\npip install pylint\npylint mycode.py\n\n# mypy\uff1a\u578b\u30c1\u30a7\u30c3\u30af\npip install mypy\nmypy mycode.py\n</code></pre>"},{"location":"appendix/pep8/#_25","title":"\u30a8\u30c7\u30a3\u30bf\u8a2d\u5b9a\u4f8b","text":"<pre><code>// VS Code settings.json\n{\n    \"python.linting.enabled\": true,\n    \"python.linting.flake8Enabled\": true,\n    \"python.formatting.provider\": \"black\",\n    \"editor.formatOnSave\": true,\n    \"python.sortImports.args\": [\"--profile\", \"black\"]\n}\n</code></pre>"},{"location":"appendix/pep8/#_26","title":"\u307e\u3068\u3081","text":"<p>PEP 8\u306f\u300c\u8aad\u307f\u3084\u3059\u3044\u30b3\u30fc\u30c9\u300d\u3092\u66f8\u304f\u305f\u3081\u306e\u6307\u91dd\u3067\u3059\u3002\u91cd\u8981\u306a\u30dd\u30a4\u30f3\u30c8\uff1a</p> <ol> <li>\u4e00\u8cab\u6027\u3092\u4fdd\u3064: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3067\u7d71\u4e00\u3055\u308c\u305f\u30b9\u30bf\u30a4\u30eb</li> <li>\u53ef\u8aad\u6027\u3092\u512a\u5148: \u30b3\u30fc\u30c9\u306f\u4eba\u9593\u304c\u8aad\u3080\u3082\u306e</li> <li>\u30c4\u30fc\u30eb\u3092\u6d3b\u7528: \u81ea\u52d5\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u30fc\u3084\u30ea\u30f3\u30bf\u30fc\u3092\u4f7f\u7528</li> <li>\u30c1\u30fc\u30e0\u3067\u5408\u610f: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u30eb\u30fc\u30eb\u304c\u3042\u308b\u5834\u5408\u306f\u305d\u308c\u306b\u5f93\u3046</li> </ol> <p>\"A style guide is about consistency. Consistency with this style guide is important. Consistency within a project is more important. Consistency within one module or function is the most important.\"</p> <p>PEP 8\u306b\u5b8c\u5168\u306b\u5f93\u3046\u3053\u3068\u3088\u308a\u3082\u3001\u30c1\u30fc\u30e0\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306e\u4e00\u8cab\u6027\u3092\u4fdd\u3064\u3053\u3068\u304c\u6700\u3082\u91cd\u8981\u3067\u3059\u3002</p>"},{"location":"appendix/stdlib/","title":"\u4ed8\u9332B\uff1a\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u91cd\u8981\u30e2\u30b8\u30e5\u30fc\u30eb\u4e00\u89a7","text":"<p>\u3053\u306e\u4ed8\u9332\u3067\u306f\u3001Python\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u3067\u3082\u7279\u306b\u91cd\u8981\u3067\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5206\u91ce\u5225\u306b\u6574\u7406\u3057\u3066\u7d39\u4ecb\u3057\u307e\u3059\u3002</p>"},{"location":"appendix/stdlib/#_1","title":"\u5185\u8535\u95a2\u6570\u3068\u30d3\u30eb\u30c8\u30a4\u30f3\u578b","text":""},{"location":"appendix/stdlib/#_2","title":"\u4e3b\u8981\u306a\u5185\u8535\u95a2\u6570","text":"\u95a2\u6570\u540d \u7528\u9014 \u4f7f\u7528\u4f8b <code>len()</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9577\u3055\u3092\u53d6\u5f97 <code>len([1, 2, 3])</code> \u2192 <code>3</code> <code>range()</code> \u9023\u7d9a\u3059\u308b\u6574\u6570\u3092\u751f\u6210 <code>range(5)</code> \u2192 <code>0, 1, 2, 3, 4</code> <code>enumerate()</code> \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u4ed8\u304d\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3 <code>enumerate(['a', 'b'])</code> \u2192 <code>(0, 'a'), (1, 'b')</code> <code>zip()</code> \u8907\u6570\u306e\u30a4\u30c6\u30e9\u30d6\u30eb\u3092\u7d50\u5408 <code>zip([1, 2], ['a', 'b'])</code> \u2192 <code>(1, 'a'), (2, 'b')</code> <code>map()</code> \u95a2\u6570\u3092\u5404\u8981\u7d20\u306b\u9069\u7528 <code>map(str, [1, 2, 3])</code> \u2192 <code>['1', '2', '3']</code> <code>filter()</code> \u6761\u4ef6\u306b\u5408\u3046\u8981\u7d20\u3092\u62bd\u51fa <code>filter(lambda x: x &gt; 0, [-1, 0, 1, 2])</code> \u2192 <code>[1, 2]</code> <code>sorted()</code> \u30bd\u30fc\u30c8\u3055\u308c\u305f\u30ea\u30b9\u30c8\u3092\u8fd4\u3059 <code>sorted([3, 1, 2])</code> \u2192 <code>[1, 2, 3]</code> <code>reversed()</code> \u9006\u9806\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059 <code>list(reversed([1, 2, 3]))</code> \u2192 <code>[3, 2, 1]</code> <code>all()</code> \u5168\u3066\u306e\u8981\u7d20\u304c\u771f\u304b\u5224\u5b9a <code>all([True, True, False])</code> \u2192 <code>False</code> <code>any()</code> \u3044\u305a\u308c\u304b\u306e\u8981\u7d20\u304c\u771f\u304b\u5224\u5b9a <code>any([False, True, False])</code> \u2192 <code>True</code> <code>sum()</code> \u6570\u5024\u306e\u5408\u8a08\u3092\u8a08\u7b97 <code>sum([1, 2, 3])</code> \u2192 <code>6</code> <code>min()</code> / <code>max()</code> \u6700\u5c0f\u5024/\u6700\u5927\u5024\u3092\u53d6\u5f97 <code>min([3, 1, 2])</code> \u2192 <code>1</code>"},{"location":"appendix/stdlib/#_3","title":"\u578b\u5909\u63db\u95a2\u6570","text":"\u95a2\u6570\u540d \u7528\u9014 \u4f7f\u7528\u4f8b <code>int()</code> \u6574\u6570\u306b\u5909\u63db <code>int('123')</code> \u2192 <code>123</code> <code>float()</code> \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306b\u5909\u63db <code>float('3.14')</code> \u2192 <code>3.14</code> <code>str()</code> \u6587\u5b57\u5217\u306b\u5909\u63db <code>str(123)</code> \u2192 <code>'123'</code> <code>bool()</code> \u30d6\u30fc\u30eb\u5024\u306b\u5909\u63db <code>bool(0)</code> \u2192 <code>False</code> <code>list()</code> \u30ea\u30b9\u30c8\u306b\u5909\u63db <code>list('abc')</code> \u2192 <code>['a', 'b', 'c']</code> <code>tuple()</code> \u30bf\u30d7\u30eb\u306b\u5909\u63db <code>tuple([1, 2, 3])</code> \u2192 <code>(1, 2, 3)</code> <code>set()</code> \u30bb\u30c3\u30c8\u306b\u5909\u63db <code>set([1, 2, 2, 3])</code> \u2192 <code>{1, 2, 3}</code> <code>dict()</code> \u8f9e\u66f8\u306b\u5909\u63db <code>dict([('a', 1), ('b', 2)])</code> \u2192 <code>{'a': 1, 'b': 2}</code>"},{"location":"appendix/stdlib/#_4","title":"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u64cd\u4f5c\u95a2\u6570","text":"\u95a2\u6570\u540d \u7528\u9014 \u4f7f\u7528\u4f8b <code>type()</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u578b\u3092\u53d6\u5f97 <code>type(123)</code> \u2192 <code>&lt;class 'int'&gt;</code> <code>isinstance()</code> \u578b\u306e\u5224\u5b9a <code>isinstance(123, int)</code> \u2192 <code>True</code> <code>hasattr()</code> \u5c5e\u6027\u306e\u5b58\u5728\u78ba\u8a8d <code>hasattr(obj, 'method')</code> <code>getattr()</code> \u5c5e\u6027\u5024\u306e\u53d6\u5f97 <code>getattr(obj, 'attr', default)</code> <code>setattr()</code> \u5c5e\u6027\u5024\u306e\u8a2d\u5b9a <code>setattr(obj, 'attr', value)</code> <code>delattr()</code> \u5c5e\u6027\u306e\u524a\u9664 <code>delattr(obj, 'attr')</code> <code>dir()</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5c5e\u6027\u4e00\u89a7 <code>dir(obj)</code> <code>vars()</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e<code>__dict__</code>\u3092\u53d6\u5f97 <code>vars(obj)</code> <code>id()</code> \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eID\u3092\u53d6\u5f97 <code>id(obj)</code>"},{"location":"appendix/stdlib/#_5","title":"\u6587\u5b57\u5217\u51e6\u7406","text":""},{"location":"appendix/stdlib/#string","title":"<code>string</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import string\n\n# \u5b9a\u6570\nstring.ascii_letters    # 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\nstring.ascii_lowercase  # 'abcdefghijklmnopqrstuvwxyz'\nstring.ascii_uppercase  # 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nstring.digits          # '0123456789'\nstring.punctuation     # '!\"#$%&amp;\\'()*+,-./:;&lt;=&gt;?@[\\\\]^_`{|}~'\nstring.printable       # \u5370\u5237\u53ef\u80fd\u6587\u5b57\u3059\u3079\u3066\nstring.whitespace      # ' \\t\\n\\r\\x0b\\x0c'\n\n# \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u6587\u5b57\u5217\ntemplate = string.Template('Hello, $name!')\ntemplate.substitute(name='World')  # 'Hello, World!'\n</code></pre>"},{"location":"appendix/stdlib/#re","title":"<code>re</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u6b63\u898f\u8868\u73fe\uff09","text":"<pre><code>import re\n\n# \u57fa\u672c\u7684\u306a\u95a2\u6570\nre.match(pattern, string)     # \u6587\u5b57\u5217\u306e\u5148\u982d\u304b\u3089\u30de\u30c3\u30c1\nre.search(pattern, string)    # \u6587\u5b57\u5217\u5168\u4f53\u304b\u3089\u30de\u30c3\u30c1\u3092\u691c\u7d22\nre.findall(pattern, string)   # \u3059\u3079\u3066\u306e\u30de\u30c3\u30c1\u3092\u691c\u7d22\nre.finditer(pattern, string)  # \u3059\u3079\u3066\u306e\u30de\u30c3\u30c1\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\nre.sub(pattern, repl, string) # \u30de\u30c3\u30c1\u3057\u305f\u90e8\u5206\u3092\u7f6e\u63db\nre.split(pattern, string)     # \u30d1\u30bf\u30fc\u30f3\u3067\u6587\u5b57\u5217\u3092\u5206\u5272\n\n# \u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d1\u30bf\u30fc\u30f3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\npattern = re.compile(r'\\d+')\npattern.findall('123 abc 456')  # ['123', '456']\n\n# \u4e3b\u8981\u306a\u30d5\u30e9\u30b0\nre.IGNORECASE  # \u5927\u6587\u5b57\u5c0f\u6587\u5b57\u3092\u7121\u8996\nre.MULTILINE   # \u8907\u6570\u884c\u30e2\u30fc\u30c9\nre.DOTALL      # . \u304c\u6539\u884c\u6587\u5b57\u306b\u3082\u30de\u30c3\u30c1\nre.VERBOSE     # \u8a73\u7d30\u30e2\u30fc\u30c9\uff08\u30b3\u30e1\u30f3\u30c8\u53ef\u80fd\uff09\n</code></pre>"},{"location":"appendix/stdlib/#_6","title":"\u6570\u5024\u8a08\u7b97","text":""},{"location":"appendix/stdlib/#math","title":"<code>math</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import math\n\n# \u5b9a\u6570\nmath.pi        # \u5186\u5468\u7387\nmath.e         # \u81ea\u7136\u5bfe\u6570\u306e\u5e95\nmath.inf       # \u6b63\u306e\u7121\u9650\u5927\nmath.nan       # NaN\uff08Not a Number\uff09\n\n# \u57fa\u672c\u7684\u306a\u95a2\u6570\nmath.ceil(x)   # \u5929\u4e95\u95a2\u6570\uff08\u5207\u308a\u4e0a\u3052\uff09\nmath.floor(x)  # \u5e8a\u95a2\u6570\uff08\u5207\u308a\u4e0b\u3052\uff09\nmath.trunc(x)  # 0\u306b\u5411\u304b\u3063\u3066\u5207\u308a\u6368\u3066\nmath.fabs(x)   # \u7d76\u5bfe\u5024\nmath.gcd(a, b) # \u6700\u5927\u516c\u7d04\u6570\n\n# \u51aa\u3068\u5bfe\u6570\nmath.pow(x, y)    # x \u306e y \u4e57\nmath.sqrt(x)      # \u5e73\u65b9\u6839\nmath.log(x, base) # \u5bfe\u6570\nmath.log10(x)     # \u5e38\u7528\u5bfe\u6570\nmath.log2(x)      # \u4e8c\u9032\u5bfe\u6570\n\n# \u4e09\u89d2\u95a2\u6570\nmath.sin(x)    # \u30b5\u30a4\u30f3\nmath.cos(x)    # \u30b3\u30b5\u30a4\u30f3\nmath.tan(x)    # \u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\nmath.asin(x)   # \u30a2\u30fc\u30af\u30b5\u30a4\u30f3\nmath.acos(x)   # \u30a2\u30fc\u30af\u30b3\u30b5\u30a4\u30f3\nmath.atan(x)   # \u30a2\u30fc\u30af\u30bf\u30f3\u30b8\u30a7\u30f3\u30c8\nmath.degrees(x) # \u30e9\u30b8\u30a2\u30f3\u3092\u5ea6\u306b\u5909\u63db\nmath.radians(x) # \u5ea6\u3092\u30e9\u30b8\u30a2\u30f3\u306b\u5909\u63db\n</code></pre>"},{"location":"appendix/stdlib/#random","title":"<code>random</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import random\n\n# \u57fa\u672c\u7684\u306a\u4e71\u6570\u751f\u6210\nrandom.random()           # 0.0\u4ee5\u4e0a1.0\u672a\u6e80\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\nrandom.randint(a, b)      # a\u4ee5\u4e0ab\u4ee5\u4e0b\u306e\u6574\u6570\nrandom.uniform(a, b)      # a\u4ee5\u4e0ab\u4ee5\u4e0b\u306e\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\nrandom.choice(sequence)   # \u30b7\u30fc\u30b1\u30f3\u30b9\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u9078\u629e\nrandom.choices(sequence, k=n)  # \u91cd\u8907\u3042\u308a\u3067n\u500b\u9078\u629e\nrandom.sample(sequence, k=n)   # \u91cd\u8907\u306a\u3057\u3067n\u500b\u9078\u629e\n\n# \u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u64cd\u4f5c\nrandom.shuffle(sequence)  # \u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\uff08\u7834\u58ca\u7684\uff09\n\n# \u5206\u5e03\u95a2\u6570\nrandom.gauss(mu, sigma)   # \u30ac\u30a6\u30b9\u5206\u5e03\nrandom.expovariate(lambd) # \u6307\u6570\u5206\u5e03\nrandom.normalvariate(mu, sigma) # \u6b63\u898f\u5206\u5e03\n\n# \u30b7\u30fc\u30c9\u8a2d\u5b9a\nrandom.seed(42)  # \u518d\u73fe\u53ef\u80fd\u306a\u4e71\u6570\u306e\u305f\u3081\u306e\u30b7\u30fc\u30c9\u8a2d\u5b9a\n</code></pre>"},{"location":"appendix/stdlib/#decimal","title":"<code>decimal</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u9ad8\u7cbe\u5ea6\u5c0f\u6570\uff09","text":"<pre><code>from decimal import Decimal, getcontext\n\n# \u7cbe\u5ea6\u306e\u8a2d\u5b9a\ngetcontext().prec = 50  # 50\u6841\u306e\u7cbe\u5ea6\n\n# Decimal\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nd1 = Decimal('0.1')\nd2 = Decimal('0.2')\nprint(d1 + d2)  # 0.3\uff08\u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u8aa4\u5dee\u306a\u3057\uff09\n\n# \u6587\u5b57\u5217\u304b\u3089\u4f5c\u6210\uff08\u63a8\u5968\uff09\nprice = Decimal('19.99')\ntax_rate = Decimal('0.08')\ntotal = price * (1 + tax_rate)\n</code></pre>"},{"location":"appendix/stdlib/#_7","title":"\u65e5\u4ed8\u3068\u6642\u523b","text":""},{"location":"appendix/stdlib/#datetime","title":"<code>datetime</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>from datetime import datetime, date, time, timedelta\n\n# \u73fe\u5728\u306e\u65e5\u6642\nnow = datetime.now()\ntoday = date.today()\n\n# \u65e5\u6642\u306e\u4f5c\u6210\ndt = datetime(2023, 12, 25, 15, 30, 0)\nd = date(2023, 12, 25)\nt = time(15, 30, 0)\n\n# \u6587\u5b57\u5217\u304b\u3089\u306e\u5909\u63db\ndt = datetime.strptime('2023-12-25 15:30:00', '%Y-%m-%d %H:%M:%S')\n\n# \u6587\u5b57\u5217\u3078\u306e\u5909\u63db\ndt_str = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n\n# \u6642\u9593\u5dee\u306e\u8a08\u7b97\ndelta = timedelta(days=7, hours=3, minutes=30)\nfuture = datetime.now() + delta\n\n# \u6bd4\u8f03\nif datetime.now() &gt; dt:\n    print(\"\u73fe\u5728\u6642\u523b\u306f\u6307\u5b9a\u6642\u523b\u3088\u308a\u5f8c\u3067\u3059\")\n</code></pre>"},{"location":"appendix/stdlib/#time","title":"<code>time</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import time\n\n# \u73fe\u5728\u6642\u523b\u306e\u53d6\u5f97\ncurrent_time = time.time()        # UNIX \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\nlocal_time = time.localtime()     # \u30ed\u30fc\u30ab\u30eb\u6642\u523b\nutc_time = time.gmtime()          # UTC\u6642\u523b\n\n# \u6642\u523b\u306e\u8868\u793a\nformatted = time.strftime('%Y-%m-%d %H:%M:%S', local_time)\n\n# \u51e6\u7406\u306e\u4e00\u6642\u505c\u6b62\ntime.sleep(1)  # 1\u79d2\u9593\u505c\u6b62\n\n# \u51e6\u7406\u6642\u9593\u306e\u8a08\u6e2c\nstart = time.time()\n# \u4f55\u3089\u304b\u306e\u51e6\u7406\nelapsed = time.time() - start\n</code></pre>"},{"location":"appendix/stdlib/#_8","title":"\u30d5\u30a1\u30a4\u30eb\u3068\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c","text":""},{"location":"appendix/stdlib/#os","title":"<code>os</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import os\n\n# \u73fe\u5728\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\ncurrent_dir = os.getcwd()\nos.chdir('/path/to/directory')  # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5909\u66f4\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c\nos.mkdir('new_directory')       # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\nos.makedirs('path/to/dir')      # \u518d\u5e30\u7684\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\nos.rmdir('directory')           # \u7a7a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u524a\u9664\nos.removedirs('path/to/dir')    # \u518d\u5e30\u7684\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u524a\u9664\n\n# \u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\nos.remove('file.txt')           # \u30d5\u30a1\u30a4\u30eb\u524a\u9664\nos.rename('old.txt', 'new.txt') # \u30d5\u30a1\u30a4\u30eb\u540d\u5909\u66f4\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e00\u89a7\nfiles = os.listdir('.')         # \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u4e00\u89a7\n\n# \u30d1\u30b9\u64cd\u4f5c\nos.path.join('path', 'to', 'file.txt')  # \u30d1\u30b9\u306e\u7d50\u5408\nos.path.exists('file.txt')              # \u30d5\u30a1\u30a4\u30eb\u5b58\u5728\u78ba\u8a8d\nos.path.isfile('file.txt')              # \u30d5\u30a1\u30a4\u30eb\u304b\u3069\u3046\u304b\nos.path.isdir('directory')              # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3069\u3046\u304b\nos.path.basename('/path/to/file.txt')   # \u30d5\u30a1\u30a4\u30eb\u540d\u90e8\u5206\nos.path.dirname('/path/to/file.txt')    # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u90e8\u5206\nos.path.splitext('file.txt')            # \u62e1\u5f35\u5b50\u306e\u5206\u96e2\n\n# \u74b0\u5883\u5909\u6570\nhome = os.environ.get('HOME')\nos.environ['MY_VAR'] = 'value'\n</code></pre>"},{"location":"appendix/stdlib/#pathlib-python-34","title":"<code>pathlib</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08Python 3.4+\uff09","text":"<pre><code>from pathlib import Path\n\n# Path\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\np = Path('.')\nhome = Path.home()\ntmp = Path('/tmp')\n\n# \u30d1\u30b9\u64cd\u4f5c\nfile_path = Path('data') / 'file.txt'  # \u30d1\u30b9\u306e\u7d50\u5408\nparent = file_path.parent              # \u89aa\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\nname = file_path.name                  # \u30d5\u30a1\u30a4\u30eb\u540d\nstem = file_path.stem                  # \u62e1\u5f35\u5b50\u306a\u3057\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nsuffix = file_path.suffix              # \u62e1\u5f35\u5b50\n\n# \u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u64cd\u4f5c\nfile_path.exists()        # \u5b58\u5728\u78ba\u8a8d\nfile_path.is_file()       # \u30d5\u30a1\u30a4\u30eb\u304b\u3069\u3046\u304b\nfile_path.is_dir()        # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3069\u3046\u304b\nfile_path.mkdir()         # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\nfile_path.touch()         # \u7a7a\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\nfile_path.unlink()        # \u30d5\u30a1\u30a4\u30eb\u524a\u9664\n\n# \u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u66f8\u304d\ncontent = file_path.read_text()\nfile_path.write_text('Hello, World!')\n</code></pre>"},{"location":"appendix/stdlib/#shutil","title":"<code>shutil</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u9ad8\u30ec\u30d9\u30eb\u30d5\u30a1\u30a4\u30eb\u64cd\u4f5c\uff09","text":"<pre><code>import shutil\n\n# \u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30b3\u30d4\u30fc\nshutil.copy('src.txt', 'dst.txt')                    # \u30d5\u30a1\u30a4\u30eb\u30b3\u30d4\u30fc\nshutil.copy2('src.txt', 'dst.txt')                   # \u30e1\u30bf\u30c7\u30fc\u30bf\u3082\u542b\u3081\u3066\u30b3\u30d4\u30fc\nshutil.copytree('src_dir', 'dst_dir')                # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c4\u30ea\u30fc\u306e\u30b3\u30d4\u30fc\n\n# \u30d5\u30a1\u30a4\u30eb\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u79fb\u52d5\nshutil.move('src.txt', 'dst.txt')                    # \u30d5\u30a1\u30a4\u30eb\u79fb\u52d5\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u524a\u9664\nshutil.rmtree('directory')                           # \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30c4\u30ea\u30fc\u306e\u524a\u9664\n\n# \u30a2\u30fc\u30ab\u30a4\u30d6\u64cd\u4f5c\nshutil.make_archive('archive', 'zip', 'directory')   # ZIP\u30a2\u30fc\u30ab\u30a4\u30d6\u4f5c\u6210\nshutil.unpack_archive('archive.zip', 'extract_dir')  # \u30a2\u30fc\u30ab\u30a4\u30d6\u5c55\u958b\n\n# \u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\ntotal, used, free = shutil.disk_usage('/')           # \u30c7\u30a3\u30b9\u30af\u4f7f\u7528\u91cf\u53d6\u5f97\n</code></pre>"},{"location":"appendix/stdlib/#_9","title":"\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0","text":""},{"location":"appendix/stdlib/#collections","title":"<code>collections</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>from collections import (\n    Counter, defaultdict, deque, namedtuple,\n    OrderedDict, ChainMap\n)\n\n# Counter: \u8981\u7d20\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\ncount = Counter('hello world')\nprint(count)  # Counter({'l': 3, 'o': 2, 'h': 1, 'e': 1, ' ': 1, 'w': 1, 'r': 1, 'd': 1})\ncount.most_common(2)  # [('l', 3), ('o', 2)]\n\n# defaultdict: \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064\u8f9e\u66f8\ndd = defaultdict(list)\ndd['key'].append('value')  # KeyError\u304c\u767a\u751f\u3057\u306a\u3044\n\n# deque: \u4e21\u7aef\u30ad\u30e5\u30fc\ndq = deque([1, 2, 3])\ndq.appendleft(0)     # \u5de6\u7aef\u306b\u8ffd\u52a0\ndq.append(4)         # \u53f3\u7aef\u306b\u8ffd\u52a0\ndq.popleft()         # \u5de6\u7aef\u304b\u3089\u524a\u9664\ndq.pop()             # \u53f3\u7aef\u304b\u3089\u524a\u9664\n\n# namedtuple: \u540d\u524d\u4ed8\u304d\u30bf\u30d7\u30eb\nPoint = namedtuple('Point', ['x', 'y'])\np = Point(1, 2)\nprint(p.x, p.y)      # 1 2\n\n# OrderedDict: \u9806\u5e8f\u3092\u4fdd\u6301\u3059\u308b\u8f9e\u66f8\uff08Python 3.7+\u3067\u306f\u901a\u5e38\u306edict\u3082\u9806\u5e8f\u4fdd\u6301\uff09\nod = OrderedDict([('a', 1), ('b', 2)])\nod.move_to_end('a')  # 'a'\u3092\u672b\u5c3e\u306b\u79fb\u52d5\n\n# ChainMap: \u8907\u6570\u306e\u8f9e\u66f8\u3092\u9023\u9396\ndict1 = {'a': 1, 'b': 2}\ndict2 = {'c': 3, 'd': 4}\ncm = ChainMap(dict1, dict2)\nprint(cm['a'])       # 1\n</code></pre>"},{"location":"appendix/stdlib/#heapq","title":"<code>heapq</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u30d2\u30fc\u30d7\u30ad\u30e5\u30fc\uff09","text":"<pre><code>import heapq\n\n# \u30d2\u30fc\u30d7\u306e\u4f5c\u6210\u3068\u64cd\u4f5c\nheap = [3, 1, 4, 1, 5, 9, 2, 6]\nheapq.heapify(heap)               # \u30ea\u30b9\u30c8\u3092\u30d2\u30fc\u30d7\u306b\u5909\u63db\n\nheapq.heappush(heap, 0)           # \u8981\u7d20\u3092\u8ffd\u52a0\nsmallest = heapq.heappop(heap)    # \u6700\u5c0f\u8981\u7d20\u3092\u53d6\u5f97\u30fb\u524a\u9664\n\n# n\u756a\u76ee\u306b\u5c0f\u3055\u3044/\u5927\u304d\u3044\u8981\u7d20\nsmallest_3 = heapq.nsmallest(3, heap)\nlargest_3 = heapq.nlargest(3, heap)\n\n# \u8981\u7d20\u306e\u7f6e\u63db\nheapq.heapreplace(heap, 7)        # \u30dd\u30c3\u30d7\u3057\u3066\u304b\u3089\u30d7\u30c3\u30b7\u30e5\nheapq.heappushpop(heap, 8)        # \u30d7\u30c3\u30b7\u30e5\u3057\u3066\u304b\u3089\u30dd\u30c3\u30d7\n</code></pre>"},{"location":"appendix/stdlib/#bisect","title":"<code>bisect</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u4e8c\u5206\u63a2\u7d22\uff09","text":"<pre><code>import bisect\n\n# \u30bd\u30fc\u30c8\u6e08\u307f\u30ea\u30b9\u30c8\u3078\u306e\u633f\u5165\u4f4d\u7f6e\u3092\u63a2\u7d22\nsorted_list = [1, 3, 5, 7, 9]\npos = bisect.bisect_left(sorted_list, 6)   # \u633f\u5165\u4f4d\u7f6e\uff08\u5de6\u5074\uff09\npos = bisect.bisect_right(sorted_list, 6)  # \u633f\u5165\u4f4d\u7f6e\uff08\u53f3\u5074\uff09\n\n# \u30bd\u30fc\u30c8\u6e08\u307f\u30ea\u30b9\u30c8\u306b\u8981\u7d20\u3092\u633f\u5165\nbisect.insort_left(sorted_list, 6)         # \u5de6\u5074\u306b\u633f\u5165\nbisect.insort_right(sorted_list, 6)        # \u53f3\u5074\u306b\u633f\u5165\n</code></pre>"},{"location":"appendix/stdlib/#_10","title":"\u30b7\u30b9\u30c6\u30e0\u3068\u74b0\u5883","text":""},{"location":"appendix/stdlib/#sys","title":"<code>sys</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import sys\n\n# Python\u306e\u60c5\u5831\nsys.version        # Python\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\nsys.version_info   # \u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u306e\u30bf\u30d7\u30eb\nsys.platform       # \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u540d\n\n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\nsys.argv          # \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u30ea\u30b9\u30c8\n\n# \u30e2\u30b8\u30e5\u30fc\u30eb\u691c\u7d22\u30d1\u30b9\nsys.path          # \u30e2\u30b8\u30e5\u30fc\u30eb\u691c\u7d22\u30d1\u30b9\u306e\u30ea\u30b9\u30c8\n\n# \u6a19\u6e96\u5165\u51fa\u529b\nsys.stdin         # \u6a19\u6e96\u5165\u529b\nsys.stdout        # \u6a19\u6e96\u51fa\u529b\nsys.stderr        # \u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7d42\u4e86\nsys.exit(0)       # \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d42\u4e86\n\n# \u305d\u306e\u4ed6\nsys.maxsize       # \u6700\u5927\u6574\u6570\u5024\nsys.float_info    # \u6d6e\u52d5\u5c0f\u6570\u70b9\u6570\u306e\u60c5\u5831\nsys.getsizeof(obj) # \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\n</code></pre>"},{"location":"appendix/stdlib/#platform","title":"<code>platform</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import platform\n\n# \u30b7\u30b9\u30c6\u30e0\u60c5\u5831\nplatform.system()     # OS\u540d\uff08'Windows', 'Linux', 'Darwin'\u306a\u3069\uff09\nplatform.platform()   # \u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6587\u5b57\u5217\nplatform.machine()    # \u30de\u30b7\u30f3\u30bf\u30a4\u30d7\uff08'x86_64'\u306a\u3069\uff09\nplatform.processor()  # \u30d7\u30ed\u30bb\u30c3\u30b5\u540d\nplatform.node()       # \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u540d\n\n# Python\u306e\u60c5\u5831\nplatform.python_version()        # Python\u30d0\u30fc\u30b8\u30e7\u30f3\nplatform.python_implementation() # Python\u5b9f\u88c5\uff08'CPython'\u306a\u3069\uff09\n</code></pre>"},{"location":"appendix/stdlib/#_11","title":"\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3068\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8","text":""},{"location":"appendix/stdlib/#urllib","title":"<code>urllib</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>from urllib import request, parse, error\nfrom urllib.request import urlopen\n\n# URL\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\nresponse = urlopen('https://httpbin.org/json')\ndata = response.read().decode('utf-8')\n\n# URL\u30a8\u30f3\u30b3\u30fc\u30c9\nparams = {'key1': 'value1', 'key2': 'value2'}\nencoded = parse.urlencode(params)\n\n# URL\u306e\u89e3\u6790\nparsed = parse.urlparse('https://example.com/path?query=value')\nprint(parsed.scheme)  # https\nprint(parsed.netloc)  # example.com\nprint(parsed.path)    # /path\nprint(parsed.query)   # query=value\n</code></pre>"},{"location":"appendix/stdlib/#json","title":"<code>json</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import json\n\n# Python\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSON\u306b\u5909\u63db\ndata = {'name': 'Alice', 'age': 30, 'city': 'Tokyo'}\njson_string = json.dumps(data, indent=2, ensure_ascii=False)\n\n# JSON\u3092Python\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5909\u63db\njson_data = '{\"name\": \"Bob\", \"age\": 25}'\npython_obj = json.loads(json_data)\n\n# \u30d5\u30a1\u30a4\u30eb\u3068\u306e\u8aad\u307f\u66f8\u304d\nwith open('data.json', 'w') as f:\n    json.dump(data, f, indent=2, ensure_ascii=False)\n\nwith open('data.json', 'r') as f:\n    loaded_data = json.load(f)\n</code></pre>"},{"location":"appendix/stdlib/#_12","title":"\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316","text":""},{"location":"appendix/stdlib/#pickle","title":"<code>pickle</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import pickle\n\n# \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\ndata = {'list': [1, 2, 3], 'tuple': (4, 5, 6)}\nwith open('data.pickle', 'wb') as f:\n    pickle.dump(data, f)\n\n# \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\nwith open('data.pickle', 'rb') as f:\n    loaded_data = pickle.load(f)\n\n# \u30d0\u30a4\u30c8\u5217\u3078\u306e\u5909\u63db\nserialized = pickle.dumps(data)\ndeserialized = pickle.loads(serialized)\n</code></pre>"},{"location":"appendix/stdlib/#csv","title":"<code>csv</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import csv\n\n# CSV\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\nwith open('data.csv', 'r') as f:\n    reader = csv.reader(f)\n    for row in reader:\n        print(row)\n\n# \u8f9e\u66f8\u3068\u3057\u3066CSV\u3092\u8aad\u307f\u8fbc\u307f\nwith open('data.csv', 'r') as f:\n    reader = csv.DictReader(f)\n    for row in reader:\n        print(row['column_name'])\n\n# CSV\u30d5\u30a1\u30a4\u30eb\u306e\u66f8\u304d\u8fbc\u307f\nwith open('output.csv', 'w', newline='') as f:\n    writer = csv.writer(f)\n    writer.writerow(['Name', 'Age', 'City'])\n    writer.writerow(['Alice', 30, 'Tokyo'])\n\n# \u8f9e\u66f8\u3068\u3057\u3066CSV\u3092\u66f8\u304d\u8fbc\u307f\nwith open('output.csv', 'w', newline='') as f:\n    fieldnames = ['Name', 'Age', 'City']\n    writer = csv.DictWriter(f, fieldnames=fieldnames)\n    writer.writeheader()\n    writer.writerow({'Name': 'Bob', 'Age': 25, 'City': 'Osaka'})\n</code></pre>"},{"location":"appendix/stdlib/#_13","title":"\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":""},{"location":"appendix/stdlib/#functools","title":"<code>functools</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>from functools import (\n    reduce, partial, wraps, lru_cache,\n    singledispatch, total_ordering\n)\n\n# reduce: \u30ea\u30b9\u30c8\u306e\u8981\u7d20\u3092\u7d2f\u7a4d\u7684\u306b\u51e6\u7406\nresult = reduce(lambda x, y: x + y, [1, 2, 3, 4])  # 10\n\n# partial: \u90e8\u5206\u9069\u7528\ndef multiply(x, y):\n    return x * y\n\ndouble = partial(multiply, 2)\nprint(double(5))  # 10\n\n# wraps: \u30c7\u30b3\u30ec\u30fc\u30bf\u4f5c\u6210\u6642\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u4fdd\u6301\ndef my_decorator(func):\n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        print(f\"Calling {func.__name__}\")\n        return func(*args, **kwargs)\n    return wrapper\n\n# lru_cache: \u6700\u8fd1\u4f7f\u7528\u3057\u305f\u30ad\u30e3\u30c3\u30b7\u30e5\n@lru_cache(maxsize=128)\ndef fibonacci(n):\n    if n &lt; 2:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)\n\n# singledispatch: \u578b\u306b\u57fa\u3065\u304f\u95a2\u6570\u306e\u5206\u5c90\n@singledispatch\ndef process(arg):\n    print(f\"Processing {arg}\")\n\n@process.register\ndef _(arg: int):\n    print(f\"Processing integer: {arg}\")\n\n@process.register\ndef _(arg: str):\n    print(f\"Processing string: {arg}\")\n</code></pre>"},{"location":"appendix/stdlib/#itertools","title":"<code>itertools</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import itertools\n\n# \u7121\u9650\u30a4\u30c6\u30ec\u30fc\u30bf\ncount_iter = itertools.count(10, 2)      # 10, 12, 14, 16, ...\ncycle_iter = itertools.cycle('ABC')      # A, B, C, A, B, C, ...\nrepeat_iter = itertools.repeat('X', 3)   # X, X, X\n\n# \u6709\u9650\u30a4\u30c6\u30ec\u30fc\u30bf\nchain_iter = itertools.chain([1, 2], [3, 4])  # 1, 2, 3, 4\ncompress_iter = itertools.compress('ABCD', [1, 0, 1, 0])  # A, C\n\n# \u7d44\u307f\u5408\u308f\u305b\u3068\u30eb\u30fc\u30d7\ncombinations = itertools.combinations('ABCD', 2)     # AB, AC, AD, BC, BD, CD\npermutations = itertools.permutations('ABC', 2)      # AB, AC, BA, BC, CA, CB\nproduct = itertools.product('AB', '12')              # A1, A2, B1, B2\n\n# \u30b0\u30eb\u30fc\u30d7\u5316\ndata = [('a', 1), ('a', 2), ('b', 3), ('b', 4)]\ngrouped = itertools.groupby(data, key=lambda x: x[0])\nfor key, group in grouped:\n    print(key, list(group))\n</code></pre>"},{"location":"appendix/stdlib/#_14","title":"\u30c6\u30b9\u30c8\u3068\u30c7\u30d0\u30c3\u30b0","text":""},{"location":"appendix/stdlib/#unittest","title":"<code>unittest</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import unittest\n\nclass TestMathOperations(unittest.TestCase):\n\n    def setUp(self):\n        \"\"\"\u30c6\u30b9\u30c8\u524d\u306e\u6e96\u5099\"\"\"\n        self.a = 10\n        self.b = 5\n\n    def tearDown(self):\n        \"\"\"\u30c6\u30b9\u30c8\u5f8c\u306e\u7247\u4ed8\u3051\"\"\"\n        pass\n\n    def test_addition(self):\n        \"\"\"\u52a0\u7b97\u306e\u30c6\u30b9\u30c8\"\"\"\n        result = self.a + self.b\n        self.assertEqual(result, 15)\n\n    def test_division(self):\n        \"\"\"\u9664\u7b97\u306e\u30c6\u30b9\u30c8\"\"\"\n        result = self.a / self.b\n        self.assertEqual(result, 2.0)\n\n    def test_division_by_zero(self):\n        \"\"\"\u30bc\u30ed\u9664\u7b97\u306e\u30c6\u30b9\u30c8\"\"\"\n        with self.assertRaises(ZeroDivisionError):\n            self.a / 0\n\nif __name__ == '__main__':\n    unittest.main()\n</code></pre>"},{"location":"appendix/stdlib/#doctest","title":"<code>doctest</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>def add(a, b):\n    \"\"\"\n    \u4e8c\u3064\u306e\u6570\u3092\u52a0\u7b97\u3059\u308b\u95a2\u6570\n\n    &gt;&gt;&gt; add(2, 3)\n    5\n    &gt;&gt;&gt; add(-1, 1)\n    0\n    &gt;&gt;&gt; add(0, 0)\n    0\n    \"\"\"\n    return a + b\n\nif __name__ == '__main__':\n    import doctest\n    doctest.testmod()\n</code></pre>"},{"location":"appendix/stdlib/#pdb","title":"<code>pdb</code> \u30e2\u30b8\u30e5\u30fc\u30eb\uff08\u30c7\u30d0\u30c3\u30ac\uff09","text":"<pre><code>import pdb\n\ndef problematic_function(x, y):\n    result = x + y\n    pdb.set_trace()  # \u3053\u3053\u3067\u30c7\u30d0\u30c3\u30ac\u304c\u8d77\u52d5\n    return result * 2\n\n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u306e\u5b9f\u884c\n# python -m pdb script.py\n</code></pre>"},{"location":"appendix/stdlib/#_15","title":"\u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9","text":""},{"location":"appendix/stdlib/#timeit","title":"<code>timeit</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import timeit\n\n# \u5358\u7d14\u306a\u30b3\u30fc\u30c9\u306e\u8a08\u6e2c\nelapsed_time = timeit.timeit('sum([1, 2, 3, 4, 5])', number=100000)\n\n# \u8907\u6570\u884c\u306e\u30b3\u30fc\u30c9\u306e\u8a08\u6e2c\ncode = \"\"\"\ndata = list(range(100))\nresult = sum(data)\n\"\"\"\nelapsed_time = timeit.timeit(code, number=10000)\n\n# \u95a2\u6570\u306e\u8a08\u6e2c\ndef test_function():\n    return sum(range(100))\n\nelapsed_time = timeit.timeit(test_function, number=10000)\n\n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u306e\u4f7f\u7528\n# python -m timeit \"sum([1, 2, 3, 4, 5])\"\n</code></pre>"},{"location":"appendix/stdlib/#cprofile","title":"<code>cProfile</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import cProfile\n\ndef expensive_function():\n    total = 0\n    for i in range(1000000):\n        total += i * i\n    return total\n\n# \u30d7\u30ed\u30d5\u30a1\u30a4\u30ea\u30f3\u30b0\u5b9f\u884c\ncProfile.run('expensive_function()')\n\n# \u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\ncProfile.run('expensive_function()', 'profile_results.prof')\n</code></pre>"},{"location":"appendix/stdlib/#_16","title":"\u4e26\u884c\u51e6\u7406\u3068\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30c3\u30b7\u30f3\u30b0","text":""},{"location":"appendix/stdlib/#threading","title":"<code>threading</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import threading\nimport time\n\ndef worker(name, duration):\n    print(f\"Worker {name} starting\")\n    time.sleep(duration)\n    print(f\"Worker {name} finished\")\n\n# \u30b9\u30ec\u30c3\u30c9\u306e\u4f5c\u6210\u3068\u5b9f\u884c\nthread1 = threading.Thread(target=worker, args=(\"A\", 2))\nthread2 = threading.Thread(target=worker, args=(\"B\", 3))\n\nthread1.start()\nthread2.start()\n\nthread1.join()  # \u30b9\u30ec\u30c3\u30c9\u306e\u7d42\u4e86\u3092\u5f85\u6a5f\nthread2.join()\n\n# \u30ed\u30c3\u30af\nlock = threading.Lock()\n\ndef safe_function():\n    with lock:\n        # \u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u30bb\u30af\u30b7\u30e7\u30f3\n        pass\n</code></pre>"},{"location":"appendix/stdlib/#multiprocessing","title":"<code>multiprocessing</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import multiprocessing\nimport time\n\ndef worker_process(name, duration):\n    print(f\"Process {name} starting\")\n    time.sleep(duration)\n    print(f\"Process {name} finished\")\n    return f\"Result from {name}\"\n\nif __name__ == '__main__':\n    # \u30d7\u30ed\u30bb\u30b9\u306e\u4f5c\u6210\u3068\u5b9f\u884c\n    process1 = multiprocessing.Process(target=worker_process, args=(\"A\", 2))\n    process2 = multiprocessing.Process(target=worker_process, args=(\"B\", 3))\n\n    process1.start()\n    process2.start()\n\n    process1.join()\n    process2.join()\n\n    # \u30d7\u30ed\u30bb\u30b9\u30d7\u30fc\u30eb\u306e\u4f7f\u7528\n    with multiprocessing.Pool(processes=4) as pool:\n        results = pool.map(lambda x: x**2, range(10))\n        print(results)\n</code></pre>"},{"location":"appendix/stdlib/#_17","title":"\u30ed\u30ae\u30f3\u30b0","text":""},{"location":"appendix/stdlib/#logging","title":"<code>logging</code> \u30e2\u30b8\u30e5\u30fc\u30eb","text":"<pre><code>import logging\n\n# \u57fa\u672c\u7684\u306a\u8a2d\u5b9a\nlogging.basicConfig(\n    level=logging.INFO,\n    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',\n    handlers=[\n        logging.FileHandler('app.log'),\n        logging.StreamHandler()\n    ]\n)\n\n# \u30ed\u30ac\u30fc\u306e\u4f5c\u6210\nlogger = logging.getLogger(__name__)\n\n# \u30ed\u30b0\u30ec\u30d9\u30eb\nlogger.debug('\u30c7\u30d0\u30c3\u30b0\u60c5\u5831')\nlogger.info('\u60c5\u5831\u30e1\u30c3\u30bb\u30fc\u30b8')\nlogger.warning('\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8')\nlogger.error('\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8')\nlogger.critical('\u81f4\u547d\u7684\u30a8\u30e9\u30fc')\n\n# \u4f8b\u5916\u60c5\u5831\u306e\u8a18\u9332\ntry:\n    1 / 0\nexcept ZeroDivisionError:\n    logger.exception('\u30bc\u30ed\u9664\u7b97\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f')\n</code></pre> <p>\u3053\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u4e00\u89a7\u306f\u3001Python\u958b\u767a\u3067\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u91cd\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7db2\u7f85\u3057\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306e\u958b\u767a\u3067\u306f\u3001\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u52b9\u7387\u7684\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002</p>"}]}